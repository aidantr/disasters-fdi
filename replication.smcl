{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/replication.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}26 Apr 2022, 12:29:50
{txt}
{com}. 
. * ------------------------------------------------------------
. * BUILD DATASET
. * ------------------------------------------------------------
. 
. do _2code/_1build_data/build_census_data
{txt}
{com}. ************************************
. ** Clean 2001 Census Data***********
. ************************************
. 
. clear all
{res}{txt}
{com}. 
. ** 1) Skill measured via literacy and education:
. import excel using _1data/raw/regional_characteristics/census/skill.xlsx, clear first 
{res}{text}(13 vars, 37 obs)

{com}. 
. drop in 1/2
{txt}(2 observations deleted)

{com}. 
. rename StateUT State
{res}{txt}
{com}. rename Graduateabove grad
{res}{txt}
{com}. 
. foreach var of varlis Literatewithouteducation-Unclassified {c -(}
{txt}  2{com}. destring `var' , replace force
{txt}  3{com}. {c )-}
{txt}Literatewithouteducationallev: all characters numeric; {res}replaced {txt}as {res}long
{txt}BelowPrimary: all characters numeric; {res}replaced {txt}as {res}long
{txt}Primary: all characters numeric; {res}replaced {txt}as {res}long
{txt}Middle: all characters numeric; {res}replaced {txt}as {res}long
{txt}MatricSecondary: all characters numeric; {res}replaced {txt}as {res}long
{txt}HighersecondaryIntermediatePr: all characters numeric; {res}replaced {txt}as {res}long
{txt}Nontechnicaldiplomaorcertifi: all characters numeric; {res}replaced {txt}as {res}long
{txt}Technicaldiplomaorcertificate: all characters numeric; {res}replaced {txt}as {res}long
{txt}grad: all characters numeric; {res}replaced {txt}as {res}long
{txt}Unclassified: all characters numeric; {res}replaced {txt}as {res}int
{txt}
{com}. 
. egen literate = rowtotal(Literatewithouteducation-Unclassified)
{txt}
{com}. 
. keep State literate grad total_pop
{txt}
{com}. 
. ** Clean state names:
. replace State="Dadra and Nagar Haveli" if State=="Dadra & Nagar Haveli"
{txt}(1 real change made)

{com}. replace State="Andaman and Nicobar Islands" if State=="Andaman & Nicobar Islands"
{txt}variable {bf}{res}State{sf}{txt} was {bf}{res}str25{sf}{txt} now {bf}{res}str27{sf}
{txt}(1 real change made)

{com}. replace State="Daman and Diu" if State=="Daman & Diu"
{txt}(1 real change made)

{com}. replace State="Jammu and Kashmir" if State=="Jammu & Kashmir"
{txt}(1 real change made)

{com}. replace State="Odisha" if State=="Orissa"
{txt}(1 real change made)

{com}. replace State="Puducherry" if State=="Pondicherry"
{txt}(1 real change made)

{com}. replace State="Uttarakhand" if State=="Uttaranchal"
{txt}(1 real change made)

{com}. 
. ** Merge region-to-state concordances
. merge 1:1 State using _1data/xwalks/state_region_concordance
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              35{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. 
. ** Aggregate by region
. collapse (sum) total_pop literate grad, by(District)
{res}{txt}
{com}. rename District region
{res}{txt}
{com}. 
. 
. ** Calculate literacy and college graduate rates
. gen lit_s = literate/total_pop *100
{txt}
{com}. gen grad_s = grad/total_pop *100
{txt}
{com}. drop grad literate total_pop
{txt}
{com}. 
. 
. ** Clean region:
. replace region=lower(region)
{txt}(17 real changes made)

{com}. 
. replace region="new_delhi" if region=="new delhi"
{txt}(1 real change made)

{com}. replace region="guwahati" if region=="guwhati"
{txt}(1 real change made)

{com}. replace region="bubaneshwar" if region=="bhubaneshwar"
{txt}(1 real change made)

{com}. drop if region=="na"
{txt}(1 observation deleted)

{com}. 
. save _1data/raw/regional_characteristics/census/skill , replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/regional_characteristics/census/skill.dta{rm}
saved
{p_end}

{com}. 
. 
. 
. 
. 
. ** 2) Development measured via water access, electicity, and latrine:
. 
. import excel using _1data/raw/regional_characteristics/census/water_etc.xlsx, clear first
{res}{text}(9 vars, 902 obs)

{com}. 
. drop in 1/27
{txt}(27 observations deleted)

{com}. drop G I
{txt}
{com}. 
. drop if SNo==.
{txt}(35 observations deleted)

{com}. rename Sourceandlocationofdrinking source
{res}{txt}
{com}. 
. keep if source=="All Sources" & inlist(D, "Total", "Within Premises")
{txt}(770 observations deleted)

{com}. drop source SNo
{txt}
{com}. 
. foreach var of varlist Totalnumberofhouseholds-Latrine {c -(}
{txt}  2{com}. destring `var', replace
{txt}  3{com}. {c )-}
{txt}Totalnumberofhouseholds: all characters numeric; {res}replaced {txt}as {res}long
{txt}Electricity: all characters numeric; {res}replaced {txt}as {res}long
{txt}Latrine: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}. 
. 
. rename StateUT State
{res}{txt}
{com}. bysort State: gen id=_n
{txt}
{com}. bysort State (id): gen access_water = Totalnumberofhouseholds[2]
{txt}
{com}. bysort State (id): gen access_elec = Electricity[2]
{txt}
{com}. bysort State (id): gen access_lat = Latrine[2]
{txt}
{com}. 
. 
. keep if D=="Total"
{txt}(35 observations deleted)

{com}. 
. 
. ** Clean state names:
. replace State=strrtrim(State)
{txt}(26 real changes made)

{com}. replace State="Dadra and Nagar Haveli" if State=="Dadra & Nagar Haveli"
{txt}(1 real change made)

{com}. replace State="Andaman and Nicobar Islands" if State=="Andaman & Nicobar Islands"
{txt}variable {bf}{res}State{sf}{txt} was {bf}{res}str26{sf}{txt} now {bf}{res}str27{sf}
{txt}(1 real change made)

{com}. replace State="Daman and Diu" if State=="Daman & Diu"
{txt}(1 real change made)

{com}. replace State="Jammu and Kashmir" if State=="Jammu & Kashmir"
{txt}(1 real change made)

{com}. replace State="Odisha" if State=="Orissa"
{txt}(1 real change made)

{com}. replace State="Puducherry" if State=="Pondicherry"
{txt}(1 real change made)

{com}. replace State="Uttarakhand" if State=="Uttaranchal"
{txt}(1 real change made)

{com}. 
. ** Merge region-to-state concordances
. merge 1:1 State using _1data/xwalks/state_region_concordance
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              35{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop _merge D id Electricity Latrine 
{txt}
{com}. 
. ** Aggregate by region
. collapse (sum) Totalnumberofhouseholds-access_lat, by(District)
{res}{txt}
{com}. rename District region
{res}{txt}
{com}. 
. 
. ** Calculate literacy and college graduate rates
. 
. 
. 
. gen water_s = access_water/Totalnumberofhouseholds * 100
{txt}
{com}. gen elec_s = access_elec/Totalnumberofhouseholds *100
{txt}
{com}. gen lat_s = access_lat/Totalnumberofhouseholds * 100
{txt}
{com}. 
. drop Totalnumberofhouseholds-access_lat
{txt}
{com}. 
. 
. ** Clean region:
. replace region=lower(region)
{txt}(17 real changes made)

{com}. 
. replace region="new_delhi" if region=="new delhi"
{txt}(1 real change made)

{com}. replace region="guwahati" if region=="guwhati"
{txt}(1 real change made)

{com}. replace region="bubaneshwar" if region=="bhubaneshwar"
{txt}(1 real change made)

{com}. drop if region=="na"
{txt}(1 observation deleted)

{com}. 
. save _1data/raw/regional_characteristics/census/development, replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/regional_characteristics/census/development.dta{rm}
saved
{p_end}

{com}. 
. 
. 
. 
. ** 3) Composition of Employment
. 
. import excel using _1data/raw/regional_characteristics/census/employment.xlsx, first clear
{res}{text}(14 vars, 39 obs)

{com}. 
. drop in 1/2
{txt}(2 observations deleted)

{com}. drop if SNo ==.
{txt}(2 observations deleted)

{com}. rename StateUT State
{res}{txt}
{com}. rename TotalMainworkers total
{res}{txt}
{com}. rename WholesaleandRetailTrade retail
{res}{txt}
{com}. 
. keep SNo State total retail Manufacturing G 
{txt}
{com}. 
. foreach var of varlist total-retail {c -(}
{txt}  2{com}. destring `var' , replace
{txt}  3{com}. {c )-} 
{txt}total: all characters numeric; {res}replaced {txt}as {res}long
{txt}Manufacturing: all characters numeric; {res}replaced {txt}as {res}long
{txt}G: all characters numeric; {res}replaced {txt}as {res}long
{txt}retail: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}. 
. egen manu = rowtotal(Manufacturing G)
{txt}
{com}. keep State total retail manu
{txt}
{com}. 
. 
. 
. ** Clean state names:
. replace State="Dadra and Nagar Haveli" if State=="Dadra & Nagar Haveli"
{txt}(1 real change made)

{com}. replace State="Andaman and Nicobar Islands" if State=="Andaman & Nicobar Islands"
{txt}variable {bf}{res}State{sf}{txt} was {bf}{res}str25{sf}{txt} now {bf}{res}str27{sf}
{txt}(1 real change made)

{com}. replace State="Daman and Diu" if State=="Daman & Diu"
{txt}(1 real change made)

{com}. replace State="Jammu and Kashmir" if State=="Jammu & Kashmir"
{txt}(1 real change made)

{com}. replace State="Odisha" if State=="Orissa"
{txt}(1 real change made)

{com}. replace State="Puducherry" if State=="Pondicherry"
{txt}(1 real change made)

{com}. replace State="Uttarakhand" if State=="Uttaranchal"
{txt}(1 real change made)

{com}. replace State="Maharashtra" if State=="Maharastra"
{txt}(1 real change made)

{com}. 
. ** Merge region-to-state concordances
. merge 1:1 State using _1data/xwalks/state_region_concordance
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              35{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. ** Aggregate by region
. collapse (sum) total-manu, by(District)
{res}{txt}
{com}. rename District region
{res}{txt}
{com}. 
. ** Calculate share of manufacturing or retail trade workers:
. gen manu_s = manu/total *100
{txt}
{com}. gen retail_s = retail/total *100
{txt}
{com}. 
. drop total retail manu
{txt}
{com}. 
. ** Clean region:
. replace region=lower(region)
{txt}(17 real changes made)

{com}. 
. replace region="new_delhi" if region=="new delhi"
{txt}(1 real change made)

{com}. replace region="guwahati" if region=="guwhati"
{txt}(1 real change made)

{com}. replace region="bubaneshwar" if region=="bhubaneshwar"
{txt}(1 real change made)

{com}. drop if region=="na"
{txt}(1 observation deleted)

{com}. 
. save _1data/raw/regional_characteristics/census/employment, replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/regional_characteristics/census/employment.dta{rm}
saved
{p_end}

{com}. 
. 
. 
. ** 4) Similarity in employment
. 
. import excel using _1data/raw/regional_characteristics/census/employment.xlsx, first clear
{res}{text}(14 vars, 39 obs)

{com}. 
. drop in 1/2
{txt}(2 observations deleted)

{com}. drop if SNo ==.
{txt}(2 observations deleted)

{com}. rename StateUT State
{res}{txt}
{com}. rename TotalMainworkers total
{res}{txt}
{com}. rename WholesaleandRetailTrade retail
{res}{txt}
{com}. rename Agriculturalalliedactivities agri
{res}{txt}
{com}. rename Miningandquarrying mining
{res}{txt}
{com}. rename Manufacturing manu1
{res}{txt}
{com}. rename G manu2
{res}{txt}
{com}. rename ElectricityGasandWaterSuppl util
{res}{txt}
{com}. rename Construction cons
{res}{txt}
{com}. rename HotelsandRestaurants leisure
{res}{txt}
{com}. rename TransportStorageandCommunica transp
{res}{txt}
{com}. rename FinancialIntermediationandRea finance
{res}{txt}
{com}. rename Otherservices other
{res}{txt}
{com}. 
. 
. foreach var of varlist total-other {c -(}
{txt}  2{com}. destring `var' , replace
{txt}  3{com}. {c )-} 
{txt}total: all characters numeric; {res}replaced {txt}as {res}long
{txt}agri: all characters numeric; {res}replaced {txt}as {res}long
{txt}mining: all characters numeric; {res}replaced {txt}as {res}long
{txt}manu1: all characters numeric; {res}replaced {txt}as {res}long
{txt}manu2: all characters numeric; {res}replaced {txt}as {res}long
{txt}util: all characters numeric; {res}replaced {txt}as {res}long
{txt}cons: all characters numeric; {res}replaced {txt}as {res}long
{txt}retail: all characters numeric; {res}replaced {txt}as {res}long
{txt}leisure: all characters numeric; {res}replaced {txt}as {res}long
{txt}transp: all characters numeric; {res}replaced {txt}as {res}long
{txt}finance: all characters numeric; {res}replaced {txt}as {res}long
{txt}other: all characters numeric; {res}replaced {txt}as {res}long
{txt}
{com}. 
. 
. ** Clean state names:
. replace State="Dadra and Nagar Haveli" if State=="Dadra & Nagar Haveli"
{txt}(1 real change made)

{com}. replace State="Andaman and Nicobar Islands" if State=="Andaman & Nicobar Islands"
{txt}variable {bf}{res}State{sf}{txt} was {bf}{res}str25{sf}{txt} now {bf}{res}str27{sf}
{txt}(1 real change made)

{com}. replace State="Daman and Diu" if State=="Daman & Diu"
{txt}(1 real change made)

{com}. replace State="Jammu and Kashmir" if State=="Jammu & Kashmir"
{txt}(1 real change made)

{com}. replace State="Odisha" if State=="Orissa"
{txt}(1 real change made)

{com}. replace State="Puducherry" if State=="Pondicherry"
{txt}(1 real change made)

{com}. replace State="Uttarakhand" if State=="Uttaranchal"
{txt}(1 real change made)

{com}. replace State="Maharashtra" if State=="Maharastra"
{txt}(1 real change made)

{com}. 
. ** Merge region-to-state concordances
. merge 1:1 State using _1data/xwalks/state_region_concordance
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              35{txt}  (_merge==3)
{col 5}{hline 41}

{com}. 
. ** Aggregate by region
. collapse (sum) total-other, by(District)
{res}{txt}
{com}. rename District region
{res}{txt}
{com}. 
. ** Calculate share of manufacturing or retail trade workers:
. foreach var of varlist agri-other {c -(}
{txt}  2{com}. gen `var'_s = `var'/total *100
{txt}  3{com}. {c )-} 
{txt}
{com}. 
. drop total-other
{txt}
{com}. 
. ** Clean region:
. replace region=lower(region)
{txt}(17 real changes made)

{com}. 
. replace region="new_delhi" if region=="new delhi"
{txt}(1 real change made)

{com}. replace region="guwahati" if region=="guwhati"
{txt}(1 real change made)

{com}. replace region="bubaneshwar" if region=="bhubaneshwar"
{txt}(1 real change made)

{com}. drop if region=="na"
{txt}(1 observation deleted)

{com}. 
. 
. save _1data/raw/regional_characteristics/census/ind_comp, replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/regional_characteristics/census/ind_comp.dta{rm}
saved
{p_end}

{com}. 
. 
{txt}end of do-file

{com}. do _2code/_1build_data/build_state_indicators
{txt}
{com}. /*******************************************************************************
> Table 3: Build dataset with economic indicators
> 
> Inputs:     - annual "principal characteristics" by state 
>             - annual "important characteritsics" by state
>                         - insurance rates
>                         - annual CPI data
>                 
> Output:     -principal_indicators.dta
> 
> ********************************************************************************/
. 
. 
. 
. forvalues i=2006/2017 {c -(}
{txt}  2{com}. 
. 
. if `i'==2006{c -(}
{txt}  3{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A4:H37) clear
{txt}  4{com}. drop in 1/2
{txt}  5{com}. {c )-}
{txt}  6{com}. 
. if `i'==2007 {c -(}
{txt}  7{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A1:H33) clear
{txt}  8{com}. drop in 1
{txt}  9{com}. {c )-}
{txt} 10{com}. 
. if `i'==2008 {c -(}
{txt} 11{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A2:H34) clear
{txt} 12{com}. drop in 1
{txt} 13{com}. {c )-}
{txt} 14{com}. 
. if `i'==2009 {c -(}
{txt} 15{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A3:H36) clear
{txt} 16{com}. drop in 1
{txt} 17{com}. {c )-}
{txt} 18{com}. 
. if inlist(`i', 2010, 2011) {c -(}
{txt} 19{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xls, first cellrange(A4:H38) clear
{txt} 20{com}. drop in 1/2
{txt} 21{com}. {c )-}
{txt} 22{com}. 
. if inlist(`i', 2012) {c -(}
{txt} 23{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xls, first cellrange(A4:H39) clear
{txt} 24{com}. drop in 1/2
{txt} 25{com}. {c )-}
{txt} 26{com}. 
. if `i'==2013 {c -(}
{txt} 27{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A3:H37) clear
{txt} 28{com}. drop in 1
{txt} 29{com}. {c )-}
{txt} 30{com}. 
. if inlist(`i', 2014, 2015, 2016, 2017) {c -(}
{txt} 31{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xls, first cellrange(A4:H40) clear
{txt} 32{com}. drop in 1/2
{txt} 33{com}. {c )-}
{txt} 34{com}. 
. 
. rename States State
{txt} 35{com}. rename Factories factories
{txt} 36{com}. rename Fixed fixed_cap
{txt} 37{com}. rename Productive productive_cap
{txt} 38{com}. rename Invested invested_cap
{txt} 39{com}. rename Workers workers
{txt} 40{com}. rename TotalPersons persons_engaged
{txt} 41{com}. rename Wagesto wages
{txt} 42{com}. 
. 
. 
. foreach var of varlist factories-wages {c -(}
{txt} 43{com}. destring `var', replace
{txt} 44{com}. {c )-}
{txt} 45{com}. 
. gen year=`i'
{txt} 46{com}. order State year
{txt} 47{com}. save _1data/raw/indicators/temp/`i'_1, replace
{txt} 48{com}. 
. if `i'==2006{c -(}
{txt} 49{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A43:H76) clear
{txt} 50{com}. drop in 1/2
{txt} 51{com}. {c )-}
{txt} 52{com}. 
. if `i'==2007 {c -(}
{txt} 53{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A35:H68) clear
{txt} 54{com}. drop in 1/2
{txt} 55{com}. {c )-}
{txt} 56{com}. 
. if `i'==2008 {c -(}
{txt} 57{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A37:H69) clear
{txt} 58{com}. drop in 1
{txt} 59{com}. {c )-}
{txt} 60{com}. 
. if `i'==2009 {c -(}
{txt} 61{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A40:H73) clear
{txt} 62{com}. drop in 1
{txt} 63{com}. {c )-}
{txt} 64{com}. 
. if inlist(`i', 2010, 2011) {c -(}
{txt} 65{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xls, first cellrange(A44:H78) clear
{txt} 66{com}. drop in 1/2
{txt} 67{com}. {c )-}
{txt} 68{com}. 
. if inlist(`i', 2012) {c -(}
{txt} 69{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xls, first cellrange(A45:H80) clear
{txt} 70{com}. drop in 1/2
{txt} 71{com}. {c )-}
{txt} 72{com}. 
. if inlist(`i', 2013) {c -(}
{txt} 73{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xlsx, first cellrange(A41:H75) clear
{txt} 74{com}. drop in 1
{txt} 75{com}. {c )-}
{txt} 76{com}. 
. if inlist(`i', 2014, 2015, 2016, 2017) {c -(}
{txt} 77{com}. import excel using _1data/raw/indicators/ministry_statistics/pc_`i'.xls, first cellrange(A46:H82) clear
{txt} 78{com}. drop in 1/2
{txt} 79{com}. {c )-}
{txt} 80{com}. 
. rename States State
{txt} 81{com}. if inlist(`i', 2008, 2009, 2013) {c -(}
{txt} 82{com}. rename TotalEmol total_earnings
{txt} 83{com}. {c )-}
{txt} 84{com}. else {c -(}
{txt} 85{com}. rename Total total_earnings
{txt} 86{com}. {c )-}
{txt} 87{com}. 
. if inlist(`i', 2007, 2008, 2009, 2013) {c -(}
{txt} 88{com}. rename TotalInput inputs
{txt} 89{com}. {c )-}
{txt} 90{com}. else {c -(}
{txt} 91{com}. rename C inputs
{txt} 92{com}. {c )-}
{txt} 93{com}. 
. 
. if inlist(`i', 2008, 2009, 2013) {c -(}
{txt} 94{com}. rename TotalOutput output
{txt} 95{com}. {c )-}
{txt} 96{com}. else if inlist(`i', 2010, 2011, 2012, 2014, 2015, 2016, 2017) {c -(}
{txt} 97{com}. rename D output
{txt} 98{com}. {c )-}
{txt} 99{com}. else {c -(}
{txt}100{com}. rename Gross output
{txt}101{com}. {c )-}
{txt}102{com}. rename Deprec depreciation
{txt}103{com}. rename NetValue nva
{txt}104{com}. rename RentPaid rents
{txt}105{com}. rename Interest interest
{txt}106{com}. 
. 
. 
. foreach var of varlist total_earnings-interest {c -(}
{txt}107{com}. destring `var', replace
{txt}108{com}. {c )-}
{txt}109{com}. 
. gen year=`i'
{txt}110{com}. order State year
{txt}111{com}. 
. save _1data/raw/indicators/temp/`i'_2, replace
{txt}112{com}. 
. 
. use _1data/raw/indicators/temp/`i'_1, clear
{txt}113{com}. merge 1:1 State using _1data/raw/indicators/temp/`i'_2
{txt}114{com}. 
. 
. save _1data/raw/indicators/temp/`i', replace
{txt}115{com}. {c )-}
{res}{text}(8 vars, 33 obs)
(2 observations deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}productive_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}invested_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}workers already numeric; no {res}replace
{txt}persons_engaged: all characters numeric; {res}replaced {txt}as {res}long
{txt}wages: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2006_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 33 obs)
(2 observations deleted)
{res}{txt}total_earnings: all characters numeric; {res}replaced {txt}as {res}long
{txt}inputs: all characters numeric; {res}replaced {txt}as {res}long
{txt}output: all characters numeric; {res}replaced {txt}as {res}long
{txt}depreciation: all characters numeric; {res}replaced {txt}as {res}long
{txt}nva: all characters numeric; {res}replaced {txt}as {res}long
{txt}rents already numeric; no {res}replace
{txt}interest: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2006_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              31{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2006.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 32 obs)
(1 observation deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap already numeric; no {res}replace
{txt}productive_cap already numeric; no {res}replace
{txt}invested_cap already numeric; no {res}replace
{txt}workers already numeric; no {res}replace
{txt}persons_engaged already numeric; no {res}replace
{txt}wages already numeric; no {res}replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2007_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 33 obs)
(2 observations deleted)
{res}{txt}total_earnings already numeric; no {res}replace
{txt}inputs already numeric; no {res}replace
{txt}output already numeric; no {res}replace
{txt}depreciation already numeric; no {res}replace
{txt}nva already numeric; no {res}replace
{txt}rents already numeric; no {res}replace
{txt}interest already numeric; no {res}replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2007_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              31{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2007.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 32 obs)
(1 observation deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap already numeric; no {res}replace
{txt}productive_cap already numeric; no {res}replace
{txt}invested_cap already numeric; no {res}replace
{txt}workers already numeric; no {res}replace
{txt}persons_engaged already numeric; no {res}replace
{txt}wages already numeric; no {res}replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2008_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 32 obs)
(1 observation deleted)
{res}{txt}total_earnings already numeric; no {res}replace
{txt}inputs already numeric; no {res}replace
{txt}output already numeric; no {res}replace
{txt}depreciation already numeric; no {res}replace
{txt}nva already numeric; no {res}replace
{txt}rents already numeric; no {res}replace
{txt}interest already numeric; no {res}replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2008_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              31{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2008.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 33 obs)
(1 observation deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap already numeric; no {res}replace
{txt}productive_cap already numeric; no {res}replace
{txt}invested_cap already numeric; no {res}replace
{txt}workers already numeric; no {res}replace
{txt}persons_engaged already numeric; no {res}replace
{txt}wages already numeric; no {res}replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2009_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 33 obs)
(1 observation deleted)
{res}{txt}total_earnings already numeric; no {res}replace
{txt}inputs already numeric; no {res}replace
{txt}output already numeric; no {res}replace
{txt}depreciation already numeric; no {res}replace
{txt}nva already numeric; no {res}replace
{txt}rents already numeric; no {res}replace
{txt}interest already numeric; no {res}replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2009_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              32{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2009.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 34 obs)
(2 observations deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}productive_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}invested_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}workers already numeric; no {res}replace
{txt}persons_engaged: all characters numeric; {res}replaced {txt}as {res}long
{txt}wages: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2010_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 34 obs)
(2 observations deleted)
{res}{txt}total_earnings: all characters numeric; {res}replaced {txt}as {res}long
{txt}inputs: all characters numeric; {res}replaced {txt}as {res}long
{txt}output: all characters numeric; {res}replaced {txt}as {res}long
{txt}depreciation: all characters numeric; {res}replaced {txt}as {res}long
{txt}nva: all characters numeric; {res}replaced {txt}as {res}long
{txt}rents already numeric; no {res}replace
{txt}interest: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2010_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              32{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2010.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 34 obs)
(2 observations deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}productive_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}invested_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}workers already numeric; no {res}replace
{txt}persons_engaged: all characters numeric; {res}replaced {txt}as {res}long
{txt}wages: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2011_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 34 obs)
(2 observations deleted)
{res}{txt}total_earnings: all characters numeric; {res}replaced {txt}as {res}long
{txt}inputs: all characters numeric; {res}replaced {txt}as {res}long
{txt}output: all characters numeric; {res}replaced {txt}as {res}long
{txt}depreciation: all characters numeric; {res}replaced {txt}as {res}long
{txt}nva: all characters numeric; {res}replaced {txt}as {res}long
{txt}rents already numeric; no {res}replace
{txt}interest: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2011_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              32{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2011.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 35 obs)
(2 observations deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}productive_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}invested_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}workers already numeric; no {res}replace
{txt}persons_engaged: all characters numeric; {res}replaced {txt}as {res}long
{txt}wages: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2012_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 35 obs)
(2 observations deleted)
{res}{txt}total_earnings: all characters numeric; {res}replaced {txt}as {res}long
{txt}inputs: all characters numeric; {res}replaced {txt}as {res}long
{txt}output: all characters numeric; {res}replaced {txt}as {res}long
{txt}depreciation: all characters numeric; {res}replaced {txt}as {res}long
{txt}nva: all characters numeric; {res}replaced {txt}as {res}long
{txt}rents already numeric; no {res}replace
{txt}interest: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2012_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              33{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2012.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 34 obs)
(1 observation deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap already numeric; no {res}replace
{txt}productive_cap already numeric; no {res}replace
{txt}invested_cap already numeric; no {res}replace
{txt}workers already numeric; no {res}replace
{txt}persons_engaged already numeric; no {res}replace
{txt}wages already numeric; no {res}replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2013_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 34 obs)
(1 observation deleted)
{res}{txt}total_earnings already numeric; no {res}replace
{txt}inputs already numeric; no {res}replace
{txt}output already numeric; no {res}replace
{txt}depreciation already numeric; no {res}replace
{txt}nva already numeric; no {res}replace
{txt}rents already numeric; no {res}replace
{txt}interest already numeric; no {res}replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2013_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              33{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2013.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 36 obs)
(2 observations deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}productive_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}invested_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}workers already numeric; no {res}replace
{txt}persons_engaged: all characters numeric; {res}replaced {txt}as {res}long
{txt}wages: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2014_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 36 obs)
(2 observations deleted)
{res}{txt}total_earnings: all characters numeric; {res}replaced {txt}as {res}long
{txt}inputs: all characters numeric; {res}replaced {txt}as {res}long
{txt}output: all characters numeric; {res}replaced {txt}as {res}long
{txt}depreciation already numeric; no {res}replace
{txt}nva: all characters numeric; {res}replaced {txt}as {res}long
{txt}rents already numeric; no {res}replace
{txt}interest: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2014_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              34{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2014.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 36 obs)
(2 observations deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}productive_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}invested_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}workers already numeric; no {res}replace
{txt}persons_engaged: all characters numeric; {res}replaced {txt}as {res}long
{txt}wages: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2015_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 36 obs)
(2 observations deleted)
{res}{txt}total_earnings: all characters numeric; {res}replaced {txt}as {res}long
{txt}inputs: all characters numeric; {res}replaced {txt}as {res}long
{txt}output: all characters numeric; {res}replaced {txt}as {res}long
{txt}depreciation already numeric; no {res}replace
{txt}nva: all characters numeric; {res}replaced {txt}as {res}long
{txt}rents already numeric; no {res}replace
{txt}interest: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2015_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              34{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2015.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 36 obs)
(2 observations deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}productive_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}invested_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}workers already numeric; no {res}replace
{txt}persons_engaged: all characters numeric; {res}replaced {txt}as {res}long
{txt}wages: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2016_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 36 obs)
(2 observations deleted)
{res}{txt}total_earnings: all characters numeric; {res}replaced {txt}as {res}long
{txt}inputs: all characters numeric; {res}replaced {txt}as {res}long
{txt}output: all characters numeric; {res}replaced {txt}as {res}long
{txt}depreciation already numeric; no {res}replace
{txt}nva: all characters numeric; {res}replaced {txt}as {res}long
{txt}rents already numeric; no {res}replace
{txt}interest: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2016_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              34{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2016.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 36 obs)
(2 observations deleted)
{res}{txt}factories already numeric; no {res}replace
{txt}fixed_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}productive_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}invested_cap: all characters numeric; {res}replaced {txt}as {res}long
{txt}workers already numeric; no {res}replace
{txt}persons_engaged: all characters numeric; {res}replaced {txt}as {res}long
{txt}wages: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2017_1.dta{rm}
saved
{p_end}
{res}{text}(8 vars, 36 obs)
(2 observations deleted)
{res}{txt}total_earnings: all characters numeric; {res}replaced {txt}as {res}long
{txt}inputs: all characters numeric; {res}replaced {txt}as {res}long
{txt}output: all characters numeric; {res}replaced {txt}as {res}long
{txt}depreciation already numeric; no {res}replace
{txt}nva: all characters numeric; {res}replaced {txt}as {res}long
{txt}rents already numeric; no {res}replace
{txt}interest: all characters numeric; {res}replaced {txt}as {res}long
{txt}{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2017_2.dta{rm}
saved
{p_end}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}              34{txt}  (_merge==3)
{col 5}{hline 41}
{p 0 4 2}
file {bf}
_1data/raw/indicators/temp/2017.dta{rm}
saved
{p_end}

{com}. 
. 
. ** Append all files:
. forvalues i=2006/2016 {c -(}
{txt}  2{com}. append using _1data/raw/indicators/temp/`i'
{txt}  3{com}. {c )-}
{txt}{p 0 7 2}
(variable
{bf:State} was {bf:str17}, now {bf:str20} to accommodate using data's values)
{p_end}
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)
(label {bf:{txt}_merge} already defined)

{com}. sort State year
{txt}
{com}. 
. drop _merge
{txt}
{com}. 
. ** Fix State names:
. replace State="Andaman & N. Island" if State=="A & N. Island"
{txt}(3 real changes made)

{com}. replace State="Chandigarh" if State=="Chandigarh (U.T.)" | State=="Chandigarh(U.T.)" | State=="Chandigarh "
{txt}(12 real changes made)

{com}. replace State="Dadra & Nagar Haveli" if State=="Dadra & N Haveli"
{txt}(3 real changes made)

{com}. replace State="Odisha" if State=="Orissa"
{txt}(2 real changes made)

{com}. replace State="Puducherry" if State=="Pondicherry"
{txt}(1 real change made)

{com}. replace State="Telangana" if State=="Telengana"
{txt}(1 real change made)

{com}. replace State="Uttarakhand" if State=="Uttaranchal"
{txt}(2 real changes made)

{com}. 
. drop if inlist(State, "Arunachal Pradesh", "Sikkim", "Telangana")
{txt}(19 observations deleted)

{com}. 
. tab State

              {txt}States {c |}      Freq.     Percent        Cum.
{hline 21}{c +}{hline 35}
 Andaman & N. Island {c |}{res}         12        3.23        3.23
{txt}      Andhra Pradesh {c |}{res}         12        3.23        6.45
{txt}               Assam {c |}{res}         12        3.23        9.68
{txt}               Bihar {c |}{res}         12        3.23       12.90
{txt}          Chandigarh {c |}{res}         12        3.23       16.13
{txt}         Chattisgarh {c |}{res}         12        3.23       19.35
{txt}Dadra & Nagar Haveli {c |}{res}         12        3.23       22.58
{txt}         Daman & Diu {c |}{res}         12        3.23       25.81
{txt}               Delhi {c |}{res}         12        3.23       29.03
{txt}                 Goa {c |}{res}         12        3.23       32.26
{txt}             Gujarat {c |}{res}         12        3.23       35.48
{txt}             Haryana {c |}{res}         12        3.23       38.71
{txt}    Himachal Pradesh {c |}{res}         12        3.23       41.94
{txt}     Jammu & Kashmir {c |}{res}         12        3.23       45.16
{txt}           Jharkhand {c |}{res}         12        3.23       48.39
{txt}           Karnataka {c |}{res}         12        3.23       51.61
{txt}              Kerala {c |}{res}         12        3.23       54.84
{txt}      Madhya Pradesh {c |}{res}         12        3.23       58.06
{txt}         Maharashtra {c |}{res}         12        3.23       61.29
{txt}             Manipur {c |}{res}         12        3.23       64.52
{txt}           Meghalaya {c |}{res}         12        3.23       67.74
{txt}            Nagaland {c |}{res}         12        3.23       70.97
{txt}              Odisha {c |}{res}         12        3.23       74.19
{txt}          Puducherry {c |}{res}         12        3.23       77.42
{txt}              Punjab {c |}{res}         12        3.23       80.65
{txt}           Rajasthan {c |}{res}         12        3.23       83.87
{txt}          Tamil Nadu {c |}{res}         12        3.23       87.10
{txt}             Tripura {c |}{res}         12        3.23       90.32
{txt}       Uttar Pradesh {c |}{res}         12        3.23       93.55
{txt}         Uttarakhand {c |}{res}         12        3.23       96.77
{txt}         West Bengal {c |}{res}         12        3.23      100.00
{txt}{hline 21}{c +}{hline 35}
               Total {c |}{res}        372      100.00
{txt}
{com}. 
. 
. foreach var of varlist factories-interest {c -(}
{txt}  2{com}. gen l`var' = ln(`var')
{txt}  3{com}. {c )-}
{txt}(6 missing values generated)

{com}. 
. 
. ** Merge in State-Region concordance:
. replace State="Delhi" if State=="NCT Delhi"
{txt}(0 real changes made)

{com}. replace State="Andaman and Nicobar Islands" if State=="Andaman & N. Island"
{txt}variable {bf}{res}State{sf}{txt} was {bf}{res}str20{sf}{txt} now {bf}{res}str27{sf}
{txt}(12 real changes made)

{com}. replace State="Chhattisgarh" if State=="Chattisgarh"
{txt}(12 real changes made)

{com}. replace State="Dadra and Nagar Haveli" if State=="Dadra & Nagar Haveli"
{txt}(12 real changes made)

{com}. replace State="Daman and Diu" if State=="Daman & Diu"
{txt}(12 real changes made)

{com}. replace State="Jammu and Kashmir" if State=="Jammu & Kashmir"
{txt}(12 real changes made)

{com}. 
. ** Merge in state-region concordance:
. merge m:1 State using _1data/xwalks/states_affected
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               4
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}               4{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             372{txt}  (_merge==3)
{col 5}{hline 41}

{com}. keep if _merge==3
{txt}(4 observations deleted)

{com}. drop _merge
{txt}
{com}. rename District region
{res}{txt}
{com}. replace region=lower(region)
{txt}(372 real changes made)

{com}. foreach x in one two three four five {c -(}
{txt}  2{com}. rename `x'_affected s_`x'_affected
{txt}  3{com}. {c )-}
{res}{txt}
{com}. 
. replace region="bubaneshwar" if region=="bhubaneshwar"
{txt}(12 real changes made)

{com}. replace region="guwahati" if region=="guwhati"
{txt}(60 real changes made)

{com}. replace region="new_delhi" if region=="new delhi"
{txt}(12 real changes made)

{com}. drop if region=="na"
{txt}(24 observations deleted)

{com}. 
. /*
> collapse (mean) factories-interest, by(region year)
> foreach var of varlist factories-interest {c -(}
> gen l`var' = ln(`var')
> {c )-}
> */
. 
. merge 1:1 State year using _1data/raw/indicators/insurance/ins_data
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}              48
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}              48{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             348{txt}  (_merge==3)
{col 5}{hline 41}

{com}. keep if _merge==3
{txt}(48 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. 
. 
. merge 1:1 State year using _1data/raw/indicators/cpi/cpi_annual
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}              95
{txt}{col 9}from master{col 30}{res}              72{txt}  (_merge==1)
{col 9}from using{col 30}{res}              23{txt}  (_merge==2)

{col 5}Matched{col 30}{res}             276{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge==2
{txt}(23 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. save _1data/clean/principal_indicators.dta, replace
{txt}{p 0 4 2}
file {bf}
_1data/clean/principal_indicators.dta{rm}
saved
{p_end}

{com}. 
. 
. 
{txt}end of do-file

{com}. do _2code/_1build_data/build_disaster_risk
{txt}
{com}. /*******************************************************************************
> Create disaster risk by region based on past disasters
> 
> 
> ********************************************************************************/
. 
. use _1data/xwalks/regions_list.dta, clear
{txt}
{com}. 
. *past 10 years
. generate damages_cum_past10=0
{txt}
{com}. generate number_major1_past10=0
{txt}
{com}. generate number_major2_past10=0
{txt}
{com}. generate number_any_past10=0
{txt}
{com}. generate number_flood_past10=0
{txt}
{com}. 
. 
. replace damages_cum_past10 = 5853100 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 1500300 if region == "bangalore"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 90400 if region == "bhopal"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 3322800 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 116924 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 4214300 if region == "chennai"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 2623000 if region == "guwahati"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 7051000 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace damages_cum_past10 =158000 if region == "jaipur"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 276000 if region == "kanpur"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 13138240 if region == "kochi"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 1022930 if region == "kolkata"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 2300000 if region == "mumbai"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 7830 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 1585300 if region == "panaji"
{txt}(1 real change made)

{com}. replace damages_cum_past10 = 691500 if region == "patna"
{txt}(1 real change made)

{com}. 
. replace number_major1_past10 = 3 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 1 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 0 if region == "bhopal"
{txt}(0 real changes made)

{com}. replace number_major1_past10  = 2 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 0 if region == "chandigarh"
{txt}(0 real changes made)

{com}. replace number_major1_past10  = 4 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 1 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 5 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 0 if region == "jaipur"
{txt}(0 real changes made)

{com}. replace number_major1_past10  = 0 if region == "kanpur"
{txt}(0 real changes made)

{com}. replace number_major1_past10  = 7 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 1 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 1 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 0 if region == "new_delhi"
{txt}(0 real changes made)

{com}. replace number_major1_past10  = 1 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_major1_past10  = 1 if region == "patna"
{txt}(1 real change made)

{com}. 
. replace number_major2_past10 = 1 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_major2_past10  = 0 if region == "bangalore"
{txt}(0 real changes made)

{com}. replace number_major2_past10  = 0 if region == "bhopal"
{txt}(0 real changes made)

{com}. replace number_major2_past10  = 1 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_major2_past10  = 0 if region == "chandigarh"
{txt}(0 real changes made)

{com}. replace number_major2_past10  = 1 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_major2_past10  = 1 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_major2_past10  = 2 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_major2_past10  = 0 if region == "jaipur"
{txt}(0 real changes made)

{com}. replace number_major2_past10  = 0 if region == "kanpur"
{txt}(0 real changes made)

{com}. replace number_major2_past10  = 2 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_major2_past10  = 0 if region == "kolkata"
{txt}(0 real changes made)

{com}. replace number_major2_past10  = 1 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_major2_past10  = 0 if region == "new_delhi"
{txt}(0 real changes made)

{com}. replace number_major2_past10  = 0 if region == "panaji"
{txt}(0 real changes made)

{com}. replace number_major2_past10  = 0 if region == "patna"
{txt}(0 real changes made)

{com}. 
. replace number_any_past10 = 23 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_any_past10  = 39 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_any_past10  = 33 if region == "bhopal"
{txt}(1 real change made)

{com}. replace number_any_past10  = 23 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_any_past10  = 30 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace number_any_past10  = 40 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_any_past10  = 34 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_any_past10  =18 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_any_past10  = 34 if region == "jaipur"
{txt}(1 real change made)

{com}. replace number_any_past10  = 7 if region == "kanpur"
{txt}(1 real change made)

{com}. replace number_any_past10  = 35 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_any_past10  = 20 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_any_past10  = 31 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_any_past10  = 38 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace number_any_past10  = 46 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_any_past10  = 20 if region == "patna"
{txt}(1 real change made)

{com}. 
. replace number_flood_past10 = 13 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 25 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 20 if region == "bhopal"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 13 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 18 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 26 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 21 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 10 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 21 if region == "jaipur"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 3 if region == "kanpur"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 21 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 12 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 19 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 24 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 30 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_flood_past10  = 12 if region == "patna"
{txt}(1 real change made)

{com}. 
. 
. *past 20
. 
. generate damages_cum_past20=0
{txt}
{com}. generate number_major1_past20=0
{txt}
{com}. generate number_major2_past20=0
{txt}
{com}. generate number_any_past20=0
{txt}
{com}. generate number_flood_past20=0
{txt}
{com}. 
. replace damages_cum_past20 = 5853100+10750100 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 1500300+1189420 if region == "bangalore"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 90400+32900 if region == "bhopal"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 3322800+1090500 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 116924+47842 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 4214300+3884000  if region == "chennai"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 2623000+1840000 if region == "guwahati"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 7051000+4013100 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace damages_cum_past20 =158000+90000 if region == "jaipur"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 276000+119700 if region == "kanpur"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 13138240+9138240 if region == "kochi"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 1022930+610120 if region == "kolkata"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 2300000+189670 if region == "mumbai"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 7830+3450 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 1585300+670300 if region == "panaji"
{txt}(1 real change made)

{com}. replace damages_cum_past20 = 691500+23980 if region == "patna"
{txt}(1 real change made)

{com}. 
. 
. replace number_major1_past20 = 3+2 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 1 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 0 if region == "bhopal"
{txt}(0 real changes made)

{com}. replace number_major1_past20  = 2+1 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 0 if region == "chandigarh"
{txt}(0 real changes made)

{com}. replace number_major1_past20  = 4+2 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 1+1 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 5+2 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 0+1 if region == "jaipur"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 0 if region == "kanpur"
{txt}(0 real changes made)

{com}. replace number_major1_past20  = 7+4 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 1 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 1 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 0 if region == "new_delhi"
{txt}(0 real changes made)

{com}. replace number_major1_past20  = 1 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_major1_past20  = 1 if region == "patna"
{txt}(1 real change made)

{com}. 
. replace number_major2_past20 = 1+1 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_major2_past20  = 0 if region == "bangalore"
{txt}(0 real changes made)

{com}. replace number_major2_past20  = 0 if region == "bhopal"
{txt}(0 real changes made)

{com}. replace number_major2_past20  = 2 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_major2_past20  = 0 if region == "chandigarh"
{txt}(0 real changes made)

{com}. replace number_major2_past20  = 2 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_major2_past20  = 1 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_major2_past20  = 3 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_major2_past20  = 0 if region == "jaipur"
{txt}(0 real changes made)

{com}. replace number_major2_past20  = 0 if region == "kanpur"
{txt}(0 real changes made)

{com}. replace number_major2_past20  = 3 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_major2_past20  = 0 if region == "kolkata"
{txt}(0 real changes made)

{com}. replace number_major2_past20  = 2 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_major2_past20  = 0 if region == "new_delhi"
{txt}(0 real changes made)

{com}. replace number_major2_past20  = 0 if region == "panaji"
{txt}(0 real changes made)

{com}. replace number_major2_past20  = 0 if region == "patna"
{txt}(0 real changes made)

{com}. 
. *done
. replace number_any_past20 = 23+30 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_any_past20  = 39+28 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_any_past20  = 33+29 if region == "bhopal"
{txt}(1 real change made)

{com}. replace number_any_past20  = 23+18 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_any_past20  = 30+28 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace number_any_past20  = 40+28 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_any_past20  = 34+18 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_any_past20  =18+25 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_any_past20  = 34+30 if region == "jaipur"
{txt}(1 real change made)

{com}. replace number_any_past20  = 7+11 if region == "kanpur"
{txt}(1 real change made)

{com}. replace number_any_past20  = 35+30 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_any_past20  = 20+18 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_any_past20  = 31+15 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_any_past20  = 38+9 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace number_any_past20  = 46+27 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_any_past20  = 20+18 if region == "patna"
{txt}(1 real change made)

{com}. 
. *done
. replace number_flood_past20 = 13+10 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 25+37 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 20+19 if region == "bhopal"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 13+17 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 18+25 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 26+32 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 21+33 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 10+6 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 21+16 if region == "jaipur"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 3+6 if region == "kanpur"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 21+15 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 12+8 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 19+17 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 24+18 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 30+22 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_flood_past20  = 12+8 if region == "patna"
{txt}(1 real change made)

{com}. 
. 
. 
. *past 30 years
. 
. generate damages_cum_past30=0
{txt}
{com}. generate number_major1_past30=0
{txt}
{com}. generate number_major2_past30=0
{txt}
{com}. generate number_any_past30=0
{txt}
{com}. generate number_flood_past30=0
{txt}
{com}. 
. 
. replace damages_cum_past30 = 5853100+10750100 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 1500300+1189420 if region == "bangalore"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 90400+32900 if region == "bhopal"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 3322800+1090500 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 116924+47842 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 4214300+3884000  if region == "chennai"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 2623000+1840000 if region == "guwahati"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 7051000+4013100 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace damages_cum_past30 =158000+90000 if region == "jaipur"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 276000+119700 if region == "kanpur"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 13138240+9138240 if region == "kochi"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 1022930+610120 if region == "kolkata"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 2300000+189670 if region == "mumbai"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 7830+3450 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 1585300+670300 if region == "panaji"
{txt}(1 real change made)

{com}. replace damages_cum_past30 = 691500+23980 if region == "patna"
{txt}(1 real change made)

{com}. 
. 
. replace number_major1_past30 = 3+2+1 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 1 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 0 if region == "bhopal"
{txt}(0 real changes made)

{com}. replace number_major1_past30  = 2+1+1 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 1 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 4+2+1 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 1+1 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 5+2+1 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 0+1 if region == "jaipur"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 0 if region == "kanpur"
{txt}(0 real changes made)

{com}. replace number_major1_past30  = 7+4+3 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 1 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 1 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 0 if region == "new_delhi"
{txt}(0 real changes made)

{com}. replace number_major1_past30  = 1 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_major1_past30  = 1 if region == "patna"
{txt}(1 real change made)

{com}. 
. replace number_major2_past30 = 1+1 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_major2_past30  = 0 if region == "bangalore"
{txt}(0 real changes made)

{com}. replace number_major2_past30  = 0 if region == "bhopal"
{txt}(0 real changes made)

{com}. replace number_major2_past30  = 2+1 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_major2_past30  = 0 if region == "chandigarh"
{txt}(0 real changes made)

{com}. replace number_major2_past30  = 2+1 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_major2_past30  = 1+1 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_major2_past30  = 3 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_major2_past30  = 0 if region == "jaipur"
{txt}(0 real changes made)

{com}. replace number_major2_past30  = 0 if region == "kanpur"
{txt}(0 real changes made)

{com}. replace number_major2_past30  = 3+1 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_major2_past30  = 0 if region == "kolkata"
{txt}(0 real changes made)

{com}. replace number_major2_past30  = 2 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_major2_past30  = 0 if region == "new_delhi"
{txt}(0 real changes made)

{com}. replace number_major2_past30  = 0 if region == "panaji"
{txt}(0 real changes made)

{com}. replace number_major2_past30  = 0 if region == "patna"
{txt}(0 real changes made)

{com}. 
. *done
. replace number_any_past30 = 23+30+18 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_any_past30  = 39+28+40 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_any_past30  = 33+29+20 if region == "bhopal"
{txt}(1 real change made)

{com}. replace number_any_past30  = 23+18+27 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_any_past30  = 30+28+27 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace number_any_past30  = 40+28+46 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_any_past30  = 34+18+38 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_any_past30  =18+25+23 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_any_past30  = 34+30+37 if region == "jaipur"
{txt}(1 real change made)

{com}. replace number_any_past30  = 7+11+6 if region == "kanpur"
{txt}(1 real change made)

{com}. replace number_any_past30  = 35+30+42 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_any_past30  = 20+18+17 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_any_past30  = 31+15+42 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_any_past30  = 38+9+20 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace number_any_past30  = 46+27+35 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_any_past30  = 20+18+16 if region == "patna"
{txt}(1 real change made)

{com}. 
. *done
. replace number_flood_past30 = 13+10+16 if region == "ahmedabad"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 25+37+35 if region == "bangalore"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 20+19+16 if region == "bhopal"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 13+17+22 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 18+25+23 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 26+32+39 if region == "chennai"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 21+33+30 if region == "guwahati"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 10+6+14 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 21+16+27 if region == "jaipur"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 3+6+4 if region == "kanpur"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 21+15+32 if region == "kochi"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 12+8+13 if region == "kolkata"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 19+17+26 if region == "mumbai"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 24+18+16 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 30+22+30 if region == "panaji"
{txt}(1 real change made)

{com}. replace number_flood_past30  = 12+8+12 if region == "patna"
{txt}(1 real change made)

{com}. 
. 
. 
. generate damages_avg_past10=damages_cum_past10/number_any_past10
{txt}
{com}. generate damages_avg_past20=damages_cum_past10/number_any_past20
{txt}
{com}. generate damages_avg_past30=damages_cum_past10/number_any_past30
{txt}
{com}. 
. 
. generate dif_any_past10=0
{txt}
{com}. 
. replace dif_any_past10 = . if region == "ahmedabad"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past10  = . if region == "bangalore"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past10  = . if region == "bhopal"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past10  = 1300000-damages_avg_past10 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace dif_any_past10 = 11000000-damages_avg_past10 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace dif_any_past10  = 12000000-damages_avg_past10 if region == "chennai"
{txt}(1 real change made)

{com}. replace dif_any_past10  = 1300000-damages_avg_past10 if region == "guwahati"
{txt}(1 real change made)

{com}. replace dif_any_past10  = 12000000-damages_avg_past10 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace dif_any_past10  = . if region == "jaipur"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past10  = 11000000-damages_avg_past10 if region == "kanpur"
{txt}(1 real change made)

{com}. replace dif_any_past10  = 9500248-damages_avg_past10 if region == "kochi"
{txt}(1 real change made)

{com}. replace dif_any_past10  = 1300000-damages_avg_past10 if region == "kolkata"
{txt}(1 real change made)

{com}. replace dif_any_past10  = . if region == "mumbai"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past10  = 11000000-damages_avg_past10 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace dif_any_past10  = . if region == "panaji"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past10  = 1300000-damages_avg_past10 if region == "patna"
{txt}(1 real change made)

{com}. 
. generate dif_any_past20=0
{txt}
{com}. 
. replace dif_any_past20 = . if region == "ahmedabad"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past20  = . if region == "bangalore"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past20  = . if region == "bhopal"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past20  = 1300000-damages_avg_past20 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace dif_any_past20 = 11000000-damages_avg_past20 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace dif_any_past20  = 12000000-damages_avg_past20 if region == "chennai"
{txt}(1 real change made)

{com}. replace dif_any_past20  = 1300000-damages_avg_past20 if region == "guwahati"
{txt}(1 real change made)

{com}. replace dif_any_past20  = 12000000-damages_avg_past20 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace dif_any_past20  = . if region == "jaipur"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past20  = 11000000-damages_avg_past20 if region == "kanpur"
{txt}(1 real change made)

{com}. replace dif_any_past20  = 9500248-damages_avg_past20 if region == "kochi"
{txt}(1 real change made)

{com}. replace dif_any_past20  = 1300000-damages_avg_past20 if region == "kolkata"
{txt}(1 real change made)

{com}. replace dif_any_past20  = . if region == "mumbai"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past20  = 11000000-damages_avg_past20 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace dif_any_past20  = . if region == "panaji"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past20  = 1300000-damages_avg_past20 if region == "patna"
{txt}(1 real change made)

{com}. 
. generate dif_any_past30=0
{txt}
{com}. 
. replace dif_any_past30 = . if region == "ahmedabad"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past30  = . if region == "bangalore"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past30  = . if region == "bhopal"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past30  = 1300000-damages_avg_past30 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace dif_any_past30 = 11000000-damages_avg_past30 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace dif_any_past30  = 12000000-damages_avg_past30 if region == "chennai"
{txt}(1 real change made)

{com}. replace dif_any_past30  = 1300000-damages_avg_past30 if region == "guwahati"
{txt}(1 real change made)

{com}. replace dif_any_past30  = 12000000-damages_avg_past30 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace dif_any_past30  = . if region == "jaipur"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past30  = 11000000-damages_avg_past30 if region == "kanpur"
{txt}(1 real change made)

{com}. replace dif_any_past30  = 9500248-damages_avg_past30 if region == "kochi"
{txt}(1 real change made)

{com}. replace dif_any_past30  = 1300000-damages_avg_past30 if region == "kolkata"
{txt}(1 real change made)

{com}. replace dif_any_past30  = . if region == "mumbai"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past30  = 11000000-damages_avg_past30 if region == "new_delhi"
{txt}(1 real change made)

{com}. replace dif_any_past30  = . if region == "panaji"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_any_past30  = 1300000-damages_avg_past30 if region == "patna"
{txt}(1 real change made)

{com}. 
. 
. generate dif_largest_past10=0
{txt}
{com}. generate dif_largest_past20=0
{txt}
{com}. generate dif_largest_past30=0
{txt}
{com}. 
. replace dif_largest_past10 = . if region == "ahmedabad"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past10  = . if region == "bangalore"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past10  = . if region == "bhopal"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past10  = 1300000-2500000 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace dif_largest_past10 = 11000000-906000 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace dif_largest_past10  = 12000000-2150000 if region == "chennai"
{txt}(1 real change made)

{com}. replace dif_largest_past10  = 1300000-633471 if region == "guwahati"
{txt}(1 real change made)

{com}. replace dif_largest_past10  = 12000000-2150000 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace dif_largest_past10  = . if region == "jaipur"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past10  = 11000000-775000  if region == "kanpur"
{txt}(1 real change made)

{com}. replace dif_largest_past10  = 9500248-8000000 if region == "kochi"
{txt}(1 real change made)

{com}. replace dif_largest_past10  = 1300000-1500300 if region == "kolkata"
{txt}(1 real change made)

{com}. replace dif_largest_past10  = . if region == "mumbai"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past10 = 11000000-906000  if region == "new_delhi"
{txt}(1 real change made)

{com}. replace dif_largest_past10 = . if region == "panaji"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past10 = 1300000-1022800 if region == "patna"
{txt}(1 real change made)

{com}. 
. replace dif_largest_past20 = . if region == "ahmedabad"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past20  = . if region == "bangalore"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past20  = . if region == "bhopal"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past20  = 1300000-2844000 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace dif_largest_past20 = 11000000-1060000 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace dif_largest_past20  = 12000000-2150000 if region == "chennai"
{txt}(1 real change made)

{com}. replace dif_largest_past20  = 1300000-633471 if region == "guwahati"
{txt}(1 real change made)

{com}. replace dif_largest_past20  = 12000000-2150000 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace dif_largest_past20  = . if region == "jaipur"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past20  = 11000000-775000  if region == "kanpur"
{txt}(1 real change made)

{com}. replace dif_largest_past20  = 9500248-8000000 if region == "kochi"
{txt}(1 real change made)

{com}. replace dif_largest_past20  = 1300000-1500300 if region == "kolkata"
{txt}(1 real change made)

{com}. replace dif_largest_past20  = . if region == "mumbai"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past20 = 11000000-906000  if region == "new_delhi"
{txt}(1 real change made)

{com}. replace dif_largest_past20 = . if region == "panaji"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past20 = 1300000-1022800 if region == "patna"
{txt}(1 real change made)

{com}. 
. replace dif_largest_past30 = . if region == "ahmedabad"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past30  = . if region == "bangalore"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past30  = . if region == "bhopal"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past30  = 1300000-2844000 if region == "bubaneshwar"
{txt}(1 real change made)

{com}. replace dif_largest_past30 = 11000000-1060000 if region == "chandigarh"
{txt}(1 real change made)

{com}. replace dif_largest_past30  = 12000000-2150000 if region == "chennai"
{txt}(1 real change made)

{com}. replace dif_largest_past30  = 1300000-633471 if region == "guwahati"
{txt}(1 real change made)

{com}. replace dif_largest_past30  = 12000000-2150000 if region == "hyderabad"
{txt}(1 real change made)

{com}. replace dif_largest_past30  = . if region == "jaipur"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past30  = 11000000-775000  if region == "kanpur"
{txt}(1 real change made)

{com}. replace dif_largest_past30  = 9500248-8000000 if region == "kochi"
{txt}(1 real change made)

{com}. replace dif_largest_past30  = 1300000-1500300 if region == "kolkata"
{txt}(1 real change made)

{com}. replace dif_largest_past30  = . if region == "mumbai"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past30 = 11000000-906000  if region == "new_delhi"
{txt}(1 real change made)

{com}. replace dif_largest_past30 = . if region == "panaji"
{txt}(1 real change made, 1 to missing)

{com}. replace dif_largest_past30 = 1300000-1022800 if region == "patna"
{txt}(1 real change made)

{com}. 
. 
. rename dif_any_past30 dif_avg_past30
{res}{txt}
{com}. rename dif_any_past20 dif_avg_past20
{res}{txt}
{com}. rename dif_any_past10 dif_avg_past10
{res}{txt}
{com}. 
. 
. keep region number_any_past10 number_major1_past10 number_major2_past10 number_flood_past10 damages_cum_past10 dif_avg_past10 dif_largest_past10 number_any_past20 number_major1_past20 number_major2_past20 number_flood_past20 damages_cum_past20 dif_avg_past20 dif_largest_past20  number_any_past30 number_major1_past30 number_major2_past30 number_flood_past30 damages_cum_past30 dif_avg_past30 dif_largest_past30 
{txt}
{com}. 
. order region number_any_past10 number_major1_past10 number_major2_past10 number_flood_past10 damages_cum_past10 dif_avg_past10 dif_largest_past10 number_any_past20 number_major1_past20 number_major2_past20 number_flood_past20 damages_cum_past20 dif_avg_past20 dif_largest_past20  number_any_past30 number_major1_past30 number_major2_past30 number_flood_past30 damages_cum_past30 dif_avg_past30 dif_largest_past30 
{txt}
{com}. 
. save _1data/raw/disasters/disaster_risk.dta, replace
{txt}{p 0 4 2}
file {bf}
_1data/raw/disasters/disaster_risk.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. do _2code/_1build_data/merge_main
{txt}
{com}. 
. /*******************************************************************************
> Merge clean data to create main panel
> 
> Inputs:     - regional_fdi_month.dta
>             - regional_controls.dta
>                         - insurance rates
>                         - annual CPI data
>                 
> Output:     -clean_data.dta
> 
> ********************************************************************************/
. 
. 
. *load raw FDI data
. 
. use _1data/raw/fdi/regional_fdi_month.dta, clear
{txt}
{com}. 
. *merge controls
. 
. *use _1data/raw/regional_characteristics/regional_controls.dta, clear
. 
. merge 1:1 region date using  _1data/raw/regional_characteristics/regional_controls.dta, keep(3) nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}           2,736{txt}  
{col 5}{hline 41}

{com}. 
. *merge disaster info
. 
. 
. merge 1:1 region date using  _1data/raw/disasters/disaster_timing_affected.dta, keep(3) nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}           2,736{txt}  
{col 5}{hline 41}

{com}. 
. merge m:1 region using  _1data/raw/disasters/spatial_disaster.dta, nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}           2,736{txt}  
{col 5}{hline 41}

{com}. 
. encode region, gen(region1)
{txt}
{com}. 
. /*
> *generate the appropriate monthly date
> 
> gen month=month(date)
> gen year = year(date)
> drop date
> gen date = ym(year, month)
> format date %tm
> drop year month
> 
> order region date
> */
. 
. gen year = yofd(dofm(date))
{txt}
{com}. 
. *month count
. 
. bysort region1: gen Count = _n
{txt}
{com}. *fill education values
. replace edu = edu[_n-1] if missing(edu) 
{txt}(767 real changes made)

{com}. 
. * generate the logged variables
. generate pop_log = ln(pop)
{txt}
{com}. generate GDP_log = ln(GDP)
{txt}
{com}. generate edu_log = ln(edu)
{txt}
{com}. gen lfdi = ln(fdi)
{txt}(489 missing values generated)

{com}. generate fdi_ihs = asinh(fdi)
{txt}
{com}. replace density = density/100
{txt}variable {bf}{res}density{sf}{txt} was {bf}{res}int{sf}{txt} now {bf}{res}float{sf}
{txt}(2,736 real changes made)

{com}. 
. 
. ** We want to lag these controls by at least one year bc the disaster has an impact on GDP and/or Population.
. ** Given that we observe the controls at yearly frequency and the panel starts middle of 2005,
. ** the lagging by 12 month is tricky and some values need to be fixed.
. * generate lagged variables:
. gen lag_lgdp = .
{txt}(2,736 missing values generated)

{com}. bysort region (date): replace lag_lgdp=GDP_log[_n-12]
{txt}(2544 real changes made)

{com}. bysort region (date): replace lag_lgdp=GDP_log[1] if year==2006
{txt}(144 real changes made)

{com}. 
. gen lag_gdp = .
{txt}(2,736 missing values generated)

{com}. bysort region (date): replace lag_gdp=GDP[_n-12]
{txt}(2544 real changes made)

{com}. bysort region (date): replace lag_gdp=GDP[1] if year==2006
{txt}(144 real changes made)

{com}. 
. 
. ** I noticed that there is a weird empty observation. Not sure where it came from. This drops the empty line:
. 
. 
. ** Back to creating the lags:
. gen lag_lpop = .
{txt}(2,736 missing values generated)

{com}. bysort region (date): replace lag_lpop=pop_log[_n-12]
{txt}(2544 real changes made)

{com}. bysort region (date): replace lag_lpop=pop_log[1] if year==2006
{txt}(144 real changes made)

{com}. 
. gen lag_pop = .
{txt}(2,736 missing values generated)

{com}. bysort region (date): replace lag_pop=pop[_n-12]
{txt}(2544 real changes made)

{com}. bysort region (date): replace lag_pop=pop[1] if year==2006
{txt}(144 real changes made)

{com}. 
. 
. gen lag_ledu = .
{txt}(2,736 missing values generated)

{com}. bysort region (date): replace lag_ledu=edu_log[_n-12]
{txt}(2544 real changes made)

{com}. bysort region (date): replace lag_ledu=edu_log[1] if year==2006
{txt}(144 real changes made)

{com}. 
. gen lag_edu = .
{txt}(2,736 missing values generated)

{com}. bysort region (date): replace lag_edu=edu[_n-12]
{txt}(2544 real changes made)

{com}. bysort region (date): replace lag_edu=edu[1] if year==2006
{txt}(144 real changes made)

{com}. 
. 
. 
. ** Declare the panel dataset:
. xtset region1 date
{res}
{col 1}{txt:Panel variable: }{res:region1}{txt: (strongly balanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2005m10}}{txt: to }{res:{bind:2019m12}}{p_end}
{txt}{col 10}Delta: {res}1 month
{txt}
{com}. 
. 
. ** YOUR PREVIOUS DEFINITIONS OF AFFECTED AND CONTINGUOUS REGIONS DO NO MATCH YOUR CODE!!! ****
. ** PLEASE DOUBLE CHECK THIS!!! ***
. ** HERE I ADJUST ACCORDING TO TABLE 1 IN THE PAPER
. ** IF THE CODE IS RIGHT AND THE PAPER TABLE 1 IS WRONG, WE JUST DELETE THIS PART:
. 
. * Disaster 1:
. tab region if one_affected==1 /*According to your paper this should only include Patna Kolkata*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
      kanpur {c |}{res}        171       33.33       33.33
{txt}     kolkata {c |}{res}        171       33.33       66.67
{txt}       patna {c |}{res}        171       33.33      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        513      100.00
{txt}
{com}. replace one_affected=0 if region=="kanpur"
{txt}(171 real changes made)

{com}. 
. tab region if one_contiguous==1

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
 bubaneshwar {c |}{res}        171       25.00       25.00
{txt}    guwahati {c |}{res}        171       25.00       50.00
{txt}      kanpur {c |}{res}        171       25.00       75.00
{txt}       patna {c |}{res}        171       25.00      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        684      100.00
{txt}
{com}. replace one_contiguous=0 if region=="patna"
{txt}(171 real changes made)

{com}. 
. 
. * Disaster 2:
. tab region if two_affected==1 /*Please double check*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
 bubaneshwar {c |}{res}        171       25.00       25.00
{txt}    guwahati {c |}{res}        171       25.00       50.00
{txt}     kolkata {c |}{res}        171       25.00       75.00
{txt}       patna {c |}{res}        171       25.00      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        684      100.00
{txt}
{com}. tab region if two_contiguous==1 /*Please double check*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
      bhopal {c |}{res}        171       33.33       33.33
{txt}   hyderabad {c |}{res}        171       33.33       66.67
{txt}      kanpur {c |}{res}        171       33.33      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        513      100.00
{txt}
{com}. 
. 
. * Disaster 3:
. tab region if three_affected==1 /*Please double check*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
  chandigarh {c |}{res}        171       33.33       33.33
{txt}      kanpur {c |}{res}        171       33.33       66.67
{txt}   new_delhi {c |}{res}        171       33.33      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        513      100.00
{txt}
{com}. tab region if three_contiguous==1 /*Please double check*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
      bhopal {c |}{res}        171       33.33       33.33
{txt}      jaipur {c |}{res}        171       33.33       66.67
{txt}       patna {c |}{res}        171       33.33      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        513      100.00
{txt}
{com}. 
. 
. * Disaster 4:
. tab region if four_affected==1 /*Please double check*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
     chennai {c |}{res}        171       50.00       50.00
{txt}   hyderabad {c |}{res}        171       50.00      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        342      100.00
{txt}
{com}. tab region if four_contiguous==1 /*Please double check*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
   bangalore {c |}{res}        171       20.00       20.00
{txt}      bhopal {c |}{res}        171       20.00       40.00
{txt} bubaneshwar {c |}{res}        171       20.00       60.00
{txt}       kochi {c |}{res}        171       20.00       80.00
{txt}      mumbai {c |}{res}        171       20.00      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        855      100.00
{txt}
{com}. 
. 
. * Disaster 5:
. tab region if five_affected==1 /*Please double check*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
       kochi {c |}{res}        171      100.00      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        171      100.00
{txt}
{com}. tab region if five_contiguous==1 /*Please double check*/

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
   bangalore {c |}{res}        171       50.00       50.00
{txt}     chennai {c |}{res}        171       50.00      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}        342      100.00
{txt}
{com}. 
. 
. 
. * The previous regression with the interaction terms (##) let's stata decide what to exclude due to multicollinearity
. * As a result, STATA drops some fixed effects and keeps some of the bin and/or affected variables, which it shouldn't
. * This messes with the interpretation. Instead, we need to only include what needs to be included. 
. * I.e. we only include the region and time (year and month or monthly) fixed effects and the interaction terms
. * Here I generate these treatment indicators:
. gen one = one_bin*one_affected 
{txt}
{com}. gen two = two_bin*two_affected 
{txt}
{com}. gen three = three_bin*three_affected 
{txt}
{com}. gen four = four_bin*four_affected 
{txt}
{com}. gen five = five_bin*five_affected
{txt}
{com}. 
. ***********************************************************************************************
. ***********************************************************************************************
. ***********************************************************************************************
. ******************* GEOGRAPHY SPILLOVER MECHANISMS ************************
. ***********************************************************************************************
. ***********************************************************************************************
. ***********************************************************************************************
. 
. ** 1) Continguity treatment indicator:
. gen one_cont = one_bin*one_contiguous 
{txt}
{com}. gen two_cont = two_bin*two_contiguous 
{txt}
{com}. gen three_cont = three_bin*three_contiguous 
{txt}
{com}. gen four_cont = four_bin*four_contiguous 
{txt}
{com}. gen five_cont = five_bin*five_contiguous 
{txt}
{com}. 
. ** 2) Inverse distance:
. replace one_distance = one_bin/one_distance
{txt}(2,394 real changes made)

{com}. replace two_distance = two_bin/two_distance 
{txt}(2,052 real changes made)

{com}. replace three_distance = three_bin/three_distance
{txt}(2,223 real changes made)

{com}. replace four_distance = four_bin/four_distance
{txt}(2,394 real changes made)

{com}. replace five_distance = five_bin/five_distance 
{txt}(2,565 real changes made)

{com}. 
. foreach y in "one_" "two_" "three_" "four_" "five_" {c -(}
{txt}  2{com}. replace `y'distance = 0 if `y'affected==1
{txt}  3{com}. {c )-}
{txt}(342 real changes made)
(684 real changes made)
(513 real changes made)
(342 real changes made)
(171 real changes made)

{com}. 
. /*
> ** Robustness: X) Kth nearest neighbor indicator - does not yield any striking results
> replace one_kth_neighbor = one_kth_neighbor * one_bin
> replace two_kth_neighbor = two_kth_neighbor * two_bin
> replace three_kth_neighbor = three_kth_neighbor * three_bin
> replace four_kth_neighbor = four_kth_neighbor * four_bin
> replace five_kth_neighbor = five_kth_neighbor * five_bin
> 
> * set it = 0 for directly affected regions
> foreach x in "one_kth_neighbor" "two_kth_neighbor" "three_kth_neighbor" "four_kth_neighbor" "five_kth_neighbor" {c -(}
> replace `x'=0 if `x'==.
> {c )-}
> */
. 
. 
. 
. 
. ************************************ REGIONAL DEVELOPMENT **********************************
. 
. ** Spillover by development indicator: 3) density, 4) urban percent 
. ** and 5) water, 6) electricity, and 7) latrine access (within premises)
. 
. rename urban_percent urban
{res}{txt}
{com}. 
. merge m:1 region using _1data/raw/regional_characteristics/census/development.dta, nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}           2,736{txt}  
{col 5}{hline 41}

{com}. 
. 
. 
. foreach x in "density" "urban" "water_s" "elec_s" "lat_s" {c -(}
{txt}  2{com}. foreach y in "one_" "two_" "three_" "four_" "five_" {c -(}
{txt}  3{com}. gen `y'`x' = `y'bin*`x'
{txt}  4{com}. replace `y'`x' = 0 if `y'affected==1
{txt}  5{com}. {c )-}
{txt}  6{com}. {c )-}
{txt}(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)

{com}. 
. 
. 
. 
. ************************************ REGIONAL INFRASTRUCTURE **********************************
. 
. ** 8 & 9) Access to Golden Quadriladeral (GQ) and Major Seaport:
. 
. * Create Port Indicator:
. gen port=0
{txt}
{com}. replace port=1 if inlist(region, "chandigarh", "mumbai", "bangalore", "panaji", "kochi", "chennai", "hyderabad", "bhubaneshwar", "kolkata")
{txt}(1,368 real changes made)

{com}. 
. * rename
. rename golden_quad gq
{res}{txt}
{com}. 
. ** Create weighted spillover indicator:
. foreach x in "gq" "port" {c -(}
{txt}  2{com}. foreach y in "one_" "two_" "three_" "four_" "five_" {c -(}
{txt}  3{com}. gen `y'`x' = `y'bin*`x'
{txt}  4{com}. replace `y'`x' = 0 if `y'affected==1
{txt}  5{com}. {c )-}
{txt}  6{com}. {c )-}
{txt}(149 real changes made)
(234 real changes made)
(237 real changes made)
(100 real changes made)
(0 real changes made)
(149 real changes made)
(117 real changes made)
(79 real changes made)
(100 real changes made)
(17 real changes made)

{com}. 
. 
. 
. 
. 
. 
. 
. ************************************ LABOR SKILL & COMPOSITION *******************************************
. 
. ** Merge 2 datasets on skill and composition:
. merge m:1 region using _1data/raw/regional_characteristics/census/skill.dta, nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}           2,736{txt}  
{col 5}{hline 41}

{com}. 
. 
. merge m:1 region using _1data/raw/regional_characteristics/census/employment.dta, nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}           2,736{txt}  
{col 5}{hline 41}

{com}. 
. 
. 
. ** Create weighted spillover indicator:
. foreach x in "lit_s" "grad_s" "manu_s" "retail_s" {c -(}
{txt}  2{com}. foreach y in "one_" "two_" "three_" "four_" "five_" {c -(}
{txt}  3{com}. gen `y'`x' = `y'bin*`x'
{txt}  4{com}. replace `y'`x' = 0 if `y'affected==1
{txt}  5{com}. {c )-}
{txt}  6{com}. {c )-}
{txt}(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)

{com}. 
. 
. 
. /*
> ** X) Robustness: Check with 2008 Labor stats
> * Merge in employment data:
> merge m:1 region using employment_data/mining_emp
> drop _merge
> 
> merge m:1 region using employment_data/retail_emp
> drop _merge
> 
> merge m:1 region using employment_data/factory_emp
> drop _merge
> */
. 
. 
. ************************  SPILLOVER BASED ON ECONOMIC SIMILARITY ****************************
. 
. ** Does it matter whether a region has more manufacturing or has a similar industrial composition? 
. ** 2) Similar manufacturing or retail employment shares:
. 
. merge m:1 region using _1data/raw/regional_characteristics/census/ind_comp.dta, nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}           2,736{txt}  
{col 5}{hline 41}

{com}. 
. gen id=1
{txt}
{com}. 
. foreach y in "one_" "two_" "three_" "four_" "five_" {c -(}
{txt}  2{com}. foreach x of varlist agri_s-other_s {c -(}
{txt}  3{com}. bysort `y'affected date (region): egen `y'avg_`x'=mean(`x') if `y'affected==1
{txt}  4{com}. bysort id (`y'avg_`x'): replace `y'avg_`x'=`y'avg_`x'[1]
{txt}  5{com}. 
. gen `y'sim_`x' = (1/abs(`y'avg_`x'-`x'))
{txt}  6{com}. bysort date (region): egen tot_`y'sim_`x'=total(`y'sim_`x') if `y'affected==0
{txt}  7{com}. replace `y'sim_`x'=`y'sim_`x'/tot_`y'sim_`x'
{txt}  8{com}. 
. replace `y'sim_`x' = 0 if `y'affected==1
{txt}  9{com}. replace `y'sim_`x' = `y'sim_`x'*`y'bin
{txt} 10{com}. 
. drop `y'avg_`x' tot_`y'sim_`x'
{txt} 11{com}. 
. {c )-}
{txt} 12{com}. 
. egen `y'sim = rowtotal(`y'sim_agri_s-`y'sim_other_s)
{txt} 13{com}. 
. drop `y'sim_agri_s-`y'sim_other_s
{txt} 14{com}. 
. 
. {c )-}
{txt}(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(308 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,052 missing values generated)
(2052 real changes made)
(684 missing values generated)
(2,736 real changes made, 684 to missing)
(684 real changes made)
(648 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,223 missing values generated)
(2223 real changes made)
(513 missing values generated)
(2,736 real changes made, 513 to missing)
(513 real changes made)
(1,196 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,394 missing values generated)
(2394 real changes made)
(342 missing values generated)
(2,736 real changes made, 342 to missing)
(342 real changes made)
(1,694 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)
(2,565 missing values generated)
(2565 real changes made)
(171 missing values generated)
(171 missing values generated)
(2,565 real changes made)
(171 real changes made)
(2,310 real changes made)

{com}. 
. 
. 
. 
. 
. 
. ************************  SPILLOVER BASED ON RISK BASED ON PREVIOUS DISASTERS ****************************
. 
. 
. 
. merge m:1 region using _1data/raw/disasters/disaster_risk.dta, nogen
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}           2,736{txt}  
{col 5}{hline 41}

{com}. 
. 
. 
. * set time horizon on risk variable
. 
. 
. ** Create weighted spillover indicator:
. foreach i in "_past10" "_past20" "_past30" {c -(}
{txt}  2{com}. foreach x in "number_any`i'" "number_major1`i'" "number_major2`i'" "damages_cum`i'" {c -(}
{txt}  3{com}. foreach y in "one_" "two_" "three_" "four_" "five_" {c -(}
{txt}  4{com}. gen `y'`x' = `y'bin*`x'
{txt}  5{com}. replace `y'`x' = 0 if `y'affected==1
{txt}  6{com}. {c )-}
{txt}  7{com}. {c )-}
{txt}  8{com}. {c )-}
{txt}(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(0 real changes made)
(100 real changes made)
(17 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(0 real changes made)
(100 real changes made)
(17 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(79 real changes made)
(100 real changes made)
(17 real changes made)
(0 real changes made)
(234 real changes made)
(0 real changes made)
(100 real changes made)
(17 real changes made)
(298 real changes made)
(468 real changes made)
(237 real changes made)
(100 real changes made)
(17 real changes made)

{com}. 
. 
. *** Set spillover channels equal to 0 if a region was already hit by a disaster
. ** That is only focus on regions that have not been previously affected by a disaster.
. 
. foreach x in "cont" "distance" "density" "urban" "water_s" "elec_s" "lat_s" "gq" "port" "lit_s" "grad_s" "manu_s" "retail_s" "sim" ///
>         "number_any_past10" "number_any_past20" "number_any_past30" "number_major1_past10" "number_major1_past20" "number_major1_past30" ///
>         "number_major2_past10" "number_major2_past20" "number_major2_past30" "damages_cum_past10" "damages_cum_past20" "damages_cum_past30" {c -(}
{txt}  2{com}. *  should not make any changes as all other regions were not hit before:
. replace one_`x' = 0 if inlist(region, "kolkata", "patna")
{txt}  3{com}. 
. * should not make any changes as all other regions were also not affected by disaster one:
. replace two_`x' = 0 if inlist(region, "bubaneshwar", "guwahati", "kolkata", "patna")
{txt}  4{com}. 
. * should make changes:
. replace three_`x' =0 if inlist(region, "bubaneshwar", "chandigarh", "guwahati",  ///
>                 "kanpur", "kolkata", "new_dehli", "patna")
{txt}  5{com}. 
. replace four_`x' =0 if inlist(region, "bubaneshwar", "chandigarh", "chennai", "guwahati", "hyderabad", ///
>                 "kanpur", "kolkata", "new_dehli", "patna")
{txt}  6{com}. 
. replace five_`x' =0 if (inlist(region, "bubaneshwar", "chandigarh", "chennai", "guwahati", "hyderabad") | ///
>                 inlist(region, "kanpur", "kochi", "kolkata", "new_dehli", "patna"))
{txt}  7{com}. 
. {c )-}
{txt}(0 real changes made)
(0 real changes made)
(79 real changes made)
(50 real changes made)
(17 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(158 real changes made)
(200 real changes made)
(102 real changes made)
(0 real changes made)
(0 real changes made)
(79 real changes made)
(100 real changes made)
(68 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(200 real changes made)
(102 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(200 real changes made)
(102 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(250 real changes made)
(119 real changes made)
(0 real changes made)
(0 real changes made)
(158 real changes made)
(100 real changes made)
(68 real changes made)
(0 real changes made)
(0 real changes made)
(158 real changes made)
(100 real changes made)
(68 real changes made)
(0 real changes made)
(0 real changes made)
(158 real changes made)
(100 real changes made)
(68 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)
(0 real changes made)
(0 real changes made)
(316 real changes made)
(300 real changes made)
(136 real changes made)

{com}. 
. sort region date
{txt}
{com}. 
. 
. save _1data/clean/clean_data, replace
{txt}{p 0 4 2}
file {bf}
_1data/clean/clean_data.dta{rm}
saved
{p_end}

{com}. 
. 
. 
. 
. 
{txt}end of do-file

{com}. 
. * ------------------------------------------------------------
. * ANALYSIS
. * ------------------------------------------------------------
. 
. *tables
. 
. 
. do _2code/_2analysis/table1
{txt}
{com}. 
. ********************************************************************************
. * Table 1: Regional Sample Averages
. 
. ********************************************************************************
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. keep if date >= ym(2006,1)
{txt}(48 observations deleted)

{com}. 
. 
. gen disaster = 0
{txt}
{com}. replace disaster = 1 if inlist(region, "kolkata", "patna")
{txt}(336 real changes made)

{com}. replace disaster = 2 if inlist(region, "bubaneshwar", "guwahati", "kolkata", "patna")
{txt}(672 real changes made)

{com}. replace disaster = 3 if inlist(region, "chandigarh", "kanpur", "new_delhi")
{txt}(504 real changes made)

{com}. replace disaster = 4 if inlist(region, "chennai", "hyderabad")
{txt}(336 real changes made)

{com}. replace disaster = 5 if inlist(region, "kochi")
{txt}(168 real changes made)

{com}. 
. 
. replace GDP=GDP/1000
{txt}(2,688 real changes made)

{com}. replace pop=pop/1000
{txt}(2,688 real changes made)

{com}. 
. 
. estimates clear
{txt}
{com}. 
. estpost tabstat fdi disaster GDP pop density urban lat_s port lit_s grad_s manu_s, ///
>         by(region) statistics(mean) nototal

{txt}Summary statistics: mean
     for variables: fdi disaster GDP pop density urban lat_s port lit_s grad_s manu_s
  by categories of: region

{space 0}{space 0}{ralign 12:region}{space 1}{c |}{space 1}{ralign 9:e(fdi)}{space 1}{space 1}{ralign 9:e(disas~)}{space 1}{space 1}{ralign 9:e(GDP)}{space 1}{space 1}{ralign 9:e(pop)}{space 1}{space 1}{ralign 9:e(densi~)}{space 1}{space 1}{ralign 9:e(urban)}{space 1}{space 1}{ralign 9:e(lat_s)}{space 1}{space 1}{ralign 9:e(port)}{space 1}{space 1}{ralign 9:e(lit_s)}{space 1}{space 1}{ralign 9:e(grad_s)}{space 1}{space 1}{ralign 9:e(manu_s)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:ahmedabad}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 123.7024}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 768.4008}}}{space 1}{space 1}{ralign 9:{res:{sf: 61.70957}}}{space 1}{space 1}{ralign 9:{res:{sf:     2.58}}}{space 1}{space 1}{ralign 9:{res:{sf:    37.35}}}{space 1}{space 1}{ralign 9:{res:{sf: 35.25531}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 58.86551}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.701802}}}{space 1}{space 1}{ralign 9:{res:{sf: 32.93378}}}{space 1}
{space 0}{space 0}{ralign 12:bangalore}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 447.5655}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 727.8571}}}{space 1}{space 1}{ralign 9:{res:{sf: 48.28664}}}{space 1}{space 1}{ralign 9:{res:{sf:     2.75}}}{space 1}{space 1}{ralign 9:{res:{sf:    33.98}}}{space 1}{space 1}{ralign 9:{res:{sf: 22.88688}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 57.58683}}}{space 1}{space 1}{ralign 9:{res:{sf:  4.21369}}}{space 1}{space 1}{ralign 9:{res:{sf: 28.57805}}}{space 1}
{space 0}{space 0}{ralign 12:bhopal}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 19.27976}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 413.5369}}}{space 1}{space 1}{ralign 9:{res:{sf: 74.41093}}}{space 1}{space 1}{ralign 9:{res:{sf:     2.75}}}{space 1}{space 1}{ralign 9:{res:{sf:    46.75}}}{space 1}{space 1}{ralign 9:{res:{sf: 13.84648}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 52.67892}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.089078}}}{space 1}{space 1}{ralign 9:{res:{sf: 28.42156}}}{space 1}
{space 0}{space 0}{ralign 12:bubaneshwar}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 2.690476}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 267.6651}}}{space 1}{space 1}{ralign 9:{res:{sf: 41.91359}}}{space 1}{space 1}{ralign 9:{res:{sf:     2.36}}}{space 1}{space 1}{ralign 9:{res:{sf:    14.97}}}{space 1}{space 1}{ralign 9:{res:{sf: 9.601776}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 53.89821}}}{space 1}{space 1}{ralign 9:{res:{sf:  3.22144}}}{space 1}{space 1}{ralign 9:{res:{sf: 28.51519}}}{space 1}
{space 0}{space 0}{ralign 12:chandigarh}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 29.27381}}}{space 1}{space 1}{ralign 9:{res:{sf:        3}}}{space 1}{space 1}{ralign 9:{res:{sf: 765.0014}}}{space 1}{space 1}{ralign 9:{res:{sf: 61.72664}}}{space 1}{space 1}{ralign 9:{res:{sf:     3.56}}}{space 1}{space 1}{ralign 9:{res:{sf:    24.25}}}{space 1}{space 1}{ralign 9:{res:{sf: 40.40336}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 60.08813}}}{space 1}{space 1}{ralign 9:{res:{sf: 4.048327}}}{space 1}{space 1}{ralign 9:{res:{sf: 26.87645}}}{space 1}
{space 0}{space 0}{ralign 12:chennai}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 216.2202}}}{space 1}{space 1}{ralign 9:{res:{sf:        4}}}{space 1}{space 1}{ralign 9:{res:{sf: 866.1026}}}{space 1}{space 1}{ralign 9:{res:{sf: 59.71221}}}{space 1}{space 1}{ralign 9:{res:{sf:     4.78}}}{space 1}{space 1}{ralign 9:{res:{sf:    43.86}}}{space 1}{space 1}{ralign 9:{res:{sf: 21.16965}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf:  65.0377}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.573779}}}{space 1}{space 1}{ralign 9:{res:{sf: 34.19865}}}{space 1}
{space 0}{space 0}{ralign 12:guwahati}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 7.339286}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 254.7046}}}{space 1}{space 1}{ralign 9:{res:{sf: 44.91219}}}{space 1}{space 1}{ralign 9:{res:{sf:      .78}}}{space 1}{space 1}{ralign 9:{res:{sf:    23.42}}}{space 1}{space 1}{ralign 9:{res:{sf: 25.81423}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 54.06409}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.826608}}}{space 1}{space 1}{ralign 9:{res:{sf: 17.97024}}}{space 1}
{space 0}{space 0}{ralign 12:hyderabad}{space 1}{c |}{space 1}{ralign 9:{res:{sf:  83.0119}}}{space 1}{space 1}{ralign 9:{res:{sf:        4}}}{space 1}{space 1}{ralign 9:{res:{sf: 470.9139}}}{space 1}{space 1}{ralign 9:{res:{sf:  55.3745}}}{space 1}{space 1}{ralign 9:{res:{sf:     2.75}}}{space 1}{space 1}{ralign 9:{res:{sf:    27.78}}}{space 1}{space 1}{ralign 9:{res:{sf: 20.76061}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 52.40037}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.708651}}}{space 1}{space 1}{ralign 9:{res:{sf: 30.82179}}}{space 1}
{space 0}{space 0}{ralign 12:jaipur}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 16.99405}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 502.7478}}}{space 1}{space 1}{ralign 9:{res:{sf: 70.06648}}}{space 1}{space 1}{ralign 9:{res:{sf:     1.65}}}{space 1}{space 1}{ralign 9:{res:{sf:    23.38}}}{space 1}{space 1}{ralign 9:{res:{sf: 21.93234}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 49.02387}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.604647}}}{space 1}{space 1}{ralign 9:{res:{sf: 25.83962}}}{space 1}
{space 0}{space 0}{ralign 12:kanpur}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 5.130952}}}{space 1}{space 1}{ralign 9:{res:{sf:        3}}}{space 1}{space 1}{ralign 9:{res:{sf: 980.4028}}}{space 1}{space 1}{ralign 9:{res:{sf: 214.6582}}}{space 1}{space 1}{ralign 9:{res:{sf:     4.24}}}{space 1}{space 1}{ralign 9:{res:{sf:    23.19}}}{space 1}{space 1}{ralign 9:{res:{sf: 23.45525}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 46.26844}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.108155}}}{space 1}{space 1}{ralign 9:{res:{sf: 38.70926}}}{space 1}
{space 0}{space 0}{ralign 12:kochi}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 19.10119}}}{space 1}{space 1}{ralign 9:{res:{sf:        5}}}{space 1}{space 1}{ralign 9:{res:{sf: 412.3594}}}{space 1}{space 1}{ralign 9:{res:{sf: 33.91186}}}{space 1}{space 1}{ralign 9:{res:{sf:     8.19}}}{space 1}{space 1}{ralign 9:{res:{sf:    25.97}}}{space 1}{space 1}{ralign 9:{res:{sf: 65.06091}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 80.02743}}}{space 1}{space 1}{ralign 9:{res:{sf: 4.526384}}}{space 1}{space 1}{ralign 9:{res:{sf: 21.06291}}}{space 1}
{space 0}{space 0}{ralign 12:kolkata}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 25.95833}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf:  646.174}}}{space 1}{space 1}{ralign 9:{res:{sf: 92.18057}}}{space 1}{space 1}{ralign 9:{res:{sf:     9.04}}}{space 1}{space 1}{ralign 9:{res:{sf:    28.03}}}{space 1}{space 1}{ralign 9:{res:{sf: 23.51331}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf:  58.8658}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.965361}}}{space 1}{space 1}{ralign 9:{res:{sf: 33.77612}}}{space 1}
{space 0}{space 0}{ralign 12:mumbai}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 662.5952}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 1478.714}}}{space 1}{space 1}{ralign 9:{res:{sf: 92.84471}}}{space 1}{space 1}{ralign 9:{res:{sf:     3.14}}}{space 1}{space 1}{ralign 9:{res:{sf:     42.4}}}{space 1}{space 1}{ralign 9:{res:{sf: 28.27212}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 65.98727}}}{space 1}{space 1}{ralign 9:{res:{sf: 5.038646}}}{space 1}{space 1}{ralign 9:{res:{sf:  30.9865}}}{space 1}
{space 0}{space 0}{ralign 12:new_delhi}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 209.4524}}}{space 1}{space 1}{ralign 9:{res:{sf:        3}}}{space 1}{space 1}{ralign 9:{res:{sf: 399.7761}}}{space 1}{space 1}{ralign 9:{res:{sf: 17.51164}}}{space 1}{space 1}{ralign 9:{res:{sf:    92.94}}}{space 1}{space 1}{ralign 9:{res:{sf:    93.01}}}{space 1}{space 1}{ralign 9:{res:{sf: 68.02806}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 69.77914}}}{space 1}{space 1}{ralign 9:{res:{sf: 12.72094}}}{space 1}{space 1}{ralign 9:{res:{sf: 25.99221}}}{space 1}
{space 0}{space 0}{ralign 12:panaji}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 9.303571}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 44.61421}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.483357}}}{space 1}{space 1}{ralign 9:{res:{sf:     3.63}}}{space 1}{space 1}{ralign 9:{res:{sf:    49.77}}}{space 1}{space 1}{ralign 9:{res:{sf: 45.76815}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 73.13092}}}{space 1}{space 1}{ralign 9:{res:{sf: 7.293859}}}{space 1}{space 1}{ralign 9:{res:{sf: 17.51661}}}{space 1}
{space 0}{space 0}{ralign 12:patna}{space 1}{c |}{space 1}{ralign 9:{res:{sf: 1.511905}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 296.3974}}}{space 1}{space 1}{ralign 9:{res:{sf: 106.4529}}}{space 1}{space 1}{ralign 9:{res:{sf:     6.09}}}{space 1}{space 1}{ralign 9:{res:{sf:    16.36}}}{space 1}{space 1}{ralign 9:{res:{sf: 13.75642}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: 39.00772}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.654155}}}{space 1}{space 1}{ralign 9:{res:{sf: 33.11117}}}{space 1}

{com}. 
. esttab using _3results/tables/table1.tex, cells("fdi(fmt(1)) disaster(fmt(0)) GDP pop density urban lat_s port lit_s grad_s manu_s") ///
>         noobs nomtitle nonumber replace
{res}{txt}(output written to {browse  `"_3results/tables/table1.tex"'})

{com}. 
. 
. 
{txt}end of do-file

{com}. do _2code/_2analysis/table2_baseline
{txt}
{com}. 
. ********************************************************************************
. * Table 2: Baseline estimates
. 
. ********************************************************************************
. 
. 
. ** Regression of IHS FDI with Year and Month fixed effects
. * It's robust to true alternative fixed effect specificaions and not sensitive to changing controls
. * We estimate the relative average treatment effect of each disaster separately and then jointly
. * Then we measure the outcome variable (FDI) in absolute terms and logs (ln(FDI)), which ignores the negative and 0-valued FDI inflows
. 
. 
. ** Set the control variables:
. 
. use _1data/clean/clean_data, clear 
{txt}
{com}. 
. keep if date >= ym(2006,1)
{txt}(48 observations deleted)

{com}. global control lag_lgdp lag_lpop
{txt}
{com}. 
. 
. *reg fdi_ihs one two three four five i.date i.region1, cluster(region1)
. 
. ** Set up matrix:
. mat p_val=J(8,9,.)
{txt}
{com}. estimates clear
{txt}
{com}. local j=1
{txt}
{com}. foreach x in "one" "two" "three" "four" "five" "one two three four five" {c -(}
{txt}  2{com}. reg fdi_ihs `x' $control i.date i.region1, cluster(region1)
{txt}  3{com}. 
. 
. 
. 
. if "`x'"=="one" {c -(}
{txt}  4{com}. boottest {c -(}one{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt}  5{com}. mat p_val[1,1]=r(p_1)
{txt}  6{com}. mat p_val[6,1]=r(p_2)
{txt}  7{com}. mat p_val[7,1]=r(p_3)
{txt}  8{com}. mat p_val[8,1]=r(p_4)
{txt}  9{com}. {c )-}
{txt} 10{com}. 
. if "`x'"=="two" {c -(}
{txt} 11{com}. boottest {c -(}two{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 12{com}. mat p_val[2,2]=r(p_1)
{txt} 13{com}. mat p_val[6,2]=r(p_2)
{txt} 14{com}. mat p_val[7,2]=r(p_3)
{txt} 15{com}. mat p_val[8,2]=r(p_4)
{txt} 16{com}. {c )-}
{txt} 17{com}. if "`x'"=="three" {c -(}
{txt} 18{com}. boottest {c -(}three{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 19{com}. mat p_val[3,3]=r(p_1)
{txt} 20{com}. mat p_val[6,3]=r(p_2)
{txt} 21{com}. mat p_val[7,3]=r(p_3)
{txt} 22{com}. mat p_val[8,3]=r(p_4)
{txt} 23{com}. {c )-}
{txt} 24{com}. if "`x'"=="four" {c -(}
{txt} 25{com}. boottest {c -(}four{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-},  reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 26{com}. mat p_val[4,4]=r(p_1)
{txt} 27{com}. mat p_val[6,4]=r(p_2)
{txt} 28{com}. mat p_val[7,4]=r(p_3)
{txt} 29{com}. mat p_val[8,4]=r(p_4)
{txt} 30{com}. {c )-}
{txt} 31{com}. if "`x'"=="five" {c -(}
{txt} 32{com}. boottest {c -(}five{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 33{com}. mat p_val[5,5]=r(p_1)
{txt} 34{com}. mat p_val[6,5]=r(p_2)
{txt} 35{com}. mat p_val[7,5]=r(p_3)
{txt} 36{com}. mat p_val[8,5]=r(p_4)
{txt} 37{com}. {c )-}
{txt} 38{com}. if "`x'"=="one two three four five" {c -(}
{txt} 39{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 40{com}. mat p_val[1,6]=r(p_1)
{txt} 41{com}. mat p_val[2,6]=r(p_2)
{txt} 42{com}. mat p_val[3,6]=r(p_3)
{txt} 43{com}. mat p_val[4,6]=r(p_4)
{txt} 44{com}. mat p_val[5,6]=r(p_5)
{txt} 45{com}. mat p_val[6,6]=r(p_6)
{txt} 46{com}. mat p_val[7,6]=r(p_7)
{txt} 47{com}. mat p_val[8,6]=r(p_8)
{txt} 48{com}. {c )-}
{txt} 49{com}. 
. eststo tb1_`j'
{txt} 50{com}. local j=`j'+1
{txt} 51{com}. 
. {c )-}

{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.7222
                                                {txt}Root MSE          =    {res} 1.3048

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-3.709071{col 26}{space 2} .4719851{col 37}{space 1}   -7.86{col 46}{space 3}0.000{col 54}{space 4}-4.715083{col 67}{space 3}-2.703059
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 2.254595{col 26}{space 2}  1.82286{col 37}{space 1}    1.24{col 46}{space 3}0.235{col 54}{space 4} -1.63074{col 67}{space 3}  6.13993
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .6326002{col 26}{space 2} .4204405{col 37}{space 1}    1.50{col 46}{space 3}0.153{col 54}{space 4}-.2635475{col 67}{space 3} 1.528748
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2721267{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4} -.633163{col 67}{space 3} .5268858
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2833452{col 37}{space 1}   -1.73{col 46}{space 3}0.103{col 54}{space 4}-1.095522{col 67}{space 3} .1123505
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3040009{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-.8491256{col 67}{space 3} .4467994
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2895211{col 37}{space 1}   -0.81{col 46}{space 3}0.433{col 54}{space 4}-.8501701{col 67}{space 3} .3840289
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2871265{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}-.5700453{col 67}{space 3} .6539459
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3467316{col 37}{space 1}    1.04{col 46}{space 3}0.316{col 54}{space 4}-.3795197{col 67}{space 3} 1.098562
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3868755{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-.6359824{col 67}{space 3} 1.013229
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3753808{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-.7275172{col 67}{space 3} .8726931
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2878324{col 37}{space 1}   -0.60{col 46}{space 3}0.558{col 54}{space 4}-.7860253{col 67}{space 3} .4409752
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2} .3202635{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6975036{col 67}{space 3} .6677473
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3222327{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7074919{col 67}{space 3} .6661535
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.7745708{col 26}{space 2} .4335529{col 37}{space 1}   -1.79{col 46}{space 3}0.094{col 54}{space 4}-1.698667{col 67}{space 3} .1495252
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.3583874{col 26}{space 2} .4974612{col 37}{space 1}   -0.72{col 46}{space 3}0.482{col 54}{space 4}-1.418701{col 67}{space 3}  .701926
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.3398022{col 26}{space 2}  .419059{col 37}{space 1}   -0.81{col 46}{space 3}0.430{col 54}{space 4}-1.233005{col 67}{space 3} .5534009
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.5626153{col 26}{space 2} .4484626{col 37}{space 1}   -1.25{col 46}{space 3}0.229{col 54}{space 4}-1.518491{col 67}{space 3} .3932602
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.4555925{col 26}{space 2} .4762082{col 37}{space 1}   -0.96{col 46}{space 3}0.354{col 54}{space 4}-1.470606{col 67}{space 3} .5594212
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.6262649{col 26}{space 2} .4320641{col 37}{space 1}   -1.45{col 46}{space 3}0.168{col 54}{space 4}-1.547188{col 67}{space 3} .2946578
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .1006901{col 26}{space 2} .4570827{col 37}{space 1}    0.22{col 46}{space 3}0.829{col 54}{space 4}-.8735586{col 67}{space 3} 1.074939
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.7187516{col 26}{space 2} .4025407{col 37}{space 1}   -1.79{col 46}{space 3}0.094{col 54}{space 4}-1.576747{col 67}{space 3} .1392435
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.9145153{col 26}{space 2} .4227582{col 37}{space 1}   -2.16{col 46}{space 3}0.047{col 54}{space 4}-1.815603{col 67}{space 3}-.0134275
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.5577088{col 26}{space 2} .5062241{col 37}{space 1}   -1.10{col 46}{space 3}0.288{col 54}{space 4}  -1.6367{col 67}{space 3} .5212823
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.4110692{col 26}{space 2} .4643991{col 37}{space 1}   -0.89{col 46}{space 3}0.390{col 54}{space 4}-1.400913{col 67}{space 3} .5787742
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.1389026{col 26}{space 2} .5750809{col 37}{space 1}   -0.24{col 46}{space 3}0.812{col 54}{space 4}-1.364659{col 67}{space 3} 1.086853
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.9188959{col 26}{space 2} .6087222{col 37}{space 1}   -1.51{col 46}{space 3}0.152{col 54}{space 4}-2.216356{col 67}{space 3} .3785648
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.3707366{col 26}{space 2}  .833461{col 37}{space 1}   -0.44{col 46}{space 3}0.663{col 54}{space 4}-2.147217{col 67}{space 3} 1.405744
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.6599302{col 26}{space 2} .7237307{col 37}{space 1}   -0.91{col 46}{space 3}0.376{col 54}{space 4}-2.202526{col 67}{space 3} .8826653
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.5068661{col 26}{space 2} .7051011{col 37}{space 1}   -0.72{col 46}{space 3}0.483{col 54}{space 4}-2.009754{col 67}{space 3} .9960213
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.0434298{col 26}{space 2} .5328605{col 37}{space 1}   -0.08{col 46}{space 3}0.936{col 54}{space 4}-1.179195{col 67}{space 3} 1.092335
{txt}{space 8}581  {c |}{col 14}{res}{space 2}  -.19772{col 26}{space 2}  .651986{col 37}{space 1}   -0.30{col 46}{space 3}0.766{col 54}{space 4}-1.587395{col 67}{space 3} 1.191955
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.1745007{col 26}{space 2} .6793165{col 37}{space 1}   -0.26{col 46}{space 3}0.801{col 54}{space 4} -1.62243{col 67}{space 3} 1.273428
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.3118078{col 26}{space 2} .7348546{col 37}{space 1}   -0.42{col 46}{space 3}0.677{col 54}{space 4}-1.878113{col 67}{space 3} 1.254498
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.1456251{col 26}{space 2} .6758045{col 37}{space 1}   -0.22{col 46}{space 3}0.832{col 54}{space 4}-1.586068{col 67}{space 3} 1.294818
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.2199756{col 26}{space 2} .6025367{col 37}{space 1}   -0.37{col 46}{space 3}0.720{col 54}{space 4}-1.504252{col 67}{space 3} 1.064301
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.3213572{col 26}{space 2} .6558863{col 37}{space 1}   -0.49{col 46}{space 3}0.631{col 54}{space 4}-1.719346{col 67}{space 3} 1.076631
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.5409178{col 26}{space 2} .7757738{col 37}{space 1}   -0.70{col 46}{space 3}0.496{col 54}{space 4} -2.19444{col 67}{space 3} 1.112605
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.5552902{col 26}{space 2} .9451956{col 37}{space 1}   -0.59{col 46}{space 3}0.566{col 54}{space 4}-2.569927{col 67}{space 3} 1.459347
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.3571677{col 26}{space 2}  .842227{col 37}{space 1}   -0.42{col 46}{space 3}0.678{col 54}{space 4}-2.152332{col 67}{space 3} 1.437997
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.4286892{col 26}{space 2} .8905132{col 37}{space 1}   -0.48{col 46}{space 3}0.637{col 54}{space 4}-2.326773{col 67}{space 3} 1.469395
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-1.013659{col 26}{space 2} .8935038{col 37}{space 1}   -1.13{col 46}{space 3}0.274{col 54}{space 4}-2.918117{col 67}{space 3} .8907996
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.4317751{col 26}{space 2} .8159242{col 37}{space 1}   -0.53{col 46}{space 3}0.604{col 54}{space 4}-2.170876{col 67}{space 3} 1.307326
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-.1307856{col 26}{space 2} .9569167{col 37}{space 1}   -0.14{col 46}{space 3}0.893{col 54}{space 4}-2.170405{col 67}{space 3} 1.908834
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-.1205902{col 26}{space 2} .9618717{col 37}{space 1}   -0.13{col 46}{space 3}0.902{col 54}{space 4}-2.170771{col 67}{space 3} 1.929591
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-.1256032{col 26}{space 2}   .99275{col 37}{space 1}   -0.13{col 46}{space 3}0.901{col 54}{space 4}  -2.2416{col 67}{space 3} 1.990393
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.4214126{col 26}{space 2} .8273193{col 37}{space 1}   -0.51{col 46}{space 3}0.618{col 54}{space 4}-2.184802{col 67}{space 3} 1.341977
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.4204869{col 26}{space 2} .9735235{col 37}{space 1}   -0.43{col 46}{space 3}0.672{col 54}{space 4}-2.495503{col 67}{space 3} 1.654529
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.3072683{col 26}{space 2} .8463429{col 37}{space 1}   -0.36{col 46}{space 3}0.722{col 54}{space 4}-2.111206{col 67}{space 3} 1.496669
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.5129808{col 26}{space 2} .8813391{col 37}{space 1}   -0.58{col 46}{space 3}0.569{col 54}{space 4}-2.391511{col 67}{space 3} 1.365549
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.5892484{col 26}{space 2} 1.185787{col 37}{space 1}   -0.50{col 46}{space 3}0.626{col 54}{space 4}-3.116693{col 67}{space 3} 1.938196
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-.8322789{col 26}{space 2} 1.110014{col 37}{space 1}   -0.75{col 46}{space 3}0.465{col 54}{space 4}-3.198218{col 67}{space 3}  1.53366
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.3953263{col 26}{space 2} 1.190682{col 37}{space 1}   -0.33{col 46}{space 3}0.744{col 54}{space 4}-2.933204{col 67}{space 3} 2.142552
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-1.536428{col 26}{space 2} 1.242114{col 37}{space 1}   -1.24{col 46}{space 3}0.235{col 54}{space 4}-4.183931{col 67}{space 3} 1.111075
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-1.260169{col 26}{space 2} 1.194126{col 37}{space 1}   -1.06{col 46}{space 3}0.308{col 54}{space 4}-3.805389{col 67}{space 3} 1.285051
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-.8724722{col 26}{space 2} 1.256231{col 37}{space 1}   -0.69{col 46}{space 3}0.498{col 54}{space 4}-3.550065{col 67}{space 3} 1.805121
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-1.269173{col 26}{space 2} 1.299613{col 37}{space 1}   -0.98{col 46}{space 3}0.344{col 54}{space 4}-4.039233{col 67}{space 3} 1.500886
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-.9518861{col 26}{space 2} 1.225521{col 37}{space 1}   -0.78{col 46}{space 3}0.449{col 54}{space 4}-3.564022{col 67}{space 3}  1.66025
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-1.130176{col 26}{space 2} 1.266634{col 37}{space 1}   -0.89{col 46}{space 3}0.386{col 54}{space 4}-3.829943{col 67}{space 3} 1.569592
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-1.162196{col 26}{space 2} 1.391003{col 37}{space 1}   -0.84{col 46}{space 3}0.417{col 54}{space 4}-4.127049{col 67}{space 3} 1.802658
{txt}{space 8}610  {c |}{col 14}{res}{space 2}-.8022512{col 26}{space 2} 1.424089{col 37}{space 1}   -0.56{col 46}{space 3}0.582{col 54}{space 4}-3.837626{col 67}{space 3} 2.233124
{txt}{space 8}611  {c |}{col 14}{res}{space 2}-.5485021{col 26}{space 2} 1.159315{col 37}{space 1}   -0.47{col 46}{space 3}0.643{col 54}{space 4}-3.019523{col 67}{space 3} 1.922519
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-1.333977{col 26}{space 2} 1.600247{col 37}{space 1}   -0.83{col 46}{space 3}0.418{col 54}{space 4}-4.744822{col 67}{space 3} 2.076868
{txt}{space 8}613  {c |}{col 14}{res}{space 2} -1.27563{col 26}{space 2} 1.710662{col 37}{space 1}   -0.75{col 46}{space 3}0.467{col 54}{space 4} -4.92182{col 67}{space 3}  2.37056
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-1.357875{col 26}{space 2} 1.450626{col 37}{space 1}   -0.94{col 46}{space 3}0.364{col 54}{space 4}-4.449811{col 67}{space 3} 1.734061
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-1.183722{col 26}{space 2} 1.551224{col 37}{space 1}   -0.76{col 46}{space 3}0.457{col 54}{space 4}-4.490077{col 67}{space 3} 2.122634
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-1.289845{col 26}{space 2} 1.485722{col 37}{space 1}   -0.87{col 46}{space 3}0.399{col 54}{space 4}-4.456587{col 67}{space 3} 1.876898
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-1.760335{col 26}{space 2} 1.720137{col 37}{space 1}   -1.02{col 46}{space 3}0.322{col 54}{space 4}-5.426719{col 67}{space 3} 1.906049
{txt}{space 8}618  {c |}{col 14}{res}{space 2} -1.39999{col 26}{space 2} 1.502014{col 37}{space 1}   -0.93{col 46}{space 3}0.366{col 54}{space 4}-4.601456{col 67}{space 3} 1.801477
{txt}{space 8}619  {c |}{col 14}{res}{space 2}-.9266828{col 26}{space 2} 1.601912{col 37}{space 1}   -0.58{col 46}{space 3}0.572{col 54}{space 4}-4.341077{col 67}{space 3} 2.487711
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-1.154541{col 26}{space 2}   1.7494{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-4.883298{col 67}{space 3} 2.574217
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-1.049691{col 26}{space 2} 1.516501{col 37}{space 1}   -0.69{col 46}{space 3}0.499{col 54}{space 4}-4.282036{col 67}{space 3} 2.182654
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-1.241964{col 26}{space 2} 1.471643{col 37}{space 1}   -0.84{col 46}{space 3}0.412{col 54}{space 4}-4.378697{col 67}{space 3} 1.894768
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-1.244683{col 26}{space 2} 1.507359{col 37}{space 1}   -0.83{col 46}{space 3}0.422{col 54}{space 4}-4.457543{col 67}{space 3} 1.968177
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-1.745016{col 26}{space 2} 1.776855{col 37}{space 1}   -0.98{col 46}{space 3}0.342{col 54}{space 4}-5.532294{col 67}{space 3} 2.042262
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-1.742888{col 26}{space 2} 1.800604{col 37}{space 1}   -0.97{col 46}{space 3}0.348{col 54}{space 4}-5.580784{col 67}{space 3} 2.095008
{txt}{space 8}626  {c |}{col 14}{res}{space 2} -1.45127{col 26}{space 2} 1.843428{col 37}{space 1}   -0.79{col 46}{space 3}0.443{col 54}{space 4}-5.380444{col 67}{space 3} 2.477904
{txt}{space 8}627  {c |}{col 14}{res}{space 2}  -1.8589{col 26}{space 2} 1.829147{col 37}{space 1}   -1.02{col 46}{space 3}0.326{col 54}{space 4}-5.757634{col 67}{space 3} 2.039834
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-2.313964{col 26}{space 2} 1.899189{col 37}{space 1}   -1.22{col 46}{space 3}0.242{col 54}{space 4}-6.361989{col 67}{space 3} 1.734061
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-1.928868{col 26}{space 2}  1.73058{col 37}{space 1}   -1.11{col 46}{space 3}0.283{col 54}{space 4}-5.617511{col 67}{space 3} 1.759775
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-1.470188{col 26}{space 2} 1.726902{col 37}{space 1}   -0.85{col 46}{space 3}0.408{col 54}{space 4}-5.150992{col 67}{space 3} 2.210616
{txt}{space 8}631  {c |}{col 14}{res}{space 2} -2.28422{col 26}{space 2}  1.88048{col 37}{space 1}   -1.21{col 46}{space 3}0.243{col 54}{space 4}-6.292367{col 67}{space 3} 1.723928
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-1.773174{col 26}{space 2} 1.820231{col 37}{space 1}   -0.97{col 46}{space 3}0.345{col 54}{space 4}-5.652905{col 67}{space 3} 2.106556
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-1.311698{col 26}{space 2} 1.634529{col 37}{space 1}   -0.80{col 46}{space 3}0.435{col 54}{space 4}-4.795616{col 67}{space 3} 2.172219
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-1.800607{col 26}{space 2} 1.750882{col 37}{space 1}   -1.03{col 46}{space 3}0.320{col 54}{space 4}-5.532525{col 67}{space 3} 1.931311
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-1.533287{col 26}{space 2}  1.73157{col 37}{space 1}   -0.89{col 46}{space 3}0.390{col 54}{space 4}-5.224041{col 67}{space 3} 2.157468
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-1.951734{col 26}{space 2} 2.005972{col 37}{space 1}   -0.97{col 46}{space 3}0.346{col 54}{space 4}-6.227362{col 67}{space 3} 2.323893
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-2.350396{col 26}{space 2}  1.98514{col 37}{space 1}   -1.18{col 46}{space 3}0.255{col 54}{space 4} -6.58162{col 67}{space 3} 1.880829
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-1.388698{col 26}{space 2} 1.897326{col 37}{space 1}   -0.73{col 46}{space 3}0.475{col 54}{space 4}-5.432753{col 67}{space 3} 2.655357
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-1.749828{col 26}{space 2} 1.999373{col 37}{space 1}   -0.88{col 46}{space 3}0.395{col 54}{space 4}-6.011391{col 67}{space 3} 2.511735
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-1.579093{col 26}{space 2} 1.912559{col 37}{space 1}   -0.83{col 46}{space 3}0.422{col 54}{space 4}-5.655616{col 67}{space 3} 2.497431
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-2.225868{col 26}{space 2} 2.006688{col 37}{space 1}   -1.11{col 46}{space 3}0.285{col 54}{space 4}-6.503023{col 67}{space 3} 2.051287
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-2.310833{col 26}{space 2} 2.064904{col 37}{space 1}   -1.12{col 46}{space 3}0.281{col 54}{space 4}-6.712072{col 67}{space 3} 2.090405
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-2.171899{col 26}{space 2} 2.011048{col 37}{space 1}   -1.08{col 46}{space 3}0.297{col 54}{space 4}-6.458346{col 67}{space 3} 2.114548
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-2.478781{col 26}{space 2} 2.042316{col 37}{space 1}   -1.21{col 46}{space 3}0.244{col 54}{space 4}-6.831876{col 67}{space 3} 1.874313
{txt}{space 8}645  {c |}{col 14}{res}{space 2}-1.660386{col 26}{space 2} 2.242094{col 37}{space 1}   -0.74{col 46}{space 3}0.470{col 54}{space 4}-6.439296{col 67}{space 3} 3.118525
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-2.024753{col 26}{space 2} 2.297286{col 37}{space 1}   -0.88{col 46}{space 3}0.392{col 54}{space 4}-6.921302{col 67}{space 3} 2.871796
{txt}{space 8}647  {c |}{col 14}{res}{space 2}-1.885465{col 26}{space 2} 2.306669{col 37}{space 1}   -0.82{col 46}{space 3}0.426{col 54}{space 4}-6.802014{col 67}{space 3} 3.031084
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-1.765412{col 26}{space 2} 2.329499{col 37}{space 1}   -0.76{col 46}{space 3}0.460{col 54}{space 4}-6.730622{col 67}{space 3} 3.199797
{txt}{space 8}649  {c |}{col 14}{res}{space 2}-1.520529{col 26}{space 2} 2.296713{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-6.415857{col 67}{space 3}   3.3748
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-2.096126{col 26}{space 2} 2.335785{col 37}{space 1}   -0.90{col 46}{space 3}0.384{col 54}{space 4}-7.074735{col 67}{space 3} 2.882483
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-2.242933{col 26}{space 2} 2.406086{col 37}{space 1}   -0.93{col 46}{space 3}0.366{col 54}{space 4}-7.371385{col 67}{space 3} 2.885518
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-2.083548{col 26}{space 2} 2.139702{col 37}{space 1}   -0.97{col 46}{space 3}0.346{col 54}{space 4}-6.644213{col 67}{space 3} 2.477118
{txt}{space 8}653  {c |}{col 14}{res}{space 2}-1.344477{col 26}{space 2} 2.338522{col 37}{space 1}   -0.57{col 46}{space 3}0.574{col 54}{space 4}-6.328918{col 67}{space 3} 3.639965
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-1.741553{col 26}{space 2} 2.276248{col 37}{space 1}   -0.77{col 46}{space 3}0.456{col 54}{space 4}-6.593261{col 67}{space 3} 3.110154
{txt}{space 8}655  {c |}{col 14}{res}{space 2}-1.736628{col 26}{space 2}  2.28548{col 37}{space 1}   -0.76{col 46}{space 3}0.459{col 54}{space 4}-6.608013{col 67}{space 3} 3.134756
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-1.896507{col 26}{space 2} 2.415773{col 37}{space 1}   -0.79{col 46}{space 3}0.445{col 54}{space 4}-7.045605{col 67}{space 3} 3.252592
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-2.085198{col 26}{space 2} 2.342177{col 37}{space 1}   -0.89{col 46}{space 3}0.387{col 54}{space 4} -7.07743{col 67}{space 3} 2.907034
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-2.407208{col 26}{space 2}  2.45447{col 37}{space 1}   -0.98{col 46}{space 3}0.342{col 54}{space 4}-7.638788{col 67}{space 3} 2.824371
{txt}{space 8}659  {c |}{col 14}{res}{space 2} -1.86499{col 26}{space 2} 2.328116{col 37}{space 1}   -0.80{col 46}{space 3}0.436{col 54}{space 4}-6.827251{col 67}{space 3} 3.097271
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-2.397556{col 26}{space 2} 2.456406{col 37}{space 1}   -0.98{col 46}{space 3}0.345{col 54}{space 4}-7.633262{col 67}{space 3}  2.83815
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-2.362029{col 26}{space 2} 2.381267{col 37}{space 1}   -0.99{col 46}{space 3}0.337{col 54}{space 4}-7.437578{col 67}{space 3}  2.71352
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-1.832589{col 26}{space 2} 2.526907{col 37}{space 1}   -0.73{col 46}{space 3}0.479{col 54}{space 4}-7.218564{col 67}{space 3} 3.553385
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-2.373911{col 26}{space 2} 2.522015{col 37}{space 1}   -0.94{col 46}{space 3}0.361{col 54}{space 4}-7.749459{col 67}{space 3} 3.001636
{txt}{space 8}664  {c |}{col 14}{res}{space 2} -2.15103{col 26}{space 2}  2.60133{col 37}{space 1}   -0.83{col 46}{space 3}0.421{col 54}{space 4}-7.695634{col 67}{space 3} 3.393574
{txt}{space 8}665  {c |}{col 14}{res}{space 2} -1.77671{col 26}{space 2} 2.480553{col 37}{space 1}   -0.72{col 46}{space 3}0.485{col 54}{space 4}-7.063885{col 67}{space 3} 3.510464
{txt}{space 8}666  {c |}{col 14}{res}{space 2}-1.820735{col 26}{space 2} 2.515122{col 37}{space 1}   -0.72{col 46}{space 3}0.480{col 54}{space 4}-7.181591{col 67}{space 3} 3.540122
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-1.982127{col 26}{space 2} 2.469386{col 37}{space 1}   -0.80{col 46}{space 3}0.435{col 54}{space 4}-7.245498{col 67}{space 3} 3.281245
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-2.120377{col 26}{space 2} 2.521306{col 37}{space 1}   -0.84{col 46}{space 3}0.414{col 54}{space 4}-7.494412{col 67}{space 3} 3.253659
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-2.004888{col 26}{space 2} 2.511716{col 37}{space 1}   -0.80{col 46}{space 3}0.437{col 54}{space 4}-7.358484{col 67}{space 3} 3.348708
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-2.530334{col 26}{space 2} 2.477251{col 37}{space 1}   -1.02{col 46}{space 3}0.323{col 54}{space 4}-7.810469{col 67}{space 3} 2.749802
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-2.239047{col 26}{space 2}  2.55429{col 37}{space 1}   -0.88{col 46}{space 3}0.395{col 54}{space 4}-7.683387{col 67}{space 3} 3.205292
{txt}{space 8}672  {c |}{col 14}{res}{space 2}-2.472803{col 26}{space 2} 2.594481{col 37}{space 1}   -0.95{col 46}{space 3}0.356{col 54}{space 4}-8.002809{col 67}{space 3} 3.057203
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-2.340948{col 26}{space 2} 2.596423{col 37}{space 1}   -0.90{col 46}{space 3}0.382{col 54}{space 4}-7.875093{col 67}{space 3} 3.193197
{txt}{space 8}674  {c |}{col 14}{res}{space 2}-2.175734{col 26}{space 2} 2.631063{col 37}{space 1}   -0.83{col 46}{space 3}0.421{col 54}{space 4}-7.783712{col 67}{space 3} 3.432245
{txt}{space 8}675  {c |}{col 14}{res}{space 2}-1.813977{col 26}{space 2} 2.654392{col 37}{space 1}   -0.68{col 46}{space 3}0.505{col 54}{space 4}-7.471679{col 67}{space 3} 3.843726
{txt}{space 8}676  {c |}{col 14}{res}{space 2}-1.753801{col 26}{space 2} 2.678036{col 37}{space 1}   -0.65{col 46}{space 3}0.522{col 54}{space 4}-7.461899{col 67}{space 3} 3.954297
{txt}{space 8}677  {c |}{col 14}{res}{space 2}-2.068605{col 26}{space 2} 2.633398{col 37}{space 1}   -0.79{col 46}{space 3}0.444{col 54}{space 4} -7.68156{col 67}{space 3} 3.544349
{txt}{space 8}678  {c |}{col 14}{res}{space 2} -1.84246{col 26}{space 2} 2.637161{col 37}{space 1}   -0.70{col 46}{space 3}0.495{col 54}{space 4}-7.463435{col 67}{space 3} 3.778516
{txt}{space 8}679  {c |}{col 14}{res}{space 2}-1.745257{col 26}{space 2} 2.623902{col 37}{space 1}   -0.67{col 46}{space 3}0.516{col 54}{space 4}-7.337972{col 67}{space 3} 3.847457
{txt}{space 8}680  {c |}{col 14}{res}{space 2}-1.694127{col 26}{space 2} 2.692705{col 37}{space 1}   -0.63{col 46}{space 3}0.539{col 54}{space 4}-7.433491{col 67}{space 3} 4.045238
{txt}{space 8}681  {c |}{col 14}{res}{space 2}-1.682504{col 26}{space 2} 2.608955{col 37}{space 1}   -0.64{col 46}{space 3}0.529{col 54}{space 4}-7.243361{col 67}{space 3} 3.878353
{txt}{space 8}682  {c |}{col 14}{res}{space 2}-2.022354{col 26}{space 2}  2.52683{col 37}{space 1}   -0.80{col 46}{space 3}0.436{col 54}{space 4}-7.408165{col 67}{space 3} 3.363457
{txt}{space 8}683  {c |}{col 14}{res}{space 2}-2.180321{col 26}{space 2} 2.723572{col 37}{space 1}   -0.80{col 46}{space 3}0.436{col 54}{space 4}-7.985477{col 67}{space 3} 3.624835
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-2.169822{col 26}{space 2} 2.896786{col 37}{space 1}   -0.75{col 46}{space 3}0.465{col 54}{space 4}-8.344175{col 67}{space 3}  4.00453
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-2.350072{col 26}{space 2} 2.791368{col 37}{space 1}   -0.84{col 46}{space 3}0.413{col 54}{space 4}-8.299732{col 67}{space 3} 3.599587
{txt}{space 8}686  {c |}{col 14}{res}{space 2}-2.356398{col 26}{space 2} 2.871068{col 37}{space 1}   -0.82{col 46}{space 3}0.425{col 54}{space 4}-8.475935{col 67}{space 3} 3.763138
{txt}{space 8}687  {c |}{col 14}{res}{space 2}-2.014197{col 26}{space 2} 2.772453{col 37}{space 1}   -0.73{col 46}{space 3}0.479{col 54}{space 4} -7.92354{col 67}{space 3} 3.895146
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-2.308395{col 26}{space 2} 2.879372{col 37}{space 1}   -0.80{col 46}{space 3}0.435{col 54}{space 4}-8.445632{col 67}{space 3} 3.828841
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-2.329626{col 26}{space 2} 2.885304{col 37}{space 1}   -0.81{col 46}{space 3}0.432{col 54}{space 4}-8.479506{col 67}{space 3} 3.820255
{txt}{space 8}690  {c |}{col 14}{res}{space 2}-2.613233{col 26}{space 2} 2.878925{col 37}{space 1}   -0.91{col 46}{space 3}0.378{col 54}{space 4}-8.749516{col 67}{space 3} 3.523049
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-2.467659{col 26}{space 2} 2.777502{col 37}{space 1}   -0.89{col 46}{space 3}0.388{col 54}{space 4}-8.387765{col 67}{space 3} 3.452447
{txt}{space 8}692  {c |}{col 14}{res}{space 2}-2.289161{col 26}{space 2} 2.861638{col 37}{space 1}   -0.80{col 46}{space 3}0.436{col 54}{space 4}-8.388597{col 67}{space 3} 3.810274
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-2.381657{col 26}{space 2} 2.806668{col 37}{space 1}   -0.85{col 46}{space 3}0.409{col 54}{space 4}-8.363929{col 67}{space 3} 3.600615
{txt}{space 8}694  {c |}{col 14}{res}{space 2}-2.296933{col 26}{space 2} 2.917751{col 37}{space 1}   -0.79{col 46}{space 3}0.443{col 54}{space 4}-8.515972{col 67}{space 3} 3.922107
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-2.507569{col 26}{space 2} 2.862475{col 37}{space 1}   -0.88{col 46}{space 3}0.395{col 54}{space 4} -8.60879{col 67}{space 3} 3.593651
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-2.415922{col 26}{space 2} 2.975391{col 37}{space 1}   -0.81{col 46}{space 3}0.430{col 54}{space 4}-8.757818{col 67}{space 3} 3.925974
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-2.456149{col 26}{space 2} 2.957068{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4}-8.758989{col 67}{space 3} 3.846692
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-2.398057{col 26}{space 2} 2.969927{col 37}{space 1}   -0.81{col 46}{space 3}0.432{col 54}{space 4}-8.728306{col 67}{space 3} 3.932191
{txt}{space 8}699  {c |}{col 14}{res}{space 2}-2.605013{col 26}{space 2} 2.952803{col 37}{space 1}   -0.88{col 46}{space 3}0.392{col 54}{space 4}-8.898763{col 67}{space 3} 3.688736
{txt}{space 8}700  {c |}{col 14}{res}{space 2} -2.32892{col 26}{space 2} 2.897117{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4}-8.503979{col 67}{space 3} 3.846139
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-2.693398{col 26}{space 2} 2.939143{col 37}{space 1}   -0.92{col 46}{space 3}0.374{col 54}{space 4}-8.958033{col 67}{space 3} 3.571236
{txt}{space 8}702  {c |}{col 14}{res}{space 2} -2.89836{col 26}{space 2} 3.073572{col 37}{space 1}   -0.94{col 46}{space 3}0.361{col 54}{space 4}-9.449523{col 67}{space 3} 3.652804
{txt}{space 8}703  {c |}{col 14}{res}{space 2}-2.494246{col 26}{space 2}  2.93478{col 37}{space 1}   -0.85{col 46}{space 3}0.409{col 54}{space 4}-8.749581{col 67}{space 3} 3.761089
{txt}{space 8}704  {c |}{col 14}{res}{space 2} -2.24955{col 26}{space 2} 2.903652{col 37}{space 1}   -0.77{col 46}{space 3}0.451{col 54}{space 4}-8.438537{col 67}{space 3} 3.939438
{txt}{space 8}705  {c |}{col 14}{res}{space 2}-2.186484{col 26}{space 2} 2.922868{col 37}{space 1}   -0.75{col 46}{space 3}0.466{col 54}{space 4} -8.41643{col 67}{space 3} 4.043462
{txt}{space 8}706  {c |}{col 14}{res}{space 2} -2.27171{col 26}{space 2} 2.949873{col 37}{space 1}   -0.77{col 46}{space 3}0.453{col 54}{space 4}-8.559214{col 67}{space 3} 4.015795
{txt}{space 8}707  {c |}{col 14}{res}{space 2}-2.395917{col 26}{space 2} 3.043957{col 37}{space 1}   -0.79{col 46}{space 3}0.443{col 54}{space 4}-8.883958{col 67}{space 3} 4.092124
{txt}{space 8}708  {c |}{col 14}{res}{space 2}-2.101769{col 26}{space 2} 3.209788{col 37}{space 1}   -0.65{col 46}{space 3}0.523{col 54}{space 4} -8.94327{col 67}{space 3} 4.739731
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-2.690874{col 26}{space 2} 3.339397{col 37}{space 1}   -0.81{col 46}{space 3}0.433{col 54}{space 4} -9.80863{col 67}{space 3} 4.426881
{txt}{space 8}710  {c |}{col 14}{res}{space 2}-2.377673{col 26}{space 2} 3.152456{col 37}{space 1}   -0.75{col 46}{space 3}0.462{col 54}{space 4}-9.096974{col 67}{space 3} 4.341627
{txt}{space 8}711  {c |}{col 14}{res}{space 2} -2.05619{col 26}{space 2} 3.082495{col 37}{space 1}   -0.67{col 46}{space 3}0.515{col 54}{space 4}-8.626371{col 67}{space 3} 4.513992
{txt}{space 8}712  {c |}{col 14}{res}{space 2}-2.469288{col 26}{space 2} 3.166258{col 37}{space 1}   -0.78{col 46}{space 3}0.448{col 54}{space 4}-9.218007{col 67}{space 3} 4.279431
{txt}{space 8}713  {c |}{col 14}{res}{space 2} -2.00806{col 26}{space 2} 3.114087{col 37}{space 1}   -0.64{col 46}{space 3}0.529{col 54}{space 4} -8.64558{col 67}{space 3}  4.62946
{txt}{space 8}714  {c |}{col 14}{res}{space 2}-2.352064{col 26}{space 2} 3.177213{col 37}{space 1}   -0.74{col 46}{space 3}0.471{col 54}{space 4}-9.124132{col 67}{space 3} 4.420005
{txt}{space 8}715  {c |}{col 14}{res}{space 2}-2.337191{col 26}{space 2} 3.107741{col 37}{space 1}   -0.75{col 46}{space 3}0.464{col 54}{space 4}-8.961183{col 67}{space 3} 4.286801
{txt}{space 8}716  {c |}{col 14}{res}{space 2}-2.434695{col 26}{space 2} 3.130977{col 37}{space 1}   -0.78{col 46}{space 3}0.449{col 54}{space 4}-9.108214{col 67}{space 3} 4.238825
{txt}{space 8}717  {c |}{col 14}{res}{space 2}-2.587886{col 26}{space 2} 3.152125{col 37}{space 1}   -0.82{col 46}{space 3}0.425{col 54}{space 4}-9.306481{col 67}{space 3} 4.130708
{txt}{space 8}718  {c |}{col 14}{res}{space 2}-2.210975{col 26}{space 2} 3.125962{col 37}{space 1}   -0.71{col 46}{space 3}0.490{col 54}{space 4}-8.873805{col 67}{space 3} 4.451854
{txt}{space 8}719  {c |}{col 14}{res}{space 2}-2.351981{col 26}{space 2} 3.153243{col 37}{space 1}   -0.75{col 46}{space 3}0.467{col 54}{space 4}-9.072959{col 67}{space 3} 4.368997
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.920396{col 26}{space 2} .2844311{col 37}{space 1}    6.75{col 46}{space 3}0.000{col 54}{space 4} 1.314146{col 67}{space 3} 2.526647
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.149473{col 26}{space 2} 1.180859{col 37}{space 1}   -0.97{col 46}{space 3}0.346{col 54}{space 4}-3.666414{col 67}{space 3} 1.367468
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.649585{col 26}{space 2} 1.855067{col 37}{space 1}   -0.89{col 46}{space 3}0.388{col 54}{space 4}-5.603567{col 67}{space 3} 2.304396
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-2.021063{col 26}{space 2} .0384899{col 37}{space 1}  -52.51{col 46}{space 3}0.000{col 54}{space 4}-2.103102{col 67}{space 3}-1.939024
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2}   .39182{col 26}{space 2} .2113845{col 37}{space 1}    1.85{col 46}{space 3}0.084{col 54}{space 4}-.0587355{col 67}{space 3} .8423755
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-.4367306{col 26}{space 2}  1.96724{col 37}{space 1}   -0.22{col 46}{space 3}0.827{col 54}{space 4}-4.629803{col 67}{space 3} 3.756342
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .8096999{col 26}{space 2} .8917988{col 37}{space 1}    0.91{col 46}{space 3}0.378{col 54}{space 4}-1.091124{col 67}{space 3} 2.710524
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-1.947313{col 26}{space 2} .8115876{col 37}{space 1}   -2.40{col 46}{space 3}0.030{col 54}{space 4}-3.677171{col 67}{space 3}-.2174555
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-4.784242{col 26}{space 2} .6541116{col 37}{space 1}   -7.31{col 46}{space 3}0.000{col 54}{space 4}-6.178448{col 67}{space 3}-3.390037
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-.8243748{col 26}{space 2} 1.120556{col 37}{space 1}   -0.74{col 46}{space 3}0.473{col 54}{space 4}-3.212783{col 67}{space 3} 1.564034
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 1.143519{col 26}{space 2} .5326061{col 37}{space 1}    2.15{col 46}{space 3}0.049{col 54}{space 4}  .008296{col 67}{space 3} 2.278742
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}-.2729668{col 26}{space 2} 1.222812{col 37}{space 1}   -0.22{col 46}{space 3}0.826{col 54}{space 4}-2.879329{col 67}{space 3} 2.333395
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.972663{col 26}{space 2} 1.274352{col 37}{space 1}    2.33{col 46}{space 3}0.034{col 54}{space 4} .2564464{col 67}{space 3}  5.68888
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} 5.668863{col 26}{space 2} 5.127251{col 37}{space 1}    1.11{col 46}{space 3}0.286{col 54}{space 4}-5.259614{col 67}{space 3} 16.59734
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} .4692568{col 26}{space 2} 1.800973{col 37}{space 1}    0.26{col 46}{space 3}0.798{col 54}{space 4}-3.369426{col 67}{space 3}  4.30794
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-30.46999{col 26}{space 2} 22.27054{col 37}{space 1}   -1.37{col 46}{space 3}0.191{col 54}{space 4}-77.93852{col 67}{space 3} 16.99855
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 1133 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -8.0028
{col 25}{txt}Prob>|t| = {res}    0.0115

95%{txt} confidence set for null hypothesis expression: [{res}-4.485{txt}, {res}-2.971{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 28}t(15) = {res}    1.2408
{col 25}{txt}Prob>|t| = {res}    0.2247

95%{txt} confidence set for null hypothesis expression: [{res}-1.451{txt}, {res}6.785{txt}]
{res}
Warning: 8 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 28}t(15) = {res}    1.5109
{col 25}{txt}Prob>|t| = {res}    0.1873

95%{txt} confidence set for null hypothesis expression: [{res}-.4605{txt}, {res}1.604{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   -1.3731
{col 25}{txt}Prob>|t| = {res}    0.1788

95%{txt} confidence set for null hypothesis expression: [{res}-86.68{txt}, {res}15.1{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.7285
                                                {txt}Root MSE          =    {res} 1.2898

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}two {c |}{col 14}{res}{space 2}-2.212191{col 26}{space 2} .3855162{col 37}{space 1}   -5.74{col 46}{space 3}0.000{col 54}{space 4}-3.033899{col 67}{space 3}-1.390483
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 1.297859{col 26}{space 2} 1.506051{col 37}{space 1}    0.86{col 46}{space 3}0.402{col 54}{space 4}-1.912213{col 67}{space 3} 4.507931
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .4265272{col 26}{space 2} .4076285{col 37}{space 1}    1.05{col 46}{space 3}0.312{col 54}{space 4}-.4423124{col 67}{space 3} 1.295367
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2721267{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4} -.633163{col 67}{space 3} .5268858
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2833452{col 37}{space 1}   -1.73{col 46}{space 3}0.103{col 54}{space 4}-1.095522{col 67}{space 3} .1123505
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3040009{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-.8491256{col 67}{space 3} .4467994
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2895211{col 37}{space 1}   -0.81{col 46}{space 3}0.433{col 54}{space 4}-.8501701{col 67}{space 3} .3840289
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2871265{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}-.5700453{col 67}{space 3} .6539459
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3467316{col 37}{space 1}    1.04{col 46}{space 3}0.316{col 54}{space 4}-.3795197{col 67}{space 3} 1.098562
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3868755{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-.6359824{col 67}{space 3} 1.013229
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3753808{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-.7275172{col 67}{space 3} .8726931
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2878324{col 37}{space 1}   -0.60{col 46}{space 3}0.558{col 54}{space 4}-.7860253{col 67}{space 3} .4409752
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2} .3202635{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6975036{col 67}{space 3} .6677473
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3222327{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7074919{col 67}{space 3} .6661535
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.6165682{col 26}{space 2} .3973081{col 37}{space 1}   -1.55{col 46}{space 3}0.142{col 54}{space 4} -1.46341{col 67}{space 3}  .230274
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.2003847{col 26}{space 2} .4526647{col 37}{space 1}   -0.44{col 46}{space 3}0.664{col 54}{space 4}-1.165217{col 67}{space 3} .7644473
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.1817995{col 26}{space 2} .3970747{col 37}{space 1}   -0.46{col 46}{space 3}0.654{col 54}{space 4}-1.028144{col 67}{space 3} .6645453
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.4046127{col 26}{space 2} .4322687{col 37}{space 1}   -0.94{col 46}{space 3}0.364{col 54}{space 4}-1.325972{col 67}{space 3} .5167464
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.2975899{col 26}{space 2} .4520474{col 37}{space 1}   -0.66{col 46}{space 3}0.520{col 54}{space 4}-1.261106{col 67}{space 3} .6659264
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.4682623{col 26}{space 2} .4010975{col 37}{space 1}   -1.17{col 46}{space 3}0.261{col 54}{space 4}-1.323181{col 67}{space 3} .3866567
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .2586927{col 26}{space 2}  .467116{col 37}{space 1}    0.55{col 46}{space 3}0.588{col 54}{space 4}-.7369414{col 67}{space 3} 1.254327
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-1.024383{col 26}{space 2}  .406369{col 37}{space 1}   -2.52{col 46}{space 3}0.024{col 54}{space 4}-1.890538{col 67}{space 3}-.1582279
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-1.220147{col 26}{space 2} .4357918{col 37}{space 1}   -2.80{col 46}{space 3}0.013{col 54}{space 4}-2.149015{col 67}{space 3}-.2912782
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.8633401{col 26}{space 2} .6223574{col 37}{space 1}   -1.39{col 46}{space 3}0.186{col 54}{space 4}-2.189864{col 67}{space 3} .4631834
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.7167004{col 26}{space 2}  .550767{col 37}{space 1}   -1.30{col 46}{space 3}0.213{col 54}{space 4}-1.890632{col 67}{space 3} .4572316
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.4445338{col 26}{space 2} .6660664{col 37}{space 1}   -0.67{col 46}{space 3}0.515{col 54}{space 4}-1.864221{col 67}{space 3}  .975153
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-1.085885{col 26}{space 2} .7018568{col 37}{space 1}   -1.55{col 46}{space 3}0.143{col 54}{space 4}-2.581858{col 67}{space 3}  .410087
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.5377262{col 26}{space 2}  .795979{col 37}{space 1}   -0.68{col 46}{space 3}0.510{col 54}{space 4}-2.234315{col 67}{space 3} 1.158863
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.8269198{col 26}{space 2}  .796616{col 37}{space 1}   -1.04{col 46}{space 3}0.316{col 54}{space 4}-2.524867{col 67}{space 3} .8710269
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.6738557{col 26}{space 2} .7076913{col 37}{space 1}   -0.95{col 46}{space 3}0.356{col 54}{space 4}-2.182264{col 67}{space 3} .8345526
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.2104194{col 26}{space 2} .5653279{col 37}{space 1}   -0.37{col 46}{space 3}0.715{col 54}{space 4}-1.415387{col 67}{space 3} .9945484
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.3647096{col 26}{space 2} .6517723{col 37}{space 1}   -0.56{col 46}{space 3}0.584{col 54}{space 4}-1.753929{col 67}{space 3}  1.02451
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.3414903{col 26}{space 2} .6487952{col 37}{space 1}   -0.53{col 46}{space 3}0.606{col 54}{space 4}-1.724365{col 67}{space 3} 1.041384
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.4787974{col 26}{space 2} .6899047{col 37}{space 1}   -0.69{col 46}{space 3}0.498{col 54}{space 4}-1.949295{col 67}{space 3} .9916997
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.3126147{col 26}{space 2} .6959811{col 37}{space 1}   -0.45{col 46}{space 3}0.660{col 54}{space 4}-1.796063{col 67}{space 3} 1.170834
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.3869652{col 26}{space 2} .6274427{col 37}{space 1}   -0.62{col 46}{space 3}0.547{col 54}{space 4}-1.724328{col 67}{space 3} .9503972
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.4883468{col 26}{space 2} .6523618{col 37}{space 1}   -0.75{col 46}{space 3}0.466{col 54}{space 4}-1.878823{col 67}{space 3} .9021295
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.7079074{col 26}{space 2} .6980378{col 37}{space 1}   -1.01{col 46}{space 3}0.327{col 54}{space 4} -2.19574{col 67}{space 3} .7799251
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.5702418{col 26}{space 2} .8619612{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-2.407469{col 67}{space 3} 1.266985
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.3721193{col 26}{space 2} .7871725{col 37}{space 1}   -0.47{col 46}{space 3}0.643{col 54}{space 4}-2.049938{col 67}{space 3} 1.305699
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.4436408{col 26}{space 2} .7983395{col 37}{space 1}   -0.56{col 46}{space 3}0.587{col 54}{space 4}-2.145261{col 67}{space 3}  1.25798
{txt}{space 8}591  {c |}{col 14}{res}{space 2} -1.02861{col 26}{space 2} .8256959{col 37}{space 1}   -1.25{col 46}{space 3}0.232{col 54}{space 4} -2.78854{col 67}{space 3} .7313189
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.4467267{col 26}{space 2}  .712931{col 37}{space 1}   -0.63{col 46}{space 3}0.540{col 54}{space 4}-1.966303{col 67}{space 3}  1.07285
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-.1457372{col 26}{space 2} .8946057{col 37}{space 1}   -0.16{col 46}{space 3}0.873{col 54}{space 4}-2.052544{col 67}{space 3}  1.76107
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-.1355418{col 26}{space 2} .9088679{col 37}{space 1}   -0.15{col 46}{space 3}0.883{col 54}{space 4}-2.072748{col 67}{space 3} 1.801664
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-.1405548{col 26}{space 2} .9609509{col 37}{space 1}   -0.15{col 46}{space 3}0.886{col 54}{space 4}-2.188773{col 67}{space 3} 1.907664
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.4363642{col 26}{space 2} .7907906{col 37}{space 1}   -0.55{col 46}{space 3}0.589{col 54}{space 4}-2.121894{col 67}{space 3} 1.249166
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.4354385{col 26}{space 2} .8571356{col 37}{space 1}   -0.51{col 46}{space 3}0.619{col 54}{space 4} -2.26238{col 67}{space 3} 1.391503
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.3222199{col 26}{space 2} .7897926{col 37}{space 1}   -0.41{col 46}{space 3}0.689{col 54}{space 4}-2.005623{col 67}{space 3} 1.361183
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.5279324{col 26}{space 2} .7673214{col 37}{space 1}   -0.69{col 46}{space 3}0.502{col 54}{space 4}-2.163439{col 67}{space 3} 1.107575
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.4673358{col 26}{space 2} 1.047495{col 37}{space 1}   -0.45{col 46}{space 3}0.662{col 54}{space 4}-2.700018{col 67}{space 3} 1.765347
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-.7103663{col 26}{space 2} .9994136{col 37}{space 1}   -0.71{col 46}{space 3}0.488{col 54}{space 4}-2.840566{col 67}{space 3} 1.419833
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.2734136{col 26}{space 2}  1.08116{col 37}{space 1}   -0.25{col 46}{space 3}0.804{col 54}{space 4}-2.577852{col 67}{space 3} 2.031025
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.8614677{col 26}{space 2} .9941433{col 37}{space 1}   -0.87{col 46}{space 3}0.400{col 54}{space 4}-2.980434{col 67}{space 3} 1.257499
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-.5852089{col 26}{space 2} .9100179{col 37}{space 1}   -0.64{col 46}{space 3}0.530{col 54}{space 4}-2.524866{col 67}{space 3} 1.354448
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-.1975118{col 26}{space 2} .9748024{col 37}{space 1}   -0.20{col 46}{space 3}0.842{col 54}{space 4}-2.275254{col 67}{space 3}  1.88023
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-.5942129{col 26}{space 2} 1.108225{col 37}{space 1}   -0.54{col 46}{space 3}0.600{col 54}{space 4}-2.956338{col 67}{space 3} 1.767913
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-.2769257{col 26}{space 2} .9619068{col 37}{space 1}   -0.29{col 46}{space 3}0.777{col 54}{space 4}-2.327181{col 67}{space 3}  1.77333
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-.4552153{col 26}{space 2} .9358811{col 37}{space 1}   -0.49{col 46}{space 3}0.634{col 54}{space 4}-2.449999{col 67}{space 3} 1.539568
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-.4872353{col 26}{space 2} 1.038798{col 37}{space 1}   -0.47{col 46}{space 3}0.646{col 54}{space 4} -2.70138{col 67}{space 3} 1.726909
{txt}{space 8}610  {c |}{col 14}{res}{space 2}-.1272908{col 26}{space 2} 1.069116{col 37}{space 1}   -0.12{col 46}{space 3}0.907{col 54}{space 4}-2.406057{col 67}{space 3} 2.151475
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .1264583{col 26}{space 2} .9245036{col 37}{space 1}    0.14{col 46}{space 3}0.893{col 54}{space 4}-1.844075{col 67}{space 3} 2.096991
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-.4918578{col 26}{space 2} 1.226264{col 37}{space 1}   -0.40{col 46}{space 3}0.694{col 54}{space 4}-3.105577{col 67}{space 3} 2.121861
{txt}{space 8}613  {c |}{col 14}{res}{space 2}-.4335107{col 26}{space 2} 1.314903{col 37}{space 1}   -0.33{col 46}{space 3}0.746{col 54}{space 4}-3.236161{col 67}{space 3} 2.369139
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-.5157554{col 26}{space 2} 1.251514{col 37}{space 1}   -0.41{col 46}{space 3}0.686{col 54}{space 4}-3.183294{col 67}{space 3} 2.151783
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-.3416021{col 26}{space 2} 1.195969{col 37}{space 1}   -0.29{col 46}{space 3}0.779{col 54}{space 4}-2.890751{col 67}{space 3} 2.207546
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-.4477252{col 26}{space 2} 1.147789{col 37}{space 1}   -0.39{col 46}{space 3}0.702{col 54}{space 4} -2.89418{col 67}{space 3} 1.998729
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-.9182157{col 26}{space 2} 1.360451{col 37}{space 1}   -0.67{col 46}{space 3}0.510{col 54}{space 4}-3.817948{col 67}{space 3} 1.981517
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-.5578701{col 26}{space 2} 1.177798{col 37}{space 1}   -0.47{col 46}{space 3}0.643{col 54}{space 4}-3.068287{col 67}{space 3} 1.952546
{txt}{space 8}619  {c |}{col 14}{res}{space 2}-.0845633{col 26}{space 2} 1.245568{col 37}{space 1}   -0.07{col 46}{space 3}0.947{col 54}{space 4}-2.739429{col 67}{space 3} 2.570302
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-.3124211{col 26}{space 2} 1.431131{col 37}{space 1}   -0.22{col 46}{space 3}0.830{col 54}{space 4}-3.362804{col 67}{space 3} 2.737962
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-.2075713{col 26}{space 2} 1.210096{col 37}{space 1}   -0.17{col 46}{space 3}0.866{col 54}{space 4} -2.78683{col 67}{space 3} 2.371687
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-.3998448{col 26}{space 2} 1.133329{col 37}{space 1}   -0.35{col 46}{space 3}0.729{col 54}{space 4}-2.815478{col 67}{space 3} 2.015789
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-.4025633{col 26}{space 2} 1.191957{col 37}{space 1}   -0.34{col 46}{space 3}0.740{col 54}{space 4}-2.943159{col 67}{space 3} 2.138032
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-.7304645{col 26}{space 2} 1.446278{col 37}{space 1}   -0.51{col 46}{space 3}0.621{col 54}{space 4}-3.813132{col 67}{space 3} 2.352203
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-.7283366{col 26}{space 2} 1.349753{col 37}{space 1}   -0.54{col 46}{space 3}0.597{col 54}{space 4}-3.605267{col 67}{space 3} 2.148594
{txt}{space 8}626  {c |}{col 14}{res}{space 2}-.4367181{col 26}{space 2} 1.512383{col 37}{space 1}   -0.29{col 46}{space 3}0.777{col 54}{space 4}-3.660286{col 67}{space 3}  2.78685
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-.8443486{col 26}{space 2} 1.433536{col 37}{space 1}   -0.59{col 46}{space 3}0.565{col 54}{space 4}-3.899858{col 67}{space 3} 2.211161
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-1.299412{col 26}{space 2} 1.437049{col 37}{space 1}   -0.90{col 46}{space 3}0.380{col 54}{space 4} -4.36241{col 67}{space 3} 1.763585
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-.9143163{col 26}{space 2} 1.350547{col 37}{space 1}   -0.68{col 46}{space 3}0.509{col 54}{space 4} -3.79294{col 67}{space 3} 1.964307
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-.4556363{col 26}{space 2}  1.34736{col 37}{space 1}   -0.34{col 46}{space 3}0.740{col 54}{space 4}-3.327467{col 67}{space 3} 2.416194
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-1.269668{col 26}{space 2} 1.463814{col 37}{space 1}   -0.87{col 46}{space 3}0.399{col 54}{space 4}-4.389713{col 67}{space 3} 1.850377
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-.7586225{col 26}{space 2} 1.373728{col 37}{space 1}   -0.55{col 46}{space 3}0.589{col 54}{space 4}-3.686655{col 67}{space 3}  2.16941
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-.2971468{col 26}{space 2} 1.325948{col 37}{space 1}   -0.22{col 46}{space 3}0.826{col 54}{space 4}-3.123338{col 67}{space 3} 2.529045
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-.7860556{col 26}{space 2} 1.381797{col 37}{space 1}   -0.57{col 46}{space 3}0.578{col 54}{space 4}-3.731287{col 67}{space 3} 2.159176
{txt}{space 8}635  {c |}{col 14}{res}{space 2} -.518735{col 26}{space 2} 1.340487{col 37}{space 1}   -0.39{col 46}{space 3}0.704{col 54}{space 4}-3.375916{col 67}{space 3} 2.338446
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-.8191733{col 26}{space 2} 1.575573{col 37}{space 1}   -0.52{col 46}{space 3}0.611{col 54}{space 4}-4.177427{col 67}{space 3} 2.539081
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-1.217834{col 26}{space 2}  1.55788{col 37}{space 1}   -0.78{col 46}{space 3}0.447{col 54}{space 4}-4.538376{col 67}{space 3} 2.102708
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-.2561365{col 26}{space 2} 1.507103{col 37}{space 1}   -0.17{col 46}{space 3}0.867{col 54}{space 4}-3.468451{col 67}{space 3} 2.956178
{txt}{space 8}639  {c |}{col 14}{res}{space 2} -.617267{col 26}{space 2} 1.597759{col 37}{space 1}   -0.39{col 46}{space 3}0.705{col 54}{space 4} -4.02281{col 67}{space 3} 2.788276
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-.4465316{col 26}{space 2} 1.532291{col 37}{space 1}   -0.29{col 46}{space 3}0.775{col 54}{space 4}-3.712532{col 67}{space 3} 2.819468
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-1.093307{col 26}{space 2} 1.655763{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-4.622481{col 67}{space 3} 2.435867
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-1.178272{col 26}{space 2}  1.82376{col 37}{space 1}   -0.65{col 46}{space 3}0.528{col 54}{space 4}-5.065525{col 67}{space 3} 2.708981
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-1.039338{col 26}{space 2} 1.709186{col 37}{space 1}   -0.61{col 46}{space 3}0.552{col 54}{space 4}-4.682381{col 67}{space 3} 2.603705
{txt}{space 8}644  {c |}{col 14}{res}{space 2} -1.34622{col 26}{space 2} 1.897424{col 37}{space 1}   -0.71{col 46}{space 3}0.489{col 54}{space 4}-5.390484{col 67}{space 3} 2.698044
{txt}{space 8}645  {c |}{col 14}{res}{space 2}-.5278246{col 26}{space 2} 2.093293{col 37}{space 1}   -0.25{col 46}{space 3}0.804{col 54}{space 4}-4.989572{col 67}{space 3} 3.933923
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-.8921922{col 26}{space 2} 2.095514{col 37}{space 1}   -0.43{col 46}{space 3}0.676{col 54}{space 4}-5.358676{col 67}{space 3} 3.574291
{txt}{space 8}647  {c |}{col 14}{res}{space 2} -.752904{col 26}{space 2} 2.120289{col 37}{space 1}   -0.36{col 46}{space 3}0.727{col 54}{space 4}-5.272193{col 67}{space 3} 3.766385
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-.5008081{col 26}{space 2} 1.953138{col 37}{space 1}   -0.26{col 46}{space 3}0.801{col 54}{space 4}-4.663824{col 67}{space 3} 3.662207
{txt}{space 8}649  {c |}{col 14}{res}{space 2}-.2559247{col 26}{space 2} 2.018772{col 37}{space 1}   -0.13{col 46}{space 3}0.901{col 54}{space 4}-4.558836{col 67}{space 3} 4.046986
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-.8315221{col 26}{space 2} 2.023645{col 37}{space 1}   -0.41{col 46}{space 3}0.687{col 54}{space 4}-5.144818{col 67}{space 3} 3.481774
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-.9783293{col 26}{space 2} 2.152188{col 37}{space 1}   -0.45{col 46}{space 3}0.656{col 54}{space 4} -5.56561{col 67}{space 3} 3.608951
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-.8189435{col 26}{space 2} 1.854131{col 37}{space 1}   -0.44{col 46}{space 3}0.665{col 54}{space 4}-4.770929{col 67}{space 3} 3.133042
{txt}{space 8}653  {c |}{col 14}{res}{space 2}-.0798727{col 26}{space 2} 2.050539{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-4.450494{col 67}{space 3} 4.290748
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-.4769494{col 26}{space 2} 1.967755{col 37}{space 1}   -0.24{col 46}{space 3}0.812{col 54}{space 4} -4.67112{col 67}{space 3} 3.717221
{txt}{space 8}655  {c |}{col 14}{res}{space 2} -.472024{col 26}{space 2} 2.011928{col 37}{space 1}   -0.23{col 46}{space 3}0.818{col 54}{space 4}-4.760347{col 67}{space 3} 3.816299
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-.6319025{col 26}{space 2} 2.112157{col 37}{space 1}   -0.30{col 46}{space 3}0.769{col 54}{space 4}-5.133859{col 67}{space 3} 3.870054
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-.8205938{col 26}{space 2} 2.006642{col 37}{space 1}   -0.41{col 46}{space 3}0.688{col 54}{space 4}-5.097651{col 67}{space 3} 3.456463
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-1.142604{col 26}{space 2} 2.148329{col 37}{space 1}   -0.53{col 46}{space 3}0.603{col 54}{space 4} -5.72166{col 67}{space 3} 3.436451
{txt}{space 8}659  {c |}{col 14}{res}{space 2}-.6003862{col 26}{space 2} 2.053741{col 37}{space 1}   -0.29{col 46}{space 3}0.774{col 54}{space 4}-4.977832{col 67}{space 3}  3.77706
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-1.046725{col 26}{space 2} 2.109436{col 37}{space 1}   -0.50{col 46}{space 3}0.627{col 54}{space 4}-5.542881{col 67}{space 3} 3.449431
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-1.011198{col 26}{space 2}  2.05838{col 37}{space 1}   -0.49{col 46}{space 3}0.630{col 54}{space 4}-5.398531{col 67}{space 3} 3.376135
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-.4817588{col 26}{space 2} 2.230714{col 37}{space 1}   -0.22{col 46}{space 3}0.832{col 54}{space 4}-5.236414{col 67}{space 3} 4.272896
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-1.023081{col 26}{space 2} 2.221996{col 37}{space 1}   -0.46{col 46}{space 3}0.652{col 54}{space 4}-5.759153{col 67}{space 3} 3.712992
{txt}{space 8}664  {c |}{col 14}{res}{space 2}-.8001989{col 26}{space 2} 2.296608{col 37}{space 1}   -0.35{col 46}{space 3}0.732{col 54}{space 4}-5.695304{col 67}{space 3} 4.094906
{txt}{space 8}665  {c |}{col 14}{res}{space 2}-.4258798{col 26}{space 2} 2.131773{col 37}{space 1}   -0.20{col 46}{space 3}0.844{col 54}{space 4}-4.969645{col 67}{space 3} 4.117886
{txt}{space 8}666  {c |}{col 14}{res}{space 2} -.469904{col 26}{space 2} 2.149396{col 37}{space 1}   -0.22{col 46}{space 3}0.830{col 54}{space 4}-5.051234{col 67}{space 3} 4.111426
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-.6312962{col 26}{space 2} 2.130546{col 37}{space 1}   -0.30{col 46}{space 3}0.771{col 54}{space 4}-5.172448{col 67}{space 3} 3.909856
{txt}{space 8}668  {c |}{col 14}{res}{space 2} -.769546{col 26}{space 2} 2.151784{col 37}{space 1}   -0.36{col 46}{space 3}0.726{col 54}{space 4}-5.355964{col 67}{space 3} 3.816872
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-.6540572{col 26}{space 2} 2.194878{col 37}{space 1}   -0.30{col 46}{space 3}0.770{col 54}{space 4}-5.332328{col 67}{space 3} 4.024214
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-1.179503{col 26}{space 2}  2.16131{col 37}{space 1}   -0.55{col 46}{space 3}0.593{col 54}{space 4}-5.786227{col 67}{space 3} 3.427221
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-.8882166{col 26}{space 2} 2.230781{col 37}{space 1}   -0.40{col 46}{space 3}0.696{col 54}{space 4}-5.643014{col 67}{space 3}  3.86658
{txt}{space 8}672  {c |}{col 14}{res}{space 2} -1.02034{col 26}{space 2} 2.233225{col 37}{space 1}   -0.46{col 46}{space 3}0.654{col 54}{space 4}-5.780346{col 67}{space 3} 3.739666
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-.8884853{col 26}{space 2} 2.248285{col 37}{space 1}   -0.40{col 46}{space 3}0.698{col 54}{space 4}-5.680592{col 67}{space 3} 3.903621
{txt}{space 8}674  {c |}{col 14}{res}{space 2} -.723271{col 26}{space 2} 2.286879{col 37}{space 1}   -0.32{col 46}{space 3}0.756{col 54}{space 4}-5.597638{col 67}{space 3} 4.151096
{txt}{space 8}675  {c |}{col 14}{res}{space 2} -.361514{col 26}{space 2} 2.274946{col 37}{space 1}   -0.16{col 46}{space 3}0.876{col 54}{space 4}-5.210447{col 67}{space 3} 4.487419
{txt}{space 8}676  {c |}{col 14}{res}{space 2}-.3013383{col 26}{space 2} 2.358868{col 37}{space 1}   -0.13{col 46}{space 3}0.900{col 54}{space 4}-5.329147{col 67}{space 3}  4.72647
{txt}{space 8}677  {c |}{col 14}{res}{space 2}-.6161427{col 26}{space 2} 2.321046{col 37}{space 1}   -0.27{col 46}{space 3}0.794{col 54}{space 4}-5.563334{col 67}{space 3} 4.331049
{txt}{space 8}678  {c |}{col 14}{res}{space 2}-.3899971{col 26}{space 2} 2.244082{col 37}{space 1}   -0.17{col 46}{space 3}0.864{col 54}{space 4}-5.173145{col 67}{space 3} 4.393151
{txt}{space 8}679  {c |}{col 14}{res}{space 2}-.2927945{col 26}{space 2} 2.291259{col 37}{space 1}   -0.13{col 46}{space 3}0.900{col 54}{space 4}-5.176498{col 67}{space 3} 4.590909
{txt}{space 8}680  {c |}{col 14}{res}{space 2}-.2416639{col 26}{space 2} 2.311941{col 37}{space 1}   -0.10{col 46}{space 3}0.918{col 54}{space 4} -5.16945{col 67}{space 3} 4.686122
{txt}{space 8}681  {c |}{col 14}{res}{space 2}-.2300411{col 26}{space 2} 2.290186{col 37}{space 1}   -0.10{col 46}{space 3}0.921{col 54}{space 4}-5.111456{col 67}{space 3} 4.651374
{txt}{space 8}682  {c |}{col 14}{res}{space 2}-.5698915{col 26}{space 2}  2.14423{col 37}{space 1}   -0.27{col 46}{space 3}0.794{col 54}{space 4} -5.14021{col 67}{space 3} 4.000427
{txt}{space 8}683  {c |}{col 14}{res}{space 2}-.7278579{col 26}{space 2} 2.403611{col 37}{space 1}   -0.30{col 46}{space 3}0.766{col 54}{space 4}-5.851033{col 67}{space 3} 4.395317
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-.5965421{col 26}{space 2} 2.526321{col 37}{space 1}   -0.24{col 46}{space 3}0.817{col 54}{space 4}-5.981267{col 67}{space 3} 4.788183
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-.7767922{col 26}{space 2} 2.353004{col 37}{space 1}   -0.33{col 46}{space 3}0.746{col 54}{space 4}-5.792102{col 67}{space 3} 4.238517
{txt}{space 8}686  {c |}{col 14}{res}{space 2} -.783118{col 26}{space 2} 2.450589{col 37}{space 1}   -0.32{col 46}{space 3}0.754{col 54}{space 4}-6.006424{col 67}{space 3} 4.440188
{txt}{space 8}687  {c |}{col 14}{res}{space 2} -.446176{col 26}{space 2} 2.370128{col 37}{space 1}   -0.19{col 46}{space 3}0.853{col 54}{space 4}-5.497985{col 67}{space 3} 4.605633
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-.7400206{col 26}{space 2} 2.462106{col 37}{space 1}   -0.30{col 46}{space 3}0.768{col 54}{space 4}-5.987876{col 67}{space 3} 4.507835
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-.7608995{col 26}{space 2} 2.495469{col 37}{space 1}   -0.30{col 46}{space 3}0.765{col 54}{space 4}-6.079866{col 67}{space 3} 4.558067
{txt}{space 8}690  {c |}{col 14}{res}{space 2}-1.044158{col 26}{space 2}  2.48833{col 37}{space 1}   -0.42{col 46}{space 3}0.681{col 54}{space 4}-6.347908{col 67}{space 3} 4.259592
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-.8982359{col 26}{space 2} 2.356954{col 37}{space 1}   -0.38{col 46}{space 3}0.708{col 54}{space 4}-5.921965{col 67}{space 3} 4.125493
{txt}{space 8}692  {c |}{col 14}{res}{space 2}-.7193932{col 26}{space 2} 2.428519{col 37}{space 1}   -0.30{col 46}{space 3}0.771{col 54}{space 4}-5.895658{col 67}{space 3} 4.456872
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-.8115452{col 26}{space 2} 2.417508{col 37}{space 1}   -0.34{col 46}{space 3}0.742{col 54}{space 4}-5.964341{col 67}{space 3} 4.341251
{txt}{space 8}694  {c |}{col 14}{res}{space 2}-.7264794{col 26}{space 2} 2.530677{col 37}{space 1}   -0.29{col 46}{space 3}0.778{col 54}{space 4} -6.12049{col 67}{space 3} 4.667531
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-.9367767{col 26}{space 2} 2.458457{col 37}{space 1}   -0.38{col 46}{space 3}0.709{col 54}{space 4}-6.176855{col 67}{space 3} 4.303301
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-.7754348{col 26}{space 2}  2.53927{col 37}{space 1}   -0.31{col 46}{space 3}0.764{col 54}{space 4}-6.187761{col 67}{space 3} 4.636891
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-.8156613{col 26}{space 2} 2.500258{col 37}{space 1}   -0.33{col 46}{space 3}0.749{col 54}{space 4}-6.144834{col 67}{space 3} 4.513512
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-.7575698{col 26}{space 2} 2.519791{col 37}{space 1}   -0.30{col 46}{space 3}0.768{col 54}{space 4}-6.128377{col 67}{space 3} 4.613237
{txt}{space 8}699  {c |}{col 14}{res}{space 2}-.9645258{col 26}{space 2} 2.530747{col 37}{space 1}   -0.38{col 46}{space 3}0.708{col 54}{space 4}-6.358684{col 67}{space 3} 4.429633
{txt}{space 8}700  {c |}{col 14}{res}{space 2}-.6884325{col 26}{space 2} 2.440482{col 37}{space 1}   -0.28{col 46}{space 3}0.782{col 54}{space 4}-5.890196{col 67}{space 3} 4.513331
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-1.052911{col 26}{space 2}  2.50133{col 37}{space 1}   -0.42{col 46}{space 3}0.680{col 54}{space 4}-6.384369{col 67}{space 3} 4.278548
{txt}{space 8}702  {c |}{col 14}{res}{space 2}-1.257872{col 26}{space 2} 2.685248{col 37}{space 1}   -0.47{col 46}{space 3}0.646{col 54}{space 4}-6.981342{col 67}{space 3} 4.465598
{txt}{space 8}703  {c |}{col 14}{res}{space 2}-.8537582{col 26}{space 2} 2.471389{col 37}{space 1}   -0.35{col 46}{space 3}0.735{col 54}{space 4}  -6.1214{col 67}{space 3} 4.413884
{txt}{space 8}704  {c |}{col 14}{res}{space 2} -.609062{col 26}{space 2} 2.464489{col 37}{space 1}   -0.25{col 46}{space 3}0.808{col 54}{space 4}-5.861997{col 67}{space 3} 4.643873
{txt}{space 8}705  {c |}{col 14}{res}{space 2}-.5459964{col 26}{space 2} 2.472756{col 37}{space 1}   -0.22{col 46}{space 3}0.828{col 54}{space 4}-5.816552{col 67}{space 3} 4.724559
{txt}{space 8}706  {c |}{col 14}{res}{space 2}-.6312219{col 26}{space 2} 2.523992{col 37}{space 1}   -0.25{col 46}{space 3}0.806{col 54}{space 4}-6.010984{col 67}{space 3}  4.74854
{txt}{space 8}707  {c |}{col 14}{res}{space 2}-.7554294{col 26}{space 2} 2.669745{col 37}{space 1}   -0.28{col 46}{space 3}0.781{col 54}{space 4}-6.445857{col 67}{space 3} 4.934998
{txt}{space 8}708  {c |}{col 14}{res}{space 2}-.3429029{col 26}{space 2} 2.771443{col 37}{space 1}   -0.12{col 46}{space 3}0.903{col 54}{space 4}-6.250094{col 67}{space 3} 5.564289
{txt}{space 8}709  {c |}{col 14}{res}{space 2} -.932008{col 26}{space 2} 2.994834{col 37}{space 1}   -0.31{col 46}{space 3}0.760{col 54}{space 4}-7.315346{col 67}{space 3}  5.45133
{txt}{space 8}710  {c |}{col 14}{res}{space 2}-.6188067{col 26}{space 2} 2.675004{col 37}{space 1}   -0.23{col 46}{space 3}0.820{col 54}{space 4}-6.320442{col 67}{space 3} 5.082828
{txt}{space 8}711  {c |}{col 14}{res}{space 2}-.2973232{col 26}{space 2} 2.592963{col 37}{space 1}   -0.11{col 46}{space 3}0.910{col 54}{space 4}-5.824092{col 67}{space 3} 5.229446
{txt}{space 8}712  {c |}{col 14}{res}{space 2}-.7104214{col 26}{space 2} 2.662348{col 37}{space 1}   -0.27{col 46}{space 3}0.793{col 54}{space 4}-6.385081{col 67}{space 3} 4.964238
{txt}{space 8}713  {c |}{col 14}{res}{space 2}-.2491933{col 26}{space 2}  2.63714{col 37}{space 1}   -0.09{col 46}{space 3}0.926{col 54}{space 4}-5.870124{col 67}{space 3} 5.371737
{txt}{space 8}714  {c |}{col 14}{res}{space 2}-.5931973{col 26}{space 2} 2.747144{col 37}{space 1}   -0.22{col 46}{space 3}0.832{col 54}{space 4}-6.448596{col 67}{space 3} 5.262202
{txt}{space 8}715  {c |}{col 14}{res}{space 2}-.5783246{col 26}{space 2} 2.600697{col 37}{space 1}   -0.22{col 46}{space 3}0.827{col 54}{space 4} -6.12158{col 67}{space 3}  4.96493
{txt}{space 8}716  {c |}{col 14}{res}{space 2}-.6758282{col 26}{space 2} 2.658242{col 37}{space 1}   -0.25{col 46}{space 3}0.803{col 54}{space 4}-6.341738{col 67}{space 3} 4.990081
{txt}{space 8}717  {c |}{col 14}{res}{space 2}  -.82902{col 26}{space 2} 2.650416{col 37}{space 1}   -0.31{col 46}{space 3}0.759{col 54}{space 4}-6.478248{col 67}{space 3} 4.820208
{txt}{space 8}718  {c |}{col 14}{res}{space 2}-.4521087{col 26}{space 2} 2.660842{col 37}{space 1}   -0.17{col 46}{space 3}0.867{col 54}{space 4} -6.12356{col 67}{space 3} 5.219343
{txt}{space 8}719  {c |}{col 14}{res}{space 2}-.5931148{col 26}{space 2} 2.651408{col 37}{space 1}   -0.22{col 46}{space 3}0.826{col 54}{space 4}-6.244457{col 67}{space 3} 5.058228
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.700988{col 26}{space 2} .2678886{col 37}{space 1}    6.35{col 46}{space 3}0.000{col 54}{space 4} 1.129997{col 67}{space 3} 2.271979
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.723275{col 26}{space 2} .9682994{col 37}{space 1}   -1.78{col 46}{space 3}0.095{col 54}{space 4}-3.787156{col 67}{space 3} .3406069
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.169525{col 26}{space 2} 1.464715{col 37}{space 1}   -0.80{col 46}{space 3}0.437{col 54}{space 4}-4.291492{col 67}{space 3} 1.952442
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-2.003441{col 26}{space 2} .0314323{col 37}{space 1}  -63.74{col 46}{space 3}0.000{col 54}{space 4}-2.070438{col 67}{space 3}-1.936445
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .4643608{col 26}{space 2} .1715096{col 37}{space 1}    2.71{col 46}{space 3}0.016{col 54}{space 4} .0987968{col 67}{space 3} .8299249
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-.0040436{col 26}{space 2} 1.556471{col 37}{space 1}   -0.00{col 46}{space 3}0.998{col 54}{space 4}-3.321583{col 67}{space 3} 3.313496
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .3257141{col 26}{space 2} .7399252{col 37}{space 1}    0.44{col 46}{space 3}0.666{col 54}{space 4}-1.251399{col 67}{space 3} 1.902827
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.342174{col 26}{space 2} .6655658{col 37}{space 1}   -3.52{col 46}{space 3}0.003{col 54}{space 4}-3.760794{col 67}{space 3}-.9235539
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-4.276628{col 26}{space 2} .6372579{col 37}{space 1}   -6.71{col 46}{space 3}0.000{col 54}{space 4}-5.634911{col 67}{space 3}-2.918344
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.538404{col 26}{space 2} .9595787{col 37}{space 1}   -1.60{col 46}{space 3}0.130{col 54}{space 4}-3.583698{col 67}{space 3} .5068892
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2}-.6515736{col 26}{space 2}  .404447{col 37}{space 1}   -1.61{col 46}{space 3}0.128{col 54}{space 4}-1.513632{col 67}{space 3} .2104848
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} .4319681{col 26}{space 2} 1.024164{col 37}{space 1}    0.42{col 46}{space 3}0.679{col 54}{space 4}-1.750986{col 67}{space 3} 2.614922
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2}  2.06076{col 26}{space 2} 1.138252{col 37}{space 1}    1.81{col 46}{space 3}0.090{col 54}{space 4}-.3653665{col 67}{space 3} 4.486887
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}  2.21443{col 26}{space 2} 4.467244{col 37}{space 1}    0.50{col 46}{space 3}0.627{col 54}{space 4}-7.307276{col 67}{space 3} 11.73614
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-2.091268{col 26}{space 2} 1.433451{col 37}{space 1}   -1.46{col 46}{space 3}0.165{col 54}{space 4}-5.146597{col 67}{space 3} .9640617
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-16.35546{col 26}{space 2} 19.00965{col 37}{space 1}   -0.86{col 46}{space 3}0.403{col 54}{space 4}-56.87357{col 67}{space 3} 24.16266
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 20 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -5.5862
{col 25}{txt}Prob>|t| = {res}    0.0026

95%{txt} confidence set for null hypothesis expression: [{res}-3.084{txt}, {res}-1.33{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 28}t(15) = {res}    0.8688
{col 25}{txt}Prob>|t| = {res}    0.4087

95%{txt} confidence set for null hypothesis expression: [{res}-1.85{txt}, {res}4.942{txt}]
{res}
Warning: 8 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 28}t(15) = {res}    1.0503
{col 25}{txt}Prob>|t| = {res}    0.3446

95%{txt} confidence set for null hypothesis expression: [{res}-.6286{txt}, {res}1.414{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   -0.8678
{col 25}{txt}Prob>|t| = {res}    0.4103

95%{txt} confidence set for null hypothesis expression: [{res}-60.82{txt}, {res}23.32{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.7291
                                                {txt}Root MSE          =    {res} 1.2885

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}three {c |}{col 14}{res}{space 2}-2.253751{col 26}{space 2} .5743649{col 37}{space 1}   -3.92{col 46}{space 3}0.001{col 54}{space 4}-3.477981{col 67}{space 3}-1.029521
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 2.240934{col 26}{space 2} 2.067844{col 37}{space 1}    1.08{col 46}{space 3}0.296{col 54}{space 4}-2.166572{col 67}{space 3}  6.64844
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .4242784{col 26}{space 2}   .40971{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.4489977{col 67}{space 3} 1.297555
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2721267{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4} -.633163{col 67}{space 3} .5268858
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2833452{col 37}{space 1}   -1.73{col 46}{space 3}0.103{col 54}{space 4}-1.095522{col 67}{space 3} .1123505
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3040009{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-.8491256{col 67}{space 3} .4467994
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2895211{col 37}{space 1}   -0.81{col 46}{space 3}0.433{col 54}{space 4}-.8501701{col 67}{space 3} .3840289
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2871265{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}-.5700453{col 67}{space 3} .6539459
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3467316{col 37}{space 1}    1.04{col 46}{space 3}0.316{col 54}{space 4}-.3795197{col 67}{space 3} 1.098562
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3868755{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-.6359824{col 67}{space 3} 1.013229
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3753808{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-.7275172{col 67}{space 3} .8726931
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2878324{col 37}{space 1}   -0.60{col 46}{space 3}0.558{col 54}{space 4}-.7860253{col 67}{space 3} .4409752
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2} .3202635{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6975036{col 67}{space 3} .6677473
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3222327{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7074919{col 67}{space 3} .6661535
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.7699579{col 26}{space 2} .5509217{col 37}{space 1}   -1.40{col 46}{space 3}0.183{col 54}{space 4} -1.94422{col 67}{space 3}  .404304
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.3537744{col 26}{space 2} .6330312{col 37}{space 1}   -0.56{col 46}{space 3}0.585{col 54}{space 4}-1.703049{col 67}{space 3} .9954998
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.3351892{col 26}{space 2} .5248255{col 37}{space 1}   -0.64{col 46}{space 3}0.533{col 54}{space 4}-1.453828{col 67}{space 3} .7834499
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.5580023{col 26}{space 2} .5883473{col 37}{space 1}   -0.95{col 46}{space 3}0.358{col 54}{space 4}-1.812035{col 67}{space 3} .6960304
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.4509795{col 26}{space 2}  .599422{col 37}{space 1}   -0.75{col 46}{space 3}0.463{col 54}{space 4}-1.728617{col 67}{space 3} .8266582
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.6216519{col 26}{space 2} .5518465{col 37}{space 1}   -1.13{col 46}{space 3}0.278{col 54}{space 4}-1.797885{col 67}{space 3} .5545811
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .1053031{col 26}{space 2} .5904934{col 37}{space 1}    0.18{col 46}{space 3}0.861{col 54}{space 4}-1.153304{col 67}{space 3}  1.36391
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-1.177772{col 26}{space 2} .5449455{col 37}{space 1}   -2.16{col 46}{space 3}0.047{col 54}{space 4}-2.339296{col 67}{space 3}-.0162486
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-1.373536{col 26}{space 2} .5102399{col 37}{space 1}   -2.69{col 46}{space 3}0.017{col 54}{space 4}-2.461087{col 67}{space 3}-.2859856
{txt}{space 8}573  {c |}{col 14}{res}{space 2} -1.01673{col 26}{space 2} .7120891{col 37}{space 1}   -1.43{col 46}{space 3}0.174{col 54}{space 4}-2.534512{col 67}{space 3} .5010522
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.8700901{col 26}{space 2} .6073228{col 37}{space 1}   -1.43{col 46}{space 3}0.172{col 54}{space 4}-2.164568{col 67}{space 3} .4243879
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.5979235{col 26}{space 2} .7465982{col 37}{space 1}   -0.80{col 46}{space 3}0.436{col 54}{space 4} -2.18926{col 67}{space 3} .9934128
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-1.373592{col 26}{space 2} .8552627{col 37}{space 1}   -1.61{col 46}{space 3}0.129{col 54}{space 4}-3.196542{col 67}{space 3} .4493571
{txt}{space 8}577  {c |}{col 14}{res}{space 2} -.825433{col 26}{space 2} .9232048{col 37}{space 1}   -0.89{col 46}{space 3}0.385{col 54}{space 4}-2.793197{col 67}{space 3} 1.142331
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-1.114627{col 26}{space 2} .8645448{col 37}{space 1}   -1.29{col 46}{space 3}0.217{col 54}{space 4} -2.95736{col 67}{space 3}  .728107
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.9615625{col 26}{space 2} .9118263{col 37}{space 1}   -1.05{col 46}{space 3}0.308{col 54}{space 4}-2.905074{col 67}{space 3} .9819493
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.4981262{col 26}{space 2} .7863527{col 37}{space 1}   -0.63{col 46}{space 3}0.536{col 54}{space 4}-2.174197{col 67}{space 3} 1.177945
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.6524164{col 26}{space 2} .7765653{col 37}{space 1}   -0.84{col 46}{space 3}0.414{col 54}{space 4}-2.307626{col 67}{space 3} 1.002793
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.6291971{col 26}{space 2} .8573801{col 37}{space 1}   -0.73{col 46}{space 3}0.474{col 54}{space 4} -2.45666{col 67}{space 3} 1.198265
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.7665042{col 26}{space 2} .8934762{col 37}{space 1}   -0.86{col 46}{space 3}0.404{col 54}{space 4}-2.670904{col 67}{space 3} 1.137895
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.6003215{col 26}{space 2} .8981565{col 37}{space 1}   -0.67{col 46}{space 3}0.514{col 54}{space 4}-2.514697{col 67}{space 3} 1.314054
{txt}{space 8}585  {c |}{col 14}{res}{space 2} -.674672{col 26}{space 2} .8178292{col 37}{space 1}   -0.82{col 46}{space 3}0.422{col 54}{space 4}-2.417834{col 67}{space 3}  1.06849
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.7760536{col 26}{space 2} .8803727{col 37}{space 1}   -0.88{col 46}{space 3}0.392{col 54}{space 4}-2.652524{col 67}{space 3} 1.100416
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.9956142{col 26}{space 2} .8730235{col 37}{space 1}   -1.14{col 46}{space 3}0.272{col 54}{space 4} -2.85642{col 67}{space 3} .8651913
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-1.005492{col 26}{space 2} 1.108541{col 37}{space 1}   -0.91{col 46}{space 3}0.379{col 54}{space 4}-3.368291{col 67}{space 3} 1.357306
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.8073697{col 26}{space 2} 1.123508{col 37}{space 1}   -0.72{col 46}{space 3}0.483{col 54}{space 4} -3.20207{col 67}{space 3} 1.587331
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.8788912{col 26}{space 2} 1.114694{col 37}{space 1}   -0.79{col 46}{space 3}0.443{col 54}{space 4}-3.254805{col 67}{space 3} 1.497022
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-1.463861{col 26}{space 2} 1.138145{col 37}{space 1}   -1.29{col 46}{space 3}0.218{col 54}{space 4} -3.88976{col 67}{space 3} .9620384
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.8819771{col 26}{space 2} 1.003375{col 37}{space 1}   -0.88{col 46}{space 3}0.393{col 54}{space 4} -3.02062{col 67}{space 3} 1.256666
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-.5809876{col 26}{space 2} 1.155806{col 37}{space 1}   -0.50{col 46}{space 3}0.622{col 54}{space 4}-3.044529{col 67}{space 3} 1.882554
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-.5707922{col 26}{space 2} 1.187836{col 37}{space 1}   -0.48{col 46}{space 3}0.638{col 54}{space 4}-3.102604{col 67}{space 3}  1.96102
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-.5758053{col 26}{space 2} 1.193806{col 37}{space 1}   -0.48{col 46}{space 3}0.637{col 54}{space 4}-3.120343{col 67}{space 3} 1.968733
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.8716146{col 26}{space 2} 1.026669{col 37}{space 1}   -0.85{col 46}{space 3}0.409{col 54}{space 4}-3.059909{col 67}{space 3} 1.316679
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.8706889{col 26}{space 2} 1.151169{col 37}{space 1}   -0.76{col 46}{space 3}0.461{col 54}{space 4}-3.324347{col 67}{space 3} 1.582969
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.7574703{col 26}{space 2} 1.056817{col 37}{space 1}   -0.72{col 46}{space 3}0.485{col 54}{space 4}-3.010023{col 67}{space 3} 1.495083
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.9631829{col 26}{space 2} 1.075533{col 37}{space 1}   -0.90{col 46}{space 3}0.385{col 54}{space 4}-3.255628{col 67}{space 3} 1.329262
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-1.035431{col 26}{space 2}  1.38676{col 37}{space 1}   -0.75{col 46}{space 3}0.467{col 54}{space 4}-3.991239{col 67}{space 3} 1.920378
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-1.278461{col 26}{space 2} 1.380128{col 37}{space 1}   -0.93{col 46}{space 3}0.369{col 54}{space 4}-4.220135{col 67}{space 3} 1.663212
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.8415088{col 26}{space 2} 1.503498{col 37}{space 1}   -0.56{col 46}{space 3}0.584{col 54}{space 4}-4.046139{col 67}{space 3} 2.363121
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-1.982611{col 26}{space 2} 1.487359{col 37}{space 1}   -1.33{col 46}{space 3}0.202{col 54}{space 4}-5.152842{col 67}{space 3}  1.18762
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-1.706352{col 26}{space 2} 1.478633{col 37}{space 1}   -1.15{col 46}{space 3}0.267{col 54}{space 4}-4.857983{col 67}{space 3}  1.44528
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-1.318655{col 26}{space 2} 1.518685{col 37}{space 1}   -0.87{col 46}{space 3}0.399{col 54}{space 4}-4.555654{col 67}{space 3} 1.918345
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-1.715356{col 26}{space 2} 1.635271{col 37}{space 1}   -1.05{col 46}{space 3}0.311{col 54}{space 4}-5.200853{col 67}{space 3} 1.770141
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-1.398069{col 26}{space 2} 1.505063{col 37}{space 1}   -0.93{col 46}{space 3}0.368{col 54}{space 4}-4.606035{col 67}{space 3} 1.809898
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-1.576358{col 26}{space 2} 1.526807{col 37}{space 1}   -1.03{col 46}{space 3}0.318{col 54}{space 4} -4.83067{col 67}{space 3} 1.677954
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-1.608378{col 26}{space 2} 1.631384{col 37}{space 1}   -0.99{col 46}{space 3}0.340{col 54}{space 4}-5.085591{col 67}{space 3} 1.868834
{txt}{space 8}610  {c |}{col 14}{res}{space 2}-1.248434{col 26}{space 2} 1.667001{col 37}{space 1}   -0.75{col 46}{space 3}0.465{col 54}{space 4}-4.801562{col 67}{space 3} 2.304695
{txt}{space 8}611  {c |}{col 14}{res}{space 2}-.9946847{col 26}{space 2} 1.408253{col 37}{space 1}   -0.71{col 46}{space 3}0.491{col 54}{space 4}-3.996305{col 67}{space 3} 2.006936
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-1.775404{col 26}{space 2} 1.867751{col 37}{space 1}   -0.95{col 46}{space 3}0.357{col 54}{space 4} -5.75642{col 67}{space 3} 2.205612
{txt}{space 8}613  {c |}{col 14}{res}{space 2}-1.717057{col 26}{space 2} 1.985507{col 37}{space 1}   -0.86{col 46}{space 3}0.401{col 54}{space 4}-5.949065{col 67}{space 3} 2.514951
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-1.799302{col 26}{space 2} 1.890525{col 37}{space 1}   -0.95{col 46}{space 3}0.356{col 54}{space 4}-5.828861{col 67}{space 3} 2.230258
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-1.625148{col 26}{space 2} 1.906987{col 37}{space 1}   -0.85{col 46}{space 3}0.408{col 54}{space 4}-5.689796{col 67}{space 3} 2.439499
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-1.731271{col 26}{space 2} 1.802462{col 37}{space 1}   -0.96{col 46}{space 3}0.352{col 54}{space 4}-5.573128{col 67}{space 3} 2.110585
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-2.201762{col 26}{space 2} 2.058351{col 37}{space 1}   -1.07{col 46}{space 3}0.302{col 54}{space 4}-6.589034{col 67}{space 3}  2.18551
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-1.841416{col 26}{space 2} 1.823654{col 37}{space 1}   -1.01{col 46}{space 3}0.329{col 54}{space 4}-5.728443{col 67}{space 3} 2.045611
{txt}{space 8}619  {c |}{col 14}{res}{space 2}-1.368109{col 26}{space 2} 1.918557{col 37}{space 1}   -0.71{col 46}{space 3}0.487{col 54}{space 4}-5.457416{col 67}{space 3} 2.721197
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-1.595967{col 26}{space 2} 2.015225{col 37}{space 1}   -0.79{col 46}{space 3}0.441{col 54}{space 4}-5.891318{col 67}{space 3} 2.699383
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-1.491117{col 26}{space 2} 1.815655{col 37}{space 1}   -0.82{col 46}{space 3}0.424{col 54}{space 4}-5.361094{col 67}{space 3} 2.378859
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-1.683391{col 26}{space 2} 1.781494{col 37}{space 1}   -0.94{col 46}{space 3}0.360{col 54}{space 4}-5.480556{col 67}{space 3} 2.113774
{txt}{space 8}623  {c |}{col 14}{res}{space 2} -1.68611{col 26}{space 2} 1.785607{col 37}{space 1}   -0.94{col 46}{space 3}0.360{col 54}{space 4}-5.492042{col 67}{space 3} 2.119823
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-2.150361{col 26}{space 2} 2.078419{col 37}{space 1}   -1.03{col 46}{space 3}0.317{col 54}{space 4}-6.580407{col 67}{space 3} 2.279684
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-2.148233{col 26}{space 2} 2.143586{col 37}{space 1}   -1.00{col 46}{space 3}0.332{col 54}{space 4} -6.71718{col 67}{space 3} 2.420713
{txt}{space 8}626  {c |}{col 14}{res}{space 2}-1.856615{col 26}{space 2} 2.163524{col 37}{space 1}   -0.86{col 46}{space 3}0.404{col 54}{space 4}-6.468057{col 67}{space 3} 2.754827
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-2.264245{col 26}{space 2} 2.151936{col 37}{space 1}   -1.05{col 46}{space 3}0.309{col 54}{space 4}-6.850989{col 67}{space 3} 2.322498
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-2.719309{col 26}{space 2} 2.164547{col 37}{space 1}   -1.26{col 46}{space 3}0.228{col 54}{space 4}-7.332932{col 67}{space 3} 1.894314
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-2.334213{col 26}{space 2} 2.082511{col 37}{space 1}   -1.12{col 46}{space 3}0.280{col 54}{space 4}-6.772981{col 67}{space 3} 2.104554
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-1.875533{col 26}{space 2} 2.106382{col 37}{space 1}   -0.89{col 46}{space 3}0.387{col 54}{space 4}-6.365179{col 67}{space 3} 2.614113
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-2.689565{col 26}{space 2} 2.354205{col 37}{space 1}   -1.14{col 46}{space 3}0.271{col 54}{space 4}-7.707435{col 67}{space 3} 2.328305
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-2.178519{col 26}{space 2} 2.157564{col 37}{space 1}   -1.01{col 46}{space 3}0.329{col 54}{space 4}-6.777257{col 67}{space 3} 2.420219
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-1.717044{col 26}{space 2} 2.000058{col 37}{space 1}   -0.86{col 46}{space 3}0.404{col 54}{space 4}-5.980067{col 67}{space 3}  2.54598
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-2.205952{col 26}{space 2} 2.107933{col 37}{space 1}   -1.05{col 46}{space 3}0.312{col 54}{space 4}-6.698904{col 67}{space 3}    2.287
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-1.938632{col 26}{space 2} 2.099608{col 37}{space 1}   -0.92{col 46}{space 3}0.370{col 54}{space 4} -6.41384{col 67}{space 3} 2.536577
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-2.352904{col 26}{space 2} 2.350264{col 37}{space 1}   -1.00{col 46}{space 3}0.333{col 54}{space 4}-7.362374{col 67}{space 3} 2.656566
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-2.751565{col 26}{space 2} 2.316785{col 37}{space 1}   -1.19{col 46}{space 3}0.253{col 54}{space 4}-7.689675{col 67}{space 3} 2.186546
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-1.789867{col 26}{space 2} 2.298583{col 37}{space 1}   -0.78{col 46}{space 3}0.448{col 54}{space 4} -6.68918{col 67}{space 3} 3.109446
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-2.150997{col 26}{space 2} 2.279655{col 37}{space 1}   -0.94{col 46}{space 3}0.360{col 54}{space 4}-7.009967{col 67}{space 3} 2.707973
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-1.980262{col 26}{space 2} 2.273593{col 37}{space 1}   -0.87{col 46}{space 3}0.397{col 54}{space 4} -6.82631{col 67}{space 3} 2.865786
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-2.204459{col 26}{space 2} 2.288793{col 37}{space 1}   -0.96{col 46}{space 3}0.351{col 54}{space 4}-7.082905{col 67}{space 3} 2.673987
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-2.289424{col 26}{space 2} 2.255993{col 37}{space 1}   -1.01{col 46}{space 3}0.326{col 54}{space 4}-7.097959{col 67}{space 3}  2.51911
{txt}{space 8}643  {c |}{col 14}{res}{space 2} -2.15049{col 26}{space 2} 2.347477{col 37}{space 1}   -0.92{col 46}{space 3}0.374{col 54}{space 4} -7.15402{col 67}{space 3} 2.853039
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-2.457372{col 26}{space 2} 2.214587{col 37}{space 1}   -1.11{col 46}{space 3}0.285{col 54}{space 4}-7.177652{col 67}{space 3} 2.262908
{txt}{space 8}645  {c |}{col 14}{res}{space 2}-1.638977{col 26}{space 2} 2.332618{col 37}{space 1}   -0.70{col 46}{space 3}0.493{col 54}{space 4}-6.610835{col 67}{space 3} 3.332881
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-2.003344{col 26}{space 2} 2.359223{col 37}{space 1}   -0.85{col 46}{space 3}0.409{col 54}{space 4} -7.03191{col 67}{space 3} 3.025222
{txt}{space 8}647  {c |}{col 14}{res}{space 2}-1.864056{col 26}{space 2}  2.39166{col 37}{space 1}   -0.78{col 46}{space 3}0.448{col 54}{space 4}-6.961759{col 67}{space 3} 3.233647
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-1.740551{col 26}{space 2} 2.673452{col 37}{space 1}   -0.65{col 46}{space 3}0.525{col 54}{space 4}-7.438879{col 67}{space 3} 3.957776
{txt}{space 8}649  {c |}{col 14}{res}{space 2}-1.495668{col 26}{space 2} 2.584444{col 37}{space 1}   -0.58{col 46}{space 3}0.571{col 54}{space 4}-7.004279{col 67}{space 3} 4.012943
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-2.071265{col 26}{space 2} 2.602233{col 37}{space 1}   -0.80{col 46}{space 3}0.438{col 54}{space 4}-7.617794{col 67}{space 3} 3.475263
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-2.218073{col 26}{space 2} 2.643237{col 37}{space 1}   -0.84{col 46}{space 3}0.415{col 54}{space 4}-7.851998{col 67}{space 3} 3.415853
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-2.058687{col 26}{space 2} 2.465002{col 37}{space 1}   -0.84{col 46}{space 3}0.417{col 54}{space 4}-7.312713{col 67}{space 3}  3.19534
{txt}{space 8}653  {c |}{col 14}{res}{space 2}-1.319616{col 26}{space 2} 2.649101{col 37}{space 1}   -0.50{col 46}{space 3}0.626{col 54}{space 4}-6.966041{col 67}{space 3} 4.326809
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-1.716693{col 26}{space 2} 2.622684{col 37}{space 1}   -0.65{col 46}{space 3}0.523{col 54}{space 4}-7.306811{col 67}{space 3} 3.873426
{txt}{space 8}655  {c |}{col 14}{res}{space 2}-1.711767{col 26}{space 2} 2.606736{col 37}{space 1}   -0.66{col 46}{space 3}0.521{col 54}{space 4}-7.267893{col 67}{space 3} 3.844358
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-1.871646{col 26}{space 2} 2.638898{col 37}{space 1}   -0.71{col 46}{space 3}0.489{col 54}{space 4}-7.496323{col 67}{space 3} 3.753031
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-2.060337{col 26}{space 2} 2.676446{col 37}{space 1}   -0.77{col 46}{space 3}0.453{col 54}{space 4}-7.765047{col 67}{space 3} 3.644373
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-2.382348{col 26}{space 2} 2.895344{col 37}{space 1}   -0.82{col 46}{space 3}0.423{col 54}{space 4}-8.553627{col 67}{space 3} 3.788932
{txt}{space 8}659  {c |}{col 14}{res}{space 2} -1.84013{col 26}{space 2} 2.584394{col 37}{space 1}   -0.71{col 46}{space 3}0.487{col 54}{space 4}-7.348634{col 67}{space 3} 3.668375
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-2.368135{col 26}{space 2} 2.894731{col 37}{space 1}   -0.82{col 46}{space 3}0.426{col 54}{space 4}-8.538109{col 67}{space 3} 3.801839
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-2.332608{col 26}{space 2} 2.688204{col 37}{space 1}   -0.87{col 46}{space 3}0.399{col 54}{space 4}-8.062379{col 67}{space 3} 3.397162
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-1.803169{col 26}{space 2} 2.781698{col 37}{space 1}   -0.65{col 46}{space 3}0.527{col 54}{space 4}-7.732217{col 67}{space 3}  4.12588
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-2.344491{col 26}{space 2} 2.724976{col 37}{space 1}   -0.86{col 46}{space 3}0.403{col 54}{space 4} -8.15264{col 67}{space 3} 3.463659
{txt}{space 8}664  {c |}{col 14}{res}{space 2}-2.121609{col 26}{space 2} 2.785206{col 37}{space 1}   -0.76{col 46}{space 3}0.458{col 54}{space 4}-8.058135{col 67}{space 3} 3.814917
{txt}{space 8}665  {c |}{col 14}{res}{space 2} -1.74729{col 26}{space 2} 2.771214{col 37}{space 1}   -0.63{col 46}{space 3}0.538{col 54}{space 4}-7.653993{col 67}{space 3} 4.159413
{txt}{space 8}666  {c |}{col 14}{res}{space 2}-1.791314{col 26}{space 2} 2.796206{col 37}{space 1}   -0.64{col 46}{space 3}0.531{col 54}{space 4}-7.751287{col 67}{space 3} 4.168659
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-1.952706{col 26}{space 2} 2.758151{col 37}{space 1}   -0.71{col 46}{space 3}0.490{col 54}{space 4}-7.831566{col 67}{space 3} 3.926154
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-2.090956{col 26}{space 2} 2.816452{col 37}{space 1}   -0.74{col 46}{space 3}0.469{col 54}{space 4}-8.094081{col 67}{space 3} 3.912168
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-1.975467{col 26}{space 2} 2.727124{col 37}{space 1}   -0.72{col 46}{space 3}0.480{col 54}{space 4}-7.788195{col 67}{space 3}  3.83726
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-2.500913{col 26}{space 2} 2.727651{col 37}{space 1}   -0.92{col 46}{space 3}0.374{col 54}{space 4}-8.314763{col 67}{space 3} 3.312937
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-2.209627{col 26}{space 2}  2.71213{col 37}{space 1}   -0.81{col 46}{space 3}0.428{col 54}{space 4}-7.990396{col 67}{space 3} 3.571142
{txt}{space 8}672  {c |}{col 14}{res}{space 2}-2.439542{col 26}{space 2} 2.849745{col 37}{space 1}   -0.86{col 46}{space 3}0.405{col 54}{space 4} -8.51363{col 67}{space 3} 3.634546
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-2.307687{col 26}{space 2} 2.850231{col 37}{space 1}   -0.81{col 46}{space 3}0.431{col 54}{space 4} -8.38281{col 67}{space 3} 3.767437
{txt}{space 8}674  {c |}{col 14}{res}{space 2}-2.142472{col 26}{space 2}  2.92442{col 37}{space 1}   -0.73{col 46}{space 3}0.475{col 54}{space 4}-8.375727{col 67}{space 3} 4.090782
{txt}{space 8}675  {c |}{col 14}{res}{space 2}-1.780715{col 26}{space 2} 2.953604{col 37}{space 1}   -0.60{col 46}{space 3}0.556{col 54}{space 4}-8.076172{col 67}{space 3} 4.514741
{txt}{space 8}676  {c |}{col 14}{res}{space 2} -1.72054{col 26}{space 2} 2.939094{col 37}{space 1}   -0.59{col 46}{space 3}0.567{col 54}{space 4} -7.98507{col 67}{space 3} 4.543991
{txt}{space 8}677  {c |}{col 14}{res}{space 2}-2.035344{col 26}{space 2} 2.868778{col 37}{space 1}   -0.71{col 46}{space 3}0.489{col 54}{space 4}-8.149999{col 67}{space 3} 4.079311
{txt}{space 8}678  {c |}{col 14}{res}{space 2}-1.809199{col 26}{space 2} 2.954327{col 37}{space 1}   -0.61{col 46}{space 3}0.549{col 54}{space 4}-8.106198{col 67}{space 3} 4.487801
{txt}{space 8}679  {c |}{col 14}{res}{space 2}-1.711996{col 26}{space 2} 2.913792{col 37}{space 1}   -0.59{col 46}{space 3}0.566{col 54}{space 4}-7.922597{col 67}{space 3} 4.498605
{txt}{space 8}680  {c |}{col 14}{res}{space 2}-1.660865{col 26}{space 2} 3.022896{col 37}{space 1}   -0.55{col 46}{space 3}0.591{col 54}{space 4}-8.104015{col 67}{space 3} 4.782285
{txt}{space 8}681  {c |}{col 14}{res}{space 2}-1.649243{col 26}{space 2} 2.893338{col 37}{space 1}   -0.57{col 46}{space 3}0.577{col 54}{space 4}-7.816247{col 67}{space 3} 4.517762
{txt}{space 8}682  {c |}{col 14}{res}{space 2}-1.989093{col 26}{space 2} 2.957057{col 37}{space 1}   -0.67{col 46}{space 3}0.511{col 54}{space 4} -8.29191{col 67}{space 3} 4.313724
{txt}{space 8}683  {c |}{col 14}{res}{space 2}-2.147059{col 26}{space 2} 2.946245{col 37}{space 1}   -0.73{col 46}{space 3}0.477{col 54}{space 4}-8.426833{col 67}{space 3} 4.132714
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-2.132469{col 26}{space 2} 3.180636{col 37}{space 1}   -0.67{col 46}{space 3}0.513{col 54}{space 4}-8.911835{col 67}{space 3} 4.646897
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-2.312719{col 26}{space 2} 3.165714{col 37}{space 1}   -0.73{col 46}{space 3}0.476{col 54}{space 4}-9.060279{col 67}{space 3} 4.434841
{txt}{space 8}686  {c |}{col 14}{res}{space 2}-2.319045{col 26}{space 2} 3.239634{col 37}{space 1}   -0.72{col 46}{space 3}0.485{col 54}{space 4}-9.224162{col 67}{space 3} 4.586072
{txt}{space 8}687  {c |}{col 14}{res}{space 2}-1.976919{col 26}{space 2} 3.139383{col 37}{space 1}   -0.63{col 46}{space 3}0.538{col 54}{space 4}-8.668355{col 67}{space 3} 4.714518
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-2.271112{col 26}{space 2} 3.194759{col 37}{space 1}   -0.71{col 46}{space 3}0.488{col 54}{space 4}-9.080579{col 67}{space 3} 4.538355
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-2.292337{col 26}{space 2} 3.164711{col 37}{space 1}   -0.72{col 46}{space 3}0.480{col 54}{space 4} -9.03776{col 67}{space 3} 4.453086
{txt}{space 8}690  {c |}{col 14}{res}{space 2} -2.57594{col 26}{space 2} 3.180753{col 37}{space 1}   -0.81{col 46}{space 3}0.431{col 54}{space 4}-9.355554{col 67}{space 3} 4.203674
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-2.430361{col 26}{space 2} 3.242433{col 37}{space 1}   -0.75{col 46}{space 3}0.465{col 54}{space 4}-9.341443{col 67}{space 3} 4.480722
{txt}{space 8}692  {c |}{col 14}{res}{space 2}-2.251858{col 26}{space 2}   3.2411{col 37}{space 1}   -0.69{col 46}{space 3}0.498{col 54}{space 4}  -9.1601{col 67}{space 3} 4.656383
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-2.344349{col 26}{space 2} 3.130006{col 37}{space 1}   -0.75{col 46}{space 3}0.465{col 54}{space 4}-9.015798{col 67}{space 3} 4.327101
{txt}{space 8}694  {c |}{col 14}{res}{space 2} -2.25962{col 26}{space 2} 3.195457{col 37}{space 1}   -0.71{col 46}{space 3}0.490{col 54}{space 4}-9.070575{col 67}{space 3} 4.551336
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-2.470252{col 26}{space 2} 3.190486{col 37}{space 1}   -0.77{col 46}{space 3}0.451{col 54}{space 4}-9.270612{col 67}{space 3} 4.330108
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-2.375501{col 26}{space 2} 3.344973{col 37}{space 1}   -0.71{col 46}{space 3}0.488{col 54}{space 4}-9.505142{col 67}{space 3}  4.75414
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-2.415728{col 26}{space 2} 3.317032{col 37}{space 1}   -0.73{col 46}{space 3}0.478{col 54}{space 4}-9.485814{col 67}{space 3} 4.654359
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-2.357636{col 26}{space 2} 3.324922{col 37}{space 1}   -0.71{col 46}{space 3}0.489{col 54}{space 4} -9.44454{col 67}{space 3} 4.729268
{txt}{space 8}699  {c |}{col 14}{res}{space 2}-2.564592{col 26}{space 2} 3.305305{col 37}{space 1}   -0.78{col 46}{space 3}0.450{col 54}{space 4}-9.609683{col 67}{space 3} 4.480499
{txt}{space 8}700  {c |}{col 14}{res}{space 2}-2.288499{col 26}{space 2} 3.429219{col 37}{space 1}   -0.67{col 46}{space 3}0.515{col 54}{space 4}-9.597706{col 67}{space 3} 5.020708
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-2.652977{col 26}{space 2} 3.305379{col 37}{space 1}   -0.80{col 46}{space 3}0.435{col 54}{space 4}-9.698226{col 67}{space 3} 4.392272
{txt}{space 8}702  {c |}{col 14}{res}{space 2}-2.857938{col 26}{space 2} 3.430268{col 37}{space 1}   -0.83{col 46}{space 3}0.418{col 54}{space 4}-10.16938{col 67}{space 3} 4.453506
{txt}{space 8}703  {c |}{col 14}{res}{space 2}-2.453825{col 26}{space 2} 3.293494{col 37}{space 1}   -0.75{col 46}{space 3}0.468{col 54}{space 4} -9.47374{col 67}{space 3} 4.566091
{txt}{space 8}704  {c |}{col 14}{res}{space 2}-2.209128{col 26}{space 2} 3.264076{col 37}{space 1}   -0.68{col 46}{space 3}0.509{col 54}{space 4}-9.166341{col 67}{space 3} 4.748085
{txt}{space 8}705  {c |}{col 14}{res}{space 2}-2.146063{col 26}{space 2} 3.280416{col 37}{space 1}   -0.65{col 46}{space 3}0.523{col 54}{space 4}-9.138105{col 67}{space 3} 4.845979
{txt}{space 8}706  {c |}{col 14}{res}{space 2}-2.231288{col 26}{space 2} 3.293682{col 37}{space 1}   -0.68{col 46}{space 3}0.508{col 54}{space 4}-9.251605{col 67}{space 3} 4.789029
{txt}{space 8}707  {c |}{col 14}{res}{space 2}-2.355496{col 26}{space 2} 3.299644{col 37}{space 1}   -0.71{col 46}{space 3}0.486{col 54}{space 4}-9.388521{col 67}{space 3}  4.67753
{txt}{space 8}708  {c |}{col 14}{res}{space 2}-2.056461{col 26}{space 2} 3.607595{col 37}{space 1}   -0.57{col 46}{space 3}0.577{col 54}{space 4}-9.745868{col 67}{space 3} 5.632946
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-2.645566{col 26}{space 2} 3.539177{col 37}{space 1}   -0.75{col 46}{space 3}0.466{col 54}{space 4}-10.18914{col 67}{space 3} 4.898011
{txt}{space 8}710  {c |}{col 14}{res}{space 2}-2.332365{col 26}{space 2} 3.584603{col 37}{space 1}   -0.65{col 46}{space 3}0.525{col 54}{space 4}-9.972766{col 67}{space 3} 5.308036
{txt}{space 8}711  {c |}{col 14}{res}{space 2}-2.010881{col 26}{space 2} 3.572235{col 37}{space 1}   -0.56{col 46}{space 3}0.582{col 54}{space 4} -9.62492{col 67}{space 3} 5.603157
{txt}{space 8}712  {c |}{col 14}{res}{space 2} -2.42398{col 26}{space 2} 3.570269{col 37}{space 1}   -0.68{col 46}{space 3}0.508{col 54}{space 4}-10.03383{col 67}{space 3} 5.185868
{txt}{space 8}713  {c |}{col 14}{res}{space 2}-1.962752{col 26}{space 2} 3.536296{col 37}{space 1}   -0.56{col 46}{space 3}0.587{col 54}{space 4}-9.500188{col 67}{space 3} 5.574685
{txt}{space 8}714  {c |}{col 14}{res}{space 2}-2.306755{col 26}{space 2} 3.555003{col 37}{space 1}   -0.65{col 46}{space 3}0.526{col 54}{space 4}-9.884065{col 67}{space 3} 5.270554
{txt}{space 8}715  {c |}{col 14}{res}{space 2}-2.291883{col 26}{space 2} 3.578132{col 37}{space 1}   -0.64{col 46}{space 3}0.531{col 54}{space 4}-9.918491{col 67}{space 3} 5.334725
{txt}{space 8}716  {c |}{col 14}{res}{space 2}-2.389386{col 26}{space 2} 3.562629{col 37}{space 1}   -0.67{col 46}{space 3}0.513{col 54}{space 4}-9.982951{col 67}{space 3} 5.204178
{txt}{space 8}717  {c |}{col 14}{res}{space 2}-2.542578{col 26}{space 2} 3.558636{col 37}{space 1}   -0.71{col 46}{space 3}0.486{col 54}{space 4}-10.12763{col 67}{space 3} 5.042474
{txt}{space 8}718  {c |}{col 14}{res}{space 2}-2.165667{col 26}{space 2} 3.533415{col 37}{space 1}   -0.61{col 46}{space 3}0.549{col 54}{space 4}-9.696963{col 67}{space 3}  5.36563
{txt}{space 8}719  {c |}{col 14}{res}{space 2}-2.306673{col 26}{space 2} 3.577008{col 37}{space 1}   -0.64{col 46}{space 3}0.529{col 54}{space 4}-9.930884{col 67}{space 3} 5.317538
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.827416{col 26}{space 2} .2888469{col 37}{space 1}    6.33{col 46}{space 3}0.000{col 54}{space 4} 1.211754{col 67}{space 3} 2.443079
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.119332{col 26}{space 2} 1.345761{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4}-3.987754{col 67}{space 3}  1.74909
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.742393{col 26}{space 2} 2.087821{col 37}{space 1}   -0.83{col 46}{space 3}0.417{col 54}{space 4}-6.192478{col 67}{space 3} 2.707692
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.9631207{col 26}{space 2} .2773821{col 37}{space 1}   -3.47{col 46}{space 3}0.003{col 54}{space 4}-1.554347{col 67}{space 3}-.3718947
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2}   .36367{col 26}{space 2} .2422154{col 37}{space 1}    1.50{col 46}{space 3}0.154{col 54}{space 4}-.1525998{col 67}{space 3} .8799398
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} -.519432{col 26}{space 2} 2.217723{col 37}{space 1}   -0.23{col 46}{space 3}0.818{col 54}{space 4}-5.246397{col 67}{space 3} 4.207534
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2}  .788917{col 26}{space 2} 1.008943{col 37}{space 1}    0.78{col 46}{space 3}0.446{col 54}{space 4}-1.361594{col 67}{space 3} 2.939428
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-1.927006{col 26}{space 2} .9248668{col 37}{space 1}   -2.08{col 46}{space 3}0.055{col 54}{space 4}-3.898313{col 67}{space 3} .0443012
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-3.461105{col 26}{space 2}  .768098{col 37}{space 1}   -4.51{col 46}{space 3}0.000{col 54}{space 4}-5.098267{col 67}{space 3}-1.823943
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-.9547319{col 26}{space 2} 1.240374{col 37}{space 1}   -0.77{col 46}{space 3}0.453{col 54}{space 4}-3.598525{col 67}{space 3} 1.689062
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2}-2.062674{col 26}{space 2} .3645529{col 37}{space 1}   -5.66{col 46}{space 3}0.000{col 54}{space 4}  -2.8397{col 67}{space 3}-1.285648
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}-.2062521{col 26}{space 2} 1.374904{col 37}{space 1}   -0.15{col 46}{space 3}0.883{col 54}{space 4}-3.136792{col 67}{space 3} 2.724287
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 3.759453{col 26}{space 2} 1.328973{col 37}{space 1}    2.83{col 46}{space 3}0.013{col 54}{space 4} .9268143{col 67}{space 3} 6.592091
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} 4.856686{col 26}{space 2} 5.600939{col 37}{space 1}    0.87{col 46}{space 3}0.400{col 54}{space 4}-7.081432{col 67}{space 3}  16.7948
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-2.721161{col 26}{space 2} 2.064296{col 37}{space 1}   -1.32{col 46}{space 3}0.207{col 54}{space 4}-7.121105{col 67}{space 3} 1.678782
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-27.82778{col 26}{space 2} 24.67195{col 37}{space 1}   -1.13{col 46}{space 3}0.277{col 54}{space 4}-80.41479{col 67}{space 3} 24.75923
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 20 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -3.8831
{col 25}{txt}Prob>|t| = {res}    0.0161

95%{txt} confidence set for null hypothesis expression: [{res}-3.788{txt}, {res}-.7867{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 28}t(15) = {res}    1.0906
{col 25}{txt}Prob>|t| = {res}    0.2940

95%{txt} confidence set for null hypothesis expression: [{res}-1.974{txt}, {res}7.474{txt}]
{res}
Warning: 10 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 28}t(15) = {res}    1.0357
{col 25}{txt}Prob>|t| = {res}    0.3546

95%{txt} confidence set for null hypothesis expression: [{res}-.7098{txt}, {res}1.415{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   -1.1355
{col 25}{txt}Prob>|t| = {res}    0.2725

95%{txt} confidence set for null hypothesis expression: [{res}-90.15{txt}, {res}22.6{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.7037
                                                {txt}Root MSE          =    {res} 1.3474

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 8}four {c |}{col 14}{res}{space 2}-1.413278{col 26}{space 2} .2762783{col 37}{space 1}   -5.12{col 46}{space 3}0.000{col 54}{space 4}-2.002151{col 67}{space 3}-.8244044
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 2.409006{col 26}{space 2} 2.072773{col 37}{space 1}    1.16{col 46}{space 3}0.263{col 54}{space 4}-2.009004{col 67}{space 3} 6.827016
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .7146304{col 26}{space 2} .5228863{col 37}{space 1}    1.37{col 46}{space 3}0.192{col 54}{space 4}-.3998753{col 67}{space 3} 1.829136
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2721267{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4} -.633163{col 67}{space 3} .5268858
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2833452{col 37}{space 1}   -1.73{col 46}{space 3}0.103{col 54}{space 4}-1.095522{col 67}{space 3} .1123505
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3040009{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-.8491256{col 67}{space 3} .4467994
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2895211{col 37}{space 1}   -0.81{col 46}{space 3}0.433{col 54}{space 4}-.8501701{col 67}{space 3} .3840289
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2871265{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}-.5700453{col 67}{space 3} .6539459
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3467316{col 37}{space 1}    1.04{col 46}{space 3}0.316{col 54}{space 4}-.3795197{col 67}{space 3} 1.098562
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3868755{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-.6359824{col 67}{space 3} 1.013229
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3753808{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-.7275172{col 67}{space 3} .8726931
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2878324{col 37}{space 1}   -0.60{col 46}{space 3}0.558{col 54}{space 4}-.7860253{col 67}{space 3} .4409752
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2} .3202635{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6975036{col 67}{space 3} .6677473
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3222327{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7074919{col 67}{space 3} .6661535
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.8006311{col 26}{space 2} .5304021{col 37}{space 1}   -1.51{col 46}{space 3}0.152{col 54}{space 4}-1.931156{col 67}{space 3} .3298942
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.3844477{col 26}{space 2} .5684266{col 37}{space 1}   -0.68{col 46}{space 3}0.509{col 54}{space 4} -1.59602{col 67}{space 3} .8271249
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.3658625{col 26}{space 2} .5074236{col 37}{space 1}   -0.72{col 46}{space 3}0.482{col 54}{space 4} -1.44741{col 67}{space 3} .7156853
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.5886756{col 26}{space 2} .5544934{col 37}{space 1}   -1.06{col 46}{space 3}0.305{col 54}{space 4} -1.77055{col 67}{space 3} .5931991
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.4816528{col 26}{space 2} .5714542{col 37}{space 1}   -0.84{col 46}{space 3}0.413{col 54}{space 4}-1.699679{col 67}{space 3}  .736373
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.6523252{col 26}{space 2} .5377365{col 37}{space 1}   -1.21{col 46}{space 3}0.244{col 54}{space 4}-1.798483{col 67}{space 3} .4938329
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .0746298{col 26}{space 2} .5542436{col 37}{space 1}    0.13{col 46}{space 3}0.895{col 54}{space 4}-1.106712{col 67}{space 3} 1.255972
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-1.208446{col 26}{space 2} .5047016{col 37}{space 1}   -2.39{col 46}{space 3}0.030{col 54}{space 4}-2.284192{col 67}{space 3}-.1326997
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-1.404209{col 26}{space 2} .5125689{col 37}{space 1}   -2.74{col 46}{space 3}0.015{col 54}{space 4}-2.496724{col 67}{space 3}-.3116946
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-1.047403{col 26}{space 2} .6895954{col 37}{space 1}   -1.52{col 46}{space 3}0.150{col 54}{space 4}-2.517241{col 67}{space 3} .4224348
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.9007633{col 26}{space 2} .6140374{col 37}{space 1}   -1.47{col 46}{space 3}0.163{col 54}{space 4}-2.209553{col 67}{space 3} .4080264
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.6285968{col 26}{space 2} .7301926{col 37}{space 1}   -0.86{col 46}{space 3}0.403{col 54}{space 4}-2.184966{col 67}{space 3}  .927772
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-1.431523{col 26}{space 2} .8257805{col 37}{space 1}   -1.73{col 46}{space 3}0.103{col 54}{space 4}-3.191632{col 67}{space 3} .3285867
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.8833635{col 26}{space 2} .9357572{col 37}{space 1}   -0.94{col 46}{space 3}0.360{col 54}{space 4}-2.877883{col 67}{space 3} 1.111156
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-1.172557{col 26}{space 2} .8805829{col 37}{space 1}   -1.33{col 46}{space 3}0.203{col 54}{space 4}-3.049475{col 67}{space 3} .7043608
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-1.019493{col 26}{space 2} .8919671{col 37}{space 1}   -1.14{col 46}{space 3}0.271{col 54}{space 4}-2.920676{col 67}{space 3} .8816898
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.5560567{col 26}{space 2} .7216359{col 37}{space 1}   -0.77{col 46}{space 3}0.453{col 54}{space 4}-2.094187{col 67}{space 3} .9820738
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.7103468{col 26}{space 2}  .774278{col 37}{space 1}   -0.92{col 46}{space 3}0.373{col 54}{space 4}-2.360681{col 67}{space 3} .9399877
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.6871276{col 26}{space 2} .8267179{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4}-2.449235{col 67}{space 3}  1.07498
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.8244347{col 26}{space 2} .8715843{col 37}{space 1}   -0.95{col 46}{space 3}0.359{col 54}{space 4}-2.682173{col 67}{space 3} 1.033303
{txt}{space 8}584  {c |}{col 14}{res}{space 2} -.658252{col 26}{space 2} .8622509{col 37}{space 1}   -0.76{col 46}{space 3}0.457{col 54}{space 4}-2.496096{col 67}{space 3} 1.179592
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.7326025{col 26}{space 2} .7925647{col 37}{space 1}   -0.92{col 46}{space 3}0.370{col 54}{space 4}-2.421914{col 67}{space 3} .9567091
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.8339841{col 26}{space 2} .8438728{col 37}{space 1}   -0.99{col 46}{space 3}0.339{col 54}{space 4}-2.632656{col 67}{space 3} .9646883
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-1.053545{col 26}{space 2} .8717466{col 37}{space 1}   -1.21{col 46}{space 3}0.246{col 54}{space 4}-2.911629{col 67}{space 3} .8045392
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-1.093007{col 26}{space 2} 1.105588{col 37}{space 1}   -0.99{col 46}{space 3}0.339{col 54}{space 4}-3.449511{col 67}{space 3} 1.263497
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.8948843{col 26}{space 2} 1.065805{col 37}{space 1}   -0.84{col 46}{space 3}0.414{col 54}{space 4}-3.166594{col 67}{space 3} 1.376826
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.9664057{col 26}{space 2} 1.070043{col 37}{space 1}   -0.90{col 46}{space 3}0.381{col 54}{space 4}-3.247148{col 67}{space 3} 1.314337
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-1.551375{col 26}{space 2} 1.119111{col 37}{space 1}   -1.39{col 46}{space 3}0.186{col 54}{space 4}-3.936704{col 67}{space 3} .8339535
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.9694917{col 26}{space 2} .9703802{col 37}{space 1}   -1.00{col 46}{space 3}0.334{col 54}{space 4}-3.037808{col 67}{space 3} 1.098825
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-.6685022{col 26}{space 2} 1.122289{col 37}{space 1}   -0.60{col 46}{space 3}0.560{col 54}{space 4}-3.060605{col 67}{space 3} 1.723601
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-.6583068{col 26}{space 2} 1.158853{col 37}{space 1}   -0.57{col 46}{space 3}0.578{col 54}{space 4}-3.128345{col 67}{space 3} 1.811731
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-.6633198{col 26}{space 2} 1.171261{col 37}{space 1}   -0.57{col 46}{space 3}0.580{col 54}{space 4}-3.159803{col 67}{space 3} 1.833164
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.9591291{col 26}{space 2}  1.01117{col 37}{space 1}   -0.95{col 46}{space 3}0.358{col 54}{space 4}-3.114388{col 67}{space 3}  1.19613
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.9582035{col 26}{space 2} 1.130467{col 37}{space 1}   -0.85{col 46}{space 3}0.410{col 54}{space 4}-3.367738{col 67}{space 3} 1.451331
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.8449849{col 26}{space 2} 1.019936{col 37}{space 1}   -0.83{col 46}{space 3}0.420{col 54}{space 4}-3.018927{col 67}{space 3} 1.328957
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-1.050697{col 26}{space 2} 1.029803{col 37}{space 1}   -1.02{col 46}{space 3}0.324{col 54}{space 4} -3.24567{col 67}{space 3} 1.144276
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-1.149544{col 26}{space 2}   1.3633{col 37}{space 1}   -0.84{col 46}{space 3}0.412{col 54}{space 4}-4.055349{col 67}{space 3}  1.75626
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-1.392575{col 26}{space 2} 1.342992{col 37}{space 1}   -1.04{col 46}{space 3}0.316{col 54}{space 4}-4.255095{col 67}{space 3} 1.469946
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.9556223{col 26}{space 2} 1.427607{col 37}{space 1}   -0.67{col 46}{space 3}0.513{col 54}{space 4}-3.998495{col 67}{space 3} 2.087251
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-2.096724{col 26}{space 2} 1.415927{col 37}{space 1}   -1.48{col 46}{space 3}0.159{col 54}{space 4}-5.114702{col 67}{space 3} .9212534
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-1.820465{col 26}{space 2} 1.385199{col 37}{space 1}   -1.31{col 46}{space 3}0.209{col 54}{space 4}-4.772948{col 67}{space 3} 1.132017
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-1.432768{col 26}{space 2} 1.424351{col 37}{space 1}   -1.01{col 46}{space 3}0.330{col 54}{space 4}  -4.4687{col 67}{space 3} 1.603164
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-1.829469{col 26}{space 2} 1.565262{col 37}{space 1}   -1.17{col 46}{space 3}0.261{col 54}{space 4}-5.165747{col 67}{space 3} 1.506809
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-1.512182{col 26}{space 2} 1.423113{col 37}{space 1}   -1.06{col 46}{space 3}0.305{col 54}{space 4}-4.545475{col 67}{space 3} 1.521111
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-1.690472{col 26}{space 2} 1.444569{col 37}{space 1}   -1.17{col 46}{space 3}0.260{col 54}{space 4}-4.769498{col 67}{space 3} 1.388554
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-1.722492{col 26}{space 2}  1.55807{col 37}{space 1}   -1.11{col 46}{space 3}0.286{col 54}{space 4}-5.043439{col 67}{space 3} 1.598456
{txt}{space 8}610  {c |}{col 14}{res}{space 2}-1.362547{col 26}{space 2} 1.581637{col 37}{space 1}   -0.86{col 46}{space 3}0.403{col 54}{space 4}-4.733726{col 67}{space 3} 2.008632
{txt}{space 8}611  {c |}{col 14}{res}{space 2}-1.108798{col 26}{space 2} 1.329925{col 37}{space 1}   -0.83{col 46}{space 3}0.418{col 54}{space 4}-3.943466{col 67}{space 3}  1.72587
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-1.921814{col 26}{space 2} 1.791001{col 37}{space 1}   -1.07{col 46}{space 3}0.300{col 54}{space 4}-5.739244{col 67}{space 3} 1.895615
{txt}{space 8}613  {c |}{col 14}{res}{space 2}-1.863467{col 26}{space 2} 1.914102{col 37}{space 1}   -0.97{col 46}{space 3}0.346{col 54}{space 4}-5.943279{col 67}{space 3} 2.216345
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-1.945712{col 26}{space 2} 1.802801{col 37}{space 1}   -1.08{col 46}{space 3}0.298{col 54}{space 4}-5.788291{col 67}{space 3} 1.896867
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-1.771559{col 26}{space 2} 1.797744{col 37}{space 1}   -0.99{col 46}{space 3}0.340{col 54}{space 4}-5.603359{col 67}{space 3} 2.060242
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-1.877682{col 26}{space 2} 1.707199{col 37}{space 1}   -1.10{col 46}{space 3}0.289{col 54}{space 4}-5.516491{col 67}{space 3} 1.761127
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-2.348172{col 26}{space 2}  1.97049{col 37}{space 1}   -1.19{col 46}{space 3}0.252{col 54}{space 4}-6.548173{col 67}{space 3} 1.851829
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-1.987827{col 26}{space 2}  1.74225{col 37}{space 1}   -1.14{col 46}{space 3}0.272{col 54}{space 4}-5.701345{col 67}{space 3} 1.725692
{txt}{space 8}619  {c |}{col 14}{res}{space 2} -1.51452{col 26}{space 2} 1.820967{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4}-5.395819{col 67}{space 3}  2.36678
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-1.742378{col 26}{space 2} 1.970651{col 37}{space 1}   -0.88{col 46}{space 3}0.391{col 54}{space 4} -5.94272{col 67}{space 3} 2.457965
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-1.637528{col 26}{space 2}  1.74266{col 37}{space 1}   -0.94{col 46}{space 3}0.362{col 54}{space 4} -5.35192{col 67}{space 3} 2.076864
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-1.829801{col 26}{space 2} 1.691677{col 37}{space 1}   -1.08{col 46}{space 3}0.296{col 54}{space 4}-5.435526{col 67}{space 3} 1.775923
{txt}{space 8}623  {c |}{col 14}{res}{space 2} -1.83252{col 26}{space 2} 1.722479{col 37}{space 1}   -1.06{col 46}{space 3}0.304{col 54}{space 4}-5.503897{col 67}{space 3} 1.838857
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-2.368666{col 26}{space 2} 2.027675{col 37}{space 1}   -1.17{col 46}{space 3}0.261{col 54}{space 4}-6.690554{col 67}{space 3} 1.953222
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-2.366538{col 26}{space 2} 2.036192{col 37}{space 1}   -1.16{col 46}{space 3}0.263{col 54}{space 4}-6.706578{col 67}{space 3} 1.973502
{txt}{space 8}626  {c |}{col 14}{res}{space 2} -2.07492{col 26}{space 2} 2.094348{col 37}{space 1}   -0.99{col 46}{space 3}0.338{col 54}{space 4}-6.538916{col 67}{space 3} 2.389077
{txt}{space 8}627  {c |}{col 14}{res}{space 2} -2.48255{col 26}{space 2} 2.072036{col 37}{space 1}   -1.20{col 46}{space 3}0.249{col 54}{space 4} -6.89899{col 67}{space 3}  1.93389
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-2.937614{col 26}{space 2} 2.087503{col 37}{space 1}   -1.41{col 46}{space 3}0.180{col 54}{space 4}-7.387021{col 67}{space 3} 1.511793
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-2.552518{col 26}{space 2} 1.982442{col 37}{space 1}   -1.29{col 46}{space 3}0.217{col 54}{space 4}-6.777992{col 67}{space 3} 1.672957
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-2.093838{col 26}{space 2} 1.997626{col 37}{space 1}   -1.05{col 46}{space 3}0.311{col 54}{space 4}-6.351677{col 67}{space 3} 2.164001
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-2.907869{col 26}{space 2} 2.222454{col 37}{space 1}   -1.31{col 46}{space 3}0.210{col 54}{space 4}-7.644918{col 67}{space 3} 1.829179
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-2.396824{col 26}{space 2}  2.05802{col 37}{space 1}   -1.16{col 46}{space 3}0.262{col 54}{space 4}-6.783391{col 67}{space 3} 1.989743
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-1.935348{col 26}{space 2} 1.904356{col 37}{space 1}   -1.02{col 46}{space 3}0.326{col 54}{space 4}-5.994388{col 67}{space 3} 2.123691
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-2.424257{col 26}{space 2} 2.017851{col 37}{space 1}   -1.20{col 46}{space 3}0.248{col 54}{space 4}-6.725204{col 67}{space 3}  1.87669
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-2.156937{col 26}{space 2} 1.995637{col 37}{space 1}   -1.08{col 46}{space 3}0.297{col 54}{space 4}-6.410536{col 67}{space 3} 2.096663
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-2.595022{col 26}{space 2} 2.275251{col 37}{space 1}   -1.14{col 46}{space 3}0.272{col 54}{space 4}-7.444605{col 67}{space 3} 2.254561
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-2.993683{col 26}{space 2} 2.262699{col 37}{space 1}   -1.32{col 46}{space 3}0.206{col 54}{space 4}-7.816513{col 67}{space 3} 1.829147
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-2.031985{col 26}{space 2} 2.197953{col 37}{space 1}   -0.92{col 46}{space 3}0.370{col 54}{space 4} -6.71681{col 67}{space 3}  2.65284
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-2.393116{col 26}{space 2} 2.231394{col 37}{space 1}   -1.07{col 46}{space 3}0.300{col 54}{space 4}-7.149218{col 67}{space 3} 2.362987
{txt}{space 8}640  {c |}{col 14}{res}{space 2} -2.22238{col 26}{space 2} 2.199117{col 37}{space 1}   -1.01{col 46}{space 3}0.328{col 54}{space 4}-6.909688{col 67}{space 3} 2.464927
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-2.869155{col 26}{space 2} 2.254642{col 37}{space 1}   -1.27{col 46}{space 3}0.223{col 54}{space 4}-7.674812{col 67}{space 3} 1.936501
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-2.954121{col 26}{space 2} 2.301959{col 37}{space 1}   -1.28{col 46}{space 3}0.219{col 54}{space 4}-7.860631{col 67}{space 3} 1.952389
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-2.815187{col 26}{space 2} 2.272711{col 37}{space 1}   -1.24{col 46}{space 3}0.234{col 54}{space 4}-7.659355{col 67}{space 3} 2.028982
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-3.122069{col 26}{space 2} 2.284394{col 37}{space 1}   -1.37{col 46}{space 3}0.192{col 54}{space 4}-7.991139{col 67}{space 3} 1.747002
{txt}{space 8}645  {c |}{col 14}{res}{space 2}-2.303673{col 26}{space 2}  2.46052{col 37}{space 1}   -0.94{col 46}{space 3}0.364{col 54}{space 4}-7.548148{col 67}{space 3} 2.940802
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-2.668041{col 26}{space 2} 2.501599{col 37}{space 1}   -1.07{col 46}{space 3}0.303{col 54}{space 4}-8.000072{col 67}{space 3}  2.66399
{txt}{space 8}647  {c |}{col 14}{res}{space 2}-2.528752{col 26}{space 2} 2.519918{col 37}{space 1}   -1.00{col 46}{space 3}0.332{col 54}{space 4} -7.89983{col 67}{space 3} 2.842325
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-2.430382{col 26}{space 2} 2.582334{col 37}{space 1}   -0.94{col 46}{space 3}0.362{col 54}{space 4}-7.934496{col 67}{space 3} 3.073731
{txt}{space 8}649  {c |}{col 14}{res}{space 2}-2.185499{col 26}{space 2} 2.575095{col 37}{space 1}   -0.85{col 46}{space 3}0.409{col 54}{space 4}-7.674184{col 67}{space 3} 3.303186
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-2.761096{col 26}{space 2}  2.60521{col 37}{space 1}   -1.06{col 46}{space 3}0.306{col 54}{space 4}-8.313969{col 67}{space 3} 2.791776
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-2.907904{col 26}{space 2} 2.684242{col 37}{space 1}   -1.08{col 46}{space 3}0.296{col 54}{space 4}-8.629231{col 67}{space 3} 2.813424
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-2.748518{col 26}{space 2} 2.436528{col 37}{space 1}   -1.13{col 46}{space 3}0.277{col 54}{space 4}-7.941855{col 67}{space 3}  2.44482
{txt}{space 8}653  {c |}{col 14}{res}{space 2}-2.009447{col 26}{space 2} 2.621306{col 37}{space 1}   -0.77{col 46}{space 3}0.455{col 54}{space 4}-7.596627{col 67}{space 3} 3.577733
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-2.406524{col 26}{space 2} 2.568651{col 37}{space 1}   -0.94{col 46}{space 3}0.364{col 54}{space 4}-7.881474{col 67}{space 3} 3.068427
{txt}{space 8}655  {c |}{col 14}{res}{space 2}-2.401598{col 26}{space 2} 2.594801{col 37}{space 1}   -0.93{col 46}{space 3}0.369{col 54}{space 4}-7.932286{col 67}{space 3}  3.12909
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-2.561477{col 26}{space 2} 2.687771{col 37}{space 1}   -0.95{col 46}{space 3}0.356{col 54}{space 4}-8.290326{col 67}{space 3} 3.167372
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-2.750168{col 26}{space 2} 2.616127{col 37}{space 1}   -1.05{col 46}{space 3}0.310{col 54}{space 4}-8.326311{col 67}{space 3} 2.825974
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-3.072179{col 26}{space 2} 2.687893{col 37}{space 1}   -1.14{col 46}{space 3}0.271{col 54}{space 4}-8.801287{col 67}{space 3}  2.65693
{txt}{space 8}659  {c |}{col 14}{res}{space 2}-2.529961{col 26}{space 2} 2.606678{col 37}{space 1}   -0.97{col 46}{space 3}0.347{col 54}{space 4}-8.085963{col 67}{space 3} 3.026042
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-3.077233{col 26}{space 2} 2.791176{col 37}{space 1}   -1.10{col 46}{space 3}0.288{col 54}{space 4}-9.026483{col 67}{space 3} 2.872018
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-3.041706{col 26}{space 2} 2.688004{col 37}{space 1}   -1.13{col 46}{space 3}0.276{col 54}{space 4} -8.77105{col 67}{space 3} 2.687638
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-2.512267{col 26}{space 2} 2.812733{col 37}{space 1}   -0.89{col 46}{space 3}0.386{col 54}{space 4}-8.507464{col 67}{space 3} 3.482931
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-3.053588{col 26}{space 2}  2.80333{col 37}{space 1}   -1.09{col 46}{space 3}0.293{col 54}{space 4}-9.028745{col 67}{space 3} 2.921568
{txt}{space 8}664  {c |}{col 14}{res}{space 2}-2.830707{col 26}{space 2} 2.881136{col 37}{space 1}   -0.98{col 46}{space 3}0.341{col 54}{space 4}-8.971702{col 67}{space 3} 3.310289
{txt}{space 8}665  {c |}{col 14}{res}{space 2}-2.456388{col 26}{space 2} 2.756309{col 37}{space 1}   -0.89{col 46}{space 3}0.387{col 54}{space 4} -8.33132{col 67}{space 3} 3.418545
{txt}{space 8}666  {c |}{col 14}{res}{space 2}-2.500412{col 26}{space 2} 2.797625{col 37}{space 1}   -0.89{col 46}{space 3}0.386{col 54}{space 4}-8.463409{col 67}{space 3} 3.462585
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-2.661804{col 26}{space 2} 2.759412{col 37}{space 1}   -0.96{col 46}{space 3}0.350{col 54}{space 4}-8.543352{col 67}{space 3} 3.219744
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-2.800054{col 26}{space 2} 2.799956{col 37}{space 1}   -1.00{col 46}{space 3}0.333{col 54}{space 4} -8.76802{col 67}{space 3} 3.167912
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-2.684565{col 26}{space 2} 2.783894{col 37}{space 1}   -0.96{col 46}{space 3}0.350{col 54}{space 4}-8.618294{col 67}{space 3} 3.249165
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-3.033351{col 26}{space 2} 2.804458{col 37}{space 1}   -1.08{col 46}{space 3}0.297{col 54}{space 4}-9.010912{col 67}{space 3}  2.94421
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-2.742065{col 26}{space 2} 2.842163{col 37}{space 1}   -0.96{col 46}{space 3}0.350{col 54}{space 4}-8.799991{col 67}{space 3} 3.315862
{txt}{space 8}672  {c |}{col 14}{res}{space 2}-2.992791{col 26}{space 2} 2.921718{col 37}{space 1}   -1.02{col 46}{space 3}0.322{col 54}{space 4}-9.220284{col 67}{space 3} 3.234703
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-2.860936{col 26}{space 2} 2.925924{col 37}{space 1}   -0.98{col 46}{space 3}0.344{col 54}{space 4}-9.097395{col 67}{space 3} 3.375523
{txt}{space 8}674  {c |}{col 14}{res}{space 2}-2.695721{col 26}{space 2} 2.991958{col 37}{space 1}   -0.90{col 46}{space 3}0.382{col 54}{space 4}-9.072929{col 67}{space 3} 3.681486
{txt}{space 8}675  {c |}{col 14}{res}{space 2}-2.333964{col 26}{space 2} 3.007954{col 37}{space 1}   -0.78{col 46}{space 3}0.450{col 54}{space 4}-8.745267{col 67}{space 3} 4.077338
{txt}{space 8}676  {c |}{col 14}{res}{space 2}-2.273789{col 26}{space 2} 3.020778{col 37}{space 1}   -0.75{col 46}{space 3}0.463{col 54}{space 4}-8.712425{col 67}{space 3} 4.164848
{txt}{space 8}677  {c |}{col 14}{res}{space 2}-2.588593{col 26}{space 2} 2.962393{col 37}{space 1}   -0.87{col 46}{space 3}0.396{col 54}{space 4}-8.902785{col 67}{space 3} 3.725599
{txt}{space 8}678  {c |}{col 14}{res}{space 2}-2.362448{col 26}{space 2} 2.971789{col 37}{space 1}   -0.79{col 46}{space 3}0.439{col 54}{space 4}-8.696666{col 67}{space 3} 3.971771
{txt}{space 8}679  {c |}{col 14}{res}{space 2}-2.265245{col 26}{space 2} 2.976769{col 37}{space 1}   -0.76{col 46}{space 3}0.458{col 54}{space 4}-8.610079{col 67}{space 3} 4.079589
{txt}{space 8}680  {c |}{col 14}{res}{space 2}-2.214114{col 26}{space 2} 3.064735{col 37}{space 1}   -0.72{col 46}{space 3}0.481{col 54}{space 4}-8.746441{col 67}{space 3} 4.318213
{txt}{space 8}681  {c |}{col 14}{res}{space 2}-2.202492{col 26}{space 2} 2.948537{col 37}{space 1}   -0.75{col 46}{space 3}0.467{col 54}{space 4}-8.487149{col 67}{space 3} 4.082166
{txt}{space 8}682  {c |}{col 14}{res}{space 2}-2.542342{col 26}{space 2}  2.93597{col 37}{space 1}   -0.87{col 46}{space 3}0.400{col 54}{space 4}-8.800213{col 67}{space 3} 3.715529
{txt}{space 8}683  {c |}{col 14}{res}{space 2}-2.700308{col 26}{space 2} 3.057327{col 37}{space 1}   -0.88{col 46}{space 3}0.391{col 54}{space 4}-9.216847{col 67}{space 3} 3.816231
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-2.709871{col 26}{space 2} 3.259049{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4}-9.656369{col 67}{space 3} 4.236627
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-2.890121{col 26}{space 2} 3.166245{col 37}{space 1}   -0.91{col 46}{space 3}0.376{col 54}{space 4}-9.638813{col 67}{space 3} 3.858571
{txt}{space 8}686  {c |}{col 14}{res}{space 2}-2.896447{col 26}{space 2} 3.255119{col 37}{space 1}   -0.89{col 46}{space 3}0.388{col 54}{space 4} -9.83457{col 67}{space 3} 4.041675
{txt}{space 8}687  {c |}{col 14}{res}{space 2}-2.553397{col 26}{space 2} 3.146129{col 37}{space 1}   -0.81{col 46}{space 3}0.430{col 54}{space 4}-9.259211{col 67}{space 3} 4.152417
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-2.847652{col 26}{space 2} 3.232711{col 37}{space 1}   -0.88{col 46}{space 3}0.392{col 54}{space 4}-9.738014{col 67}{space 3} 4.042709
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-2.868939{col 26}{space 2} 3.228156{col 37}{space 1}   -0.89{col 46}{space 3}0.388{col 54}{space 4}-9.749592{col 67}{space 3} 4.011713
{txt}{space 8}690  {c |}{col 14}{res}{space 2}-3.152604{col 26}{space 2} 3.243375{col 37}{space 1}   -0.97{col 46}{space 3}0.346{col 54}{space 4}-10.06569{col 67}{space 3} 3.760487
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-3.007085{col 26}{space 2} 3.196556{col 37}{space 1}   -0.94{col 46}{space 3}0.362{col 54}{space 4}-9.820383{col 67}{space 3} 3.806213
{txt}{space 8}692  {c |}{col 14}{res}{space 2}-2.828644{col 26}{space 2} 3.242884{col 37}{space 1}   -0.87{col 46}{space 3}0.397{col 54}{space 4}-9.740688{col 67}{space 3} 4.083401
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-2.921194{col 26}{space 2} 3.168258{col 37}{space 1}   -0.92{col 46}{space 3}0.371{col 54}{space 4}-9.674177{col 67}{space 3} 3.831789
{txt}{space 8}694  {c |}{col 14}{res}{space 2}-2.836525{col 26}{space 2} 3.270949{col 37}{space 1}   -0.87{col 46}{space 3}0.399{col 54}{space 4}-9.808387{col 67}{space 3} 4.135337
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-3.047217{col 26}{space 2} 3.228437{col 37}{space 1}   -0.94{col 46}{space 3}0.360{col 54}{space 4}-9.928466{col 67}{space 3} 3.834033
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-2.967319{col 26}{space 2} 3.381521{col 37}{space 1}   -0.88{col 46}{space 3}0.394{col 54}{space 4}-10.17486{col 67}{space 3} 4.240222
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-3.007545{col 26}{space 2} 3.336325{col 37}{space 1}   -0.90{col 46}{space 3}0.382{col 54}{space 4}-10.11875{col 67}{space 3} 4.103664
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-2.949454{col 26}{space 2} 3.340218{col 37}{space 1}   -0.88{col 46}{space 3}0.391{col 54}{space 4}-10.06896{col 67}{space 3} 4.170053
{txt}{space 8}699  {c |}{col 14}{res}{space 2} -3.15641{col 26}{space 2} 3.342647{col 37}{space 1}   -0.94{col 46}{space 3}0.360{col 54}{space 4}-10.28109{col 67}{space 3} 3.968274
{txt}{space 8}700  {c |}{col 14}{res}{space 2}-2.880316{col 26}{space 2} 3.373439{col 37}{space 1}   -0.85{col 46}{space 3}0.407{col 54}{space 4}-10.07063{col 67}{space 3} 4.309999
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-3.244795{col 26}{space 2} 3.329866{col 37}{space 1}   -0.97{col 46}{space 3}0.345{col 54}{space 4}-10.34224{col 67}{space 3} 3.852647
{txt}{space 8}702  {c |}{col 14}{res}{space 2}-3.449756{col 26}{space 2} 3.498994{col 37}{space 1}   -0.99{col 46}{space 3}0.340{col 54}{space 4}-10.90768{col 67}{space 3} 4.008173
{txt}{space 8}703  {c |}{col 14}{res}{space 2}-3.045642{col 26}{space 2} 3.308612{col 37}{space 1}   -0.92{col 46}{space 3}0.372{col 54}{space 4}-10.09778{col 67}{space 3} 4.006499
{txt}{space 8}704  {c |}{col 14}{res}{space 2}-2.800946{col 26}{space 2} 3.286249{col 37}{space 1}   -0.85{col 46}{space 3}0.407{col 54}{space 4}-9.805421{col 67}{space 3} 4.203529
{txt}{space 8}705  {c |}{col 14}{res}{space 2} -2.73788{col 26}{space 2} 3.303262{col 37}{space 1}   -0.83{col 46}{space 3}0.420{col 54}{space 4}-9.778617{col 67}{space 3} 4.302857
{txt}{space 8}706  {c |}{col 14}{res}{space 2}-2.823106{col 26}{space 2}  3.33191{col 37}{space 1}   -0.85{col 46}{space 3}0.410{col 54}{space 4}-9.924903{col 67}{space 3} 4.278692
{txt}{space 8}707  {c |}{col 14}{res}{space 2}-2.947313{col 26}{space 2} 3.418431{col 37}{space 1}   -0.86{col 46}{space 3}0.402{col 54}{space 4}-10.23353{col 67}{space 3}   4.3389
{txt}{space 8}708  {c |}{col 14}{res}{space 2} -2.67303{col 26}{space 2} 3.638973{col 37}{space 1}   -0.73{col 46}{space 3}0.474{col 54}{space 4}-10.42932{col 67}{space 3} 5.083258
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-3.262136{col 26}{space 2} 3.722093{col 37}{space 1}   -0.88{col 46}{space 3}0.395{col 54}{space 4}-11.19559{col 67}{space 3} 4.671318
{txt}{space 8}710  {c |}{col 14}{res}{space 2}-2.948934{col 26}{space 2} 3.601847{col 37}{space 1}   -0.82{col 46}{space 3}0.426{col 54}{space 4}-10.62609{col 67}{space 3}  4.72822
{txt}{space 8}711  {c |}{col 14}{res}{space 2}-2.627451{col 26}{space 2} 3.533389{col 37}{space 1}   -0.74{col 46}{space 3}0.469{col 54}{space 4}-10.15869{col 67}{space 3}  4.90379
{txt}{space 8}712  {c |}{col 14}{res}{space 2}-3.040549{col 26}{space 2} 3.576376{col 37}{space 1}   -0.85{col 46}{space 3}0.409{col 54}{space 4}-10.66341{col 67}{space 3} 4.582316
{txt}{space 8}713  {c |}{col 14}{res}{space 2}-2.579321{col 26}{space 2} 3.526306{col 37}{space 1}   -0.73{col 46}{space 3}0.476{col 54}{space 4}-10.09546{col 67}{space 3} 4.936822
{txt}{space 8}714  {c |}{col 14}{res}{space 2}-2.923325{col 26}{space 2} 3.595312{col 37}{space 1}   -0.81{col 46}{space 3}0.429{col 54}{space 4}-10.58655{col 67}{space 3} 4.739902
{txt}{space 8}715  {c |}{col 14}{res}{space 2}-2.908452{col 26}{space 2} 3.549777{col 37}{space 1}   -0.82{col 46}{space 3}0.425{col 54}{space 4}-10.47462{col 67}{space 3} 4.657719
{txt}{space 8}716  {c |}{col 14}{res}{space 2}-3.005956{col 26}{space 2} 3.561604{col 37}{space 1}   -0.84{col 46}{space 3}0.412{col 54}{space 4}-10.59734{col 67}{space 3} 4.585424
{txt}{space 8}717  {c |}{col 14}{res}{space 2}-3.159147{col 26}{space 2}  3.56763{col 37}{space 1}   -0.89{col 46}{space 3}0.390{col 54}{space 4}-10.76337{col 67}{space 3} 4.445075
{txt}{space 8}718  {c |}{col 14}{res}{space 2}-2.782236{col 26}{space 2}  3.54954{col 37}{space 1}   -0.78{col 46}{space 3}0.445{col 54}{space 4} -10.3479{col 67}{space 3}  4.78343
{txt}{space 8}719  {c |}{col 14}{res}{space 2}-2.923242{col 26}{space 2} 3.569165{col 37}{space 1}   -0.82{col 46}{space 3}0.426{col 54}{space 4}-10.53074{col 67}{space 3} 4.684252
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.977143{col 26}{space 2} .3353935{col 37}{space 1}    5.89{col 46}{space 3}0.000{col 54}{space 4} 1.262269{col 67}{space 3} 2.692017
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.065969{col 26}{space 2}  1.34386{col 37}{space 1}   -0.79{col 46}{space 3}0.440{col 54}{space 4}-3.930339{col 67}{space 3} 1.798402
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.459973{col 26}{space 2} 2.109827{col 37}{space 1}   -0.69{col 46}{space 3}0.500{col 54}{space 4}-5.956962{col 67}{space 3} 3.037016
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-2.023407{col 26}{space 2} .0438493{col 37}{space 1}  -46.14{col 46}{space 3}0.000{col 54}{space 4}-2.116869{col 67}{space 3}-1.929944
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .8076615{col 26}{space 2} .2399759{col 37}{space 1}    3.37{col 46}{space 3}0.004{col 54}{space 4} .2961651{col 67}{space 3} 1.319158
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} -.242033{col 26}{space 2} 2.237073{col 37}{space 1}   -0.11{col 46}{space 3}0.915{col 54}{space 4}-5.010242{col 67}{space 3} 4.526176
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 1.311725{col 26}{space 2} 1.022478{col 37}{space 1}    1.28{col 46}{space 3}0.219{col 54}{space 4}-.8676349{col 67}{space 3} 3.491084
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-1.889747{col 26}{space 2} .9235988{col 37}{space 1}   -2.05{col 46}{space 3}0.059{col 54}{space 4}-3.858351{col 67}{space 3} .0788572
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-4.926982{col 26}{space 2} .7868225{col 37}{space 1}   -6.26{col 46}{space 3}0.000{col 54}{space 4}-6.604054{col 67}{space 3}-3.249909
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-.6806003{col 26}{space 2} 1.278517{col 37}{space 1}   -0.53{col 46}{space 3}0.602{col 54}{space 4}-3.405694{col 67}{space 3} 2.044493
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2}-2.158589{col 26}{space 2} .3780829{col 37}{space 1}   -5.71{col 46}{space 3}0.000{col 54}{space 4}-2.964454{col 67}{space 3}-1.352725
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}-.4001912{col 26}{space 2} 1.390891{col 37}{space 1}   -0.29{col 46}{space 3}0.777{col 54}{space 4}-3.364805{col 67}{space 3} 2.564423
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 3.181578{col 26}{space 2} 1.470195{col 37}{space 1}    2.16{col 46}{space 3}0.047{col 54}{space 4} .0479313{col 67}{space 3} 6.315224
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}  6.40754{col 26}{space 2} 5.872519{col 37}{space 1}    1.09{col 46}{space 3}0.292{col 54}{space 4}-6.109439{col 67}{space 3} 18.92452
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-2.715657{col 26}{space 2} 2.058236{col 37}{space 1}   -1.32{col 46}{space 3}0.207{col 54}{space 4}-7.102684{col 67}{space 3} 1.671369
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-32.91437{col 26}{space 2} 25.40578{col 37}{space 1}   -1.30{col 46}{space 3}0.215{col 54}{space 4} -87.0655{col 67}{space 3} 21.23676
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 148 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -5.0474
{col 25}{txt}Prob>|t| = {res}    0.0167

95%{txt} confidence set for null hypothesis expression: [{res}-2.276{txt}, {res}-.5549{txt}]
{res}
Warning: 2 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 28}t(15) = {res}    1.1704
{col 25}{txt}Prob>|t| = {res}    0.2491

95%{txt} confidence set for null hypothesis expression: [{res}-1.779{txt}, {res}7.682{txt}]
{res}
Warning: 17 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 28}t(15) = {res}    1.3708
{col 25}{txt}Prob>|t| = {res}    0.2449

95%{txt} confidence set for null hypothesis expression: [{res}-.7738{txt}, {res}2.09{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   -1.3048
{col 25}{txt}Prob>|t| = {res}    0.1948

95%{txt} confidence set for null hypothesis expression: [{res}-98.23{txt}, {res}18.32{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.6961
                                                {txt}Root MSE          =    {res} 1.3646

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 8}five {c |}{col 14}{res}{space 2}-.6420112{col 26}{space 2}  .244597{col 37}{space 1}   -2.62{col 46}{space 3}0.019{col 54}{space 4}-1.163357{col 67}{space 3}-.1206652
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2}  2.22893{col 26}{space 2} 2.041004{col 37}{space 1}    1.09{col 46}{space 3}0.292{col 54}{space 4}-2.121367{col 67}{space 3} 6.579227
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}  .707137{col 26}{space 2} .4659768{col 37}{space 1}    1.52{col 46}{space 3}0.150{col 54}{space 4} -.286069{col 67}{space 3} 1.700343
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2721267{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4} -.633163{col 67}{space 3} .5268858
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2833452{col 37}{space 1}   -1.73{col 46}{space 3}0.103{col 54}{space 4}-1.095522{col 67}{space 3} .1123505
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3040009{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-.8491256{col 67}{space 3} .4467994
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2895211{col 37}{space 1}   -0.81{col 46}{space 3}0.433{col 54}{space 4}-.8501701{col 67}{space 3} .3840289
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2871265{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}-.5700453{col 67}{space 3} .6539459
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3467316{col 37}{space 1}    1.04{col 46}{space 3}0.316{col 54}{space 4}-.3795197{col 67}{space 3} 1.098562
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3868755{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-.6359824{col 67}{space 3} 1.013229
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3753808{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-.7275172{col 67}{space 3} .8726931
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2878324{col 37}{space 1}   -0.60{col 46}{space 3}0.558{col 54}{space 4}-.7860253{col 67}{space 3} .4409752
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2} .3202635{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6975036{col 67}{space 3} .6677473
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3222327{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7074919{col 67}{space 3} .6661535
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.7712511{col 26}{space 2} .5148358{col 37}{space 1}   -1.50{col 46}{space 3}0.155{col 54}{space 4}-1.868598{col 67}{space 3} .3260954
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.3550676{col 26}{space 2} .5585684{col 37}{space 1}   -0.64{col 46}{space 3}0.535{col 54}{space 4}-1.545628{col 67}{space 3} .8354927
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.3364824{col 26}{space 2} .5031157{col 37}{space 1}   -0.67{col 46}{space 3}0.514{col 54}{space 4}-1.408848{col 67}{space 3} .7358833
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.5592955{col 26}{space 2} .5428439{col 37}{space 1}   -1.03{col 46}{space 3}0.319{col 54}{space 4} -1.71634{col 67}{space 3} .5977488
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.4522728{col 26}{space 2} .5604522{col 37}{space 1}   -0.81{col 46}{space 3}0.432{col 54}{space 4}-1.646848{col 67}{space 3} .7423028
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.6229452{col 26}{space 2} .5223912{col 37}{space 1}   -1.19{col 46}{space 3}0.252{col 54}{space 4}-1.736396{col 67}{space 3} .4905053
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .1040098{col 26}{space 2} .5438388{col 37}{space 1}    0.19{col 46}{space 3}0.851{col 54}{space 4}-1.055155{col 67}{space 3} 1.263175
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-1.179066{col 26}{space 2} .4841333{col 37}{space 1}   -2.44{col 46}{space 3}0.028{col 54}{space 4}-2.210971{col 67}{space 3}  -.14716
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-1.374829{col 26}{space 2} .4918147{col 37}{space 1}   -2.80{col 46}{space 3}0.014{col 54}{space 4}-2.423108{col 67}{space 3}-.3265512
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-1.018023{col 26}{space 2} .6771042{col 37}{space 1}   -1.50{col 46}{space 3}0.153{col 54}{space 4}-2.461236{col 67}{space 3} .4251905
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.8713833{col 26}{space 2} .6014592{col 37}{space 1}   -1.45{col 46}{space 3}0.168{col 54}{space 4}-2.153363{col 67}{space 3} .4105966
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.5992167{col 26}{space 2} .7191811{col 37}{space 1}   -0.83{col 46}{space 3}0.418{col 54}{space 4}-2.132115{col 67}{space 3} .9336814
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-1.376405{col 26}{space 2} .7981497{col 37}{space 1}   -1.72{col 46}{space 3}0.105{col 54}{space 4}-3.077621{col 67}{space 3} .3248108
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.8282456{col 26}{space 2} .9206859{col 37}{space 1}   -0.90{col 46}{space 3}0.383{col 54}{space 4}-2.790641{col 67}{space 3}  1.13415
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-1.117439{col 26}{space 2} .8417271{col 37}{space 1}   -1.33{col 46}{space 3}0.204{col 54}{space 4}-2.911538{col 67}{space 3} .6766596
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.9643752{col 26}{space 2}  .870248{col 37}{space 1}   -1.11{col 46}{space 3}0.285{col 54}{space 4}-2.819265{col 67}{space 3} .8905145
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.5009389{col 26}{space 2} .6909479{col 37}{space 1}   -0.73{col 46}{space 3}0.480{col 54}{space 4}-1.973659{col 67}{space 3} .9717816
{txt}{space 8}581  {c |}{col 14}{res}{space 2} -.655229{col 26}{space 2}  .751073{col 37}{space 1}   -0.87{col 46}{space 3}0.397{col 54}{space 4}-2.256103{col 67}{space 3} .9456452
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.6320098{col 26}{space 2} .8021398{col 37}{space 1}   -0.79{col 46}{space 3}0.443{col 54}{space 4} -2.34173{col 67}{space 3} 1.077711
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.7693169{col 26}{space 2} .8437771{col 37}{space 1}   -0.91{col 46}{space 3}0.376{col 54}{space 4}-2.567785{col 67}{space 3} 1.029151
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.6031341{col 26}{space 2} .8365208{col 37}{space 1}   -0.72{col 46}{space 3}0.482{col 54}{space 4}-2.386136{col 67}{space 3} 1.179868
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.6774847{col 26}{space 2}   .77035{col 37}{space 1}   -0.88{col 46}{space 3}0.393{col 54}{space 4}-2.319447{col 67}{space 3} .9644775
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.7788662{col 26}{space 2} .8157916{col 37}{space 1}   -0.95{col 46}{space 3}0.355{col 54}{space 4}-2.517685{col 67}{space 3} .9599524
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.9984268{col 26}{space 2} .8444551{col 37}{space 1}   -1.18{col 46}{space 3}0.255{col 54}{space 4} -2.79834{col 67}{space 3} .8014867
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-1.009626{col 26}{space 2} 1.076193{col 37}{space 1}   -0.94{col 46}{space 3}0.363{col 54}{space 4}-3.303477{col 67}{space 3} 1.284224
{txt}{space 8}589  {c |}{col 14}{res}{space 2} -.811504{col 26}{space 2} 1.024364{col 37}{space 1}   -0.79{col 46}{space 3}0.441{col 54}{space 4}-2.994884{col 67}{space 3} 1.371876
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.8830254{col 26}{space 2} 1.032441{col 37}{space 1}   -0.86{col 46}{space 3}0.406{col 54}{space 4}-3.083622{col 67}{space 3} 1.317571
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-1.467995{col 26}{space 2}  1.07059{col 37}{space 1}   -1.37{col 46}{space 3}0.190{col 54}{space 4}-3.749903{col 67}{space 3} .8139135
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.8861114{col 26}{space 2} .9353565{col 37}{space 1}   -0.95{col 46}{space 3}0.358{col 54}{space 4}-2.879777{col 67}{space 3} 1.107554
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-.5851219{col 26}{space 2} 1.095461{col 37}{space 1}   -0.53{col 46}{space 3}0.601{col 54}{space 4}-2.920043{col 67}{space 3} 1.749799
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-.5749265{col 26}{space 2} 1.139368{col 37}{space 1}   -0.50{col 46}{space 3}0.621{col 54}{space 4}-3.003431{col 67}{space 3} 1.853578
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-.5799395{col 26}{space 2} 1.142993{col 37}{space 1}   -0.51{col 46}{space 3}0.619{col 54}{space 4}-3.016172{col 67}{space 3} 1.856293
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.8757488{col 26}{space 2} .9806668{col 37}{space 1}   -0.89{col 46}{space 3}0.386{col 54}{space 4}-2.965991{col 67}{space 3} 1.214493
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.8748231{col 26}{space 2} 1.103584{col 37}{space 1}   -0.79{col 46}{space 3}0.440{col 54}{space 4}-3.227057{col 67}{space 3} 1.477411
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.7616046{col 26}{space 2} .9814017{col 37}{space 1}   -0.78{col 46}{space 3}0.450{col 54}{space 4}-2.853413{col 67}{space 3} 1.330204
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.9673171{col 26}{space 2} .9910873{col 37}{space 1}   -0.98{col 46}{space 3}0.345{col 54}{space 4} -3.07977{col 67}{space 3} 1.145136
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-1.040718{col 26}{space 2} 1.328992{col 37}{space 1}   -0.78{col 46}{space 3}0.446{col 54}{space 4}-3.873398{col 67}{space 3} 1.791962
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-1.283749{col 26}{space 2} 1.300798{col 37}{space 1}   -0.99{col 46}{space 3}0.339{col 54}{space 4}-4.056334{col 67}{space 3} 1.488836
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.8467961{col 26}{space 2} 1.393272{col 37}{space 1}   -0.61{col 46}{space 3}0.552{col 54}{space 4}-3.816485{col 67}{space 3} 2.122893
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-1.987898{col 26}{space 2} 1.385492{col 37}{space 1}   -1.43{col 46}{space 3}0.172{col 54}{space 4}-4.941005{col 67}{space 3}  .965209
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-1.711639{col 26}{space 2} 1.344018{col 37}{space 1}   -1.27{col 46}{space 3}0.222{col 54}{space 4}-4.576345{col 67}{space 3} 1.153067
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-1.323942{col 26}{space 2} 1.394245{col 37}{space 1}   -0.95{col 46}{space 3}0.357{col 54}{space 4}-4.295704{col 67}{space 3}  1.64782
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-1.720643{col 26}{space 2} 1.530202{col 37}{space 1}   -1.12{col 46}{space 3}0.278{col 54}{space 4}-4.982192{col 67}{space 3} 1.540906
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-1.403356{col 26}{space 2}  1.38111{col 37}{space 1}   -1.02{col 46}{space 3}0.326{col 54}{space 4}-4.347123{col 67}{space 3} 1.540411
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-1.581646{col 26}{space 2} 1.398608{col 37}{space 1}   -1.13{col 46}{space 3}0.276{col 54}{space 4}-4.562707{col 67}{space 3} 1.399416
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-1.613666{col 26}{space 2}  1.51273{col 37}{space 1}   -1.07{col 46}{space 3}0.303{col 54}{space 4}-4.837974{col 67}{space 3} 1.610643
{txt}{space 8}610  {c |}{col 14}{res}{space 2}-1.253721{col 26}{space 2} 1.538621{col 37}{space 1}   -0.81{col 46}{space 3}0.428{col 54}{space 4}-4.533213{col 67}{space 3} 2.025771
{txt}{space 8}611  {c |}{col 14}{res}{space 2} -.999972{col 26}{space 2} 1.286423{col 37}{space 1}   -0.78{col 46}{space 3}0.449{col 54}{space 4}-3.741917{col 67}{space 3} 1.741973
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-1.781887{col 26}{space 2} 1.743507{col 37}{space 1}   -1.02{col 46}{space 3}0.323{col 54}{space 4}-5.498085{col 67}{space 3} 1.934312
{txt}{space 8}613  {c |}{col 14}{res}{space 2}-1.723539{col 26}{space 2} 1.858155{col 37}{space 1}   -0.93{col 46}{space 3}0.368{col 54}{space 4}-5.684103{col 67}{space 3} 2.237024
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-1.805784{col 26}{space 2} 1.749279{col 37}{space 1}   -1.03{col 46}{space 3}0.318{col 54}{space 4}-5.534285{col 67}{space 3} 1.922716
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-1.631631{col 26}{space 2} 1.735749{col 37}{space 1}   -0.94{col 46}{space 3}0.362{col 54}{space 4}-5.331291{col 67}{space 3}  2.06803
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-1.737754{col 26}{space 2}  1.64924{col 37}{space 1}   -1.05{col 46}{space 3}0.309{col 54}{space 4}-5.253025{col 67}{space 3} 1.777517
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-2.208244{col 26}{space 2} 1.909504{col 37}{space 1}   -1.16{col 46}{space 3}0.266{col 54}{space 4}-6.278256{col 67}{space 3} 1.861767
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-1.847899{col 26}{space 2} 1.688911{col 37}{space 1}   -1.09{col 46}{space 3}0.291{col 54}{space 4}-5.447727{col 67}{space 3} 1.751929
{txt}{space 8}619  {c |}{col 14}{res}{space 2}-1.374592{col 26}{space 2} 1.773552{col 37}{space 1}   -0.78{col 46}{space 3}0.450{col 54}{space 4}-5.154829{col 67}{space 3} 2.405645
{txt}{space 8}620  {c |}{col 14}{res}{space 2} -1.60245{col 26}{space 2} 1.910736{col 37}{space 1}   -0.84{col 46}{space 3}0.415{col 54}{space 4}-5.675086{col 67}{space 3} 2.470187
{txt}{space 8}621  {c |}{col 14}{res}{space 2}  -1.4976{col 26}{space 2} 1.694197{col 37}{space 1}   -0.88{col 46}{space 3}0.391{col 54}{space 4}-5.108695{col 67}{space 3} 2.113495
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-1.689873{col 26}{space 2} 1.636009{col 37}{space 1}   -1.03{col 46}{space 3}0.318{col 54}{space 4}-5.176944{col 67}{space 3} 1.797197
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-1.692592{col 26}{space 2} 1.667722{col 37}{space 1}   -1.01{col 46}{space 3}0.326{col 54}{space 4}-5.247257{col 67}{space 3} 1.862073
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-2.201406{col 26}{space 2} 1.961884{col 37}{space 1}   -1.12{col 46}{space 3}0.279{col 54}{space 4}-6.383063{col 67}{space 3} 1.980251
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-2.199278{col 26}{space 2} 1.971436{col 37}{space 1}   -1.12{col 46}{space 3}0.282{col 54}{space 4}-6.401294{col 67}{space 3} 2.002739
{txt}{space 8}626  {c |}{col 14}{res}{space 2}-1.907659{col 26}{space 2} 2.030989{col 37}{space 1}   -0.94{col 46}{space 3}0.362{col 54}{space 4}-6.236609{col 67}{space 3} 2.421291
{txt}{space 8}627  {c |}{col 14}{res}{space 2} -2.31529{col 26}{space 2}   2.0077{col 37}{space 1}   -1.15{col 46}{space 3}0.267{col 54}{space 4}-6.594602{col 67}{space 3} 1.964023
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-2.770353{col 26}{space 2} 2.037847{col 37}{space 1}   -1.36{col 46}{space 3}0.194{col 54}{space 4}-7.113921{col 67}{space 3} 1.573215
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-2.385257{col 26}{space 2} 1.920803{col 37}{space 1}   -1.24{col 46}{space 3}0.233{col 54}{space 4}-6.479351{col 67}{space 3} 1.708836
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-1.926577{col 26}{space 2} 1.929238{col 37}{space 1}   -1.00{col 46}{space 3}0.334{col 54}{space 4}-6.038652{col 67}{space 3} 2.185497
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-2.740609{col 26}{space 2} 2.162308{col 37}{space 1}   -1.27{col 46}{space 3}0.224{col 54}{space 4} -7.34946{col 67}{space 3} 1.868242
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-2.229564{col 26}{space 2} 1.995065{col 37}{space 1}   -1.12{col 46}{space 3}0.281{col 54}{space 4}-6.481944{col 67}{space 3} 2.022817
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-1.768088{col 26}{space 2} 1.839803{col 37}{space 1}   -0.96{col 46}{space 3}0.352{col 54}{space 4}-5.689535{col 67}{space 3} 2.153359
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-2.256997{col 26}{space 2} 1.959555{col 37}{space 1}   -1.15{col 46}{space 3}0.267{col 54}{space 4} -6.43369{col 67}{space 3} 1.919696
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-1.989676{col 26}{space 2} 1.927881{col 37}{space 1}   -1.03{col 46}{space 3}0.318{col 54}{space 4}-6.098857{col 67}{space 3} 2.119504
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-2.405929{col 26}{space 2} 2.206592{col 37}{space 1}   -1.09{col 46}{space 3}0.293{col 54}{space 4}-7.109169{col 67}{space 3} 2.297311
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-2.804591{col 26}{space 2} 2.193669{col 37}{space 1}   -1.28{col 46}{space 3}0.221{col 54}{space 4}-7.480286{col 67}{space 3} 1.871105
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-1.842893{col 26}{space 2} 2.124842{col 37}{space 1}   -0.87{col 46}{space 3}0.399{col 54}{space 4}-6.371885{col 67}{space 3}   2.6861
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-2.204023{col 26}{space 2} 2.176626{col 37}{space 1}   -1.01{col 46}{space 3}0.327{col 54}{space 4}-6.843392{col 67}{space 3} 2.435346
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-2.033288{col 26}{space 2} 2.128524{col 37}{space 1}   -0.96{col 46}{space 3}0.355{col 54}{space 4} -6.57013{col 67}{space 3} 2.503555
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-2.680063{col 26}{space 2} 2.195669{col 37}{space 1}   -1.22{col 46}{space 3}0.241{col 54}{space 4} -7.36002{col 67}{space 3} 1.999894
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-2.765028{col 26}{space 2} 2.246696{col 37}{space 1}   -1.23{col 46}{space 3}0.237{col 54}{space 4}-7.553747{col 67}{space 3}  2.02369
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-2.626094{col 26}{space 2} 2.224224{col 37}{space 1}   -1.18{col 46}{space 3}0.256{col 54}{space 4}-7.366915{col 67}{space 3} 2.114727
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-2.932976{col 26}{space 2} 2.229011{col 37}{space 1}   -1.32{col 46}{space 3}0.208{col 54}{space 4}   -7.684{col 67}{space 3} 1.818048
{txt}{space 8}645  {c |}{col 14}{res}{space 2}-2.114581{col 26}{space 2} 2.399223{col 37}{space 1}   -0.88{col 46}{space 3}0.392{col 54}{space 4}-7.228404{col 67}{space 3} 2.999243
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-2.478948{col 26}{space 2} 2.448513{col 37}{space 1}   -1.01{col 46}{space 3}0.327{col 54}{space 4}-7.697829{col 67}{space 3} 2.739933
{txt}{space 8}647  {c |}{col 14}{res}{space 2} -2.33966{col 26}{space 2} 2.459329{col 37}{space 1}   -0.95{col 46}{space 3}0.357{col 54}{space 4}-7.581596{col 67}{space 3} 2.902276
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-2.216676{col 26}{space 2}   2.5224{col 37}{space 1}   -0.88{col 46}{space 3}0.393{col 54}{space 4}-7.593044{col 67}{space 3} 3.159693
{txt}{space 8}649  {c |}{col 14}{res}{space 2}-1.971792{col 26}{space 2} 2.516361{col 37}{space 1}   -0.78{col 46}{space 3}0.445{col 54}{space 4}-7.335289{col 67}{space 3} 3.391704
{txt}{space 8}650  {c |}{col 14}{res}{space 2} -2.54739{col 26}{space 2} 2.544364{col 37}{space 1}   -1.00{col 46}{space 3}0.333{col 54}{space 4}-7.970573{col 67}{space 3} 2.875794
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-2.694197{col 26}{space 2} 2.628186{col 37}{space 1}   -1.03{col 46}{space 3}0.322{col 54}{space 4}-8.296042{col 67}{space 3} 2.907648
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-2.534811{col 26}{space 2} 2.360072{col 37}{space 1}   -1.07{col 46}{space 3}0.300{col 54}{space 4}-7.565184{col 67}{space 3} 2.495563
{txt}{space 8}653  {c |}{col 14}{res}{space 2} -1.79574{col 26}{space 2} 2.559441{col 37}{space 1}   -0.70{col 46}{space 3}0.494{col 54}{space 4}-7.251059{col 67}{space 3} 3.659578
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-2.192817{col 26}{space 2} 2.503804{col 37}{space 1}   -0.88{col 46}{space 3}0.395{col 54}{space 4}-7.529549{col 67}{space 3} 3.143915
{txt}{space 8}655  {c |}{col 14}{res}{space 2}-2.187892{col 26}{space 2} 2.525624{col 37}{space 1}   -0.87{col 46}{space 3}0.400{col 54}{space 4}-7.571132{col 67}{space 3} 3.195349
{txt}{space 8}656  {c |}{col 14}{res}{space 2} -2.34777{col 26}{space 2} 2.627901{col 37}{space 1}   -0.89{col 46}{space 3}0.386{col 54}{space 4}-7.949008{col 67}{space 3} 3.253468
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-2.536461{col 26}{space 2} 2.553109{col 37}{space 1}   -0.99{col 46}{space 3}0.336{col 54}{space 4}-7.978284{col 67}{space 3} 2.905361
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-2.858472{col 26}{space 2} 2.647547{col 37}{space 1}   -1.08{col 46}{space 3}0.297{col 54}{space 4}-8.501584{col 67}{space 3}  2.78464
{txt}{space 8}659  {c |}{col 14}{res}{space 2}-2.316254{col 26}{space 2}  2.54374{col 37}{space 1}   -0.91{col 46}{space 3}0.377{col 54}{space 4}-7.738106{col 67}{space 3} 3.105599
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-2.847804{col 26}{space 2} 2.726971{col 37}{space 1}   -1.04{col 46}{space 3}0.313{col 54}{space 4}-8.660204{col 67}{space 3} 2.964597
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-2.812277{col 26}{space 2} 2.605704{col 37}{space 1}   -1.08{col 46}{space 3}0.298{col 54}{space 4}-8.366203{col 67}{space 3} 2.741649
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-2.282837{col 26}{space 2}  2.74542{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4}-8.134562{col 67}{space 3} 3.568887
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-2.824159{col 26}{space 2} 2.740172{col 37}{space 1}   -1.03{col 46}{space 3}0.319{col 54}{space 4}-8.664697{col 67}{space 3} 3.016378
{txt}{space 8}664  {c |}{col 14}{res}{space 2}-2.601278{col 26}{space 2} 2.818563{col 37}{space 1}   -0.92{col 46}{space 3}0.371{col 54}{space 4}-8.608903{col 67}{space 3} 3.406348
{txt}{space 8}665  {c |}{col 14}{res}{space 2}-2.226958{col 26}{space 2}  2.69243{col 37}{space 1}   -0.83{col 46}{space 3}0.421{col 54}{space 4}-7.965737{col 67}{space 3}  3.51182
{txt}{space 8}666  {c |}{col 14}{res}{space 2}-2.270983{col 26}{space 2} 2.743259{col 37}{space 1}   -0.83{col 46}{space 3}0.421{col 54}{space 4}  -8.1181{col 67}{space 3} 3.576135
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-2.432375{col 26}{space 2} 2.701882{col 37}{space 1}   -0.90{col 46}{space 3}0.382{col 54}{space 4}  -8.1913{col 67}{space 3}  3.32655
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-2.570625{col 26}{space 2} 2.743764{col 37}{space 1}   -0.94{col 46}{space 3}0.364{col 54}{space 4}-8.418819{col 67}{space 3}  3.27757
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-2.455136{col 26}{space 2} 2.716665{col 37}{space 1}   -0.90{col 46}{space 3}0.380{col 54}{space 4} -8.24557{col 67}{space 3} 3.335299
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-2.980582{col 26}{space 2} 2.711505{col 37}{space 1}   -1.10{col 46}{space 3}0.289{col 54}{space 4}-8.760017{col 67}{space 3} 2.798854
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-2.689295{col 26}{space 2} 2.751947{col 37}{space 1}   -0.98{col 46}{space 3}0.344{col 54}{space 4}-8.554931{col 67}{space 3} 3.176341
{txt}{space 8}672  {c |}{col 14}{res}{space 2}-2.921256{col 26}{space 2} 2.828574{col 37}{space 1}   -1.03{col 46}{space 3}0.318{col 54}{space 4}-8.950219{col 67}{space 3} 3.107707
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-2.789401{col 26}{space 2} 2.830947{col 37}{space 1}   -0.99{col 46}{space 3}0.340{col 54}{space 4}-8.823421{col 67}{space 3} 3.244619
{txt}{space 8}674  {c |}{col 14}{res}{space 2}-2.624187{col 26}{space 2} 2.892308{col 37}{space 1}   -0.91{col 46}{space 3}0.379{col 54}{space 4}-8.788995{col 67}{space 3} 3.540621
{txt}{space 8}675  {c |}{col 14}{res}{space 2} -2.26243{col 26}{space 2} 2.909654{col 37}{space 1}   -0.78{col 46}{space 3}0.449{col 54}{space 4} -8.46421{col 67}{space 3}  3.93935
{txt}{space 8}676  {c |}{col 14}{res}{space 2}-2.202254{col 26}{space 2} 2.927748{col 37}{space 1}   -0.75{col 46}{space 3}0.464{col 54}{space 4}-8.442601{col 67}{space 3} 4.038092
{txt}{space 8}677  {c |}{col 14}{res}{space 2}-2.517059{col 26}{space 2} 2.870041{col 37}{space 1}   -0.88{col 46}{space 3}0.394{col 54}{space 4}-8.634406{col 67}{space 3} 3.600288
{txt}{space 8}678  {c |}{col 14}{res}{space 2}-2.290913{col 26}{space 2} 2.882856{col 37}{space 1}   -0.79{col 46}{space 3}0.439{col 54}{space 4}-8.435574{col 67}{space 3} 3.853748
{txt}{space 8}679  {c |}{col 14}{res}{space 2} -2.19371{col 26}{space 2} 2.882162{col 37}{space 1}   -0.76{col 46}{space 3}0.458{col 54}{space 4}-8.336893{col 67}{space 3} 3.949472
{txt}{space 8}680  {c |}{col 14}{res}{space 2} -2.14258{col 26}{space 2} 2.974673{col 37}{space 1}   -0.72{col 46}{space 3}0.482{col 54}{space 4}-8.482946{col 67}{space 3} 4.197787
{txt}{space 8}681  {c |}{col 14}{res}{space 2}-2.130957{col 26}{space 2} 2.863905{col 37}{space 1}   -0.74{col 46}{space 3}0.468{col 54}{space 4}-8.235226{col 67}{space 3} 3.973312
{txt}{space 8}682  {c |}{col 14}{res}{space 2}-2.470807{col 26}{space 2} 2.833272{col 37}{space 1}   -0.87{col 46}{space 3}0.397{col 54}{space 4}-8.509783{col 67}{space 3} 3.568168
{txt}{space 8}683  {c |}{col 14}{res}{space 2}-2.628774{col 26}{space 2} 2.966567{col 37}{space 1}   -0.89{col 46}{space 3}0.390{col 54}{space 4}-8.951862{col 67}{space 3} 3.694314
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-2.615957{col 26}{space 2} 3.159122{col 37}{space 1}   -0.83{col 46}{space 3}0.421{col 54}{space 4}-9.349467{col 67}{space 3} 4.117553
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-2.796207{col 26}{space 2} 3.069246{col 37}{space 1}   -0.91{col 46}{space 3}0.377{col 54}{space 4}-9.338151{col 67}{space 3} 3.745736
{txt}{space 8}686  {c |}{col 14}{res}{space 2}-2.802533{col 26}{space 2} 3.157197{col 37}{space 1}   -0.89{col 46}{space 3}0.389{col 54}{space 4} -9.53194{col 67}{space 3} 3.926873
{txt}{space 8}687  {c |}{col 14}{res}{space 2}-2.460473{col 26}{space 2} 3.058776{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4}  -8.9801{col 67}{space 3} 4.059154
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-2.754662{col 26}{space 2} 3.140158{col 37}{space 1}   -0.88{col 46}{space 3}0.394{col 54}{space 4} -9.44775{col 67}{space 3} 3.938427
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-2.775883{col 26}{space 2} 3.136761{col 37}{space 1}   -0.88{col 46}{space 3}0.390{col 54}{space 4}-9.461731{col 67}{space 3} 3.909966
{txt}{space 8}690  {c |}{col 14}{res}{space 2}-3.059481{col 26}{space 2} 3.146988{col 37}{space 1}   -0.97{col 46}{space 3}0.346{col 54}{space 4}-9.767126{col 67}{space 3} 3.648164
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-2.913897{col 26}{space 2} 3.097654{col 37}{space 1}   -0.94{col 46}{space 3}0.362{col 54}{space 4} -9.51639{col 67}{space 3} 3.688596
{txt}{space 8}692  {c |}{col 14}{res}{space 2} -2.73539{col 26}{space 2} 3.150833{col 37}{space 1}   -0.87{col 46}{space 3}0.399{col 54}{space 4}-9.451231{col 67}{space 3}  3.98045
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-2.827877{col 26}{space 2} 3.070699{col 37}{space 1}   -0.92{col 46}{space 3}0.372{col 54}{space 4}-9.372916{col 67}{space 3} 3.717163
{txt}{space 8}694  {c |}{col 14}{res}{space 2}-2.743143{col 26}{space 2} 3.175417{col 37}{space 1}   -0.86{col 46}{space 3}0.401{col 54}{space 4}-9.511384{col 67}{space 3} 4.025098
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-2.953771{col 26}{space 2}  3.13465{col 37}{space 1}   -0.94{col 46}{space 3}0.361{col 54}{space 4}-9.635119{col 67}{space 3} 3.727577
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-2.861076{col 26}{space 2} 3.280046{col 37}{space 1}   -0.87{col 46}{space 3}0.397{col 54}{space 4}-9.852328{col 67}{space 3} 4.130176
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-2.901303{col 26}{space 2} 3.240098{col 37}{space 1}   -0.90{col 46}{space 3}0.385{col 54}{space 4}-9.807409{col 67}{space 3} 4.004804
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-2.843211{col 26}{space 2} 3.251515{col 37}{space 1}   -0.87{col 46}{space 3}0.396{col 54}{space 4}-9.773651{col 67}{space 3} 4.087229
{txt}{space 8}699  {c |}{col 14}{res}{space 2}-3.050167{col 26}{space 2} 3.241151{col 37}{space 1}   -0.94{col 46}{space 3}0.362{col 54}{space 4}-9.958517{col 67}{space 3} 3.858183
{txt}{space 8}700  {c |}{col 14}{res}{space 2}-2.774074{col 26}{space 2}  3.27415{col 37}{space 1}   -0.85{col 46}{space 3}0.410{col 54}{space 4} -9.75276{col 67}{space 3} 4.204612
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-3.138552{col 26}{space 2} 3.229077{col 37}{space 1}   -0.97{col 46}{space 3}0.346{col 54}{space 4}-10.02117{col 67}{space 3} 3.744063
{txt}{space 8}702  {c |}{col 14}{res}{space 2}-3.343513{col 26}{space 2} 3.400126{col 37}{space 1}   -0.98{col 46}{space 3}0.341{col 54}{space 4}-10.59071{col 67}{space 3} 3.903684
{txt}{space 8}703  {c |}{col 14}{res}{space 2}-2.899274{col 26}{space 2} 3.214425{col 37}{space 1}   -0.90{col 46}{space 3}0.381{col 54}{space 4}-9.750659{col 67}{space 3} 3.952111
{txt}{space 8}704  {c |}{col 14}{res}{space 2}-2.654578{col 26}{space 2} 3.195951{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4}-9.466586{col 67}{space 3} 4.157431
{txt}{space 8}705  {c |}{col 14}{res}{space 2}-2.591512{col 26}{space 2} 3.207861{col 37}{space 1}   -0.81{col 46}{space 3}0.432{col 54}{space 4}-9.428906{col 67}{space 3} 4.245882
{txt}{space 8}706  {c |}{col 14}{res}{space 2}-2.676738{col 26}{space 2} 3.239168{col 37}{space 1}   -0.83{col 46}{space 3}0.422{col 54}{space 4} -9.58086{col 67}{space 3} 4.227385
{txt}{space 8}707  {c |}{col 14}{res}{space 2}-2.800945{col 26}{space 2} 3.314963{col 37}{space 1}   -0.84{col 46}{space 3}0.411{col 54}{space 4}-9.866621{col 67}{space 3} 4.264731
{txt}{space 8}708  {c |}{col 14}{res}{space 2}-2.504868{col 26}{space 2}  3.54317{col 37}{space 1}   -0.71{col 46}{space 3}0.490{col 54}{space 4}-10.05696{col 67}{space 3}  5.04722
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-3.093973{col 26}{space 2} 3.622442{col 37}{space 1}   -0.85{col 46}{space 3}0.406{col 54}{space 4}-10.81502{col 67}{space 3} 4.627079
{txt}{space 8}710  {c |}{col 14}{res}{space 2}-2.780772{col 26}{space 2}  3.49415{col 37}{space 1}   -0.80{col 46}{space 3}0.439{col 54}{space 4}-10.22838{col 67}{space 3} 4.666832
{txt}{space 8}711  {c |}{col 14}{res}{space 2}-2.459288{col 26}{space 2} 3.437478{col 37}{space 1}   -0.72{col 46}{space 3}0.485{col 54}{space 4}  -9.7861{col 67}{space 3} 4.867523
{txt}{space 8}712  {c |}{col 14}{res}{space 2}-2.872387{col 26}{space 2} 3.474173{col 37}{space 1}   -0.83{col 46}{space 3}0.421{col 54}{space 4}-10.27741{col 67}{space 3} 4.532638
{txt}{space 8}713  {c |}{col 14}{res}{space 2}-2.411158{col 26}{space 2} 3.431009{col 37}{space 1}   -0.70{col 46}{space 3}0.493{col 54}{space 4}-9.724181{col 67}{space 3} 4.901864
{txt}{space 8}714  {c |}{col 14}{res}{space 2}-2.755162{col 26}{space 2} 3.503451{col 37}{space 1}   -0.79{col 46}{space 3}0.444{col 54}{space 4}-10.22259{col 67}{space 3} 4.712268
{txt}{space 8}715  {c |}{col 14}{res}{space 2} -2.74029{col 26}{space 2}  3.44488{col 37}{space 1}   -0.80{col 46}{space 3}0.439{col 54}{space 4}-10.08288{col 67}{space 3} 4.602298
{txt}{space 8}716  {c |}{col 14}{res}{space 2}-2.837793{col 26}{space 2} 3.458414{col 37}{space 1}   -0.82{col 46}{space 3}0.425{col 54}{space 4}-10.20923{col 67}{space 3} 4.533642
{txt}{space 8}717  {c |}{col 14}{res}{space 2}-2.990985{col 26}{space 2} 3.465861{col 37}{space 1}   -0.86{col 46}{space 3}0.402{col 54}{space 4}-10.37829{col 67}{space 3} 4.396322
{txt}{space 8}718  {c |}{col 14}{res}{space 2}-2.614074{col 26}{space 2} 3.449609{col 37}{space 1}   -0.76{col 46}{space 3}0.460{col 54}{space 4}-9.966742{col 67}{space 3} 4.738595
{txt}{space 8}719  {c |}{col 14}{res}{space 2} -2.75508{col 26}{space 2} 3.467054{col 37}{space 1}   -0.79{col 46}{space 3}0.439{col 54}{space 4}-10.14493{col 67}{space 3}  4.63477
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.949536{col 26}{space 2} .2954722{col 37}{space 1}    6.60{col 46}{space 3}0.000{col 54}{space 4} 1.319752{col 67}{space 3}  2.57932
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2} -1.17981{col 26}{space 2} 1.332212{col 37}{space 1}   -0.89{col 46}{space 3}0.390{col 54}{space 4}-4.019354{col 67}{space 3} 1.659733
{txt}bubaneshwar  {c |}{col 14}{res}{space 2} -1.64776{col 26}{space 2} 2.055822{col 37}{space 1}   -0.80{col 46}{space 3}0.435{col 54}{space 4}-6.029641{col 67}{space 3} 2.734122
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-2.019769{col 26}{space 2} .0436385{col 37}{space 1}  -46.28{col 46}{space 3}0.000{col 54}{space 4}-2.112782{col 67}{space 3}-1.926755
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .4051438{col 26}{space 2} .2435597{col 37}{space 1}    1.66{col 46}{space 3}0.117{col 54}{space 4}-.1139915{col 67}{space 3} .9242791
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-.4403794{col 26}{space 2} 2.184433{col 37}{space 1}   -0.20{col 46}{space 3}0.843{col 54}{space 4}-5.096388{col 67}{space 3} 4.215629
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .8021245{col 26}{space 2} .9947751{col 37}{space 1}    0.81{col 46}{space 3}0.433{col 54}{space 4}-1.318189{col 67}{space 3} 2.922438
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-1.968021{col 26}{space 2} .9155081{col 37}{space 1}   -2.15{col 46}{space 3}0.048{col 54}{space 4} -3.91938{col 67}{space 3}-.0166613
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-4.870459{col 26}{space 2} .6753746{col 37}{space 1}   -7.21{col 46}{space 3}0.000{col 54}{space 4}-6.309986{col 67}{space 3}-3.430932
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-.7317202{col 26}{space 2} 1.226774{col 37}{space 1}   -0.60{col 46}{space 3}0.560{col 54}{space 4}-3.346528{col 67}{space 3} 1.883087
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} -2.18008{col 26}{space 2}  .377425{col 37}{space 1}   -5.78{col 46}{space 3}0.000{col 54}{space 4}-2.984543{col 67}{space 3}-1.375618
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}-.2761403{col 26}{space 2} 1.353624{col 37}{space 1}   -0.20{col 46}{space 3}0.841{col 54}{space 4}-3.161321{col 67}{space 3}  2.60904
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 3.049554{col 26}{space 2} 1.354788{col 37}{space 1}    2.25{col 46}{space 3}0.040{col 54}{space 4} .1618928{col 67}{space 3} 5.937216
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} 5.873584{col 26}{space 2} 5.527467{col 37}{space 1}    1.06{col 46}{space 3}0.305{col 54}{space 4}-5.907933{col 67}{space 3}  17.6551
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-2.885287{col 26}{space 2} 2.050433{col 37}{space 1}   -1.41{col 46}{space 3}0.180{col 54}{space 4}-7.255681{col 67}{space 3} 1.485107
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-30.55369{col 26}{space 2}  24.3414{col 37}{space 1}   -1.26{col 46}{space 3}0.229{col 54}{space 4}-82.43614{col 67}{space 3} 21.32877
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -2.5891
{col 25}{txt}Prob>|t| = {res}    0.3794

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 28}t(15) = {res}    1.0998
{col 25}{txt}Prob>|t| = {res}    0.2830

95%{txt} confidence set for null hypothesis expression: [{res}-1.924{txt}, {res}7.228{txt}]
{res}
Warning: 13 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 28}t(15) = {res}    1.5233
{col 25}{txt}Prob>|t| = {res}    0.1908

95%{txt} confidence set for null hypothesis expression: [{res}-.562{txt}, {res}1.82{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   -1.2645
{col 25}{txt}Prob>|t| = {res}    0.2118

95%{txt} confidence set for null hypothesis expression: [{res}-89.67{txt}, {res}19.08{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8106
                                                {txt}Root MSE          =    {res} 1.0781

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-2.553786{col 26}{space 2} .4498183{col 37}{space 1}   -5.68{col 46}{space 3}0.000{col 54}{space 4}-3.512551{col 67}{space 3}-1.595021
{txt}{space 9}two {c |}{col 14}{res}{space 2}-2.499116{col 26}{space 2} .5413475{col 37}{space 1}   -4.62{col 46}{space 3}0.000{col 54}{space 4}-3.652971{col 67}{space 3}-1.345261
{txt}{space 7}three {c |}{col 14}{res}{space 2}-3.094019{col 26}{space 2} .5827268{col 37}{space 1}   -5.31{col 46}{space 3}0.000{col 54}{space 4}-4.336071{col 67}{space 3}-1.851966
{txt}{space 8}four {c |}{col 14}{res}{space 2} -2.29701{col 26}{space 2} .3606139{col 37}{space 1}   -6.37{col 46}{space 3}0.000{col 54}{space 4} -3.06564{col 67}{space 3}-1.528379
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.609404{col 26}{space 2} .2180525{col 37}{space 1}   -7.38{col 46}{space 3}0.000{col 54}{space 4}-2.074172{col 67}{space 3}-1.144636
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 1.722182{col 26}{space 2} 1.378347{col 37}{space 1}    1.25{col 46}{space 3}0.231{col 54}{space 4}-1.215694{col 67}{space 3} 4.660059
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.1418764{col 26}{space 2} .3390463{col 37}{space 1}   -0.42{col 46}{space 3}0.682{col 54}{space 4}-.8645366{col 67}{space 3} .5807837
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2723445{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4}-.6336272{col 67}{space 3}   .52735
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2}  .283572{col 37}{space 1}   -1.73{col 46}{space 3}0.103{col 54}{space 4}-1.096005{col 67}{space 3} .1128338
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3042442{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-.8496442{col 67}{space 3}  .447318
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2897528{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4} -.850664{col 67}{space 3} .3845228
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2873563{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}-.5705351{col 67}{space 3} .6544356
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3470091{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.3801112{col 67}{space 3} 1.099153
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3871851{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-.6366424{col 67}{space 3} 1.013889
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3756812{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-.7281575{col 67}{space 3} .8733334
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2880628{col 37}{space 1}   -0.60{col 46}{space 3}0.558{col 54}{space 4}-.7865163{col 67}{space 3} .4414662
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2} .3205198{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6980499{col 67}{space 3} .6682936
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3224906{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7080416{col 67}{space 3} .6667032
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.6790723{col 26}{space 2} .4249743{col 37}{space 1}   -1.60{col 46}{space 3}0.131{col 54}{space 4}-1.584884{col 67}{space 3}  .226739
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.2628889{col 26}{space 2} .5512769{col 37}{space 1}   -0.48{col 46}{space 3}0.640{col 54}{space 4}-1.437908{col 67}{space 3} .9121299
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.2443037{col 26}{space 2} .3790756{col 37}{space 1}   -0.64{col 46}{space 3}0.529{col 54}{space 4}-1.052284{col 67}{space 3}  .563677
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.4671168{col 26}{space 2} .4624605{col 37}{space 1}   -1.01{col 46}{space 3}0.328{col 54}{space 4}-1.452828{col 67}{space 3} .5185945
{txt}{space 8}568  {c |}{col 14}{res}{space 2} -.360094{col 26}{space 2} .4902786{col 37}{space 1}   -0.73{col 46}{space 3}0.474{col 54}{space 4}-1.405098{col 67}{space 3} .6849101
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.5307664{col 26}{space 2} .4174334{col 37}{space 1}   -1.27{col 46}{space 3}0.223{col 54}{space 4}-1.420505{col 67}{space 3} .3589719
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .1961886{col 26}{space 2} .5032375{col 37}{space 1}    0.39{col 46}{space 3}0.702{col 54}{space 4}-.8764368{col 67}{space 3} 1.268814
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.7676637{col 26}{space 2} .4262208{col 37}{space 1}   -1.80{col 46}{space 3}0.092{col 54}{space 4}-1.676132{col 67}{space 3} .1408044
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.9634274{col 26}{space 2} .3714448{col 37}{space 1}   -2.59{col 46}{space 3}0.020{col 54}{space 4}-1.755143{col 67}{space 3}-.1717115
{txt}{space 8}573  {c |}{col 14}{res}{space 2} -.606621{col 26}{space 2} .5055814{col 37}{space 1}   -1.20{col 46}{space 3}0.249{col 54}{space 4}-1.684242{col 67}{space 3} .4710004
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.4599813{col 26}{space 2} .3906167{col 37}{space 1}   -1.18{col 46}{space 3}0.257{col 54}{space 4}-1.292561{col 67}{space 3} .3725986
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.1878147{col 26}{space 2} .5658557{col 37}{space 1}   -0.33{col 46}{space 3}0.745{col 54}{space 4}-1.393908{col 67}{space 3} 1.018278
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.8831223{col 26}{space 2}  .639795{col 37}{space 1}   -1.38{col 46}{space 3}0.188{col 54}{space 4}-2.246813{col 67}{space 3} .4805685
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.3349631{col 26}{space 2} .6764651{col 37}{space 1}   -0.50{col 46}{space 3}0.628{col 54}{space 4}-1.776814{col 67}{space 3} 1.106888
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.6241567{col 26}{space 2} .7444077{col 37}{space 1}   -0.84{col 46}{space 3}0.415{col 54}{space 4}-2.210824{col 67}{space 3} .9625108
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.4710926{col 26}{space 2} .6089459{col 37}{space 1}   -0.77{col 46}{space 3}0.451{col 54}{space 4} -1.76903{col 67}{space 3} .8268449
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.0076563{col 26}{space 2}  .587002{col 37}{space 1}   -0.01{col 46}{space 3}0.990{col 54}{space 4}-1.258822{col 67}{space 3} 1.243509
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.1619465{col 26}{space 2} .5656827{col 37}{space 1}   -0.29{col 46}{space 3}0.779{col 54}{space 4}-1.367671{col 67}{space 3} 1.043778
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.1387272{col 26}{space 2} .6068308{col 37}{space 1}   -0.23{col 46}{space 3}0.822{col 54}{space 4}-1.432157{col 67}{space 3} 1.154702
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.2760343{col 26}{space 2} .6731718{col 37}{space 1}   -0.41{col 46}{space 3}0.688{col 54}{space 4}-1.710866{col 67}{space 3} 1.158797
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.1098516{col 26}{space 2} .6424361{col 37}{space 1}   -0.17{col 46}{space 3}0.867{col 54}{space 4}-1.479172{col 67}{space 3} 1.259469
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.1842021{col 26}{space 2} .5366517{col 37}{space 1}   -0.34{col 46}{space 3}0.736{col 54}{space 4}-1.328048{col 67}{space 3} .9596438
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.2855837{col 26}{space 2} .6124353{col 37}{space 1}   -0.47{col 46}{space 3}0.648{col 54}{space 4}-1.590959{col 67}{space 3} 1.019791
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.5051443{col 26}{space 2} .6646872{col 37}{space 1}   -0.76{col 46}{space 3}0.459{col 54}{space 4}-1.921891{col 67}{space 3} .9116029
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.4274449{col 26}{space 2} .7818859{col 37}{space 1}   -0.55{col 46}{space 3}0.593{col 54}{space 4}-2.093995{col 67}{space 3} 1.239105
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.2293224{col 26}{space 2}  .809952{col 37}{space 1}   -0.28{col 46}{space 3}0.781{col 54}{space 4}-1.955694{col 67}{space 3} 1.497049
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.3008438{col 26}{space 2} .8034888{col 37}{space 1}   -0.37{col 46}{space 3}0.713{col 54}{space 4} -2.01344{col 67}{space 3} 1.411752
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-.8858134{col 26}{space 2} .8103051{col 37}{space 1}   -1.09{col 46}{space 3}0.292{col 54}{space 4}-2.612938{col 67}{space 3} .8413111
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.3039298{col 26}{space 2} .7156213{col 37}{space 1}   -0.42{col 46}{space 3}0.677{col 54}{space 4} -1.82924{col 67}{space 3} 1.221381
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-.0029403{col 26}{space 2} .8416976{col 37}{space 1}   -0.00{col 46}{space 3}0.997{col 54}{space 4}-1.796976{col 67}{space 3} 1.791096
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .0072551{col 26}{space 2} .8019878{col 37}{space 1}    0.01{col 46}{space 3}0.993{col 54}{space 4}-1.702141{col 67}{space 3} 1.716652
{txt}{space 8}595  {c |}{col 14}{res}{space 2} .0022421{col 26}{space 2} .8940165{col 37}{space 1}    0.00{col 46}{space 3}0.998{col 54}{space 4}-1.903309{col 67}{space 3} 1.907793
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.2935672{col 26}{space 2} .7252394{col 37}{space 1}   -0.40{col 46}{space 3}0.691{col 54}{space 4}-1.839378{col 67}{space 3} 1.252244
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.2926416{col 26}{space 2} .7960346{col 37}{space 1}   -0.37{col 46}{space 3}0.718{col 54}{space 4}-1.989349{col 67}{space 3} 1.404066
{txt}{space 8}598  {c |}{col 14}{res}{space 2} -.179423{col 26}{space 2}  .780385{col 37}{space 1}   -0.23{col 46}{space 3}0.821{col 54}{space 4}-1.842774{col 67}{space 3} 1.483928
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.3851355{col 26}{space 2} .8041022{col 37}{space 1}   -0.48{col 46}{space 3}0.639{col 54}{space 4}-2.099039{col 67}{space 3} 1.328768
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.3786049{col 26}{space 2} .9981505{col 37}{space 1}   -0.38{col 46}{space 3}0.710{col 54}{space 4}-2.506112{col 67}{space 3} 1.748903
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-.6216354{col 26}{space 2} .9795537{col 37}{space 1}   -0.63{col 46}{space 3}0.535{col 54}{space 4}-2.709505{col 67}{space 3} 1.466234
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.1846828{col 26}{space 2} 1.073415{col 37}{space 1}   -0.17{col 46}{space 3}0.866{col 54}{space 4}-2.472612{col 67}{space 3} 2.103246
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.7010057{col 26}{space 2} .9332312{col 37}{space 1}   -0.75{col 46}{space 3}0.464{col 54}{space 4}-2.690141{col 67}{space 3} 1.288129
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-.4247469{col 26}{space 2} .9469753{col 37}{space 1}   -0.45{col 46}{space 3}0.660{col 54}{space 4}-2.443177{col 67}{space 3} 1.593683
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-.0370497{col 26}{space 2} .9422736{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-2.045458{col 67}{space 3} 1.971359
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-.4337509{col 26}{space 2}  1.01327{col 37}{space 1}   -0.43{col 46}{space 3}0.675{col 54}{space 4}-2.593484{col 67}{space 3} 1.725982
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-.1164637{col 26}{space 2} .9586612{col 37}{space 1}   -0.12{col 46}{space 3}0.905{col 54}{space 4}-2.159802{col 67}{space 3} 1.926874
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-.2947533{col 26}{space 2} .9887549{col 37}{space 1}   -0.30{col 46}{space 3}0.770{col 54}{space 4}-2.402235{col 67}{space 3} 1.812728
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-.3267733{col 26}{space 2} 1.089599{col 37}{space 1}   -0.30{col 46}{space 3}0.768{col 54}{space 4}-2.649199{col 67}{space 3} 1.995652
{txt}{space 8}610  {c |}{col 14}{res}{space 2} .0331712{col 26}{space 2} 1.078218{col 37}{space 1}    0.03{col 46}{space 3}0.976{col 54}{space 4}-2.264997{col 67}{space 3} 2.331339
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .2869203{col 26}{space 2} .9369124{col 37}{space 1}    0.31{col 46}{space 3}0.764{col 54}{space 4}-1.710061{col 67}{space 3} 2.283902
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-.3979218{col 26}{space 2} 1.225968{col 37}{space 1}   -0.32{col 46}{space 3}0.750{col 54}{space 4}-3.011012{col 67}{space 3} 2.215168
{txt}{space 8}613  {c |}{col 14}{res}{space 2}-.3395747{col 26}{space 2} 1.336371{col 37}{space 1}   -0.25{col 46}{space 3}0.803{col 54}{space 4}-3.187981{col 67}{space 3} 2.508832
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-.4218194{col 26}{space 2} 1.206244{col 37}{space 1}   -0.35{col 46}{space 3}0.731{col 54}{space 4}-2.992867{col 67}{space 3} 2.149228
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-.2476661{col 26}{space 2} 1.267723{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4}-2.949755{col 67}{space 3} 2.454423
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-.3537892{col 26}{space 2} 1.208391{col 37}{space 1}   -0.29{col 46}{space 3}0.774{col 54}{space 4}-2.929413{col 67}{space 3} 2.221835
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-.8242797{col 26}{space 2} 1.385094{col 37}{space 1}   -0.60{col 46}{space 3}0.561{col 54}{space 4}-3.776537{col 67}{space 3} 2.127978
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-.4639341{col 26}{space 2} 1.163887{col 37}{space 1}   -0.40{col 46}{space 3}0.696{col 54}{space 4}-2.944701{col 67}{space 3} 2.016833
{txt}{space 8}619  {c |}{col 14}{res}{space 2} .0093727{col 26}{space 2} 1.242921{col 37}{space 1}    0.01{col 46}{space 3}0.994{col 54}{space 4}-2.639851{col 67}{space 3} 2.658597
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-.2184851{col 26}{space 2} 1.364807{col 37}{space 1}   -0.16{col 46}{space 3}0.875{col 54}{space 4}-3.127502{col 67}{space 3} 2.690532
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-.1136353{col 26}{space 2} 1.181433{col 37}{space 1}   -0.10{col 46}{space 3}0.925{col 54}{space 4}  -2.6318{col 67}{space 3}  2.40453
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-.3059088{col 26}{space 2}  1.17856{col 37}{space 1}   -0.26{col 46}{space 3}0.799{col 54}{space 4}-2.817949{col 67}{space 3} 2.206131
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-.3086274{col 26}{space 2} 1.144174{col 37}{space 1}   -0.27{col 46}{space 3}0.791{col 54}{space 4}-2.747375{col 67}{space 3} 2.130121
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-.6049992{col 26}{space 2} 1.396386{col 37}{space 1}   -0.43{col 46}{space 3}0.671{col 54}{space 4}-3.581325{col 67}{space 3} 2.371327
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-.6028712{col 26}{space 2} 1.394447{col 37}{space 1}   -0.43{col 46}{space 3}0.672{col 54}{space 4}-3.575065{col 67}{space 3} 2.369322
{txt}{space 8}626  {c |}{col 14}{res}{space 2}-.3112527{col 26}{space 2} 1.464666{col 37}{space 1}   -0.21{col 46}{space 3}0.835{col 54}{space 4}-3.433114{col 67}{space 3} 2.810608
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-.7188832{col 26}{space 2} 1.426165{col 37}{space 1}   -0.50{col 46}{space 3}0.622{col 54}{space 4}-3.758681{col 67}{space 3} 2.320915
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-1.173947{col 26}{space 2} 1.412376{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4}-4.184356{col 67}{space 3} 1.836462
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-.7888509{col 26}{space 2} 1.393197{col 37}{space 1}   -0.57{col 46}{space 3}0.580{col 54}{space 4}-3.758381{col 67}{space 3} 2.180679
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-.3301709{col 26}{space 2} 1.388961{col 37}{space 1}   -0.24{col 46}{space 3}0.815{col 54}{space 4}-3.290671{col 67}{space 3} 2.630329
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-1.144203{col 26}{space 2} 1.486679{col 37}{space 1}   -0.77{col 46}{space 3}0.453{col 54}{space 4}-4.312984{col 67}{space 3} 2.024579
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-.6331572{col 26}{space 2} 1.409956{col 37}{space 1}   -0.45{col 46}{space 3}0.660{col 54}{space 4}-3.638408{col 67}{space 3} 2.372094
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-.1716815{col 26}{space 2} 1.353264{col 37}{space 1}   -0.13{col 46}{space 3}0.901{col 54}{space 4}-3.056095{col 67}{space 3} 2.712732
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-.6605902{col 26}{space 2}  1.38627{col 37}{space 1}   -0.48{col 46}{space 3}0.641{col 54}{space 4}-3.615355{col 67}{space 3} 2.294175
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-.3932697{col 26}{space 2} 1.382187{col 37}{space 1}   -0.28{col 46}{space 3}0.780{col 54}{space 4}-3.339332{col 67}{space 3} 2.552792
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-.7380439{col 26}{space 2}  1.55706{col 37}{space 1}   -0.47{col 46}{space 3}0.642{col 54}{space 4}-4.056838{col 67}{space 3} 2.580751
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-1.136705{col 26}{space 2} 1.518818{col 37}{space 1}   -0.75{col 46}{space 3}0.466{col 54}{space 4}-4.373988{col 67}{space 3} 2.100578
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-.1750071{col 26}{space 2} 1.543142{col 37}{space 1}   -0.11{col 46}{space 3}0.911{col 54}{space 4}-3.464136{col 67}{space 3} 3.114122
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-.5361377{col 26}{space 2}  1.51376{col 37}{space 1}   -0.35{col 46}{space 3}0.728{col 54}{space 4} -3.76264{col 67}{space 3} 2.690365
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-.3654023{col 26}{space 2} 1.508309{col 37}{space 1}   -0.24{col 46}{space 3}0.812{col 54}{space 4}-3.580286{col 67}{space 3} 2.849482
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-.4320491{col 26}{space 2} 1.484397{col 37}{space 1}   -0.29{col 46}{space 3}0.775{col 54}{space 4}-3.595967{col 67}{space 3} 2.731869
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-.5170144{col 26}{space 2} 1.482964{col 37}{space 1}   -0.35{col 46}{space 3}0.732{col 54}{space 4}-3.677878{col 67}{space 3} 2.643849
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-.3780803{col 26}{space 2} 1.562757{col 37}{space 1}   -0.24{col 46}{space 3}0.812{col 54}{space 4}-3.709017{col 67}{space 3} 2.952857
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-.6849623{col 26}{space 2} 1.561776{col 37}{space 1}   -0.44{col 46}{space 3}0.667{col 54}{space 4}-4.013809{col 67}{space 3} 2.643885
{txt}{space 8}645  {c |}{col 14}{res}{space 2} .1334333{col 26}{space 2} 1.690172{col 37}{space 1}    0.08{col 46}{space 3}0.938{col 54}{space 4}-3.469082{col 67}{space 3} 3.735949
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-.2309343{col 26}{space 2} 1.617436{col 37}{space 1}   -0.14{col 46}{space 3}0.888{col 54}{space 4}-3.678417{col 67}{space 3} 3.216548
{txt}{space 8}647  {c |}{col 14}{res}{space 2}-.0916461{col 26}{space 2} 1.697237{col 37}{space 1}   -0.05{col 46}{space 3}0.958{col 54}{space 4}-3.709221{col 67}{space 3} 3.525929
{txt}{space 8}648  {c |}{col 14}{res}{space 2} .1069193{col 26}{space 2} 1.852536{col 37}{space 1}    0.06{col 46}{space 3}0.955{col 54}{space 4}-3.841668{col 67}{space 3} 4.055507
{txt}{space 8}649  {c |}{col 14}{res}{space 2} .3518027{col 26}{space 2} 1.769226{col 37}{space 1}    0.20{col 46}{space 3}0.845{col 54}{space 4}-3.419213{col 67}{space 3} 4.122819
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-.2237947{col 26}{space 2} 1.752402{col 37}{space 1}   -0.13{col 46}{space 3}0.900{col 54}{space 4}-3.958952{col 67}{space 3} 3.511363
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-.3706019{col 26}{space 2} 1.791421{col 37}{space 1}   -0.21{col 46}{space 3}0.839{col 54}{space 4}-4.188925{col 67}{space 3} 3.447721
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-.2112161{col 26}{space 2} 1.710995{col 37}{space 1}   -0.12{col 46}{space 3}0.903{col 54}{space 4}-3.858116{col 67}{space 3} 3.435683
{txt}{space 8}653  {c |}{col 14}{res}{space 2} .5278547{col 26}{space 2} 1.835178{col 37}{space 1}    0.29{col 46}{space 3}0.778{col 54}{space 4}-3.383735{col 67}{space 3} 4.439445
{txt}{space 8}654  {c |}{col 14}{res}{space 2}  .130778{col 26}{space 2} 1.799217{col 37}{space 1}    0.07{col 46}{space 3}0.943{col 54}{space 4}-3.704162{col 67}{space 3} 3.965718
{txt}{space 8}655  {c |}{col 14}{res}{space 2} .1357034{col 26}{space 2} 1.796379{col 37}{space 1}    0.08{col 46}{space 3}0.941{col 54}{space 4}-3.693187{col 67}{space 3} 3.964594
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-.0241751{col 26}{space 2} 1.743158{col 37}{space 1}   -0.01{col 46}{space 3}0.989{col 54}{space 4}-3.739628{col 67}{space 3} 3.691277
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-.2128664{col 26}{space 2} 1.859963{col 37}{space 1}   -0.11{col 46}{space 3}0.910{col 54}{space 4}-4.177284{col 67}{space 3} 3.751551
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-.5348769{col 26}{space 2} 2.186862{col 37}{space 1}   -0.24{col 46}{space 3}0.810{col 54}{space 4}-5.196062{col 67}{space 3} 4.126308
{txt}{space 8}659  {c |}{col 14}{res}{space 2} .0073412{col 26}{space 2} 1.766962{col 37}{space 1}    0.00{col 46}{space 3}0.997{col 54}{space 4}-3.758849{col 67}{space 3} 3.773532
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-.4665467{col 26}{space 2} 1.995529{col 37}{space 1}   -0.23{col 46}{space 3}0.818{col 54}{space 4}-4.719915{col 67}{space 3} 3.786822
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-.4310201{col 26}{space 2} 1.863475{col 37}{space 1}   -0.23{col 46}{space 3}0.820{col 54}{space 4}-4.402923{col 67}{space 3} 3.540883
{txt}{space 8}662  {c |}{col 14}{res}{space 2} .0984195{col 26}{space 2} 1.929506{col 37}{space 1}    0.05{col 46}{space 3}0.960{col 54}{space 4}-4.014225{col 67}{space 3} 4.211064
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-.4429023{col 26}{space 2} 1.812038{col 37}{space 1}   -0.24{col 46}{space 3}0.810{col 54}{space 4}-4.305171{col 67}{space 3} 3.419366
{txt}{space 8}664  {c |}{col 14}{res}{space 2}-.2200207{col 26}{space 2} 1.843969{col 37}{space 1}   -0.12{col 46}{space 3}0.907{col 54}{space 4}-4.150348{col 67}{space 3} 3.710307
{txt}{space 8}665  {c |}{col 14}{res}{space 2} .1542985{col 26}{space 2} 1.898802{col 37}{space 1}    0.08{col 46}{space 3}0.936{col 54}{space 4}-3.892902{col 67}{space 3} 4.201499
{txt}{space 8}666  {c |}{col 14}{res}{space 2} .1102742{col 26}{space 2} 1.831154{col 37}{space 1}    0.06{col 46}{space 3}0.953{col 54}{space 4}-3.792738{col 67}{space 3} 4.013286
{txt}{space 8}667  {c |}{col 14}{res}{space 2} -.051118{col 26}{space 2} 1.825867{col 37}{space 1}   -0.03{col 46}{space 3}0.978{col 54}{space 4}-3.942861{col 67}{space 3} 3.840625
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-.1893678{col 26}{space 2} 1.871558{col 37}{space 1}   -0.10{col 46}{space 3}0.921{col 54}{space 4}-4.178499{col 67}{space 3} 3.799763
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-.0738789{col 26}{space 2} 1.846397{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-4.009381{col 67}{space 3} 3.861623
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-.3121985{col 26}{space 2} 1.798617{col 37}{space 1}   -0.17{col 46}{space 3}0.865{col 54}{space 4}-4.145859{col 67}{space 3} 3.521462
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-.0209121{col 26}{space 2} 1.794872{col 37}{space 1}   -0.01{col 46}{space 3}0.991{col 54}{space 4}-3.846591{col 67}{space 3} 3.804767
{txt}{space 8}672  {c |}{col 14}{res}{space 2} -.190434{col 26}{space 2} 1.877331{col 37}{space 1}   -0.10{col 46}{space 3}0.921{col 54}{space 4}-4.191871{col 67}{space 3} 3.811003
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-.0585789{col 26}{space 2} 1.898956{col 37}{space 1}   -0.03{col 46}{space 3}0.976{col 54}{space 4}-4.106108{col 67}{space 3} 3.988951
{txt}{space 8}674  {c |}{col 14}{res}{space 2} .1066354{col 26}{space 2} 1.955565{col 37}{space 1}    0.05{col 46}{space 3}0.957{col 54}{space 4}-4.061553{col 67}{space 3} 4.274824
{txt}{space 8}675  {c |}{col 14}{res}{space 2} .4683924{col 26}{space 2}  1.97007{col 37}{space 1}    0.24{col 46}{space 3}0.815{col 54}{space 4}-3.730711{col 67}{space 3} 4.667496
{txt}{space 8}676  {c |}{col 14}{res}{space 2} .5285681{col 26}{space 2} 1.992019{col 37}{space 1}    0.27{col 46}{space 3}0.794{col 54}{space 4} -3.71732{col 67}{space 3} 4.774457
{txt}{space 8}677  {c |}{col 14}{res}{space 2} .2137637{col 26}{space 2} 1.943557{col 37}{space 1}    0.11{col 46}{space 3}0.914{col 54}{space 4}-3.928829{col 67}{space 3} 4.356357
{txt}{space 8}678  {c |}{col 14}{res}{space 2} .4399093{col 26}{space 2} 1.974624{col 37}{space 1}    0.22{col 46}{space 3}0.827{col 54}{space 4}-3.768902{col 67}{space 3}  4.64872
{txt}{space 8}679  {c |}{col 14}{res}{space 2} .5371119{col 26}{space 2} 1.957937{col 37}{space 1}    0.27{col 46}{space 3}0.788{col 54}{space 4}-3.636131{col 67}{space 3} 4.710355
{txt}{space 8}680  {c |}{col 14}{res}{space 2} .5882425{col 26}{space 2} 1.948867{col 37}{space 1}    0.30{col 46}{space 3}0.767{col 54}{space 4}-3.565669{col 67}{space 3} 4.742154
{txt}{space 8}681  {c |}{col 14}{res}{space 2} .5998653{col 26}{space 2} 1.948307{col 37}{space 1}    0.31{col 46}{space 3}0.762{col 54}{space 4}-3.552853{col 67}{space 3} 4.752583
{txt}{space 8}682  {c |}{col 14}{res}{space 2} .2600149{col 26}{space 2} 1.969765{col 37}{space 1}    0.13{col 46}{space 3}0.897{col 54}{space 4} -3.93844{col 67}{space 3} 4.458469
{txt}{space 8}683  {c |}{col 14}{res}{space 2} .1020485{col 26}{space 2} 1.977417{col 37}{space 1}    0.05{col 46}{space 3}0.960{col 54}{space 4}-4.112716{col 67}{space 3} 4.316813
{txt}{space 8}684  {c |}{col 14}{res}{space 2} .1873842{col 26}{space 2} 2.166038{col 37}{space 1}    0.09{col 46}{space 3}0.932{col 54}{space 4}-4.429417{col 67}{space 3} 4.804186
{txt}{space 8}685  {c |}{col 14}{res}{space 2} .0071342{col 26}{space 2} 2.120306{col 37}{space 1}    0.00{col 46}{space 3}0.997{col 54}{space 4} -4.51219{col 67}{space 3} 4.526459
{txt}{space 8}686  {c |}{col 14}{res}{space 2} .0008083{col 26}{space 2} 2.175449{col 37}{space 1}    0.00{col 46}{space 3}1.000{col 54}{space 4}-4.636051{col 67}{space 3} 4.637667
{txt}{space 8}687  {c |}{col 14}{res}{space 2}  .340083{col 26}{space 2} 2.106047{col 37}{space 1}    0.16{col 46}{space 3}0.874{col 54}{space 4} -4.14885{col 67}{space 3} 4.829015
{txt}{space 8}688  {c |}{col 14}{res}{space 2} .0460815{col 26}{space 2} 2.163216{col 37}{space 1}    0.02{col 46}{space 3}0.983{col 54}{space 4}-4.564703{col 67}{space 3} 4.656866
{txt}{space 8}689  {c |}{col 14}{res}{space 2} .0250467{col 26}{space 2} 2.156696{col 37}{space 1}    0.01{col 46}{space 3}0.991{col 54}{space 4}-4.571842{col 67}{space 3} 4.621935
{txt}{space 8}690  {c |}{col 14}{res}{space 2}-.2583665{col 26}{space 2} 2.157477{col 37}{space 1}   -0.12{col 46}{space 3}0.906{col 54}{space 4}-4.856921{col 67}{space 3} 4.340187
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-.1125988{col 26}{space 2} 2.188635{col 37}{space 1}   -0.05{col 46}{space 3}0.960{col 54}{space 4}-4.777564{col 67}{space 3} 4.552366
{txt}{space 8}692  {c |}{col 14}{res}{space 2} .0660908{col 26}{space 2} 2.167196{col 37}{space 1}    0.03{col 46}{space 3}0.976{col 54}{space 4}-4.553179{col 67}{space 3}  4.68536
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-.0262135{col 26}{space 2} 2.133101{col 37}{space 1}   -0.01{col 46}{space 3}0.990{col 54}{space 4} -4.57281{col 67}{space 3} 4.520383
{txt}{space 8}694  {c |}{col 14}{res}{space 2} .0587008{col 26}{space 2} 2.175705{col 37}{space 1}    0.03{col 46}{space 3}0.979{col 54}{space 4}-4.578704{col 67}{space 3} 4.696105
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-.1517471{col 26}{space 2}  2.15539{col 37}{space 1}   -0.07{col 46}{space 3}0.945{col 54}{space 4}-4.745851{col 67}{space 3} 4.442357
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-.0145427{col 26}{space 2} 2.242281{col 37}{space 1}   -0.01{col 46}{space 3}0.995{col 54}{space 4}-4.793852{col 67}{space 3} 4.764767
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-.0547693{col 26}{space 2}  2.23017{col 37}{space 1}   -0.02{col 46}{space 3}0.981{col 54}{space 4}-4.808264{col 67}{space 3} 4.698725
{txt}{space 8}698  {c |}{col 14}{res}{space 2} .0033222{col 26}{space 2} 2.240325{col 37}{space 1}    0.00{col 46}{space 3}0.999{col 54}{space 4}-4.771818{col 67}{space 3} 4.778462
{txt}{space 8}699  {c |}{col 14}{res}{space 2}-.2036338{col 26}{space 2} 2.240758{col 37}{space 1}   -0.09{col 46}{space 3}0.929{col 54}{space 4}-4.979697{col 67}{space 3}  4.57243
{txt}{space 8}700  {c |}{col 14}{res}{space 2} .0724595{col 26}{space 2} 2.255622{col 37}{space 1}    0.03{col 46}{space 3}0.975{col 54}{space 4}-4.735285{col 67}{space 3} 4.880204
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-.2920188{col 26}{space 2} 2.236333{col 37}{space 1}   -0.13{col 46}{space 3}0.898{col 54}{space 4} -5.05865{col 67}{space 3} 4.474613
{txt}{space 8}702  {c |}{col 14}{res}{space 2}-.4969799{col 26}{space 2} 2.309247{col 37}{space 1}   -0.22{col 46}{space 3}0.833{col 54}{space 4}-5.419023{col 67}{space 3} 4.425063
{txt}{space 8}703  {c |}{col 14}{res}{space 2} .0077216{col 26}{space 2} 2.220338{col 37}{space 1}    0.00{col 46}{space 3}0.997{col 54}{space 4}-4.724818{col 67}{space 3} 4.740261
{txt}{space 8}704  {c |}{col 14}{res}{space 2} .2524177{col 26}{space 2} 2.142346{col 37}{space 1}    0.12{col 46}{space 3}0.908{col 54}{space 4}-4.313885{col 67}{space 3} 4.818721
{txt}{space 8}705  {c |}{col 14}{res}{space 2} .3154833{col 26}{space 2} 2.186747{col 37}{space 1}    0.14{col 46}{space 3}0.887{col 54}{space 4}-4.345457{col 67}{space 3} 4.976424
{txt}{space 8}706  {c |}{col 14}{res}{space 2} .2302578{col 26}{space 2} 2.191943{col 37}{space 1}    0.11{col 46}{space 3}0.918{col 54}{space 4}-4.441759{col 67}{space 3} 4.902275
{txt}{space 8}707  {c |}{col 14}{res}{space 2} .1060503{col 26}{space 2} 2.265261{col 37}{space 1}    0.05{col 46}{space 3}0.963{col 54}{space 4} -4.72224{col 67}{space 3} 4.934341
{txt}{space 8}708  {c |}{col 14}{res}{space 2} .4763444{col 26}{space 2} 2.430074{col 37}{space 1}    0.20{col 46}{space 3}0.847{col 54}{space 4}-4.703237{col 67}{space 3} 5.655925
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-.1127607{col 26}{space 2}  2.44433{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-5.322728{col 67}{space 3} 5.097206
{txt}{space 8}710  {c |}{col 14}{res}{space 2} .2004405{col 26}{space 2} 2.405812{col 37}{space 1}    0.08{col 46}{space 3}0.935{col 54}{space 4}-4.927426{col 67}{space 3} 5.328307
{txt}{space 8}711  {c |}{col 14}{res}{space 2} .5219241{col 26}{space 2} 2.354318{col 37}{space 1}    0.22{col 46}{space 3}0.828{col 54}{space 4}-4.496185{col 67}{space 3} 5.540033
{txt}{space 8}712  {c |}{col 14}{res}{space 2} .1088259{col 26}{space 2}  2.40191{col 37}{space 1}    0.05{col 46}{space 3}0.964{col 54}{space 4}-5.010723{col 67}{space 3} 5.228375
{txt}{space 8}713  {c |}{col 14}{res}{space 2} .5700539{col 26}{space 2}  2.39544{col 37}{space 1}    0.24{col 46}{space 3}0.815{col 54}{space 4}-4.535705{col 67}{space 3} 5.675813
{txt}{space 8}714  {c |}{col 14}{res}{space 2}   .22605{col 26}{space 2} 2.365435{col 37}{space 1}    0.10{col 46}{space 3}0.925{col 54}{space 4}-4.815755{col 67}{space 3} 5.267855
{txt}{space 8}715  {c |}{col 14}{res}{space 2} .2409226{col 26}{space 2} 2.403759{col 37}{space 1}    0.10{col 46}{space 3}0.921{col 54}{space 4}-4.882569{col 67}{space 3} 5.364414
{txt}{space 8}716  {c |}{col 14}{res}{space 2}  .143419{col 26}{space 2} 2.417584{col 37}{space 1}    0.06{col 46}{space 3}0.953{col 54}{space 4} -5.00954{col 67}{space 3} 5.296378
{txt}{space 8}717  {c |}{col 14}{res}{space 2}-.0097727{col 26}{space 2} 2.394371{col 37}{space 1}   -0.00{col 46}{space 3}0.997{col 54}{space 4}-5.113253{col 67}{space 3} 5.093707
{txt}{space 8}718  {c |}{col 14}{res}{space 2} .3671386{col 26}{space 2} 2.372415{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4}-4.689545{col 67}{space 3} 5.423822
{txt}{space 8}719  {c |}{col 14}{res}{space 2} .2261325{col 26}{space 2} 2.418115{col 37}{space 1}    0.09{col 46}{space 3}0.927{col 54}{space 4}-4.927958{col 67}{space 3} 5.380223
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.509656{col 26}{space 2} .2606921{col 37}{space 1}    5.79{col 46}{space 3}0.000{col 54}{space 4} .9540043{col 67}{space 3} 2.065308
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.345634{col 26}{space 2} .8713547{col 37}{space 1}   -1.54{col 46}{space 3}0.143{col 54}{space 4}-3.202882{col 67}{space 3} .5116149
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-.7488301{col 26}{space 2} 1.459789{col 37}{space 1}   -0.51{col 46}{space 3}0.615{col 54}{space 4}-3.860296{col 67}{space 3} 2.362636
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.5631052{col 26}{space 2} .2816323{col 37}{space 1}   -2.00{col 46}{space 3}0.064{col 54}{space 4} -1.16339{col 67}{space 3}   .03718
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2}  1.02206{col 26}{space 2} .1491846{col 37}{space 1}    6.85{col 46}{space 3}0.000{col 54}{space 4} .7040805{col 67}{space 3} 1.340039
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}  .472303{col 26}{space 2} 1.537954{col 37}{space 1}    0.31{col 46}{space 3}0.763{col 54}{space 4}-2.805767{col 67}{space 3} 3.750374
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 1.179435{col 26}{space 2} .7166853{col 37}{space 1}    1.65{col 46}{space 3}0.121{col 54}{space 4}-.3481434{col 67}{space 3} 2.707014
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.083696{col 26}{space 2} .5990918{col 37}{space 1}   -3.48{col 46}{space 3}0.003{col 54}{space 4}-3.360629{col 67}{space 3}-.8067617
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-2.224124{col 26}{space 2} .7256007{col 37}{space 1}   -3.07{col 46}{space 3}0.008{col 54}{space 4}-3.770706{col 67}{space 3}-.6775433
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.444898{col 26}{space 2}  .922484{col 37}{space 1}   -1.57{col 46}{space 3}0.138{col 54}{space 4}-3.411126{col 67}{space 3} .5213301
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 2.103719{col 26}{space 2}  .453443{col 37}{space 1}    4.64{col 46}{space 3}0.000{col 54}{space 4} 1.137228{col 67}{space 3}  3.07021
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}  .301312{col 26}{space 2} .9571839{col 37}{space 1}    0.31{col 46}{space 3}0.757{col 54}{space 4}-1.738877{col 67}{space 3} 2.341501
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 3.084887{col 26}{space 2} 1.071275{col 37}{space 1}    2.88{col 46}{space 3}0.011{col 54}{space 4} .8015182{col 67}{space 3} 5.368256
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}  1.29578{col 26}{space 2} 4.311231{col 37}{space 1}    0.30{col 46}{space 3}0.768{col 54}{space 4}-7.893392{col 67}{space 3} 10.48495
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} 1.089293{col 26}{space 2} 1.416753{col 37}{space 1}    0.77{col 46}{space 3}0.454{col 54}{space 4}-1.930444{col 67}{space 3} 4.109029
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-16.14593{col 26}{space 2} 18.12136{col 37}{space 1}   -0.89{col 46}{space 3}0.387{col 54}{space 4} -54.7707{col 67}{space 3} 22.47884
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 763 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -5.6613
{col 25}{txt}Prob>|t| = {res}    0.0243

95%{txt} confidence set for null hypothesis expression: [{res}-3.776{txt}, {res}-1.26{txt}]
{res}
Warning: 24 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -4.6137
{col 25}{txt}Prob>|t| = {res}    0.0044

95%{txt} confidence set for null hypothesis expression: [{res}-3.758{txt}, {res}-1.401{txt}]
{res}
Warning: 29 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -5.2969
{col 25}{txt}Prob>|t| = {res}    0.0042

95%{txt} confidence set for null hypothesis expression: [{res}-4.422{txt}, {res}-1.773{txt}]
{res}
Warning: 205 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -6.3595
{col 25}{txt}Prob>|t| = {res}    0.0110

95%{txt} confidence set for null hypothesis expression: [{res}-3.174{txt}, {res}-1.444{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -7.2296
{col 25}{txt}Prob>|t| = {res}    0.0146

95%{txt} confidence set for null hypothesis expression: [{res}-2.448{txt}, {res}-.7376{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 28}t(15) = {res}    1.2557
{col 25}{txt}Prob>|t| = {res}    0.2350

95%{txt} confidence set for null hypothesis expression: [{res}-1.227{txt}, {res}5.297{txt}]
{res}
Warning: 16 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 28}t(15) = {res}   -0.4170
{col 25}{txt}Prob>|t| = {res}    0.7198

95%{txt} confidence set for null hypothesis expression: [{res}-1.123{txt}, {res}.8217{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   -0.8963
{col 25}{txt}Prob>|t| = {res}    0.4010

95%{txt} confidence set for null hypothesis expression: [{res}-68.01{txt}, {res}23.06{txt}]
{res}{txt}
{com}. 
. 
. ** Absolute FDI
. 
. reg fdi one two three four five $control i.date i.region1, cluster(region1)

{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.4752
                                                {txt}Root MSE          =    {res} 249.52

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}         fdi{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-109.3349{col 26}{space 2} 40.74663{col 37}{space 1}   -2.68{col 46}{space 3}0.017{col 54}{space 4}-196.1843{col 67}{space 3}-22.48555
{txt}{space 9}two {c |}{col 14}{res}{space 2}-130.0412{col 26}{space 2} 58.74348{col 37}{space 1}   -2.21{col 46}{space 3}0.043{col 54}{space 4}-255.2499{col 67}{space 3}-4.832412
{txt}{space 7}three {c |}{col 14}{res}{space 2}-146.3815{col 26}{space 2} 73.58068{col 37}{space 1}   -1.99{col 46}{space 3}0.065{col 54}{space 4} -303.215{col 67}{space 3} 10.45199
{txt}{space 8}four {c |}{col 14}{res}{space 2}-293.0864{col 26}{space 2} 155.1627{col 37}{space 1}   -1.89{col 46}{space 3}0.078{col 54}{space 4}-623.8078{col 67}{space 3} 37.63498
{txt}{space 8}five {c |}{col 14}{res}{space 2} -234.519{col 26}{space 2} 130.9328{col 37}{space 1}   -1.79{col 46}{space 3}0.093{col 54}{space 4}-513.5956{col 67}{space 3} 44.55764
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 78.89157{col 26}{space 2} 395.5849{col 37}{space 1}    0.20{col 46}{space 3}0.845{col 54}{space 4}-764.2776{col 67}{space 3} 922.0607
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} 448.4136{col 26}{space 2} 210.9654{col 37}{space 1}    2.13{col 46}{space 3}0.051{col 54}{space 4}-1.248475{col 67}{space 3} 898.0757
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-68.91667{col 26}{space 2} 62.74663{col 37}{space 1}   -1.10{col 46}{space 3}0.289{col 54}{space 4} -202.658{col 67}{space 3} 64.82462
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-72.83333{col 26}{space 2} 68.96658{col 37}{space 1}   -1.06{col 46}{space 3}0.308{col 54}{space 4}-219.8321{col 67}{space 3} 74.16544
{txt}{space 8}555  {c |}{col 14}{res}{space 2}      -68{col 26}{space 2} 75.71304{col 37}{space 1}   -0.90{col 46}{space 3}0.383{col 54}{space 4}-229.3785{col 67}{space 3} 93.37852
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-62.29167{col 26}{space 2} 70.29852{col 37}{space 1}   -0.89{col 46}{space 3}0.390{col 54}{space 4}-212.1294{col 67}{space 3} 87.54609
{txt}{space 8}557  {c |}{col 14}{res}{space 2}-59.39583{col 26}{space 2} 58.57007{col 37}{space 1}   -1.01{col 46}{space 3}0.327{col 54}{space 4} -184.235{col 67}{space 3} 65.44331
{txt}{space 8}558  {c |}{col 14}{res}{space 2} -58.4375{col 26}{space 2} 70.74054{col 37}{space 1}   -0.83{col 46}{space 3}0.422{col 54}{space 4}-209.2174{col 67}{space 3} 92.34238
{txt}{space 8}559  {c |}{col 14}{res}{space 2}-67.97917{col 26}{space 2} 70.05531{col 37}{space 1}   -0.97{col 46}{space 3}0.347{col 54}{space 4}-217.2985{col 67}{space 3} 81.34019
{txt}{space 8}560  {c |}{col 14}{res}{space 2}-77.64583{col 26}{space 2} 75.50786{col 37}{space 1}   -1.03{col 46}{space 3}0.320{col 54}{space 4} -238.587{col 67}{space 3} 83.29537
{txt}{space 8}561  {c |}{col 14}{res}{space 2}    -57.5{col 26}{space 2} 63.67028{col 37}{space 1}   -0.90{col 46}{space 3}0.381{col 54}{space 4}  -193.21{col 67}{space 3} 78.20999
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-67.35417{col 26}{space 2} 68.16639{col 37}{space 1}   -0.99{col 46}{space 3}0.339{col 54}{space 4}-212.6474{col 67}{space 3} 77.93905
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-67.64583{col 26}{space 2} 74.80974{col 37}{space 1}   -0.90{col 46}{space 3}0.380{col 54}{space 4} -227.099{col 67}{space 3} 91.80736
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-87.91723{col 26}{space 2} 100.7718{col 37}{space 1}   -0.87{col 46}{space 3}0.397{col 54}{space 4}-302.7073{col 67}{space 3} 126.8728
{txt}{space 8}565  {c |}{col 14}{res}{space 2} -73.4589{col 26}{space 2} 100.6099{col 37}{space 1}   -0.73{col 46}{space 3}0.477{col 54}{space 4}-287.9039{col 67}{space 3} 140.9861
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-87.93806{col 26}{space 2} 99.09153{col 37}{space 1}   -0.89{col 46}{space 3}0.389{col 54}{space 4}-299.1467{col 67}{space 3} 123.2705
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-85.85473{col 26}{space 2} 103.6031{col 37}{space 1}   -0.83{col 46}{space 3}0.420{col 54}{space 4}-306.6795{col 67}{space 3} 134.9701
{txt}{space 8}568  {c |}{col 14}{res}{space 2} -78.0214{col 26}{space 2} 103.1394{col 37}{space 1}   -0.76{col 46}{space 3}0.461{col 54}{space 4}-297.8578{col 67}{space 3}  141.815
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-90.81306{col 26}{space 2} 104.4007{col 37}{space 1}   -0.87{col 46}{space 3}0.398{col 54}{space 4}-313.3378{col 67}{space 3} 131.7117
{txt}{space 8}570  {c |}{col 14}{res}{space 2}-74.35473{col 26}{space 2} 112.3571{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-313.8382{col 67}{space 3} 165.1288
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-84.60453{col 26}{space 2} 94.59566{col 37}{space 1}   -0.89{col 46}{space 3}0.385{col 54}{space 4}-286.2304{col 67}{space 3} 117.0213
{txt}{space 8}572  {c |}{col 14}{res}{space 2} -93.5837{col 26}{space 2} 94.10816{col 37}{space 1}   -0.99{col 46}{space 3}0.336{col 54}{space 4}-294.1705{col 67}{space 3} 107.0031
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-87.56286{col 26}{space 2}  95.5542{col 37}{space 1}   -0.92{col 46}{space 3}0.374{col 54}{space 4}-291.2318{col 67}{space 3} 116.1061
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-64.35453{col 26}{space 2} 97.45534{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-272.0757{col 67}{space 3} 143.3666
{txt}{space 8}575  {c |}{col 14}{res}{space 2} -50.2087{col 26}{space 2} 110.3174{col 37}{space 1}   -0.46{col 46}{space 3}0.656{col 54}{space 4}-285.3446{col 67}{space 3} 184.9272
{txt}{space 8}576  {c |}{col 14}{res}{space 2} -86.4833{col 26}{space 2} 145.1248{col 37}{space 1}   -0.60{col 46}{space 3}0.560{col 54}{space 4}-395.8094{col 67}{space 3} 222.8428
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-83.39997{col 26}{space 2} 141.0033{col 37}{space 1}   -0.59{col 46}{space 3}0.563{col 54}{space 4}-383.9414{col 67}{space 3} 217.1415
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-88.62914{col 26}{space 2} 141.5545{col 37}{space 1}   -0.63{col 46}{space 3}0.541{col 54}{space 4}-390.3455{col 67}{space 3} 213.0872
{txt}{space 8}579  {c |}{col 14}{res}{space 2} -81.4833{col 26}{space 2} 143.2398{col 37}{space 1}   -0.57{col 46}{space 3}0.578{col 54}{space 4}-386.7916{col 67}{space 3}  223.825
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-84.08747{col 26}{space 2}  141.563{col 37}{space 1}   -0.59{col 46}{space 3}0.561{col 54}{space 4}-385.8219{col 67}{space 3} 217.6469
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-76.19164{col 26}{space 2} 140.0765{col 37}{space 1}   -0.54{col 46}{space 3}0.594{col 54}{space 4}-374.7577{col 67}{space 3} 222.3744
{txt}{space 8}582  {c |}{col 14}{res}{space 2} -75.6708{col 26}{space 2} 142.2906{col 37}{space 1}   -0.53{col 46}{space 3}0.603{col 54}{space 4} -378.956{col 67}{space 3} 227.6143
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-35.33747{col 26}{space 2} 137.9583{col 37}{space 1}   -0.26{col 46}{space 3}0.801{col 54}{space 4}-329.3885{col 67}{space 3} 258.7136
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-79.81664{col 26}{space 2} 141.1028{col 37}{space 1}   -0.57{col 46}{space 3}0.580{col 54}{space 4}-380.5702{col 67}{space 3} 220.9369
{txt}{space 8}585  {c |}{col 14}{res}{space 2} -69.6708{col 26}{space 2} 146.0883{col 37}{space 1}   -0.48{col 46}{space 3}0.640{col 54}{space 4}-381.0506{col 67}{space 3}  241.709
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-81.21247{col 26}{space 2}  140.214{col 37}{space 1}   -0.58{col 46}{space 3}0.571{col 54}{space 4}-380.0715{col 67}{space 3} 217.6466
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-85.25414{col 26}{space 2} 141.2436{col 37}{space 1}   -0.60{col 46}{space 3}0.555{col 54}{space 4}-386.3077{col 67}{space 3} 215.7994
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-86.46345{col 26}{space 2} 192.6452{col 37}{space 1}   -0.45{col 46}{space 3}0.660{col 54}{space 4}-497.0769{col 67}{space 3}   324.15
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-93.31762{col 26}{space 2} 194.8792{col 37}{space 1}   -0.48{col 46}{space 3}0.639{col 54}{space 4}-508.6928{col 67}{space 3} 322.0575
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-92.73429{col 26}{space 2} 193.4194{col 37}{space 1}   -0.48{col 46}{space 3}0.639{col 54}{space 4} -504.998{col 67}{space 3} 319.5295
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-93.08845{col 26}{space 2} 195.2872{col 37}{space 1}   -0.48{col 46}{space 3}0.640{col 54}{space 4}-509.3332{col 67}{space 3} 323.1563
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-82.88012{col 26}{space 2} 196.2199{col 37}{space 1}   -0.42{col 46}{space 3}0.679{col 54}{space 4}-501.1129{col 67}{space 3} 335.3526
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-88.73429{col 26}{space 2} 196.5326{col 37}{space 1}   -0.45{col 46}{space 3}0.658{col 54}{space 4}-507.6337{col 67}{space 3} 330.1651
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-70.77595{col 26}{space 2} 198.2186{col 37}{space 1}   -0.36{col 46}{space 3}0.726{col 54}{space 4}-493.2689{col 67}{space 3}  351.717
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-91.00512{col 26}{space 2} 192.8719{col 37}{space 1}   -0.47{col 46}{space 3}0.644{col 54}{space 4}-502.1017{col 67}{space 3} 320.0915
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-89.48429{col 26}{space 2} 196.1779{col 37}{space 1}   -0.46{col 46}{space 3}0.655{col 54}{space 4}-507.6276{col 67}{space 3}  328.659
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-91.58845{col 26}{space 2} 191.4942{col 37}{space 1}   -0.48{col 46}{space 3}0.639{col 54}{space 4}-499.7486{col 67}{space 3} 316.5717
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-99.38012{col 26}{space 2} 193.7284{col 37}{space 1}   -0.51{col 46}{space 3}0.615{col 54}{space 4}-512.3025{col 67}{space 3} 313.5423
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-95.48429{col 26}{space 2} 189.2826{col 37}{space 1}   -0.50{col 46}{space 3}0.621{col 54}{space 4}-498.9305{col 67}{space 3} 307.9619
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-105.2749{col 26}{space 2} 242.0031{col 37}{space 1}   -0.44{col 46}{space 3}0.670{col 54}{space 4}-621.0923{col 67}{space 3} 410.5425
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-109.7541{col 26}{space 2} 245.0642{col 37}{space 1}   -0.45{col 46}{space 3}0.661{col 54}{space 4}-632.0961{col 67}{space 3}  412.588
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-105.7332{col 26}{space 2} 244.6708{col 37}{space 1}   -0.43{col 46}{space 3}0.672{col 54}{space 4}-627.2368{col 67}{space 3} 415.7703
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-99.26461{col 26}{space 2} 252.0512{col 37}{space 1}   -0.39{col 46}{space 3}0.699{col 54}{space 4} -636.499{col 67}{space 3} 437.9698
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-89.74378{col 26}{space 2} 248.3238{col 37}{space 1}   -0.36{col 46}{space 3}0.723{col 54}{space 4}-619.0334{col 67}{space 3} 439.5458
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-77.03544{col 26}{space 2} 254.5505{col 37}{space 1}   -0.30{col 46}{space 3}0.766{col 54}{space 4} -619.597{col 67}{space 3} 465.5261
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-83.26461{col 26}{space 2} 252.6146{col 37}{space 1}   -0.33{col 46}{space 3}0.746{col 54}{space 4}-621.6999{col 67}{space 3} 455.1707
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-66.05628{col 26}{space 2} 252.7836{col 37}{space 1}   -0.26{col 46}{space 3}0.797{col 54}{space 4}-604.8519{col 67}{space 3} 472.7393
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-60.34794{col 26}{space 2} 266.0973{col 37}{space 1}   -0.23{col 46}{space 3}0.824{col 54}{space 4}-627.5209{col 67}{space 3}  506.825
{txt}{space 8}609  {c |}{col 14}{res}{space 2} 2.922892{col 26}{space 2} 234.4994{col 37}{space 1}    0.01{col 46}{space 3}0.990{col 54}{space 4}-496.9007{col 67}{space 3} 502.7465
{txt}{space 8}610  {c |}{col 14}{res}{space 2}-64.80628{col 26}{space 2} 255.9606{col 37}{space 1}   -0.25{col 46}{space 3}0.804{col 54}{space 4}-610.3734{col 67}{space 3} 480.7609
{txt}{space 8}611  {c |}{col 14}{res}{space 2}-59.09794{col 26}{space 2} 256.0047{col 37}{space 1}   -0.23{col 46}{space 3}0.821{col 54}{space 4} -604.759{col 67}{space 3} 486.5631
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-67.46245{col 26}{space 2} 319.8772{col 37}{space 1}   -0.21{col 46}{space 3}0.836{col 54}{space 4}-749.2645{col 67}{space 3} 614.3396
{txt}{space 8}613  {c |}{col 14}{res}{space 2} 39.12089{col 26}{space 2} 300.5986{col 37}{space 1}    0.13{col 46}{space 3}0.898{col 54}{space 4}  -601.59{col 67}{space 3} 679.8317
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-82.67078{col 26}{space 2} 316.2504{col 37}{space 1}   -0.26{col 46}{space 3}0.797{col 54}{space 4}-756.7426{col 67}{space 3} 591.4011
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-74.27495{col 26}{space 2} 315.7787{col 37}{space 1}   -0.24{col 46}{space 3}0.817{col 54}{space 4}-747.3413{col 67}{space 3} 598.7914
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-84.56661{col 26}{space 2} 313.4363{col 37}{space 1}   -0.27{col 46}{space 3}0.791{col 54}{space 4}-752.6402{col 67}{space 3} 583.5069
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-29.42078{col 26}{space 2} 301.0347{col 37}{space 1}   -0.10{col 46}{space 3}0.923{col 54}{space 4} -671.061{col 67}{space 3} 612.2195
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-85.08745{col 26}{space 2} 317.9673{col 37}{space 1}   -0.27{col 46}{space 3}0.793{col 54}{space 4}-762.8187{col 67}{space 3} 592.6438
{txt}{space 8}619  {c |}{col 14}{res}{space 2}-75.44161{col 26}{space 2} 314.2219{col 37}{space 1}   -0.24{col 46}{space 3}0.814{col 54}{space 4}-745.1897{col 67}{space 3} 594.3064
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-12.35828{col 26}{space 2} 295.4611{col 37}{space 1}   -0.04{col 46}{space 3}0.967{col 54}{space 4}-642.1187{col 67}{space 3} 617.4021
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-73.02495{col 26}{space 2}  316.307{col 37}{space 1}   -0.23{col 46}{space 3}0.821{col 54}{space 4}-747.2174{col 67}{space 3} 601.1675
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-80.31661{col 26}{space 2} 320.2344{col 37}{space 1}   -0.25{col 46}{space 3}0.805{col 54}{space 4}-762.8802{col 67}{space 3} 602.2469
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-80.92078{col 26}{space 2} 312.6896{col 37}{space 1}   -0.26{col 46}{space 3}0.799{col 54}{space 4}-747.4028{col 67}{space 3} 585.5613
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-147.9269{col 26}{space 2} 337.4411{col 37}{space 1}   -0.44{col 46}{space 3}0.667{col 54}{space 4}-867.1656{col 67}{space 3} 571.3119
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-155.2811{col 26}{space 2} 346.3136{col 37}{space 1}   -0.45{col 46}{space 3}0.660{col 54}{space 4}-893.4309{col 67}{space 3} 582.8688
{txt}{space 8}626  {c |}{col 14}{res}{space 2}-165.6352{col 26}{space 2} 338.1125{col 37}{space 1}   -0.49{col 46}{space 3}0.631{col 54}{space 4}-886.3049{col 67}{space 3} 555.0345
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-170.4894{col 26}{space 2} 342.3982{col 37}{space 1}   -0.50{col 46}{space 3}0.626{col 54}{space 4}-900.2939{col 67}{space 3} 559.3151
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-177.0936{col 26}{space 2} 344.2661{col 37}{space 1}   -0.51{col 46}{space 3}0.614{col 54}{space 4}-910.8795{col 67}{space 3} 556.6923
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-166.9477{col 26}{space 2} 344.8605{col 37}{space 1}   -0.48{col 46}{space 3}0.635{col 54}{space 4}-902.0004{col 67}{space 3} 568.1049
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-148.3644{col 26}{space 2} 347.0417{col 37}{space 1}   -0.43{col 46}{space 3}0.675{col 54}{space 4}-888.0662{col 67}{space 3} 591.3375
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-165.4686{col 26}{space 2} 337.9813{col 37}{space 1}   -0.49{col 46}{space 3}0.632{col 54}{space 4}-885.8587{col 67}{space 3} 554.9216
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-144.4477{col 26}{space 2} 344.6128{col 37}{space 1}   -0.42{col 46}{space 3}0.681{col 54}{space 4}-878.9725{col 67}{space 3} 590.0771
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-155.8644{col 26}{space 2} 338.9217{col 37}{space 1}   -0.46{col 46}{space 3}0.652{col 54}{space 4}-878.2588{col 67}{space 3} 566.5301
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-139.1561{col 26}{space 2} 345.6686{col 37}{space 1}   -0.40{col 46}{space 3}0.693{col 54}{space 4}-875.9312{col 67}{space 3} 597.6191
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-144.6352{col 26}{space 2} 348.8584{col 37}{space 1}   -0.41{col 46}{space 3}0.684{col 54}{space 4}-888.2092{col 67}{space 3} 598.9388
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-170.1405{col 26}{space 2} 382.8882{col 37}{space 1}   -0.44{col 46}{space 3}0.663{col 54}{space 4}-986.2473{col 67}{space 3} 645.9663
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-155.6821{col 26}{space 2} 379.6184{col 37}{space 1}   -0.41{col 46}{space 3}0.688{col 54}{space 4}-964.8196{col 67}{space 3} 653.4553
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-133.2863{col 26}{space 2} 379.5517{col 37}{space 1}   -0.35{col 46}{space 3}0.730{col 54}{space 4}-942.2816{col 67}{space 3} 675.7089
{txt}{space 8}639  {c |}{col 14}{res}{space 2} -152.203{col 26}{space 2}  387.997{col 37}{space 1}   -0.39{col 46}{space 3}0.700{col 54}{space 4} -979.199{col 67}{space 3} 674.7931
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-147.9321{col 26}{space 2} 380.7434{col 37}{space 1}   -0.39{col 46}{space 3}0.703{col 54}{space 4}-959.4676{col 67}{space 3} 663.6033
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-139.0898{col 26}{space 2} 394.8574{col 37}{space 1}   -0.35{col 46}{space 3}0.730{col 54}{space 4}-980.7083{col 67}{space 3} 702.5287
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-162.1314{col 26}{space 2} 392.5013{col 37}{space 1}   -0.41{col 46}{space 3}0.685{col 54}{space 4}-998.7282{col 67}{space 3} 674.4653
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-157.6731{col 26}{space 2} 400.6874{col 37}{space 1}   -0.39{col 46}{space 3}0.699{col 54}{space 4}-1011.718{col 67}{space 3} 696.3719
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-169.4023{col 26}{space 2} 395.1947{col 37}{space 1}   -0.43{col 46}{space 3}0.674{col 54}{space 4} -1011.74{col 67}{space 3} 672.9353
{txt}{space 8}645  {c |}{col 14}{res}{space 2}-71.50644{col 26}{space 2} 394.6646{col 37}{space 1}   -0.18{col 46}{space 3}0.859{col 54}{space 4}-912.7142{col 67}{space 3} 769.7013
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-45.67311{col 26}{space 2} 464.3286{col 37}{space 1}   -0.10{col 46}{space 3}0.923{col 54}{space 4}-1035.366{col 67}{space 3} 944.0199
{txt}{space 8}647  {c |}{col 14}{res}{space 2}-53.90227{col 26}{space 2} 452.9806{col 37}{space 1}   -0.12{col 46}{space 3}0.907{col 54}{space 4}-1019.408{col 67}{space 3}  911.603
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-110.3724{col 26}{space 2} 461.9741{col 37}{space 1}   -0.24{col 46}{space 3}0.814{col 54}{space 4}-1095.047{col 67}{space 3} 874.3021
{txt}{space 8}649  {c |}{col 14}{res}{space 2}-104.6016{col 26}{space 2} 455.3242{col 37}{space 1}   -0.23{col 46}{space 3}0.821{col 54}{space 4}-1075.102{col 67}{space 3}  865.899
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-144.5182{col 26}{space 2} 455.4844{col 37}{space 1}   -0.32{col 46}{space 3}0.755{col 54}{space 4} -1115.36{col 67}{space 3} 826.3238
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-70.62241{col 26}{space 2} 466.8015{col 37}{space 1}   -0.15{col 46}{space 3}0.882{col 54}{space 4}-1065.586{col 67}{space 3} 924.3414
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-134.1641{col 26}{space 2} 447.7364{col 37}{space 1}   -0.30{col 46}{space 3}0.769{col 54}{space 4}-1088.492{col 67}{space 3} 820.1635
{txt}{space 8}653  {c |}{col 14}{res}{space 2}-13.26824{col 26}{space 2} 479.6136{col 37}{space 1}   -0.03{col 46}{space 3}0.978{col 54}{space 4} -1035.54{col 67}{space 3} 1009.004
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-108.3724{col 26}{space 2} 466.6362{col 37}{space 1}   -0.23{col 46}{space 3}0.819{col 54}{space 4}-1102.984{col 67}{space 3} 886.2391
{txt}{space 8}655  {c |}{col 14}{res}{space 2}-41.97657{col 26}{space 2} 467.1922{col 37}{space 1}   -0.09{col 46}{space 3}0.930{col 54}{space 4}-1037.773{col 67}{space 3}   953.82
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-63.64324{col 26}{space 2} 474.9864{col 37}{space 1}   -0.13{col 46}{space 3}0.895{col 54}{space 4}-1076.053{col 67}{space 3} 948.7662
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-108.3724{col 26}{space 2} 456.4141{col 37}{space 1}   -0.24{col 46}{space 3}0.816{col 54}{space 4}-1081.196{col 67}{space 3} 864.4512
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-115.9141{col 26}{space 2} 449.4131{col 37}{space 1}   -0.26{col 46}{space 3}0.800{col 54}{space 4}-1073.815{col 67}{space 3} 841.9873
{txt}{space 8}659  {c |}{col 14}{res}{space 2}-43.08074{col 26}{space 2} 479.8264{col 37}{space 1}   -0.09{col 46}{space 3}0.930{col 54}{space 4}-1065.806{col 67}{space 3} 979.6449
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-113.8496{col 26}{space 2}  471.888{col 37}{space 1}   -0.24{col 46}{space 3}0.813{col 54}{space 4}-1119.655{col 67}{space 3} 891.9558
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-107.4538{col 26}{space 2} 475.0417{col 37}{space 1}   -0.23{col 46}{space 3}0.824{col 54}{space 4}-1119.981{col 67}{space 3} 905.0735
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-107.9954{col 26}{space 2} 491.1206{col 37}{space 1}   -0.22{col 46}{space 3}0.829{col 54}{space 4}-1154.794{col 67}{space 3} 938.8033
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-104.2871{col 26}{space 2} 490.7695{col 37}{space 1}   -0.21{col 46}{space 3}0.835{col 54}{space 4}-1150.337{col 67}{space 3} 941.7633
{txt}{space 8}664  {c |}{col 14}{res}{space 2}-94.95376{col 26}{space 2} 503.4331{col 37}{space 1}   -0.19{col 46}{space 3}0.853{col 54}{space 4}-1167.996{col 67}{space 3} 978.0884
{txt}{space 8}665  {c |}{col 14}{res}{space 2}-17.30793{col 26}{space 2} 504.0391{col 37}{space 1}   -0.03{col 46}{space 3}0.973{col 54}{space 4}-1091.642{col 67}{space 3} 1057.026
{txt}{space 8}666  {c |}{col 14}{res}{space 2}-66.41209{col 26}{space 2} 496.5277{col 37}{space 1}   -0.13{col 46}{space 3}0.895{col 54}{space 4}-1124.736{col 67}{space 3} 991.9117
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-72.64126{col 26}{space 2} 485.1084{col 37}{space 1}   -0.15{col 46}{space 3}0.883{col 54}{space 4}-1106.625{col 67}{space 3} 961.3429
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-129.0579{col 26}{space 2} 479.0696{col 37}{space 1}   -0.27{col 46}{space 3}0.791{col 54}{space 4}-1150.171{col 67}{space 3} 892.0548
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-93.47459{col 26}{space 2} 475.0503{col 37}{space 1}   -0.20{col 46}{space 3}0.847{col 54}{space 4} -1106.02{col 67}{space 3} 919.0711
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-134.6305{col 26}{space 2} 490.5231{col 37}{space 1}   -0.27{col 46}{space 3}0.787{col 54}{space 4}-1180.156{col 67}{space 3} 910.8947
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-92.79713{col 26}{space 2} 480.2765{col 37}{space 1}   -0.19{col 46}{space 3}0.849{col 54}{space 4}-1116.482{col 67}{space 3} 930.8879
{txt}{space 8}672  {c |}{col 14}{res}{space 2}-150.6765{col 26}{space 2} 519.6301{col 37}{space 1}   -0.29{col 46}{space 3}0.776{col 54}{space 4}-1258.242{col 67}{space 3} 956.8889
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-130.9056{col 26}{space 2}  527.891{col 37}{space 1}   -0.25{col 46}{space 3}0.808{col 54}{space 4}-1256.079{col 67}{space 3} 994.2673
{txt}{space 8}674  {c |}{col 14}{res}{space 2} -70.6348{col 26}{space 2} 545.4837{col 37}{space 1}   -0.13{col 46}{space 3}0.899{col 54}{space 4}-1233.306{col 67}{space 3} 1092.036
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 5.198529{col 26}{space 2} 532.7815{col 37}{space 1}    0.01{col 46}{space 3}0.992{col 54}{space 4}-1130.398{col 67}{space 3} 1140.795
{txt}{space 8}676  {c |}{col 14}{res}{space 2}-15.21814{col 26}{space 2} 568.8548{col 37}{space 1}   -0.03{col 46}{space 3}0.979{col 54}{space 4}-1227.703{col 67}{space 3} 1197.267
{txt}{space 8}677  {c |}{col 14}{res}{space 2} -50.5723{col 26}{space 2} 570.0561{col 37}{space 1}   -0.09{col 46}{space 3}0.930{col 54}{space 4}-1265.618{col 67}{space 3} 1164.473
{txt}{space 8}678  {c |}{col 14}{res}{space 2}  137.011{col 26}{space 2} 749.3616{col 37}{space 1}    0.18{col 46}{space 3}0.857{col 54}{space 4}-1460.216{col 67}{space 3} 1734.238
{txt}{space 8}679  {c |}{col 14}{res}{space 2}-25.34314{col 26}{space 2} 564.7143{col 37}{space 1}   -0.04{col 46}{space 3}0.965{col 54}{space 4}-1229.003{col 67}{space 3} 1178.317
{txt}{space 8}680  {c |}{col 14}{res}{space 2} -19.5723{col 26}{space 2} 594.2994{col 37}{space 1}   -0.03{col 46}{space 3}0.974{col 54}{space 4}-1286.292{col 67}{space 3} 1247.147
{txt}{space 8}681  {c |}{col 14}{res}{space 2}-22.61397{col 26}{space 2} 578.9056{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-1256.522{col 67}{space 3} 1211.294
{txt}{space 8}682  {c |}{col 14}{res}{space 2} 7.094363{col 26}{space 2}  588.152{col 37}{space 1}    0.01{col 46}{space 3}0.991{col 54}{space 4}-1246.522{col 67}{space 3} 1260.711
{txt}{space 8}683  {c |}{col 14}{res}{space 2} -91.8848{col 26}{space 2}  534.844{col 37}{space 1}   -0.17{col 46}{space 3}0.866{col 54}{space 4}-1231.878{col 67}{space 3} 1048.108
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-51.48592{col 26}{space 2} 591.8697{col 37}{space 1}   -0.09{col 46}{space 3}0.932{col 54}{space 4}-1313.026{col 67}{space 3} 1210.055
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-120.0901{col 26}{space 2} 582.0714{col 37}{space 1}   -0.21{col 46}{space 3}0.839{col 54}{space 4}-1360.746{col 67}{space 3} 1120.566
{txt}{space 8}686  {c |}{col 14}{res}{space 2}-86.94425{col 26}{space 2} 597.6364{col 37}{space 1}   -0.15{col 46}{space 3}0.886{col 54}{space 4}-1360.776{col 67}{space 3} 1186.888
{txt}{space 8}687  {c |}{col 14}{res}{space 2}-35.61474{col 26}{space 2} 642.2456{col 37}{space 1}   -0.06{col 46}{space 3}0.957{col 54}{space 4}-1404.529{col 67}{space 3} 1333.299
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-103.7481{col 26}{space 2} 576.7682{col 37}{space 1}   -0.18{col 46}{space 3}0.860{col 54}{space 4}  -1333.1{col 67}{space 3} 1125.604
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-79.06872{col 26}{space 2}  600.134{col 37}{space 1}   -0.13{col 46}{space 3}0.897{col 54}{space 4}-1358.224{col 67}{space 3} 1200.087
{txt}{space 8}690  {c |}{col 14}{res}{space 2}-107.8892{col 26}{space 2} 591.4765{col 37}{space 1}   -0.18{col 46}{space 3}0.858{col 54}{space 4}-1368.591{col 67}{space 3} 1152.813
{txt}{space 8}691  {c |}{col 14}{res}{space 2} -108.772{col 26}{space 2} 581.7239{col 37}{space 1}   -0.19{col 46}{space 3}0.854{col 54}{space 4}-1348.687{col 67}{space 3} 1131.143
{txt}{space 8}692  {c |}{col 14}{res}{space 2} 1.157839{col 26}{space 2} 678.4673{col 37}{space 1}    0.00{col 46}{space 3}0.999{col 54}{space 4}-1444.961{col 67}{space 3} 1447.277
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-104.0371{col 26}{space 2}  599.524{col 37}{space 1}   -0.17{col 46}{space 3}0.865{col 54}{space 4}-1381.892{col 67}{space 3} 1173.818
{txt}{space 8}694  {c |}{col 14}{res}{space 2}-41.66947{col 26}{space 2} 598.8682{col 37}{space 1}   -0.07{col 46}{space 3}0.945{col 54}{space 4}-1318.127{col 67}{space 3} 1234.788
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-75.48913{col 26}{space 2} 627.0509{col 37}{space 1}   -0.12{col 46}{space 3}0.906{col 54}{space 4}-1412.016{col 67}{space 3} 1261.038
{txt}{space 8}696  {c |}{col 14}{res}{space 2} -77.0813{col 26}{space 2} 599.7844{col 37}{space 1}   -0.13{col 46}{space 3}0.899{col 54}{space 4}-1355.491{col 67}{space 3} 1201.329
{txt}{space 8}697  {c |}{col 14}{res}{space 2} -104.748{col 26}{space 2} 599.7863{col 37}{space 1}   -0.17{col 46}{space 3}0.864{col 54}{space 4}-1383.162{col 67}{space 3} 1173.666
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-103.2896{col 26}{space 2} 615.7982{col 37}{space 1}   -0.17{col 46}{space 3}0.869{col 54}{space 4}-1415.832{col 67}{space 3} 1209.253
{txt}{space 8}699  {c |}{col 14}{res}{space 2} -97.3313{col 26}{space 2} 605.8884{col 37}{space 1}   -0.16{col 46}{space 3}0.875{col 54}{space 4}-1388.752{col 67}{space 3} 1194.089
{txt}{space 8}700  {c |}{col 14}{res}{space 2}-25.56047{col 26}{space 2} 651.7722{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4} -1414.78{col 67}{space 3} 1363.659
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-131.0396{col 26}{space 2} 590.0728{col 37}{space 1}   -0.22{col 46}{space 3}0.827{col 54}{space 4} -1388.75{col 67}{space 3} 1126.671
{txt}{space 8}702  {c |}{col 14}{res}{space 2}  17.0437{col 26}{space 2} 699.4215{col 37}{space 1}    0.02{col 46}{space 3}0.981{col 54}{space 4}-1473.738{col 67}{space 3} 1507.825
{txt}{space 8}703  {c |}{col 14}{res}{space 2}-22.34053{col 26}{space 2} 651.4744{col 37}{space 1}   -0.03{col 46}{space 3}0.973{col 54}{space 4}-1410.925{col 67}{space 3} 1366.244
{txt}{space 8}704  {c |}{col 14}{res}{space 2} -52.5072{col 26}{space 2} 657.2027{col 37}{space 1}   -0.08{col 46}{space 3}0.937{col 54}{space 4}-1453.302{col 67}{space 3} 1348.287
{txt}{space 8}705  {c |}{col 14}{res}{space 2}-23.42387{col 26}{space 2} 655.5137{col 37}{space 1}   -0.04{col 46}{space 3}0.972{col 54}{space 4}-1420.618{col 67}{space 3}  1373.77
{txt}{space 8}706  {c |}{col 14}{res}{space 2}-18.65303{col 26}{space 2} 685.7815{col 37}{space 1}   -0.03{col 46}{space 3}0.979{col 54}{space 4}-1480.362{col 67}{space 3} 1443.056
{txt}{space 8}707  {c |}{col 14}{res}{space 2}  63.4928{col 26}{space 2} 659.4286{col 37}{space 1}    0.10{col 46}{space 3}0.925{col 54}{space 4}-1342.046{col 67}{space 3} 1469.032
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 48.16204{col 26}{space 2} 706.8555{col 37}{space 1}    0.07{col 46}{space 3}0.947{col 54}{space 4}-1458.465{col 67}{space 3} 1554.789
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-6.192126{col 26}{space 2} 720.7227{col 37}{space 1}   -0.01{col 46}{space 3}0.993{col 54}{space 4}-1542.376{col 67}{space 3} 1529.992
{txt}{space 8}710  {c |}{col 14}{res}{space 2}-23.42129{col 26}{space 2} 647.3617{col 37}{space 1}   -0.04{col 46}{space 3}0.972{col 54}{space 4} -1403.24{col 67}{space 3} 1356.398
{txt}{space 8}711  {c |}{col 14}{res}{space 2}-27.90046{col 26}{space 2} 661.9652{col 37}{space 1}   -0.04{col 46}{space 3}0.967{col 54}{space 4}-1438.846{col 67}{space 3} 1383.045
{txt}{space 8}712  {c |}{col 14}{res}{space 2}-32.12963{col 26}{space 2} 707.0082{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-1539.082{col 67}{space 3} 1474.823
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 91.95371{col 26}{space 2}  753.262{col 37}{space 1}    0.12{col 46}{space 3}0.904{col 54}{space 4}-1513.586{col 67}{space 3} 1697.494
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 200.7245{col 26}{space 2}  936.256{col 37}{space 1}    0.21{col 46}{space 3}0.833{col 54}{space 4}-1794.858{col 67}{space 3} 2196.307
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 115.3079{col 26}{space 2} 828.5758{col 37}{space 1}    0.14{col 46}{space 3}0.891{col 54}{space 4} -1650.76{col 67}{space 3} 1881.375
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 124.2662{col 26}{space 2} 800.5043{col 37}{space 1}    0.16{col 46}{space 3}0.879{col 54}{space 4}-1581.968{col 67}{space 3} 1830.501
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 287.0995{col 26}{space 2} 965.0895{col 37}{space 1}    0.30{col 46}{space 3}0.770{col 54}{space 4} -1769.94{col 67}{space 3} 2344.139
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 124.5579{col 26}{space 2} 822.9928{col 37}{space 1}    0.15{col 46}{space 3}0.882{col 54}{space 4} -1629.61{col 67}{space 3} 1878.725
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 103.8912{col 26}{space 2} 814.4612{col 37}{space 1}    0.13{col 46}{space 3}0.900{col 54}{space 4}-1632.092{col 67}{space 3} 1839.874
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 530.6885{col 26}{space 2} 52.47242{col 37}{space 1}   10.11{col 46}{space 3}0.000{col 54}{space 4} 418.8461{col 67}{space 3} 642.5308
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-137.6334{col 26}{space 2} 288.2022{col 37}{space 1}   -0.48{col 46}{space 3}0.640{col 54}{space 4} -751.922{col 67}{space 3} 476.6551
{txt}bubaneshwar  {c |}{col 14}{res}{space 2} 220.1485{col 26}{space 2} 313.6972{col 37}{space 1}    0.70{col 46}{space 3}0.494{col 54}{space 4}-448.4811{col 67}{space 3} 888.7782
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-22.61841{col 26}{space 2} 41.27784{col 37}{space 1}   -0.55{col 46}{space 3}0.592{col 54}{space 4}   -110.6{col 67}{space 3} 65.36321
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 235.0723{col 26}{space 2} 99.17101{col 37}{space 1}    2.37{col 46}{space 3}0.032{col 54}{space 4} 23.69426{col 67}{space 3} 446.4503
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} 206.0531{col 26}{space 2} 346.9435{col 37}{space 1}    0.59{col 46}{space 3}0.561{col 54}{space 4}-533.4395{col 67}{space 3} 945.5457
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 115.5869{col 26}{space 2} 170.2103{col 37}{space 1}    0.68{col 46}{space 3}0.507{col 54}{space 4}-247.2078{col 67}{space 3} 478.3817
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-128.6504{col 26}{space 2}  197.743{col 37}{space 1}   -0.65{col 46}{space 3}0.525{col 54}{space 4}-550.1297{col 67}{space 3} 292.8289
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2} -629.538{col 26}{space 2} 175.2912{col 37}{space 1}   -3.59{col 46}{space 3}0.003{col 54}{space 4}-1003.162{col 67}{space 3}-255.9138
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2} 230.4206{col 26}{space 2} 142.1094{col 37}{space 1}    1.62{col 46}{space 3}0.126{col 54}{space 4}-72.47832{col 67}{space 3} 533.3195
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2}-82.97934{col 26}{space 2} 135.4316{col 37}{space 1}   -0.61{col 46}{space 3}0.549{col 54}{space 4}-371.6449{col 67}{space 3} 205.6862
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} 361.7669{col 26}{space 2} 218.9551{col 37}{space 1}    1.65{col 46}{space 3}0.119{col 54}{space 4}-104.9248{col 67}{space 3} 828.4587
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 775.9133{col 26}{space 2} 123.2736{col 37}{space 1}    6.29{col 46}{space 3}0.000{col 54}{space 4} 513.1618{col 67}{space 3} 1038.665
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} 1772.902{col 26}{space 2} 572.2999{col 37}{space 1}    3.10{col 46}{space 3}0.007{col 54}{space 4} 553.0741{col 67}{space 3} 2992.731
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-100.4041{col 26}{space 2} 473.3308{col 37}{space 1}   -0.21{col 46}{space 3}0.835{col 54}{space 4}-1109.285{col 67}{space 3} 908.4766
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-5793.074{col 26}{space 2} 3063.419{col 37}{space 1}   -1.89{col 46}{space 3}0.078{col 54}{space 4} -12322.6{col 67}{space 3} 736.4496
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)

{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 26 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -2.6770
{col 25}{txt}Prob>|t| = {res}    0.0377

95%{txt} confidence set for null hypothesis expression: [{res}-234{txt}, {res}-8.743{txt}]
{res}
Warning: 30 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -2.2139
{col 25}{txt}Prob>|t| = {res}    0.0377

95%{txt} confidence set for null hypothesis expression: [{res}-255.8{txt}, {res}-7.937{txt}]
{res}
Warning: 209 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -1.9914
{col 25}{txt}Prob>|t| = {res}    0.1122

95%{txt} confidence set for null hypothesis expression: [{res}-350.5{txt}, {res}53.51{txt}]
{res}
Warning: 561 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -1.8966
{col 25}{txt}Prob>|t| = {res}    0.1431

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 5114 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -1.8600
{col 25}{txt}Prob>|t| = {res}    0.4170

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 114 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 28}t(15) = {res}    0.1997
{col 25}{txt}Prob>|t| = {res}    0.8926

95%{txt} confidence set for null hypothesis expression: [{res}-1031{txt}, {res}905.8{txt}]
{res}
Warning: 13 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 28}t(15) = {res}    2.1119
{col 25}{txt}Prob>|t| = {res}    0.0750

95%{txt} confidence set for null hypothesis expression: [{res}-55.22{txt}, {res}1294{txt}]
{res}
Warning: 62 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   -1.9017
{col 25}{txt}Prob>|t| = {res}    0.0973

95%{txt} confidence set for null hypothesis expression: [{res}-12494{txt}, {res}1314{txt}]
{res}{txt}
{com}. mat p_val[1,8]=r(p_1)
{txt}
{com}. mat p_val[2,8]=r(p_2)
{txt}
{com}. mat p_val[3,8]=r(p_3)
{txt}
{com}. mat p_val[4,8]=r(p_4)
{txt}
{com}. mat p_val[5,8]=r(p_5)
{txt}
{com}. mat p_val[6,8]=r(p_6)
{txt}
{com}. mat p_val[7,8]=r(p_7)
{txt}
{com}. mat p_val[8,8]=r(p_8)
{txt}
{com}. eststo tb1_`j'
{txt}
{com}. local j=`j'+1
{txt}
{com}. 
. 
. 
. 
. 
. * ROBUSTNESS - UNREPORTED: No controls:
. reg fdi_ihs one two three four five i.date i.region1, cluster(region1)

{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8090
                                                {txt}Root MSE          =    {res} 1.0823

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-2.500458{col 26}{space 2} .4034472{col 37}{space 1}   -6.20{col 46}{space 3}0.000{col 54}{space 4}-3.360386{col 67}{space 3}-1.640531
{txt}{space 9}two {c |}{col 14}{res}{space 2}-2.564038{col 26}{space 2} .5510899{col 37}{space 1}   -4.65{col 46}{space 3}0.000{col 54}{space 4}-3.738658{col 67}{space 3}-1.389417
{txt}{space 7}three {c |}{col 14}{res}{space 2}-3.097078{col 26}{space 2} .6329645{col 37}{space 1}   -4.89{col 46}{space 3}0.000{col 54}{space 4} -4.44621{col 67}{space 3}-1.747946
{txt}{space 8}four {c |}{col 14}{res}{space 2}-2.265966{col 26}{space 2} .3491953{col 37}{space 1}   -6.49{col 46}{space 3}0.000{col 54}{space 4}-3.010258{col 67}{space 3}-1.521674
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.555632{col 26}{space 2} .1972863{col 37}{space 1}   -7.89{col 46}{space 3}0.000{col 54}{space 4}-1.976138{col 67}{space 3}-1.135126
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2722356{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4}-.6333949{col 67}{space 3} .5271178
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2834585{col 37}{space 1}   -1.73{col 46}{space 3}0.103{col 54}{space 4}-1.095763{col 67}{space 3}  .112592
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3041224{col 37}{space 1}   -0.66{col 46}{space 3}0.518{col 54}{space 4}-.8493847{col 67}{space 3} .4470586
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2896368{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4}-.8504169{col 67}{space 3} .3842757
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2872413{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}  -.57029{col 67}{space 3} .6541906
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3468702{col 37}{space 1}    1.04{col 46}{space 3}0.316{col 54}{space 4}-.3798152{col 67}{space 3} 1.098858
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3870302{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-.6363122{col 67}{space 3} 1.013559
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3755309{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-.7278372{col 67}{space 3} .8730131
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2879475{col 37}{space 1}   -0.60{col 46}{space 3}0.558{col 54}{space 4}-.7862706{col 67}{space 3} .4412206
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2} .3203915{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6977766{col 67}{space 3} .6680203
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3223616{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7077666{col 67}{space 3} .6664282
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.4005432{col 26}{space 2} .3029381{col 37}{space 1}   -1.32{col 46}{space 3}0.206{col 54}{space 4} -1.04624{col 67}{space 3}  .245154
{txt}{space 8}565  {c |}{col 14}{res}{space 2} .0156402{col 26}{space 2} .4425594{col 37}{space 1}    0.04{col 46}{space 3}0.972{col 54}{space 4}-.9276529{col 67}{space 3} .9589334
{txt}{space 8}566  {c |}{col 14}{res}{space 2} .0342255{col 26}{space 2} .2948188{col 37}{space 1}    0.12{col 46}{space 3}0.909{col 54}{space 4} -.594166{col 67}{space 3} .6626169
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.1885877{col 26}{space 2} .3892333{col 37}{space 1}   -0.48{col 46}{space 3}0.635{col 54}{space 4}-1.018219{col 67}{space 3} .6410434
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.0815649{col 26}{space 2} .4011428{col 37}{space 1}   -0.20{col 46}{space 3}0.842{col 54}{space 4}-.9365805{col 67}{space 3} .7734507
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.2522373{col 26}{space 2} .3126013{col 37}{space 1}   -0.81{col 46}{space 3}0.432{col 54}{space 4}-.9185313{col 67}{space 3} .4140567
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .4747177{col 26}{space 2} .4728638{col 37}{space 1}    1.00{col 46}{space 3}0.331{col 54}{space 4}-.5331676{col 67}{space 3} 1.482603
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.4958005{col 26}{space 2} .3438644{col 37}{space 1}   -1.44{col 46}{space 3}0.170{col 54}{space 4} -1.22873{col 67}{space 3}  .237129
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.6915642{col 26}{space 2}  .279619{col 37}{space 1}   -2.47{col 46}{space 3}0.026{col 54}{space 4}-1.287558{col 67}{space 3}-.0955704
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.3347578{col 26}{space 2} .4276457{col 37}{space 1}   -0.78{col 46}{space 3}0.446{col 54}{space 4}-1.246263{col 67}{space 3} .5767475
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.1881181{col 26}{space 2} .3283094{col 37}{space 1}   -0.57{col 46}{space 3}0.575{col 54}{space 4}-.8878931{col 67}{space 3} .5116568
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .0840485{col 26}{space 2}  .439054{col 37}{space 1}    0.19{col 46}{space 3}0.851{col 54}{space 4}-.8517729{col 67}{space 3}  1.01987
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.3675509{col 26}{space 2} .3840681{col 37}{space 1}   -0.96{col 46}{space 3}0.354{col 54}{space 4}-1.186173{col 67}{space 3}  .451071
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .1806084{col 26}{space 2} .3974392{col 37}{space 1}    0.45{col 46}{space 3}0.656{col 54}{space 4}-.6665133{col 67}{space 3}  1.02773
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.1085853{col 26}{space 2} .4759422{col 37}{space 1}   -0.23{col 46}{space 3}0.823{col 54}{space 4}-1.123032{col 67}{space 3} .9058615
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .0444788{col 26}{space 2} .3748114{col 37}{space 1}    0.12{col 46}{space 3}0.907{col 54}{space 4}-.7544127{col 67}{space 3} .8433704
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .5079151{col 26}{space 2} .3430184{col 37}{space 1}    1.48{col 46}{space 3}0.159{col 54}{space 4}-.2232112{col 67}{space 3} 1.239041
{txt}{space 8}581  {c |}{col 14}{res}{space 2}  .353625{col 26}{space 2} .3098346{col 37}{space 1}    1.14{col 46}{space 3}0.272{col 54}{space 4}-.3067718{col 67}{space 3} 1.014022
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .3768443{col 26}{space 2} .3231843{col 37}{space 1}    1.17{col 46}{space 3}0.262{col 54}{space 4}-.3120069{col 67}{space 3} 1.065695
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .2395371{col 26}{space 2} .3633321{col 37}{space 1}    0.66{col 46}{space 3}0.520{col 54}{space 4} -.534887{col 67}{space 3} 1.013961
{txt}{space 8}584  {c |}{col 14}{res}{space 2} .4057199{col 26}{space 2} .4046524{col 37}{space 1}    1.00{col 46}{space 3}0.332{col 54}{space 4}-.4567764{col 67}{space 3} 1.268216
{txt}{space 8}585  {c |}{col 14}{res}{space 2} .3313693{col 26}{space 2} .3029576{col 37}{space 1}    1.09{col 46}{space 3}0.291{col 54}{space 4}-.3143694{col 67}{space 3} .9771081
{txt}{space 8}586  {c |}{col 14}{res}{space 2} .2299878{col 26}{space 2} .3754076{col 37}{space 1}    0.61{col 46}{space 3}0.549{col 54}{space 4}-.5701747{col 67}{space 3}  1.03015
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .0104272{col 26}{space 2} .4188045{col 37}{space 1}    0.02{col 46}{space 3}0.980{col 54}{space 4}-.8822335{col 67}{space 3} .9030879
{txt}{space 8}588  {c |}{col 14}{res}{space 2} .3560025{col 26}{space 2} .3109825{col 37}{space 1}    1.14{col 46}{space 3}0.270{col 54}{space 4} -.306841{col 67}{space 3} 1.018846
{txt}{space 8}589  {c |}{col 14}{res}{space 2}  .554125{col 26}{space 2} .4095921{col 37}{space 1}    1.35{col 46}{space 3}0.196{col 54}{space 4}-.3188999{col 67}{space 3}  1.42715
{txt}{space 8}590  {c |}{col 14}{res}{space 2} .4826035{col 26}{space 2} .3364533{col 37}{space 1}    1.43{col 46}{space 3}0.172{col 54}{space 4}-.2345298{col 67}{space 3} 1.199737
{txt}{space 8}591  {c |}{col 14}{res}{space 2} -.102366{col 26}{space 2} .4520803{col 37}{space 1}   -0.23{col 46}{space 3}0.824{col 54}{space 4}-1.065952{col 67}{space 3} .8612203
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .4795176{col 26}{space 2} .3155436{col 37}{space 1}    1.52{col 46}{space 3}0.149{col 54}{space 4}-.1930477{col 67}{space 3} 1.152083
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .7805071{col 26}{space 2}  .363184{col 37}{space 1}    2.15{col 46}{space 3}0.048{col 54}{space 4} .0063986{col 67}{space 3} 1.554615
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .7907025{col 26}{space 2}  .409001{col 37}{space 1}    1.93{col 46}{space 3}0.072{col 54}{space 4}-.0810626{col 67}{space 3} 1.662468
{txt}{space 8}595  {c |}{col 14}{res}{space 2} .7856894{col 26}{space 2} .4654023{col 37}{space 1}    1.69{col 46}{space 3}0.112{col 54}{space 4}-.2062922{col 67}{space 3} 1.777671
{txt}{space 8}596  {c |}{col 14}{res}{space 2} .4898801{col 26}{space 2}   .29291{col 37}{space 1}    1.67{col 46}{space 3}0.115{col 54}{space 4}-.1344428{col 67}{space 3} 1.114203
{txt}{space 8}597  {c |}{col 14}{res}{space 2} .4908058{col 26}{space 2}  .331085{col 37}{space 1}    1.48{col 46}{space 3}0.159{col 54}{space 4}-.2148853{col 67}{space 3} 1.196497
{txt}{space 8}598  {c |}{col 14}{res}{space 2} .6040244{col 26}{space 2} .3777995{col 37}{space 1}    1.60{col 46}{space 3}0.131{col 54}{space 4}-.2012363{col 67}{space 3} 1.409285
{txt}{space 8}599  {c |}{col 14}{res}{space 2} .3983118{col 26}{space 2} .3574301{col 37}{space 1}    1.11{col 46}{space 3}0.283{col 54}{space 4}-.3635324{col 67}{space 3} 1.160156
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .6460495{col 26}{space 2} .3221719{col 37}{space 1}    2.01{col 46}{space 3}0.063{col 54}{space 4}-.0406436{col 67}{space 3} 1.332743
{txt}{space 8}601  {c |}{col 14}{res}{space 2}  .403019{col 26}{space 2} .3721585{col 37}{space 1}    1.08{col 46}{space 3}0.296{col 54}{space 4}-.3902181{col 67}{space 3} 1.196256
{txt}{space 8}602  {c |}{col 14}{res}{space 2} .8399717{col 26}{space 2} .4455823{col 37}{space 1}    1.89{col 46}{space 3}0.079{col 54}{space 4}-.1097646{col 67}{space 3} 1.789708
{txt}{space 8}603  {c |}{col 14}{res}{space 2} .3398793{col 26}{space 2} .3341286{col 37}{space 1}    1.02{col 46}{space 3}0.325{col 54}{space 4} -.372299{col 67}{space 3} 1.052058
{txt}{space 8}604  {c |}{col 14}{res}{space 2} .6161381{col 26}{space 2} .3323562{col 37}{space 1}    1.85{col 46}{space 3}0.084{col 54}{space 4}-.0922623{col 67}{space 3} 1.324538
{txt}{space 8}605  {c |}{col 14}{res}{space 2} 1.003835{col 26}{space 2} .4080929{col 37}{space 1}    2.46{col 46}{space 3}0.027{col 54}{space 4} .1340058{col 67}{space 3} 1.873665
{txt}{space 8}606  {c |}{col 14}{res}{space 2} .6071341{col 26}{space 2} .5534961{col 37}{space 1}    1.10{col 46}{space 3}0.290{col 54}{space 4} -.572615{col 67}{space 3} 1.786883
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .9244213{col 26}{space 2} .4037756{col 37}{space 1}    2.29{col 46}{space 3}0.037{col 54}{space 4}  .063794{col 67}{space 3} 1.785049
{txt}{space 8}608  {c |}{col 14}{res}{space 2} .7461317{col 26}{space 2} .4617362{col 37}{space 1}    1.62{col 46}{space 3}0.127{col 54}{space 4}-.2380358{col 67}{space 3} 1.730299
{txt}{space 8}609  {c |}{col 14}{res}{space 2} .7141116{col 26}{space 2} .4967231{col 37}{space 1}    1.44{col 46}{space 3}0.171{col 54}{space 4}-.3446286{col 67}{space 3} 1.772852
{txt}{space 8}610  {c |}{col 14}{res}{space 2} 1.074056{col 26}{space 2} .5094672{col 37}{space 1}    2.11{col 46}{space 3}0.052{col 54}{space 4}-.0118474{col 67}{space 3}  2.15996
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.327805{col 26}{space 2} .3212114{col 37}{space 1}    4.13{col 46}{space 3}0.001{col 54}{space 4} .6431594{col 67}{space 3} 2.012451
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .9379441{col 26}{space 2} .4615816{col 37}{space 1}    2.03{col 46}{space 3}0.060{col 54}{space 4}-.0458938{col 67}{space 3} 1.921782
{txt}{space 8}613  {c |}{col 14}{res}{space 2} .9962912{col 26}{space 2} .4512046{col 37}{space 1}    2.21{col 46}{space 3}0.043{col 54}{space 4} .0345714{col 67}{space 3} 1.958011
{txt}{space 8}614  {c |}{col 14}{res}{space 2} .9140465{col 26}{space 2} .5202459{col 37}{space 1}    1.76{col 46}{space 3}0.099{col 54}{space 4}-.1948314{col 67}{space 3} 2.022925
{txt}{space 8}615  {c |}{col 14}{res}{space 2}   1.0882{col 26}{space 2} .4935919{col 37}{space 1}    2.20{col 46}{space 3}0.044{col 54}{space 4} .0361337{col 67}{space 3} 2.140266
{txt}{space 8}616  {c |}{col 14}{res}{space 2} .9820767{col 26}{space 2} .4762121{col 37}{space 1}    2.06{col 46}{space 3}0.057{col 54}{space 4}-.0329454{col 67}{space 3} 1.997099
{txt}{space 8}617  {c |}{col 14}{res}{space 2} .5115862{col 26}{space 2} .6249591{col 37}{space 1}    0.82{col 46}{space 3}0.426{col 54}{space 4}-.8204825{col 67}{space 3} 1.843655
{txt}{space 8}618  {c |}{col 14}{res}{space 2} .8719318{col 26}{space 2}  .328801{col 37}{space 1}    2.65{col 46}{space 3}0.018{col 54}{space 4} .1711092{col 67}{space 3} 1.572754
{txt}{space 8}619  {c |}{col 14}{res}{space 2} 1.345239{col 26}{space 2} .3831027{col 37}{space 1}    3.51{col 46}{space 3}0.003{col 54}{space 4} .5286747{col 67}{space 3} 2.161803
{txt}{space 8}620  {c |}{col 14}{res}{space 2} 1.117381{col 26}{space 2} .5533233{col 37}{space 1}    2.02{col 46}{space 3}0.062{col 54}{space 4}    -.062{col 67}{space 3} 2.296761
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 1.222231{col 26}{space 2} .3958415{col 37}{space 1}    3.09{col 46}{space 3}0.008{col 54}{space 4} .3785145{col 67}{space 3} 2.065947
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 1.029957{col 26}{space 2} .3292028{col 37}{space 1}    3.13{col 46}{space 3}0.007{col 54}{space 4}  .328278{col 67}{space 3} 1.731636
{txt}{space 8}623  {c |}{col 14}{res}{space 2} 1.027239{col 26}{space 2} .3911269{col 37}{space 1}    2.63{col 46}{space 3}0.019{col 54}{space 4} .1935713{col 67}{space 3} 1.860906
{txt}{space 8}624  {c |}{col 14}{res}{space 2} .9573094{col 26}{space 2} .3170114{col 37}{space 1}    3.02{col 46}{space 3}0.009{col 54}{space 4} .2816157{col 67}{space 3} 1.633003
{txt}{space 8}625  {c |}{col 14}{res}{space 2} .9594373{col 26}{space 2} .4654922{col 37}{space 1}    2.06{col 46}{space 3}0.057{col 54}{space 4}-.0327358{col 67}{space 3} 1.951611
{txt}{space 8}626  {c |}{col 14}{res}{space 2} 1.251056{col 26}{space 2} .4067712{col 37}{space 1}    3.08{col 46}{space 3}0.008{col 54}{space 4} .3840435{col 67}{space 3} 2.118068
{txt}{space 8}627  {c |}{col 14}{res}{space 2} .8434253{col 26}{space 2} .3729688{col 37}{space 1}    2.26{col 46}{space 3}0.039{col 54}{space 4} .0484611{col 67}{space 3}  1.63839
{txt}{space 8}628  {c |}{col 14}{res}{space 2} .3883617{col 26}{space 2}  .487817{col 37}{space 1}    0.80{col 46}{space 3}0.438{col 54}{space 4}-.6513957{col 67}{space 3} 1.428119
{txt}{space 8}629  {c |}{col 14}{res}{space 2} .7734576{col 26}{space 2}  .368664{col 37}{space 1}    2.10{col 46}{space 3}0.053{col 54}{space 4} -.012331{col 67}{space 3} 1.559246
{txt}{space 8}630  {c |}{col 14}{res}{space 2} 1.232138{col 26}{space 2} .4524765{col 37}{space 1}    2.72{col 46}{space 3}0.016{col 54}{space 4} .2677069{col 67}{space 3} 2.196568
{txt}{space 8}631  {c |}{col 14}{res}{space 2} .4181059{col 26}{space 2} .6693535{col 37}{space 1}    0.62{col 46}{space 3}0.542{col 54}{space 4}-1.008587{col 67}{space 3} 1.844799
{txt}{space 8}632  {c |}{col 14}{res}{space 2} .9291514{col 26}{space 2} .3924197{col 37}{space 1}    2.37{col 46}{space 3}0.032{col 54}{space 4} .0927286{col 67}{space 3} 1.765574
{txt}{space 8}633  {c |}{col 14}{res}{space 2} 1.390627{col 26}{space 2}  .329026{col 37}{space 1}    4.23{col 46}{space 3}0.001{col 54}{space 4} .6893248{col 67}{space 3} 2.091929
{txt}{space 8}634  {c |}{col 14}{res}{space 2} .9017184{col 26}{space 2} .3540719{col 37}{space 1}    2.55{col 46}{space 3}0.022{col 54}{space 4} .1470319{col 67}{space 3} 1.656405
{txt}{space 8}635  {c |}{col 14}{res}{space 2} 1.169039{col 26}{space 2} .4566901{col 37}{space 1}    2.56{col 46}{space 3}0.022{col 54}{space 4}  .195627{col 67}{space 3} 2.142451
{txt}{space 8}636  {c |}{col 14}{res}{space 2} 1.030469{col 26}{space 2} .3858707{col 37}{space 1}    2.67{col 46}{space 3}0.017{col 54}{space 4} .2080051{col 67}{space 3} 1.852933
{txt}{space 8}637  {c |}{col 14}{res}{space 2} .6318078{col 26}{space 2} .4130646{col 37}{space 1}    1.53{col 46}{space 3}0.147{col 54}{space 4}-.2486186{col 67}{space 3} 1.512234
{txt}{space 8}638  {c |}{col 14}{res}{space 2} 1.593506{col 26}{space 2} .4267261{col 37}{space 1}    3.73{col 46}{space 3}0.002{col 54}{space 4} .6839607{col 67}{space 3} 2.503051
{txt}{space 8}639  {c |}{col 14}{res}{space 2} 1.232375{col 26}{space 2} .3098583{col 37}{space 1}    3.98{col 46}{space 3}0.001{col 54}{space 4}  .571928{col 67}{space 3} 1.892822
{txt}{space 8}640  {c |}{col 14}{res}{space 2} 1.403111{col 26}{space 2} .4034432{col 37}{space 1}    3.48{col 46}{space 3}0.003{col 54}{space 4} .5431918{col 67}{space 3} 2.263029
{txt}{space 8}641  {c |}{col 14}{res}{space 2} 1.337037{col 26}{space 2} .3840485{col 37}{space 1}    3.48{col 46}{space 3}0.003{col 54}{space 4} .5184574{col 67}{space 3} 2.155617
{txt}{space 8}642  {c |}{col 14}{res}{space 2} 1.252072{col 26}{space 2} .4139581{col 37}{space 1}    3.02{col 46}{space 3}0.009{col 54}{space 4} .3697412{col 67}{space 3} 2.134403
{txt}{space 8}643  {c |}{col 14}{res}{space 2} 1.391006{col 26}{space 2} .4567193{col 37}{space 1}    3.05{col 46}{space 3}0.008{col 54}{space 4} .4175321{col 67}{space 3}  2.36448
{txt}{space 8}644  {c |}{col 14}{res}{space 2} 1.084124{col 26}{space 2} .4824865{col 37}{space 1}    2.25{col 46}{space 3}0.040{col 54}{space 4} .0557285{col 67}{space 3}  2.11252
{txt}{space 8}645  {c |}{col 14}{res}{space 2}  1.90252{col 26}{space 2} .5645541{col 37}{space 1}    3.37{col 46}{space 3}0.004{col 54}{space 4} .6992012{col 67}{space 3} 3.105838
{txt}{space 8}646  {c |}{col 14}{res}{space 2} 1.538152{col 26}{space 2} .5469394{col 37}{space 1}    2.81{col 46}{space 3}0.013{col 54}{space 4} .3723783{col 67}{space 3} 2.703926
{txt}{space 8}647  {c |}{col 14}{res}{space 2}  1.67744{col 26}{space 2} .5874939{col 37}{space 1}    2.86{col 46}{space 3}0.012{col 54}{space 4} .4252267{col 67}{space 3} 2.929654
{txt}{space 8}648  {c |}{col 14}{res}{space 2}  2.10978{col 26}{space 2} .4702707{col 37}{space 1}    4.49{col 46}{space 3}0.000{col 54}{space 4} 1.107422{col 67}{space 3} 3.112138
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 2.354663{col 26}{space 2} .4709934{col 37}{space 1}    5.00{col 46}{space 3}0.000{col 54}{space 4} 1.350765{col 67}{space 3} 3.358562
{txt}{space 8}650  {c |}{col 14}{res}{space 2} 1.779066{col 26}{space 2} .3547169{col 37}{space 1}    5.02{col 46}{space 3}0.000{col 54}{space 4} 1.023005{col 67}{space 3} 2.535127
{txt}{space 8}651  {c |}{col 14}{res}{space 2} 1.632259{col 26}{space 2} .5567164{col 37}{space 1}    2.93{col 46}{space 3}0.010{col 54}{space 4} .4456457{col 67}{space 3} 2.818872
{txt}{space 8}652  {c |}{col 14}{res}{space 2} 1.791644{col 26}{space 2} .4950639{col 37}{space 1}    3.62{col 46}{space 3}0.003{col 54}{space 4} .7364407{col 67}{space 3} 2.846848
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 2.530715{col 26}{space 2} .5602056{col 37}{space 1}    4.52{col 46}{space 3}0.000{col 54}{space 4} 1.336665{col 67}{space 3} 3.724765
{txt}{space 8}654  {c |}{col 14}{res}{space 2} 2.133639{col 26}{space 2} .5368389{col 37}{space 1}    3.97{col 46}{space 3}0.001{col 54}{space 4} .9893935{col 67}{space 3} 3.277884
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 2.138564{col 26}{space 2}  .510038{col 37}{space 1}    4.19{col 46}{space 3}0.001{col 54}{space 4} 1.051444{col 67}{space 3} 3.225684
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 1.978685{col 26}{space 2} .3669682{col 37}{space 1}    5.39{col 46}{space 3}0.000{col 54}{space 4} 1.196511{col 67}{space 3}  2.76086
{txt}{space 8}657  {c |}{col 14}{res}{space 2} 1.789994{col 26}{space 2} .4625138{col 37}{space 1}    3.87{col 46}{space 3}0.002{col 54}{space 4} .8041693{col 67}{space 3} 2.775819
{txt}{space 8}658  {c |}{col 14}{res}{space 2} 1.467984{col 26}{space 2} .7896414{col 37}{space 1}    1.86{col 46}{space 3}0.083{col 54}{space 4}-.2150972{col 67}{space 3} 3.151064
{txt}{space 8}659  {c |}{col 14}{res}{space 2} 2.010202{col 26}{space 2} .4857691{col 37}{space 1}    4.14{col 46}{space 3}0.001{col 54}{space 4} .9748094{col 67}{space 3} 3.045594
{txt}{space 8}660  {c |}{col 14}{res}{space 2} 1.683216{col 26}{space 2} .5092015{col 37}{space 1}    3.31{col 46}{space 3}0.005{col 54}{space 4} .5978785{col 67}{space 3} 2.768553
{txt}{space 8}661  {c |}{col 14}{res}{space 2} 1.718742{col 26}{space 2} .5331803{col 37}{space 1}    3.22{col 46}{space 3}0.006{col 54}{space 4} .5822954{col 67}{space 3} 2.855189
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 2.248182{col 26}{space 2} .4589584{col 37}{space 1}    4.90{col 46}{space 3}0.000{col 54}{space 4} 1.269935{col 67}{space 3} 3.226428
{txt}{space 8}663  {c |}{col 14}{res}{space 2}  1.70686{col 26}{space 2} .3731944{col 37}{space 1}    4.57{col 46}{space 3}0.000{col 54}{space 4}  .911415{col 67}{space 3} 2.502305
{txt}{space 8}664  {c |}{col 14}{res}{space 2} 1.929742{col 26}{space 2} .3585446{col 37}{space 1}    5.38{col 46}{space 3}0.000{col 54}{space 4} 1.165522{col 67}{space 3} 2.693961
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 2.304061{col 26}{space 2} .4889152{col 37}{space 1}    4.71{col 46}{space 3}0.000{col 54}{space 4} 1.261963{col 67}{space 3} 3.346159
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 2.260037{col 26}{space 2} .3783816{col 37}{space 1}    5.97{col 46}{space 3}0.000{col 54}{space 4} 1.453535{col 67}{space 3} 3.066538
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 2.098644{col 26}{space 2} .3855061{col 37}{space 1}    5.44{col 46}{space 3}0.000{col 54}{space 4} 1.276958{col 67}{space 3} 2.920331
{txt}{space 8}668  {c |}{col 14}{res}{space 2} 1.960395{col 26}{space 2} .3732654{col 37}{space 1}    5.25{col 46}{space 3}0.000{col 54}{space 4} 1.164798{col 67}{space 3} 2.755991
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 2.075883{col 26}{space 2} .3670591{col 37}{space 1}    5.66{col 46}{space 3}0.000{col 54}{space 4} 1.293516{col 67}{space 3} 2.858251
{txt}{space 8}670  {c |}{col 14}{res}{space 2} 1.833683{col 26}{space 2}  .400434{col 37}{space 1}    4.58{col 46}{space 3}0.000{col 54}{space 4} .9801786{col 67}{space 3} 2.687188
{txt}{space 8}671  {c |}{col 14}{res}{space 2}  2.12497{col 26}{space 2} .3888507{col 37}{space 1}    5.46{col 46}{space 3}0.000{col 54}{space 4} 1.296154{col 67}{space 3} 2.953786
{txt}{space 8}672  {c |}{col 14}{res}{space 2} 2.132425{col 26}{space 2} .3807943{col 37}{space 1}    5.60{col 46}{space 3}0.000{col 54}{space 4} 1.320781{col 67}{space 3} 2.944069
{txt}{space 8}673  {c |}{col 14}{res}{space 2}  2.26428{col 26}{space 2} .3767935{col 37}{space 1}    6.01{col 46}{space 3}0.000{col 54}{space 4} 1.461164{col 67}{space 3} 3.067396
{txt}{space 8}674  {c |}{col 14}{res}{space 2} 2.429494{col 26}{space 2} .4294574{col 37}{space 1}    5.66{col 46}{space 3}0.000{col 54}{space 4} 1.514128{col 67}{space 3} 3.344861
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 2.791251{col 26}{space 2} .4709949{col 37}{space 1}    5.93{col 46}{space 3}0.000{col 54}{space 4} 1.787349{col 67}{space 3} 3.795153
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 2.851427{col 26}{space 2} .4532149{col 37}{space 1}    6.29{col 46}{space 3}0.000{col 54}{space 4} 1.885423{col 67}{space 3} 3.817432
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 2.536623{col 26}{space 2}  .395526{col 37}{space 1}    6.41{col 46}{space 3}0.000{col 54}{space 4} 1.693579{col 67}{space 3} 3.379666
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 2.762768{col 26}{space 2} .4147829{col 37}{space 1}    6.66{col 46}{space 3}0.000{col 54}{space 4}  1.87868{col 67}{space 3} 3.646857
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 2.859971{col 26}{space 2} .4285489{col 37}{space 1}    6.67{col 46}{space 3}0.000{col 54}{space 4} 1.946541{col 67}{space 3} 3.773401
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 2.911101{col 26}{space 2} .4800468{col 37}{space 1}    6.06{col 46}{space 3}0.000{col 54}{space 4} 1.887906{col 67}{space 3} 3.934297
{txt}{space 8}681  {c |}{col 14}{res}{space 2} 2.922724{col 26}{space 2} .4016733{col 37}{space 1}    7.28{col 46}{space 3}0.000{col 54}{space 4} 2.066578{col 67}{space 3} 3.778871
{txt}{space 8}682  {c |}{col 14}{res}{space 2} 2.582874{col 26}{space 2} .5228362{col 37}{space 1}    4.94{col 46}{space 3}0.000{col 54}{space 4} 1.468475{col 67}{space 3} 3.697273
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 2.424908{col 26}{space 2} .3983816{col 37}{space 1}    6.09{col 46}{space 3}0.000{col 54}{space 4} 1.575777{col 67}{space 3} 3.274038
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 2.721812{col 26}{space 2} .3943503{col 37}{space 1}    6.90{col 46}{space 3}0.000{col 54}{space 4} 1.881274{col 67}{space 3}  3.56235
{txt}{space 8}685  {c |}{col 14}{res}{space 2} 2.541562{col 26}{space 2} .4415769{col 37}{space 1}    5.76{col 46}{space 3}0.000{col 54}{space 4} 1.600363{col 67}{space 3} 3.482761
{txt}{space 8}686  {c |}{col 14}{res}{space 2} 2.535236{col 26}{space 2} .5024746{col 37}{space 1}    5.05{col 46}{space 3}0.000{col 54}{space 4} 1.464237{col 67}{space 3} 3.606235
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 2.865044{col 26}{space 2} .4840606{col 37}{space 1}    5.92{col 46}{space 3}0.000{col 54}{space 4} 1.833293{col 67}{space 3} 3.896794
{txt}{space 8}688  {c |}{col 14}{res}{space 2} 2.571679{col 26}{space 2} .4228359{col 37}{space 1}    6.08{col 46}{space 3}0.000{col 54}{space 4} 1.670425{col 67}{space 3} 3.472932
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 2.551277{col 26}{space 2} .4877191{col 37}{space 1}    5.23{col 46}{space 3}0.000{col 54}{space 4} 1.511728{col 67}{space 3} 3.590825
{txt}{space 8}690  {c |}{col 14}{res}{space 2} 2.268492{col 26}{space 2} .4593573{col 37}{space 1}    4.94{col 46}{space 3}0.000{col 54}{space 4} 1.289395{col 67}{space 3} 3.247589
{txt}{space 8}691  {c |}{col 14}{res}{space 2} 2.414886{col 26}{space 2} .6682583{col 37}{space 1}    3.61{col 46}{space 3}0.003{col 54}{space 4} .9905267{col 67}{space 3} 3.839244
{txt}{space 8}692  {c |}{col 14}{res}{space 2} 2.594197{col 26}{space 2} .4854491{col 37}{space 1}    5.34{col 46}{space 3}0.000{col 54}{space 4} 1.559487{col 67}{space 3} 3.628907
{txt}{space 8}693  {c |}{col 14}{res}{space 2} 2.502511{col 26}{space 2} .4499836{col 37}{space 1}    5.56{col 46}{space 3}0.000{col 54}{space 4} 1.543393{col 67}{space 3} 3.461628
{txt}{space 8}694  {c |}{col 14}{res}{space 2}  2.58804{col 26}{space 2} .4162319{col 37}{space 1}    6.22{col 46}{space 3}0.000{col 54}{space 4} 1.700862{col 67}{space 3} 3.475217
{txt}{space 8}695  {c |}{col 14}{res}{space 2} 2.378203{col 26}{space 2} .5006914{col 37}{space 1}    4.75{col 46}{space 3}0.000{col 54}{space 4} 1.311005{col 67}{space 3} 3.445401
{txt}{space 8}696  {c |}{col 14}{res}{space 2} 2.635598{col 26}{space 2} .5013921{col 37}{space 1}    5.26{col 46}{space 3}0.000{col 54}{space 4} 1.566906{col 67}{space 3}  3.70429
{txt}{space 8}697  {c |}{col 14}{res}{space 2} 2.595372{col 26}{space 2} .4911041{col 37}{space 1}    5.28{col 46}{space 3}0.000{col 54}{space 4} 1.548608{col 67}{space 3} 3.642135
{txt}{space 8}698  {c |}{col 14}{res}{space 2} 2.653463{col 26}{space 2} .4612532{col 37}{space 1}    5.75{col 46}{space 3}0.000{col 54}{space 4} 1.670325{col 67}{space 3} 3.636601
{txt}{space 8}699  {c |}{col 14}{res}{space 2} 2.446507{col 26}{space 2} .4743082{col 37}{space 1}    5.16{col 46}{space 3}0.000{col 54}{space 4} 1.435543{col 67}{space 3} 3.457471
{txt}{space 8}700  {c |}{col 14}{res}{space 2}   2.7226{col 26}{space 2} .5857745{col 37}{space 1}    4.65{col 46}{space 3}0.000{col 54}{space 4} 1.474052{col 67}{space 3} 3.971149
{txt}{space 8}701  {c |}{col 14}{res}{space 2} 2.358122{col 26}{space 2} .4909559{col 37}{space 1}    4.80{col 46}{space 3}0.000{col 54}{space 4} 1.311674{col 67}{space 3}  3.40457
{txt}{space 8}702  {c |}{col 14}{res}{space 2} 2.153161{col 26}{space 2} .5583258{col 37}{space 1}    3.86{col 46}{space 3}0.002{col 54}{space 4} .9631176{col 67}{space 3} 3.343204
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 2.654502{col 26}{space 2} .5675232{col 37}{space 1}    4.68{col 46}{space 3}0.000{col 54}{space 4} 1.444855{col 67}{space 3} 3.864149
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 2.899198{col 26}{space 2} .4510328{col 37}{space 1}    6.43{col 46}{space 3}0.000{col 54}{space 4} 1.937844{col 67}{space 3} 3.860551
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 2.962263{col 26}{space 2} .4482672{col 37}{space 1}    6.61{col 46}{space 3}0.000{col 54}{space 4} 2.006804{col 67}{space 3} 3.917722
{txt}{space 8}706  {c |}{col 14}{res}{space 2} 2.877038{col 26}{space 2} .4834808{col 37}{space 1}    5.95{col 46}{space 3}0.000{col 54}{space 4} 1.846523{col 67}{space 3} 3.907553
{txt}{space 8}707  {c |}{col 14}{res}{space 2}  2.75283{col 26}{space 2} .4640449{col 37}{space 1}    5.93{col 46}{space 3}0.000{col 54}{space 4} 1.763742{col 67}{space 3} 3.741919
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 3.328231{col 26}{space 2} .4849516{col 37}{space 1}    6.86{col 46}{space 3}0.000{col 54}{space 4} 2.294582{col 67}{space 3} 4.361881
{txt}{space 8}709  {c |}{col 14}{res}{space 2} 2.739126{col 26}{space 2} .5109339{col 37}{space 1}    5.36{col 46}{space 3}0.000{col 54}{space 4} 1.650097{col 67}{space 3} 3.828156
{txt}{space 8}710  {c |}{col 14}{res}{space 2} 3.052328{col 26}{space 2} .5142861{col 37}{space 1}    5.94{col 46}{space 3}0.000{col 54}{space 4} 1.956153{col 67}{space 3} 4.148503
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 3.373811{col 26}{space 2} .4690639{col 37}{space 1}    7.19{col 46}{space 3}0.000{col 54}{space 4} 2.374025{col 67}{space 3} 4.373597
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 2.960713{col 26}{space 2} .4553358{col 37}{space 1}    6.50{col 46}{space 3}0.000{col 54}{space 4} 1.990188{col 67}{space 3} 3.931238
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 3.421941{col 26}{space 2} .4739337{col 37}{space 1}    7.22{col 46}{space 3}0.000{col 54}{space 4} 2.411775{col 67}{space 3} 4.432107
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 3.077937{col 26}{space 2} .3905926{col 37}{space 1}    7.88{col 46}{space 3}0.000{col 54}{space 4} 2.245409{col 67}{space 3} 3.910466
{txt}{space 8}715  {c |}{col 14}{res}{space 2}  3.09281{col 26}{space 2} .5254005{col 37}{space 1}    5.89{col 46}{space 3}0.000{col 54}{space 4} 1.972945{col 67}{space 3} 4.212674
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 2.995306{col 26}{space 2} .4518302{col 37}{space 1}    6.63{col 46}{space 3}0.000{col 54}{space 4} 2.032253{col 67}{space 3} 3.958359
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 2.842114{col 26}{space 2} .4814915{col 37}{space 1}    5.90{col 46}{space 3}0.000{col 54}{space 4} 1.815839{col 67}{space 3} 3.868389
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 3.219026{col 26}{space 2} .4358049{col 37}{space 1}    7.39{col 46}{space 3}0.000{col 54}{space 4}  2.29013{col 67}{space 3} 4.147922
{txt}{space 8}719  {c |}{col 14}{res}{space 2}  3.07802{col 26}{space 2} .4519894{col 37}{space 1}    6.81{col 46}{space 3}0.000{col 54}{space 4} 2.114627{col 67}{space 3} 4.041412
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.339051{col 26}{space 2} 5.36e-14{col 37}{space 1} 2.5e+13{col 46}{space 3}0.000{col 54}{space 4} 1.339051{col 67}{space 3} 1.339051
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2} -2.47423{col 26}{space 2} 5.37e-14{col 37}{space 1}-4.6e+13{col 46}{space 3}0.000{col 54}{space 4} -2.47423{col 67}{space 3} -2.47423
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-2.418788{col 26}{space 2} .3837948{col 37}{space 1}   -6.30{col 46}{space 3}0.000{col 54}{space 4}-3.236828{col 67}{space 3}-1.600749
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.5246817{col 26}{space 2}  .297644{col 37}{space 1}   -1.76{col 46}{space 3}0.098{col 54}{space 4}-1.159095{col 67}{space 3} .1097315
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.216274{col 26}{space 2} .1039272{col 37}{space 1}   11.70{col 46}{space 3}0.000{col 54}{space 4} .9947583{col 67}{space 3} 1.437789
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-1.309854{col 26}{space 2} .3837948{col 37}{space 1}   -3.41{col 46}{space 3}0.004{col 54}{space 4}-2.127893{col 67}{space 3}-.4918144
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .3336309{col 26}{space 2} .1039272{col 37}{space 1}    3.21{col 46}{space 3}0.006{col 54}{space 4} .1121154{col 67}{space 3} .5551464
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.859253{col 26}{space 2} 5.37e-14{col 37}{space 1}-5.3e+13{col 46}{space 3}0.000{col 54}{space 4}-2.859253{col 67}{space 3}-2.859253
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2} -1.94839{col 26}{space 2}  .297644{col 37}{space 1}   -6.55{col 46}{space 3}0.000{col 54}{space 4}-2.582803{col 67}{space 3}-1.313976
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-2.435598{col 26}{space 2} .0199635{col 37}{space 1} -122.00{col 46}{space 3}0.000{col 54}{space 4} -2.47815{col 67}{space 3}-2.393047
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 1.808706{col 26}{space 2} .2261415{col 37}{space 1}    8.00{col 46}{space 3}0.000{col 54}{space 4} 1.326697{col 67}{space 3} 2.290715
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} 1.428787{col 26}{space 2} 5.36e-14{col 37}{space 1} 2.7e+13{col 46}{space 3}0.000{col 54}{space 4} 1.428787{col 67}{space 3} 1.428787
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.094023{col 26}{space 2}  .297644{col 37}{space 1}    7.04{col 46}{space 3}0.000{col 54}{space 4}  1.45961{col 67}{space 3} 2.728436
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} -3.01761{col 26}{space 2} 5.37e-14{col 37}{space 1}-5.6e+13{col 46}{space 3}0.000{col 54}{space 4} -3.01761{col 67}{space 3} -3.01761
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-.6502228{col 26}{space 2} .2261415{col 37}{space 1}   -2.88{col 46}{space 3}0.012{col 54}{space 4}-1.132232{col 67}{space 3}-.1682136
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 3.645444{col 26}{space 2} .3248164{col 37}{space 1}   11.22{col 46}{space 3}0.000{col 54}{space 4} 2.953114{col 67}{space 3} 4.337774
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)

{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 744 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -6.1478
{col 25}{txt}Prob>|t| = {res}    0.0198

95%{txt} confidence set for null hypothesis expression: [{res}-3.545{txt}, {res}-1.418{txt}]
{res}
Warning: 37 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -4.6537
{col 25}{txt}Prob>|t| = {res}    0.0045

95%{txt} confidence set for null hypothesis expression: [{res}-3.824{txt}, {res}-1.456{txt}]
{res}
Warning: 29 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -4.8876
{col 25}{txt}Prob>|t| = {res}    0.0064

95%{txt} confidence set for null hypothesis expression: [{res}-4.577{txt}, {res}-1.626{txt}]
{res}
Warning: 198 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -6.4760
{col 25}{txt}Prob>|t| = {res}    0.0094

95%{txt} confidence set for null hypothesis expression: [{res}-3.065{txt}, {res}-1.464{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -7.6796
{col 25}{txt}Prob>|t| = {res}    0.0098

95%{txt} confidence set for null hypothesis expression: [{res}-2.306{txt}, {res}-.7723{txt}]
{res}
Warning: 39 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   19.8700
{col 25}{txt}Prob>|t| = {res}    0.0053

95%{txt} confidence set for null hypothesis expression: [{res}3.084{txt}, {res}4.22{txt}]
{res}{txt}
{com}. mat p_val[1,7]=r(p_1)
{txt}
{com}. mat p_val[2,7]=r(p_2)
{txt}
{com}. mat p_val[3,7]=r(p_3)
{txt}
{com}. mat p_val[4,7]=r(p_4)
{txt}
{com}. mat p_val[5,7]=r(p_5)
{txt}
{com}. 
. mat p_val[8,7]=r(p_6)
{txt}
{com}. eststo tb1_`j'
{txt}
{com}. local j=`j'+1
{txt}
{com}. 
. 
. 
. * ROBUSTNESS - UNREPORTED: Logged FDI
. reg lfdi one two three four five $control i.date i.region1, cluster(region1)

{txt}Linear regression                               Number of obs     = {res}     2,209
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8106
                                                {txt}Root MSE          =    {res}  .8485

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}        lfdi{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-2.528618{col 26}{space 2} .2026819{col 37}{space 1}  -12.48{col 46}{space 3}0.000{col 54}{space 4}-2.960624{col 67}{space 3}-2.096612
{txt}{space 9}two {c |}{col 14}{res}{space 2}-1.685601{col 26}{space 2} .4544165{col 37}{space 1}   -3.71{col 46}{space 3}0.002{col 54}{space 4}-2.654167{col 67}{space 3}-.7170351
{txt}{space 7}three {c |}{col 14}{res}{space 2}-2.102078{col 26}{space 2} .4594935{col 37}{space 1}   -4.57{col 46}{space 3}0.000{col 54}{space 4}-3.081465{col 67}{space 3}-1.122691
{txt}{space 8}four {c |}{col 14}{res}{space 2}-1.914929{col 26}{space 2} .2824128{col 37}{space 1}   -6.78{col 46}{space 3}0.000{col 54}{space 4}-2.516878{col 67}{space 3} -1.31298
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.503247{col 26}{space 2} .1350012{col 37}{space 1}  -11.14{col 46}{space 3}0.000{col 54}{space 4}-1.790995{col 67}{space 3}-1.215499
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} .7280985{col 26}{space 2}  1.07802{col 37}{space 1}    0.68{col 46}{space 3}0.510{col 54}{space 4}-1.569646{col 67}{space 3} 3.025843
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .3227082{col 26}{space 2} .2934329{col 37}{space 1}    1.10{col 46}{space 3}0.289{col 54}{space 4}-.3027293{col 67}{space 3} .9481457
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0730893{col 26}{space 2} .3005799{col 37}{space 1}   -0.24{col 46}{space 3}0.811{col 54}{space 4}-.7137603{col 67}{space 3} .5675817
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.2774066{col 26}{space 2} .3325238{col 37}{space 1}   -0.83{col 46}{space 3}0.417{col 54}{space 4}-.9861643{col 67}{space 3} .4313511
{txt}{space 8}555  {c |}{col 14}{res}{space 2} .0117767{col 26}{space 2} .3657813{col 37}{space 1}    0.03{col 46}{space 3}0.975{col 54}{space 4}-.7678676{col 67}{space 3} .7914211
{txt}{space 8}556  {c |}{col 14}{res}{space 2} .1360063{col 26}{space 2} .3340318{col 37}{space 1}    0.41{col 46}{space 3}0.690{col 54}{space 4}-.5759657{col 67}{space 3} .8479783
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .2189613{col 26}{space 2} .3553993{col 37}{space 1}    0.62{col 46}{space 3}0.547{col 54}{space 4}-.5385543{col 67}{space 3} .9764769
{txt}{space 8}558  {c |}{col 14}{res}{space 2}  .484426{col 26}{space 2} .3780405{col 37}{space 1}    1.28{col 46}{space 3}0.220{col 54}{space 4}-.3213483{col 67}{space 3}   1.2902
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .0791314{col 26}{space 2} .3685224{col 37}{space 1}    0.21{col 46}{space 3}0.833{col 54}{space 4}-.7063555{col 67}{space 3} .8646182
{txt}{space 8}560  {c |}{col 14}{res}{space 2}-.0446092{col 26}{space 2} .3722009{col 37}{space 1}   -0.12{col 46}{space 3}0.906{col 54}{space 4}-.8379365{col 67}{space 3} .7487182
{txt}{space 8}561  {c |}{col 14}{res}{space 2} .0387002{col 26}{space 2} .3422325{col 37}{space 1}    0.11{col 46}{space 3}0.911{col 54}{space 4}-.6907511{col 67}{space 3} .7681515
{txt}{space 8}562  {c |}{col 14}{res}{space 2} .1172324{col 26}{space 2} .3409132{col 37}{space 1}    0.34{col 46}{space 3}0.736{col 54}{space 4}-.6094068{col 67}{space 3} .8438717
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0234547{col 26}{space 2} .3596155{col 37}{space 1}   -0.07{col 46}{space 3}0.949{col 54}{space 4}-.7899569{col 67}{space 3} .7430475
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.2505628{col 26}{space 2} .4896376{col 37}{space 1}   -0.51{col 46}{space 3}0.616{col 54}{space 4}-1.294201{col 67}{space 3}  .793075
{txt}{space 8}565  {c |}{col 14}{res}{space 2} -.005119{col 26}{space 2} .5781472{col 37}{space 1}   -0.01{col 46}{space 3}0.993{col 54}{space 4}-1.237411{col 67}{space 3} 1.227173
{txt}{space 8}566  {c |}{col 14}{res}{space 2} .0770904{col 26}{space 2} .4299628{col 37}{space 1}    0.18{col 46}{space 3}0.860{col 54}{space 4}-.8393535{col 67}{space 3} .9935344
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.1374365{col 26}{space 2} .5500741{col 37}{space 1}   -0.25{col 46}{space 3}0.806{col 54}{space 4}-1.309892{col 67}{space 3} 1.035019
{txt}{space 8}568  {c |}{col 14}{res}{space 2} .1100791{col 26}{space 2} .5629375{col 37}{space 1}    0.20{col 46}{space 3}0.848{col 54}{space 4}-1.089794{col 67}{space 3} 1.309952
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.1789481{col 26}{space 2} .4822685{col 37}{space 1}   -0.37{col 46}{space 3}0.716{col 54}{space 4}-1.206879{col 67}{space 3} .8489828
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .2741612{col 26}{space 2}   .51156{col 37}{space 1}    0.54{col 46}{space 3}0.600{col 54}{space 4}-.8162033{col 67}{space 3} 1.364526
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.0644056{col 26}{space 2} .4292483{col 37}{space 1}   -0.15{col 46}{space 3}0.883{col 54}{space 4}-.9793268{col 67}{space 3} .8505156
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.6606477{col 26}{space 2}  .411264{col 37}{space 1}   -1.61{col 46}{space 3}0.129{col 54}{space 4}-1.537236{col 67}{space 3} .2159409
{txt}{space 8}573  {c |}{col 14}{res}{space 2} .0030351{col 26}{space 2} .4792906{col 37}{space 1}    0.01{col 46}{space 3}0.995{col 54}{space 4}-1.018549{col 67}{space 3} 1.024619
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.0421785{col 26}{space 2} .4709609{col 37}{space 1}   -0.09{col 46}{space 3}0.930{col 54}{space 4}-1.046008{col 67}{space 3} .9616508
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .1674474{col 26}{space 2} .5808883{col 37}{space 1}    0.29{col 46}{space 3}0.777{col 54}{space 4}-1.070687{col 67}{space 3} 1.405581
{txt}{space 8}576  {c |}{col 14}{res}{space 2}  -.31003{col 26}{space 2} .6402832{col 37}{space 1}   -0.48{col 46}{space 3}0.635{col 54}{space 4}-1.674761{col 67}{space 3} 1.054701
{txt}{space 8}577  {c |}{col 14}{res}{space 2}  .094855{col 26}{space 2} .6959606{col 37}{space 1}    0.14{col 46}{space 3}0.893{col 54}{space 4} -1.38855{col 67}{space 3}  1.57826
{txt}{space 8}578  {c |}{col 14}{res}{space 2} .1254006{col 26}{space 2} .6446392{col 37}{space 1}    0.19{col 46}{space 3}0.848{col 54}{space 4}-1.248615{col 67}{space 3} 1.499416
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.1426359{col 26}{space 2} .6588395{col 37}{space 1}   -0.22{col 46}{space 3}0.832{col 54}{space 4}-1.546919{col 67}{space 3} 1.261647
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .2702198{col 26}{space 2} .5822275{col 37}{space 1}    0.46{col 46}{space 3}0.649{col 54}{space 4}-.9707688{col 67}{space 3} 1.511208
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .1207446{col 26}{space 2} .5217837{col 37}{space 1}    0.23{col 46}{space 3}0.820{col 54}{space 4}-.9914109{col 67}{space 3}   1.2329
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .1725216{col 26}{space 2} .5713456{col 37}{space 1}    0.30{col 46}{space 3}0.767{col 54}{space 4}-1.045273{col 67}{space 3} 1.390316
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .1515457{col 26}{space 2} .6464339{col 37}{space 1}    0.23{col 46}{space 3}0.818{col 54}{space 4}-1.226295{col 67}{space 3} 1.529387
{txt}{space 8}584  {c |}{col 14}{res}{space 2} .0308128{col 26}{space 2} .6245486{col 37}{space 1}    0.05{col 46}{space 3}0.961{col 54}{space 4}-1.300381{col 67}{space 3} 1.362007
{txt}{space 8}585  {c |}{col 14}{res}{space 2} .3763289{col 26}{space 2} .5878243{col 37}{space 1}    0.64{col 46}{space 3}0.532{col 54}{space 4}-.8765889{col 67}{space 3} 1.629247
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.1612479{col 26}{space 2} .5938642{col 37}{space 1}   -0.27{col 46}{space 3}0.790{col 54}{space 4}-1.427039{col 67}{space 3} 1.104544
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .2462342{col 26}{space 2} .5731609{col 37}{space 1}    0.43{col 46}{space 3}0.674{col 54}{space 4}-.9754293{col 67}{space 3} 1.467898
{txt}{space 8}588  {c |}{col 14}{res}{space 2} .3595686{col 26}{space 2} .7400215{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4} -1.21775{col 67}{space 3} 1.936887
{txt}{space 8}589  {c |}{col 14}{res}{space 2} .0874782{col 26}{space 2}  .740094{col 37}{space 1}    0.12{col 46}{space 3}0.907{col 54}{space 4}-1.489995{col 67}{space 3} 1.664951
{txt}{space 8}590  {c |}{col 14}{res}{space 2} .1787641{col 26}{space 2} .6872088{col 37}{space 1}    0.26{col 46}{space 3}0.798{col 54}{space 4}-1.285987{col 67}{space 3} 1.643515
{txt}{space 8}591  {c |}{col 14}{res}{space 2} .0703366{col 26}{space 2}  .763392{col 37}{space 1}    0.09{col 46}{space 3}0.928{col 54}{space 4}-1.556795{col 67}{space 3} 1.697468
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .3016641{col 26}{space 2} .6364336{col 37}{space 1}    0.47{col 46}{space 3}0.642{col 54}{space 4}-1.054862{col 67}{space 3}  1.65819
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .5324053{col 26}{space 2} .8024536{col 37}{space 1}    0.66{col 46}{space 3}0.517{col 54}{space 4}-1.177984{col 67}{space 3} 2.242795
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .6254713{col 26}{space 2} .7739012{col 37}{space 1}    0.81{col 46}{space 3}0.432{col 54}{space 4} -1.02406{col 67}{space 3} 2.275003
{txt}{space 8}595  {c |}{col 14}{res}{space 2} .3400534{col 26}{space 2} .8638664{col 37}{space 1}    0.39{col 46}{space 3}0.699{col 54}{space 4}-1.501234{col 67}{space 3} 2.181341
{txt}{space 8}596  {c |}{col 14}{res}{space 2} .3530297{col 26}{space 2} .6715868{col 37}{space 1}    0.53{col 46}{space 3}0.607{col 54}{space 4}-1.078424{col 67}{space 3} 1.784483
{txt}{space 8}597  {c |}{col 14}{res}{space 2} .4164305{col 26}{space 2} .7499079{col 37}{space 1}    0.56{col 46}{space 3}0.587{col 54}{space 4} -1.18196{col 67}{space 3} 2.014821
{txt}{space 8}598  {c |}{col 14}{res}{space 2} .2723812{col 26}{space 2}  .721364{col 37}{space 1}    0.38{col 46}{space 3}0.711{col 54}{space 4} -1.26517{col 67}{space 3} 1.809932
{txt}{space 8}599  {c |}{col 14}{res}{space 2} .1290237{col 26}{space 2} .7350215{col 37}{space 1}    0.18{col 46}{space 3}0.863{col 54}{space 4}-1.437637{col 67}{space 3} 1.695685
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .2099514{col 26}{space 2} .9270215{col 37}{space 1}    0.23{col 46}{space 3}0.824{col 54}{space 4}-1.765948{col 67}{space 3} 2.185851
{txt}{space 8}601  {c |}{col 14}{res}{space 2} .1007673{col 26}{space 2} .8972713{col 37}{space 1}    0.11{col 46}{space 3}0.912{col 54}{space 4}-1.811721{col 67}{space 3} 2.013256
{txt}{space 8}602  {c |}{col 14}{res}{space 2} .2978401{col 26}{space 2} 1.007638{col 37}{space 1}    0.30{col 46}{space 3}0.772{col 54}{space 4}-1.849888{col 67}{space 3} 2.445569
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.3052818{col 26}{space 2} .8736139{col 37}{space 1}   -0.35{col 46}{space 3}0.732{col 54}{space 4}-2.167346{col 67}{space 3} 1.556782
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-.2519091{col 26}{space 2} .8376006{col 37}{space 1}   -0.30{col 46}{space 3}0.768{col 54}{space 4}-2.037213{col 67}{space 3} 1.533394
{txt}{space 8}605  {c |}{col 14}{res}{space 2} .4168774{col 26}{space 2} .8378126{col 37}{space 1}    0.50{col 46}{space 3}0.626{col 54}{space 4}-1.368878{col 67}{space 3} 2.202633
{txt}{space 8}606  {c |}{col 14}{res}{space 2} .1974292{col 26}{space 2}  .898131{col 37}{space 1}    0.22{col 46}{space 3}0.829{col 54}{space 4}-1.716892{col 67}{space 3}  2.11175
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .3206627{col 26}{space 2} .8665112{col 37}{space 1}    0.37{col 46}{space 3}0.717{col 54}{space 4}-1.526262{col 67}{space 3} 2.167588
{txt}{space 8}608  {c |}{col 14}{res}{space 2} .3620294{col 26}{space 2} .8563938{col 37}{space 1}    0.42{col 46}{space 3}0.678{col 54}{space 4}-1.463331{col 67}{space 3}  2.18739
{txt}{space 8}609  {c |}{col 14}{res}{space 2} .6041038{col 26}{space 2} .9486647{col 37}{space 1}    0.64{col 46}{space 3}0.534{col 54}{space 4}-1.417927{col 67}{space 3} 2.626135
{txt}{space 8}610  {c |}{col 14}{res}{space 2} .7561642{col 26}{space 2} .9208047{col 37}{space 1}    0.82{col 46}{space 3}0.424{col 54}{space 4}-1.206484{col 67}{space 3} 2.718813
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .5264917{col 26}{space 2} .7957399{col 37}{space 1}    0.66{col 46}{space 3}0.518{col 54}{space 4}-1.169588{col 67}{space 3} 2.222571
{txt}{space 8}612  {c |}{col 14}{res}{space 2}  .485286{col 26}{space 2} 1.026841{col 37}{space 1}    0.47{col 46}{space 3}0.643{col 54}{space 4}-1.703374{col 67}{space 3} 2.673946
{txt}{space 8}613  {c |}{col 14}{res}{space 2} .5999737{col 26}{space 2} 1.139734{col 37}{space 1}    0.53{col 46}{space 3}0.606{col 54}{space 4}-1.829312{col 67}{space 3} 3.029259
{txt}{space 8}614  {c |}{col 14}{res}{space 2} .1262505{col 26}{space 2} 1.011867{col 37}{space 1}    0.12{col 46}{space 3}0.902{col 54}{space 4}-2.030493{col 67}{space 3} 2.282993
{txt}{space 8}615  {c |}{col 14}{res}{space 2} .8277391{col 26}{space 2} 1.094245{col 37}{space 1}    0.76{col 46}{space 3}0.461{col 54}{space 4}-1.504588{col 67}{space 3} 3.160066
{txt}{space 8}616  {c |}{col 14}{res}{space 2} .3633456{col 26}{space 2} 1.080644{col 37}{space 1}    0.34{col 46}{space 3}0.741{col 54}{space 4}-1.939992{col 67}{space 3} 2.666683
{txt}{space 8}617  {c |}{col 14}{res}{space 2} .3963923{col 26}{space 2} 1.252653{col 37}{space 1}    0.32{col 46}{space 3}0.756{col 54}{space 4}-2.273574{col 67}{space 3} 3.066358
{txt}{space 8}618  {c |}{col 14}{res}{space 2} .1126203{col 26}{space 2} 1.046247{col 37}{space 1}    0.11{col 46}{space 3}0.916{col 54}{space 4}-2.117403{col 67}{space 3} 2.342644
{txt}{space 8}619  {c |}{col 14}{res}{space 2} .5784789{col 26}{space 2} 1.071968{col 37}{space 1}    0.54{col 46}{space 3}0.597{col 54}{space 4}-1.706366{col 67}{space 3} 2.863324
{txt}{space 8}620  {c |}{col 14}{res}{space 2} .6747926{col 26}{space 2} 1.245498{col 37}{space 1}    0.54{col 46}{space 3}0.596{col 54}{space 4}-1.979924{col 67}{space 3} 3.329509
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .4087249{col 26}{space 2} 1.028341{col 37}{space 1}    0.40{col 46}{space 3}0.697{col 54}{space 4}-1.783133{col 67}{space 3} 2.600583
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .3357035{col 26}{space 2} 1.045084{col 37}{space 1}    0.32{col 46}{space 3}0.752{col 54}{space 4} -1.89184{col 67}{space 3} 2.563248
{txt}{space 8}623  {c |}{col 14}{res}{space 2} .5480714{col 26}{space 2} 1.021166{col 37}{space 1}    0.54{col 46}{space 3}0.599{col 54}{space 4}-1.628492{col 67}{space 3} 2.724634
{txt}{space 8}624  {c |}{col 14}{res}{space 2} .1047472{col 26}{space 2} 1.122897{col 37}{space 1}    0.09{col 46}{space 3}0.927{col 54}{space 4}-2.288651{col 67}{space 3} 2.498145
{txt}{space 8}625  {c |}{col 14}{res}{space 2} .6025143{col 26}{space 2} 1.153137{col 37}{space 1}    0.52{col 46}{space 3}0.609{col 54}{space 4} -1.85534{col 67}{space 3} 3.060368
{txt}{space 8}626  {c |}{col 14}{res}{space 2}  .528164{col 26}{space 2} 1.252152{col 37}{space 1}    0.42{col 46}{space 3}0.679{col 54}{space 4}-2.140736{col 67}{space 3} 3.197064
{txt}{space 8}627  {c |}{col 14}{res}{space 2} .1276683{col 26}{space 2} 1.166388{col 37}{space 1}    0.11{col 46}{space 3}0.914{col 54}{space 4}-2.358429{col 67}{space 3} 2.613765
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-.1017284{col 26}{space 2} 1.113734{col 37}{space 1}   -0.09{col 46}{space 3}0.928{col 54}{space 4}-2.475597{col 67}{space 3}  2.27214
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-.0672903{col 26}{space 2}  1.17388{col 37}{space 1}   -0.06{col 46}{space 3}0.955{col 54}{space 4}-2.569357{col 67}{space 3} 2.434776
{txt}{space 8}630  {c |}{col 14}{res}{space 2} .3996551{col 26}{space 2} 1.124959{col 37}{space 1}    0.36{col 46}{space 3}0.727{col 54}{space 4}-1.998139{col 67}{space 3} 2.797449
{txt}{space 8}631  {c |}{col 14}{res}{space 2} .1106538{col 26}{space 2} 1.124657{col 37}{space 1}    0.10{col 46}{space 3}0.923{col 54}{space 4}-2.286496{col 67}{space 3} 2.507803
{txt}{space 8}632  {c |}{col 14}{res}{space 2}  .212542{col 26}{space 2} 1.107355{col 37}{space 1}    0.19{col 46}{space 3}0.850{col 54}{space 4}-2.147729{col 67}{space 3} 2.572813
{txt}{space 8}633  {c |}{col 14}{res}{space 2}  .310231{col 26}{space 2} 1.094474{col 37}{space 1}    0.28{col 46}{space 3}0.781{col 54}{space 4}-2.022584{col 67}{space 3} 2.643047
{txt}{space 8}634  {c |}{col 14}{res}{space 2} .2471513{col 26}{space 2} 1.151813{col 37}{space 1}    0.21{col 46}{space 3}0.833{col 54}{space 4}-2.207881{col 67}{space 3} 2.702183
{txt}{space 8}635  {c |}{col 14}{res}{space 2} .5070971{col 26}{space 2} 1.174954{col 37}{space 1}    0.43{col 46}{space 3}0.672{col 54}{space 4}-1.997259{col 67}{space 3} 3.011453
{txt}{space 8}636  {c |}{col 14}{res}{space 2} .0894254{col 26}{space 2} 1.237622{col 37}{space 1}    0.07{col 46}{space 3}0.943{col 54}{space 4}-2.548503{col 67}{space 3} 2.727354
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-.1254115{col 26}{space 2} 1.244537{col 37}{space 1}   -0.10{col 46}{space 3}0.921{col 54}{space 4} -2.77808{col 67}{space 3} 2.527257
{txt}{space 8}638  {c |}{col 14}{res}{space 2} .6089413{col 26}{space 2} 1.239068{col 37}{space 1}    0.49{col 46}{space 3}0.630{col 54}{space 4} -2.03207{col 67}{space 3} 3.249952
{txt}{space 8}639  {c |}{col 14}{res}{space 2} .5020431{col 26}{space 2} 1.222321{col 37}{space 1}    0.41{col 46}{space 3}0.687{col 54}{space 4}-2.103272{col 67}{space 3} 3.107358
{txt}{space 8}640  {c |}{col 14}{res}{space 2} .3748008{col 26}{space 2}  1.19611{col 37}{space 1}    0.31{col 46}{space 3}0.758{col 54}{space 4}-2.174647{col 67}{space 3} 2.924249
{txt}{space 8}641  {c |}{col 14}{res}{space 2} .2936479{col 26}{space 2} 1.243935{col 37}{space 1}    0.24{col 46}{space 3}0.817{col 54}{space 4}-2.357736{col 67}{space 3} 2.945032
{txt}{space 8}642  {c |}{col 14}{res}{space 2} .2448733{col 26}{space 2} 1.226942{col 37}{space 1}    0.20{col 46}{space 3}0.844{col 54}{space 4}-2.370292{col 67}{space 3} 2.860039
{txt}{space 8}643  {c |}{col 14}{res}{space 2} .1665406{col 26}{space 2}  1.36022{col 37}{space 1}    0.12{col 46}{space 3}0.904{col 54}{space 4}-2.732701{col 67}{space 3} 3.065782
{txt}{space 8}644  {c |}{col 14}{res}{space 2} .4514679{col 26}{space 2} 1.377964{col 37}{space 1}    0.33{col 46}{space 3}0.748{col 54}{space 4}-2.485593{col 67}{space 3} 3.388529
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 1.122869{col 26}{space 2} 1.422707{col 37}{space 1}    0.79{col 46}{space 3}0.442{col 54}{space 4} -1.90956{col 67}{space 3} 4.155298
{txt}{space 8}646  {c |}{col 14}{res}{space 2}  1.15445{col 26}{space 2} 1.314994{col 37}{space 1}    0.88{col 46}{space 3}0.394{col 54}{space 4}-1.648394{col 67}{space 3} 3.957294
{txt}{space 8}647  {c |}{col 14}{res}{space 2} .8637283{col 26}{space 2} 1.426075{col 37}{space 1}    0.61{col 46}{space 3}0.554{col 54}{space 4}-2.175879{col 67}{space 3} 3.903335
{txt}{space 8}648  {c |}{col 14}{res}{space 2} .9240338{col 26}{space 2} 1.587701{col 37}{space 1}    0.58{col 46}{space 3}0.569{col 54}{space 4}-2.460071{col 67}{space 3} 4.308139
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 1.071846{col 26}{space 2} 1.518412{col 37}{space 1}    0.71{col 46}{space 3}0.491{col 54}{space 4}-2.164572{col 67}{space 3} 4.308263
{txt}{space 8}650  {c |}{col 14}{res}{space 2} .5016774{col 26}{space 2} 1.481061{col 37}{space 1}    0.34{col 46}{space 3}0.740{col 54}{space 4} -2.65513{col 67}{space 3} 3.658485
{txt}{space 8}651  {c |}{col 14}{res}{space 2} .4031981{col 26}{space 2} 1.565435{col 37}{space 1}    0.26{col 46}{space 3}0.800{col 54}{space 4}-2.933448{col 67}{space 3} 3.739844
{txt}{space 8}652  {c |}{col 14}{res}{space 2} .5571677{col 26}{space 2} 1.500753{col 37}{space 1}    0.37{col 46}{space 3}0.716{col 54}{space 4}-2.641612{col 67}{space 3} 3.755948
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 1.210989{col 26}{space 2} 1.605036{col 37}{space 1}    0.75{col 46}{space 3}0.462{col 54}{space 4}-2.210065{col 67}{space 3} 4.632043
{txt}{space 8}654  {c |}{col 14}{res}{space 2} .9400498{col 26}{space 2} 1.543928{col 37}{space 1}    0.61{col 46}{space 3}0.552{col 54}{space 4}-2.350755{col 67}{space 3} 4.230855
{txt}{space 8}655  {c |}{col 14}{res}{space 2}  .862849{col 26}{space 2}  1.54234{col 37}{space 1}    0.56{col 46}{space 3}0.584{col 54}{space 4}-2.424571{col 67}{space 3} 4.150269
{txt}{space 8}656  {c |}{col 14}{res}{space 2}  .654106{col 26}{space 2} 1.506892{col 37}{space 1}    0.43{col 46}{space 3}0.670{col 54}{space 4}-2.557758{col 67}{space 3}  3.86597
{txt}{space 8}657  {c |}{col 14}{res}{space 2} .3556655{col 26}{space 2} 1.606408{col 37}{space 1}    0.22{col 46}{space 3}0.828{col 54}{space 4}-3.068312{col 67}{space 3} 3.779643
{txt}{space 8}658  {c |}{col 14}{res}{space 2} .9044308{col 26}{space 2} 1.503302{col 37}{space 1}    0.60{col 46}{space 3}0.556{col 54}{space 4}-2.299782{col 67}{space 3} 4.108644
{txt}{space 8}659  {c |}{col 14}{res}{space 2} .7158694{col 26}{space 2} 1.519662{col 37}{space 1}    0.47{col 46}{space 3}0.644{col 54}{space 4}-2.523213{col 67}{space 3} 3.954951
{txt}{space 8}660  {c |}{col 14}{res}{space 2} .1447998{col 26}{space 2} 1.772222{col 37}{space 1}    0.08{col 46}{space 3}0.936{col 54}{space 4}-3.632602{col 67}{space 3} 3.922201
{txt}{space 8}661  {c |}{col 14}{res}{space 2}  1.11979{col 26}{space 2} 1.598047{col 37}{space 1}    0.70{col 46}{space 3}0.494{col 54}{space 4}-2.286367{col 67}{space 3} 4.525947
{txt}{space 8}662  {c |}{col 14}{res}{space 2}  .897912{col 26}{space 2} 1.655946{col 37}{space 1}    0.54{col 46}{space 3}0.596{col 54}{space 4}-2.631653{col 67}{space 3} 4.427477
{txt}{space 8}663  {c |}{col 14}{res}{space 2} .5677522{col 26}{space 2} 1.470161{col 37}{space 1}    0.39{col 46}{space 3}0.705{col 54}{space 4}-2.565822{col 67}{space 3} 3.701326
{txt}{space 8}664  {c |}{col 14}{res}{space 2} .8830492{col 26}{space 2} 1.532114{col 37}{space 1}    0.58{col 46}{space 3}0.573{col 54}{space 4}-2.382574{col 67}{space 3} 4.148672
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 1.062109{col 26}{space 2} 1.594965{col 37}{space 1}    0.67{col 46}{space 3}0.516{col 54}{space 4}-2.337478{col 67}{space 3} 4.461696
{txt}{space 8}666  {c |}{col 14}{res}{space 2} .7003805{col 26}{space 2} 1.565963{col 37}{space 1}    0.45{col 46}{space 3}0.661{col 54}{space 4}-2.637392{col 67}{space 3} 4.038152
{txt}{space 8}667  {c |}{col 14}{res}{space 2} .5192215{col 26}{space 2} 1.560565{col 37}{space 1}    0.33{col 46}{space 3}0.744{col 54}{space 4}-2.807045{col 67}{space 3} 3.845488
{txt}{space 8}668  {c |}{col 14}{res}{space 2} .3604939{col 26}{space 2} 1.604717{col 37}{space 1}    0.22{col 46}{space 3}0.825{col 54}{space 4}-3.059879{col 67}{space 3} 3.780867
{txt}{space 8}669  {c |}{col 14}{res}{space 2}  .958787{col 26}{space 2} 1.484985{col 37}{space 1}    0.65{col 46}{space 3}0.528{col 54}{space 4}-2.206383{col 67}{space 3} 4.123957
{txt}{space 8}670  {c |}{col 14}{res}{space 2} .5719845{col 26}{space 2} 1.480833{col 37}{space 1}    0.39{col 46}{space 3}0.705{col 54}{space 4}-2.584336{col 67}{space 3} 3.728305
{txt}{space 8}671  {c |}{col 14}{res}{space 2} .9647316{col 26}{space 2} 1.449055{col 37}{space 1}    0.67{col 46}{space 3}0.516{col 54}{space 4}-2.123856{col 67}{space 3} 4.053319
{txt}{space 8}672  {c |}{col 14}{res}{space 2} .5311444{col 26}{space 2} 1.564259{col 37}{space 1}    0.34{col 46}{space 3}0.739{col 54}{space 4}-2.802994{col 67}{space 3} 3.865283
{txt}{space 8}673  {c |}{col 14}{res}{space 2} .6827034{col 26}{space 2} 1.593549{col 37}{space 1}    0.43{col 46}{space 3}0.674{col 54}{space 4}-2.713865{col 67}{space 3} 4.079272
{txt}{space 8}674  {c |}{col 14}{res}{space 2} .8711717{col 26}{space 2} 1.674167{col 37}{space 1}    0.52{col 46}{space 3}0.610{col 54}{space 4}-2.697232{col 67}{space 3} 4.439575
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 1.150851{col 26}{space 2} 1.680279{col 37}{space 1}    0.68{col 46}{space 3}0.504{col 54}{space 4}-2.430579{col 67}{space 3}  4.73228
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 1.215065{col 26}{space 2} 1.733345{col 37}{space 1}    0.70{col 46}{space 3}0.494{col 54}{space 4}-2.479472{col 67}{space 3} 4.909603
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 1.007073{col 26}{space 2} 1.664761{col 37}{space 1}    0.60{col 46}{space 3}0.554{col 54}{space 4}-2.541282{col 67}{space 3} 4.555428
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 1.265929{col 26}{space 2} 1.675831{col 37}{space 1}    0.76{col 46}{space 3}0.462{col 54}{space 4} -2.30602{col 67}{space 3} 4.837879
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 1.231717{col 26}{space 2} 1.694855{col 37}{space 1}    0.73{col 46}{space 3}0.479{col 54}{space 4}-2.380781{col 67}{space 3} 4.844215
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 1.345132{col 26}{space 2} 1.741247{col 37}{space 1}    0.77{col 46}{space 3}0.452{col 54}{space 4}-2.366249{col 67}{space 3} 5.056512
{txt}{space 8}681  {c |}{col 14}{res}{space 2}  1.29538{col 26}{space 2} 1.684524{col 37}{space 1}    0.77{col 46}{space 3}0.454{col 54}{space 4}-2.295097{col 67}{space 3} 4.885857
{txt}{space 8}682  {c |}{col 14}{res}{space 2} 1.067148{col 26}{space 2} 1.680885{col 37}{space 1}    0.63{col 46}{space 3}0.535{col 54}{space 4}-2.515572{col 67}{space 3} 4.649869
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 1.024214{col 26}{space 2} 1.685491{col 37}{space 1}    0.61{col 46}{space 3}0.552{col 54}{space 4}-2.568325{col 67}{space 3} 4.616753
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 1.223413{col 26}{space 2} 1.795135{col 37}{space 1}    0.68{col 46}{space 3}0.506{col 54}{space 4}-2.602827{col 67}{space 3} 5.049652
{txt}{space 8}685  {c |}{col 14}{res}{space 2} .9340229{col 26}{space 2} 1.763311{col 37}{space 1}    0.53{col 46}{space 3}0.604{col 54}{space 4}-2.824385{col 67}{space 3} 4.692431
{txt}{space 8}686  {c |}{col 14}{res}{space 2} .9149393{col 26}{space 2}  1.86314{col 37}{space 1}    0.49{col 46}{space 3}0.630{col 54}{space 4} -3.05625{col 67}{space 3} 4.886129
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 1.155944{col 26}{space 2} 1.787806{col 37}{space 1}    0.65{col 46}{space 3}0.528{col 54}{space 4}-2.654675{col 67}{space 3} 4.966563
{txt}{space 8}688  {c |}{col 14}{res}{space 2} .9676657{col 26}{space 2} 1.832097{col 37}{space 1}    0.53{col 46}{space 3}0.605{col 54}{space 4}-2.937357{col 67}{space 3} 4.872688
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 1.188739{col 26}{space 2}  1.77467{col 37}{space 1}    0.67{col 46}{space 3}0.513{col 54}{space 4}-2.593882{col 67}{space 3} 4.971359
{txt}{space 8}690  {c |}{col 14}{res}{space 2} .8399275{col 26}{space 2} 1.798252{col 37}{space 1}    0.47{col 46}{space 3}0.647{col 54}{space 4}-2.992957{col 67}{space 3} 4.672812
{txt}{space 8}691  {c |}{col 14}{res}{space 2} .9093753{col 26}{space 2} 1.895462{col 37}{space 1}    0.48{col 46}{space 3}0.638{col 54}{space 4}-3.130707{col 67}{space 3} 4.949458
{txt}{space 8}692  {c |}{col 14}{res}{space 2} .9917138{col 26}{space 2} 1.861073{col 37}{space 1}    0.53{col 46}{space 3}0.602{col 54}{space 4}-2.975069{col 67}{space 3} 4.958497
{txt}{space 8}693  {c |}{col 14}{res}{space 2} .8856268{col 26}{space 2} 1.797516{col 37}{space 1}    0.49{col 46}{space 3}0.629{col 54}{space 4}-2.945688{col 67}{space 3} 4.716942
{txt}{space 8}694  {c |}{col 14}{res}{space 2} .8222705{col 26}{space 2} 1.865401{col 37}{space 1}    0.44{col 46}{space 3}0.666{col 54}{space 4}-3.153738{col 67}{space 3} 4.798279
{txt}{space 8}695  {c |}{col 14}{res}{space 2} .7432901{col 26}{space 2} 1.845332{col 37}{space 1}    0.40{col 46}{space 3}0.693{col 54}{space 4}-3.189941{col 67}{space 3} 4.676521
{txt}{space 8}696  {c |}{col 14}{res}{space 2} .9894334{col 26}{space 2} 1.895998{col 37}{space 1}    0.52{col 46}{space 3}0.609{col 54}{space 4}-3.051791{col 67}{space 3} 5.030657
{txt}{space 8}697  {c |}{col 14}{res}{space 2} .9319018{col 26}{space 2} 1.860121{col 37}{space 1}    0.50{col 46}{space 3}0.624{col 54}{space 4}-3.032852{col 67}{space 3} 4.896655
{txt}{space 8}698  {c |}{col 14}{res}{space 2} .8603308{col 26}{space 2} 1.890592{col 37}{space 1}    0.46{col 46}{space 3}0.656{col 54}{space 4}-3.169372{col 67}{space 3} 4.890033
{txt}{space 8}699  {c |}{col 14}{res}{space 2} .7481474{col 26}{space 2} 1.887357{col 37}{space 1}    0.40{col 46}{space 3}0.697{col 54}{space 4} -3.27466{col 67}{space 3} 4.770954
{txt}{space 8}700  {c |}{col 14}{res}{space 2} 1.144045{col 26}{space 2} 1.848072{col 37}{space 1}    0.62{col 46}{space 3}0.545{col 54}{space 4}-2.795028{col 67}{space 3} 5.083119
{txt}{space 8}701  {c |}{col 14}{res}{space 2} .7917252{col 26}{space 2} 1.863655{col 37}{space 1}    0.42{col 46}{space 3}0.677{col 54}{space 4}-3.180562{col 67}{space 3} 4.764012
{txt}{space 8}702  {c |}{col 14}{res}{space 2} .6178086{col 26}{space 2} 2.008498{col 37}{space 1}    0.31{col 46}{space 3}0.763{col 54}{space 4}-3.663204{col 67}{space 3} 4.898821
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 1.196274{col 26}{space 2}  1.85702{col 37}{space 1}    0.64{col 46}{space 3}0.529{col 54}{space 4} -2.76187{col 67}{space 3} 5.154418
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 1.287764{col 26}{space 2} 1.775688{col 37}{space 1}    0.73{col 46}{space 3}0.479{col 54}{space 4}-2.497026{col 67}{space 3} 5.072553
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 1.359042{col 26}{space 2} 1.806061{col 37}{space 1}    0.75{col 46}{space 3}0.463{col 54}{space 4}-2.490485{col 67}{space 3} 5.208569
{txt}{space 8}706  {c |}{col 14}{res}{space 2} 1.250006{col 26}{space 2} 1.850701{col 37}{space 1}    0.68{col 46}{space 3}0.510{col 54}{space 4}-2.694671{col 67}{space 3} 5.194682
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 1.352357{col 26}{space 2} 1.880711{col 37}{space 1}    0.72{col 46}{space 3}0.483{col 54}{space 4}-2.656283{col 67}{space 3} 5.360997
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 1.537161{col 26}{space 2} 2.091176{col 37}{space 1}    0.74{col 46}{space 3}0.474{col 54}{space 4}-2.920077{col 67}{space 3} 5.994398
{txt}{space 8}709  {c |}{col 14}{res}{space 2} 1.460392{col 26}{space 2} 2.010259{col 37}{space 1}    0.73{col 46}{space 3}0.479{col 54}{space 4}-2.824375{col 67}{space 3} 5.745158
{txt}{space 8}710  {c |}{col 14}{res}{space 2} 1.198462{col 26}{space 2} 2.032235{col 37}{space 1}    0.59{col 46}{space 3}0.564{col 54}{space 4}-3.133145{col 67}{space 3} 5.530069
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 1.434513{col 26}{space 2} 1.998682{col 37}{space 1}    0.72{col 46}{space 3}0.484{col 54}{space 4}-2.825578{col 67}{space 3} 5.694603
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 1.264776{col 26}{space 2} 1.986306{col 37}{space 1}    0.64{col 46}{space 3}0.534{col 54}{space 4}-2.968934{col 67}{space 3} 5.498487
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 1.597799{col 26}{space 2} 2.014407{col 37}{space 1}    0.79{col 46}{space 3}0.440{col 54}{space 4}-2.695808{col 67}{space 3} 5.891407
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 1.126725{col 26}{space 2} 2.043079{col 37}{space 1}    0.55{col 46}{space 3}0.589{col 54}{space 4}-3.227995{col 67}{space 3} 5.481444
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 1.416661{col 26}{space 2} 2.003124{col 37}{space 1}    0.71{col 46}{space 3}0.490{col 54}{space 4}-2.852898{col 67}{space 3} 5.686219
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 1.136144{col 26}{space 2} 2.041213{col 37}{space 1}    0.56{col 46}{space 3}0.586{col 54}{space 4}-3.214598{col 67}{space 3} 5.486886
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 1.101878{col 26}{space 2} 1.993577{col 37}{space 1}    0.55{col 46}{space 3}0.589{col 54}{space 4} -3.14733{col 67}{space 3} 5.351087
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 1.380428{col 26}{space 2} 1.997805{col 37}{space 1}    0.69{col 46}{space 3}0.500{col 54}{space 4}-2.877794{col 67}{space 3} 5.638649
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 1.399865{col 26}{space 2} 2.015643{col 37}{space 1}    0.69{col 46}{space 3}0.498{col 54}{space 4}-2.896375{col 67}{space 3} 5.696106
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.578788{col 26}{space 2}  .197138{col 37}{space 1}    8.01{col 46}{space 3}0.000{col 54}{space 4} 1.158598{col 67}{space 3} 1.998977
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.482634{col 26}{space 2} .6742474{col 37}{space 1}   -2.20{col 46}{space 3}0.044{col 54}{space 4}-2.919758{col 67}{space 3}-.0455095
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.339653{col 26}{space 2} 1.060982{col 37}{space 1}   -1.26{col 46}{space 3}0.226{col 54}{space 4}-3.601083{col 67}{space 3} .9217761
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.5944843{col 26}{space 2} .1987818{col 37}{space 1}   -2.99{col 46}{space 3}0.009{col 54}{space 4}-1.018178{col 67}{space 3}-.1707908
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.080335{col 26}{space 2} .1284549{col 37}{space 1}    8.41{col 46}{space 3}0.000{col 54}{space 4}   .80654{col 67}{space 3}  1.35413
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-.4324627{col 26}{space 2} 1.097286{col 37}{space 1}   -0.39{col 46}{space 3}0.699{col 54}{space 4}-2.771271{col 67}{space 3} 1.906346
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .6909017{col 26}{space 2} .5513609{col 37}{space 1}    1.25{col 46}{space 3}0.229{col 54}{space 4}-.4842962{col 67}{space 3}   1.8661
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.259948{col 26}{space 2} .4629193{col 37}{space 1}   -4.88{col 46}{space 3}0.000{col 54}{space 4}-3.246637{col 67}{space 3}-1.273259
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2} -2.59102{col 26}{space 2} .5437037{col 37}{space 1}   -4.77{col 46}{space 3}0.000{col 54}{space 4}-3.749897{col 67}{space 3}-1.432143
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.391102{col 26}{space 2} .7002935{col 37}{space 1}   -1.99{col 46}{space 3}0.066{col 54}{space 4}-2.883742{col 67}{space 3} .1015387
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 1.285654{col 26}{space 2} .2914292{col 37}{space 1}    4.41{col 46}{space 3}0.001{col 54}{space 4} .6644877{col 67}{space 3} 1.906821
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}  .846759{col 26}{space 2} .7372429{col 37}{space 1}    1.15{col 46}{space 3}0.269{col 54}{space 4} -.724637{col 67}{space 3} 2.418155
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.587384{col 26}{space 2} .7966635{col 37}{space 1}    3.25{col 46}{space 3}0.005{col 54}{space 4} .8893358{col 67}{space 3} 4.285432
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} .6236839{col 26}{space 2} 3.264366{col 37}{space 1}    0.19{col 46}{space 3}0.851{col 54}{space 4}-6.334147{col 67}{space 3} 7.581515
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-.1478342{col 26}{space 2} 1.147654{col 37}{space 1}   -0.13{col 46}{space 3}0.899{col 54}{space 4}-2.594001{col 67}{space 3} 2.298332
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-9.452865{col 26}{space 2} 13.66729{col 37}{space 1}   -0.69{col 46}{space 3}0.500{col 54}{space 4}-38.58401{col 67}{space 3} 19.67828
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)

{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}  -11.6989
{col 25}{txt}Prob>|t| = {res}    0.0006

95%{txt} confidence set for null hypothesis expression: [{res}-3.004{txt}, {res}-2.039{txt}]
{res}
Warning: 20 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -3.6974
{col 25}{txt}Prob>|t| = {res}    0.0148

95%{txt} confidence set for null hypothesis expression: [{res}-2.901{txt}, {res}-.5924{txt}]
{res}
Warning: 13 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -4.5690
{col 25}{txt}Prob>|t| = {res}    0.0053

95%{txt} confidence set for null hypothesis expression: [{res}-3.089{txt}, {res}-1.131{txt}]
{res}
Warning: 189 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -6.7038
{col 25}{txt}Prob>|t| = {res}    0.0080

95%{txt} confidence set for null hypothesis expression: [{res}-2.603{txt}, {res}-1.252{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}  -10.3161
{col 25}{txt}Prob>|t| = {res}    0.0010

95%{txt} confidence set for null hypothesis expression: [{res}-1.882{txt}, {res}-1.11{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 28}t(15) = {res}    0.6785
{col 25}{txt}Prob>|t| = {res}    0.5328

95%{txt} confidence set for null hypothesis expression: [{res}-1.635{txt}, {res}3.468{txt}]
{res}
Warning: 5 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 28}t(15) = {res}    1.0982
{col 25}{txt}Prob>|t| = {res}    0.3258

95%{txt} confidence set for null hypothesis expression: [{res}-.4228{txt}, {res}1.076{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 28}t(15) = {res}   -0.6953
{col 25}{txt}Prob>|t| = {res}    0.5233

95%{txt} confidence set for null hypothesis expression: [{res}-47.31{txt}, {res}21.65{txt}]
{res}{txt}
{com}. mat p_val[1,9]=r(p_1)
{txt}
{com}. mat p_val[2,9]=r(p_2)
{txt}
{com}. mat p_val[3,9]=r(p_3)
{txt}
{com}. mat p_val[4,9]=r(p_4)
{txt}
{com}. mat p_val[5,9]=r(p_5)
{txt}
{com}. mat p_val[6,9]=r(p_6)
{txt}
{com}. mat p_val[7,9]=r(p_7)
{txt}
{com}. mat p_val[8,9]=r(p_8)
{txt}
{com}. 
. eststo tb1_`j'
{txt}
{com}. 
. 
. 
. mat list p_val
{res}
{txt}p_val[8,9]
           c1         c2         c3         c4         c5         c6         c7         c8         c9
r1 {res} .01150462          .          .          .          .  .02425292   .0197731  .03770179  .00060012
{txt}r2 {res}         .  .00260547          .          .          .  .00441103  .00451717  .03771692  .01483115
{txt}r3 {res}         .          .  .01613388          .          .  .00421264  .00641926  .11215526  .00530743
{txt}r4 {res}         .          .          .  .01674957          .  .01102716   .0093868  .14314473  .00795107
{txt}r5 {res}         .          .          .          .  .37943794  .01460146  .00980098  .41699079   .0010001
{txt}r6 {res} .22472247  .40868174  .29401761  .24907472  .28295659    .234994          .  .89256449  .53280656
{txt}r7 {res} .18726854  .34461015  .35459005  .24494089  .19076707   .7198237          .  .07500501  .32579548
{txt}r8 {res} .17883577  .41028206  .27245449  .19483897  .21178471   .4010401  .00532129  .09731307  .52330466
{reset}
{com}. outtable using _3results/tables/p_val1, mat(p_val) replace format(%9.3f) norow nodots
{txt}
{com}. 
. esttab _all using _3results/tables/table2_baseline.tex, order(one two three four five lag_lgdp lag_lpop _cons) keep(one two three four five lag_lgdp lag_lpop _cons)  ///
>         nostar b(3) p(3) coeflabel(lag_lgdp "Lagged ln(GDP)" lag_lpop "Lagged ln(Pop.)" _cons "Constant") replace r2    
{res}{txt}(output written to {browse  `"_3results/tables/table2_baseline.tex"'})

{com}. 
. 
.         
. 
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
.         
. 
{txt}end of do-file

{com}. *do _2code/_2analysis/table2_spatial
. do _2code/_2analysis/table3
{txt}
{com}. 
. ********************************************************************************
. * Table 3: Differences-in-differences for economic indicators
. 
. ********************************************************************************
. 
. 
. 
. 
. ** collapse existing data to yearly obs:
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. collapse (mean) GDP pop lag_lgdp lag_lpop one_bin-five_affected region1 (sum) fdi, by(region year)
{res}{txt}
{com}. drop if year==2005
{txt}(16 observations deleted)

{com}. 
. foreach var of varlist one_bin-five_bin {c -(}
{txt}  2{com}. replace `var'=1 if `var'>0
{txt}  3{com}. {c )-}
{txt}(16 real changes made)
(16 real changes made)
(16 real changes made)
(16 real changes made)
(16 real changes made)

{com}. 
. foreach x in one two three four five {c -(}
{txt}  2{com}. gen `x' = `x'_bin*`x'_affected 
{txt}  3{com}. {c )-}
{txt}
{com}. 
. 
. ** Merge in clean data:
. drop if year>2017
{txt}(32 observations deleted)

{com}. merge 1:m region year using _1data/clean/principal_indicators.dta
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}               0
{txt}{col 5}Matched{col 30}{res}             348{txt}  (_merge==3)
{col 5}{hline 41}

{com}. keep if _merge==3
{txt}(0 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. 
. 
. 
. 
. 
. * Identify the pre-treatment years for the affected regions.
. * These are the relavant pre-treatment dummies = 1 for the specific year for the affected regions
. drop pre* post* affected
{txt}
{com}. gen pre_1 =0
{txt}
{com}. replace pre_1=1 if      (year==2008 & inlist(State, "Odisha", "Assam")) | ///
>                                         (year==2011 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2013 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))
{txt}(9 real changes made)

{com}. gen pre_2 =0
{txt}
{com}. replace pre_2=1 if (year==2007 & inlist(State, "Odisha", "Assam")) | ///
>                                         (year==2010 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2012 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))
{txt}(9 real changes made)

{com}. gen pre_3 =0
{txt}
{com}. replace pre_3=1 if (year==2006 & inlist(State, "Odisha", "Assam")) | ///
>                                         (year==2009 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2011 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))
{txt}(9 real changes made)

{com}. 
. gen pre_4 =0
{txt}
{com}. replace pre_4=1 if (year==2008 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2010 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))
{txt}(7 real changes made)

{com}.                                         
. gen pre_5 =0
{txt}
{com}. replace pre_5=1 if (year==2007 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2009 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))                                      
{txt}(7 real changes made)

{com}.                                         
. gen pre_6 =0
{txt}
{com}. replace pre_6=1 if (year==2006 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2008 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))                                      
{txt}(7 real changes made)

{com}.                                         
. gen pre_7 =0
{txt}
{com}. replace pre_7=1 if (year==2007 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))                                   
{txt}(3 real changes made)

{com}.                                         
. gen pre_8 =0
{txt}
{com}. replace pre_8=1 if (year==2006 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))
{txt}(3 real changes made)

{com}.                                         
. 
. gen post_1=0
{txt}
{com}. replace post_1=1 if (year==2007 & inlist(State, "Sikkim", "Bihar")) | ///
>                                         (year==2010 & inlist(State, "Odisha", "Assam")) | ///
>                                         (year==2013 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2015 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))                                      
{txt}(10 real changes made)

{com}.                                                                                 
. gen post_2=0
{txt}
{com}. replace post_2=1 if (year==2008 & inlist(State, "Sikkim", "Bihar")) | ///
>                                         (year==2011 & inlist(State, "Odisha", "Assam")) | ///
>                                         (year==2014 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2016 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))      
{txt}(10 real changes made)

{com}.                                         
. gen post_3=0
{txt}
{com}. replace post_3=1 if (year==2009 & inlist(State, "Sikkim", "Bihar")) | ///
>                                         (year==2012 & inlist(State, "Odisha", "Assam")) | ///
>                                         (year==2015 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi")) | ///
>                                         (year==2017 & inlist(State, "Puducherry", "Tamil Nadu", "Andhra Pradesh"))       
{txt}(10 real changes made)

{com}.                                         
. gen post_4=0
{txt}
{com}. replace post_4=1 if (year==2010 & inlist(State, "Sikkim", "Bihar")) | ///
>                                         (year==2013 & inlist(State, "Odisha", "Assam")) | ///
>                                         (year==2016 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi"))
{txt}(7 real changes made)

{com}.                                         
. gen post_5=0
{txt}
{com}. replace post_5=1 if (year==2011 & inlist(State, "Sikkim", "Bihar")) | ///
>                                         (year==2014 & inlist(State, "Odisha", "Assam")) | ///
>                                         (year==2017 & inlist(State, "Himachal Pradesh", "Uttar Pradesh", "Uttarakhand", "Delhi"))                                       
{txt}(7 real changes made)

{com}.                                         
. gen post_6=0
{txt}
{com}. replace post_6=1 if (year==2012 & inlist(State, "Sikkim", "Bihar")) | ///
>                                         (year==2015 & inlist(State, "Odisha", "Assam")) 
{txt}(3 real changes made)

{com}. 
. gen post_7=0
{txt}
{com}. replace post_7=1 if (year==2013 & inlist(State, "Sikkim", "Bihar")) | ///
>                                         (year==2016 & inlist(State, "Odisha", "Assam"))                                 
{txt}(3 real changes made)

{com}. 
. gen post_8=0
{txt}
{com}. replace post_8=1 if (year==2014 & inlist(State, "Sikkim", "Bihar")) | ///
>                                         (year==2017 & inlist(State, "Odisha", "Assam"))
{txt}(3 real changes made)

{com}. 
. gen post_9=0
{txt}
{com}. replace post_9=1 if (year==2015 & inlist(State, "Sikkim", "Bihar"))
{txt}(1 real change made)

{com}. 
. gen post_10=0
{txt}
{com}. replace post_10=1 if (year==2016 & inlist(State, "Sikkim", "Bihar"))
{txt}(1 real change made)

{com}. 
. gen post_11=0
{txt}
{com}. replace post_11=1 if (year==2017 & inlist(State, "Sikkim", "Bihar"))
{txt}(1 real change made)

{com}. 
. 
. 
. 
. gen affected=0
{txt}
{com}. replace affected=1 if inlist(region, "kolkata" , "patna", "bubaneshwar" ,"guwahati")
{txt}(108 real changes made)

{com}. replace affected=1 if inlist(region, "chandigarh", "new_delhi", "kanpur", "hyderabad", "chennai")
{txt}(120 real changes made)

{com}. 
. 
. egen s_id=group(State)
{txt}
{com}. local k=1
{txt}
{com}. xtset s_id year
{res}
{col 1}{txt:Panel variable: }{res:s_id}{txt: (strongly balanced)}
{p 1 16 2}{txt:Time variable: }{res:year}{txt:, }{res:{bind:2006}}{txt: to }{res:{bind:2017}}{p_end}
{txt}{col 10}Delta: {res}1 unit
{txt}
{com}. gen lfdi = ln(fdi)
{txt}(30 missing values generated)

{com}. gen lcpi = ln(cpi)
{txt}(72 missing values generated)

{com}. 
. 
. foreach x in one two three four {c -(}
{txt}  2{com}. tab State if `x'==1
{txt}  3{com}. {c )-}

                     {txt}States {c |}      Freq.     Percent        Cum.
{hline 28}{c +}{hline 35}
                      Bihar {c |}{res}         11       33.33       33.33
{txt}                  Jharkhand {c |}{res}         11       33.33       66.67
{txt}                West Bengal {c |}{res}         11       33.33      100.00
{txt}{hline 28}{c +}{hline 35}
                      Total {c |}{res}         33      100.00

                     {txt}States {c |}      Freq.     Percent        Cum.
{hline 28}{c +}{hline 35}
                      Assam {c |}{res}          8       11.11       11.11
{txt}                      Bihar {c |}{res}          8       11.11       22.22
{txt}                  Jharkhand {c |}{res}          8       11.11       33.33
{txt}                    Manipur {c |}{res}          8       11.11       44.44
{txt}                  Meghalaya {c |}{res}          8       11.11       55.56
{txt}                   Nagaland {c |}{res}          8       11.11       66.67
{txt}                     Odisha {c |}{res}          8       11.11       77.78
{txt}                    Tripura {c |}{res}          8       11.11       88.89
{txt}                West Bengal {c |}{res}          8       11.11      100.00
{txt}{hline 28}{c +}{hline 35}
                      Total {c |}{res}         72      100.00

                     {txt}States {c |}      Freq.     Percent        Cum.
{hline 28}{c +}{hline 35}
                 Chandigarh {c |}{res}          5       14.29       14.29
{txt}                      Delhi {c |}{res}          5       14.29       28.57
{txt}                    Haryana {c |}{res}          5       14.29       42.86
{txt}           Himachal Pradesh {c |}{res}          5       14.29       57.14
{txt}                     Punjab {c |}{res}          5       14.29       71.43
{txt}              Uttar Pradesh {c |}{res}          5       14.29       85.71
{txt}                Uttarakhand {c |}{res}          5       14.29      100.00
{txt}{hline 28}{c +}{hline 35}
                      Total {c |}{res}         35      100.00

                     {txt}States {c |}      Freq.     Percent        Cum.
{hline 28}{c +}{hline 35}
             Andhra Pradesh {c |}{res}          3       33.33       33.33
{txt}                 Puducherry {c |}{res}          3       33.33       66.67
{txt}                 Tamil Nadu {c |}{res}          3       33.33      100.00
{txt}{hline 28}{c +}{hline 35}
                      Total {c |}{res}          9      100.00
{txt}
{com}. 
. distinct State

{txt}{col 8}{c |}        Observations
{col 8}{c |}      total   distinct
{hline 7}{c +}{hline 22}
 State {c |}  {res}      348         29
{txt}
{com}. tab year

       {txt}year {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
       2006 {c |}{res}         29        8.33        8.33
{txt}       2007 {c |}{res}         29        8.33       16.67
{txt}       2008 {c |}{res}         29        8.33       25.00
{txt}       2009 {c |}{res}         29        8.33       33.33
{txt}       2010 {c |}{res}         29        8.33       41.67
{txt}       2011 {c |}{res}         29        8.33       50.00
{txt}       2012 {c |}{res}         29        8.33       58.33
{txt}       2013 {c |}{res}         29        8.33       66.67
{txt}       2014 {c |}{res}         29        8.33       75.00
{txt}       2015 {c |}{res}         29        8.33       83.33
{txt}       2016 {c |}{res}         29        8.33       91.67
{txt}       2017 {c |}{res}         29        8.33      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        348      100.00
{txt}
{com}. 
. * Iniate p-value matrix:
. mat p_val_ei=J(4,6,.)
{txt}
{com}. 
. 
. * Static Effects:
. local i = 1
{txt}
{com}. foreach var of varlist lfixed_cap lworkers lwages lrents lcpi lper_prem  {c -(}
{txt}  2{com}. xtreg `var' one two three four i.year, fe
{txt}  3{com}. 
. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-}  ///
>         , reps(9999) gridpoints(10) cluster(s_id year) bootcluster(s_id year) nograph seed(123)
{txt}  4{com}. 
. eststo tb_ei_`i'
{txt}  5{com}. 
. * Collect p-values:
. mat p_val_ei[1,`i']=r(p_1)
{txt}  6{com}. mat p_val_ei[2,`i']=r(p_2)
{txt}  7{com}. mat p_val_ei[3,`i']=r(p_3)
{txt}  8{com}. mat p_val_ei[4,`i']=r(p_4)
{txt}  9{com}. 
. local i = `i'+1
{txt} 10{com}. 
. {c )-}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}       348
{txt}Group variable: {res}s_id{txt}{col 49}Number of groups{col 67}={col 69}{res}        29

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.8102{col 63}{txt}min{col 67}={col 69}{res}        12
{txt}     Between = {res}0.2480{col 63}{txt}avg{col 67}={col 69}{res}      12.0
{txt}     Overall = {res}0.0163{col 63}{txt}max{col 67}={col 69}{res}        12

{txt}{col 49}F({res}15{txt},{res}304{txt}){col 67}={col 70}{res}    86.50
{txt}corr(u_i, Xb) = {res}-0.0934{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  lfixed_cap{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-.1988551{col 26}{space 2}  .164839{col 37}{space 1}   -1.21{col 46}{space 3}0.229{col 54}{space 4}-.5232249{col 67}{space 3} .1255148
{txt}{space 9}two {c |}{col 14}{res}{space 2} .2514656{col 26}{space 2} .0657425{col 37}{space 1}    3.83{col 46}{space 3}0.000{col 54}{space 4} .1220975{col 67}{space 3} .3808336
{txt}{space 7}three {c |}{col 14}{res}{space 2}-.1867238{col 26}{space 2} .0667475{col 37}{space 1}   -2.80{col 46}{space 3}0.005{col 54}{space 4}-.3180695{col 67}{space 3}-.0553781
{txt}{space 8}four {c |}{col 14}{res}{space 2}-.2684254{col 26}{space 2} .1044695{col 37}{space 1}   -2.57{col 46}{space 3}0.011{col 54}{space 4}-.4740003{col 67}{space 3}-.0628504
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2007  {c |}{col 14}{res}{space 2} .1867253{col 26}{space 2} .0685243{col 37}{space 1}    2.72{col 46}{space 3}0.007{col 54}{space 4} .0518833{col 67}{space 3} .3215672
{txt}{space 7}2008  {c |}{col 14}{res}{space 2} .3805171{col 26}{space 2} .0685243{col 37}{space 1}    5.55{col 46}{space 3}0.000{col 54}{space 4} .2456752{col 67}{space 3} .5153591
{txt}{space 7}2009  {c |}{col 14}{res}{space 2} .7090639{col 26}{space 2} .0685243{col 37}{space 1}   10.35{col 46}{space 3}0.000{col 54}{space 4} .5742219{col 67}{space 3} .8439058
{txt}{space 7}2010  {c |}{col 14}{res}{space 2} .7708098{col 26}{space 2} .0704731{col 37}{space 1}   10.94{col 46}{space 3}0.000{col 54}{space 4} .6321329{col 67}{space 3} .9094867
{txt}{space 7}2011  {c |}{col 14}{res}{space 2} .9656901{col 26}{space 2} .0704731{col 37}{space 1}   13.70{col 46}{space 3}0.000{col 54}{space 4} .8270132{col 67}{space 3} 1.104367
{txt}{space 7}2012  {c |}{col 14}{res}{space 2} 1.060546{col 26}{space 2} .0704731{col 37}{space 1}   15.05{col 46}{space 3}0.000{col 54}{space 4} .9218686{col 67}{space 3} 1.199222
{txt}{space 7}2013  {c |}{col 14}{res}{space 2} 1.179031{col 26}{space 2} .0733571{col 37}{space 1}   16.07{col 46}{space 3}0.000{col 54}{space 4} 1.034679{col 67}{space 3} 1.323383
{txt}{space 7}2014  {c |}{col 14}{res}{space 2} 1.215697{col 26}{space 2} .0733571{col 37}{space 1}   16.57{col 46}{space 3}0.000{col 54}{space 4} 1.071345{col 67}{space 3} 1.360049
{txt}{space 7}2015  {c |}{col 14}{res}{space 2} 1.358608{col 26}{space 2} .0748824{col 37}{space 1}   18.14{col 46}{space 3}0.000{col 54}{space 4} 1.211255{col 67}{space 3} 1.505962
{txt}{space 7}2016  {c |}{col 14}{res}{space 2} 1.476276{col 26}{space 2} .0748824{col 37}{space 1}   19.71{col 46}{space 3}0.000{col 54}{space 4} 1.328922{col 67}{space 3} 1.623629
{txt}{space 7}2017  {c |}{col 14}{res}{space 2} 1.483488{col 26}{space 2} .0748824{col 37}{space 1}   19.81{col 46}{space 3}0.000{col 54}{space 4} 1.336134{col 67}{space 3} 1.630841
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 13.43752{col 26}{space 2} .0469297{col 37}{space 1}  286.33{col 46}{space 3}0.000{col 54}{space 4} 13.34517{col 67}{space 3} 13.52987
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 2.2724611
     {txt}sigma_e {c |} {res} .25272425
         {txt}rho {c |} {res} .98778306{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0: F({res}28{txt}, {res}304{txt}) = {res}744.54{col 62}{txt}Prob > F = {res}0.0000

{txt}Overriding estimator's cluster/robust settings with {res}cluster(s_id year)

Warning: 759 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(11) = {res}   -1.3734
{col 25}{txt}Prob>|t| = {res}    0.5269

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 711 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(11) = {res}    1.2303
{col 25}{txt}Prob>|t| = {res}    0.2882

95%{txt} confidence set for null hypothesis expression: [{res}-.398{txt}, {res}.906{txt}]
{res}
Warning: 235 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(11) = {res}   -2.0252
{col 25}{txt}Prob>|t| = {res}    0.0958

95%{txt} confidence set for null hypothesis expression: [{res}-.4386{txt}, {res}.05172{txt}]
{res}
Warning: 1322 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(11) = {res}   -3.0109
{col 25}{txt}Prob>|t| = {res}    0.0494

95%{txt} confidence set for null hypothesis expression: [{res}-.6319{txt}, {res}-.001988{txt}]
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}       348
{txt}Group variable: {res}s_id{txt}{col 49}Number of groups{col 67}={col 69}{res}        29

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.4075{col 63}{txt}min{col 67}={col 69}{res}        12
{txt}     Between = {res}0.3380{col 63}{txt}avg{col 67}={col 69}{res}      12.0
{txt}     Overall = {res}0.0210{col 63}{txt}max{col 67}={col 69}{res}        12

{txt}{col 49}F({res}15{txt},{res}304{txt}){col 67}={col 70}{res}    13.94
{txt}corr(u_i, Xb) = {res}-0.2344{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}    lworkers{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-.1211081{col 26}{space 2} .1195635{col 37}{space 1}   -1.01{col 46}{space 3}0.312{col 54}{space 4}-.3563849{col 67}{space 3} .1141687
{txt}{space 9}two {c |}{col 14}{res}{space 2} .2061134{col 26}{space 2} .0476854{col 37}{space 1}    4.32{col 46}{space 3}0.000{col 54}{space 4} .1122782{col 67}{space 3} .2999485
{txt}{space 7}three {c |}{col 14}{res}{space 2} .0403212{col 26}{space 2} .0484143{col 37}{space 1}    0.83{col 46}{space 3}0.406{col 54}{space 4}-.0549484{col 67}{space 3} .1355908
{txt}{space 8}four {c |}{col 14}{res}{space 2}-.2388133{col 26}{space 2} .0757754{col 37}{space 1}   -3.15{col 46}{space 3}0.002{col 54}{space 4} -.387924{col 67}{space 3}-.0897026
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2007  {c |}{col 14}{res}{space 2} .0851937{col 26}{space 2} .0497031{col 37}{space 1}    1.71{col 46}{space 3}0.088{col 54}{space 4}-.0126119{col 67}{space 3} .1829993
{txt}{space 7}2008  {c |}{col 14}{res}{space 2} .1440259{col 26}{space 2} .0497031{col 37}{space 1}    2.90{col 46}{space 3}0.004{col 54}{space 4} .0462203{col 67}{space 3} .2418315
{txt}{space 7}2009  {c |}{col 14}{res}{space 2} .2008707{col 26}{space 2} .0497031{col 37}{space 1}    4.04{col 46}{space 3}0.000{col 54}{space 4} .1030651{col 67}{space 3} .2986763
{txt}{space 7}2010  {c |}{col 14}{res}{space 2}  .224425{col 26}{space 2} .0511166{col 37}{space 1}    4.39{col 46}{space 3}0.000{col 54}{space 4} .1238377{col 67}{space 3} .3250122
{txt}{space 7}2011  {c |}{col 14}{res}{space 2} .2867963{col 26}{space 2} .0511166{col 37}{space 1}    5.61{col 46}{space 3}0.000{col 54}{space 4} .1862091{col 67}{space 3} .3873835
{txt}{space 7}2012  {c |}{col 14}{res}{space 2} .2299259{col 26}{space 2} .0511166{col 37}{space 1}    4.50{col 46}{space 3}0.000{col 54}{space 4} .1293386{col 67}{space 3} .3305131
{txt}{space 7}2013  {c |}{col 14}{res}{space 2}  .252705{col 26}{space 2} .0532085{col 37}{space 1}    4.75{col 46}{space 3}0.000{col 54}{space 4} .1480014{col 67}{space 3} .3574085
{txt}{space 7}2014  {c |}{col 14}{res}{space 2} .3098225{col 26}{space 2} .0532085{col 37}{space 1}    5.82{col 46}{space 3}0.000{col 54}{space 4} .2051189{col 67}{space 3}  .414526
{txt}{space 7}2015  {c |}{col 14}{res}{space 2} .3367309{col 26}{space 2} .0543148{col 37}{space 1}    6.20{col 46}{space 3}0.000{col 54}{space 4} .2298504{col 67}{space 3} .4436115
{txt}{space 7}2016  {c |}{col 14}{res}{space 2} .3614156{col 26}{space 2} .0543148{col 37}{space 1}    6.65{col 46}{space 3}0.000{col 54}{space 4} .2545351{col 67}{space 3} .4682962
{txt}{space 7}2017  {c |}{col 14}{res}{space 2} .3862724{col 26}{space 2} .0543148{col 37}{space 1}    7.11{col 46}{space 3}0.000{col 54}{space 4} .2793918{col 67}{space 3}  .493153
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 11.51807{col 26}{space 2} .0340398{col 37}{space 1}  338.37{col 46}{space 3}0.000{col 54}{space 4} 11.45108{col 67}{space 3} 11.58505
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 1.7154689
     {txt}sigma_e {c |} {res} .18330975
         {txt}rho {c |} {res}  .9887105{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0: F({res}28{txt}, {res}304{txt}) = {res}812.84{col 62}{txt}Prob > F = {res}0.0000

{txt}Overriding estimator's cluster/robust settings with {res}cluster(s_id year)

Warning: 174 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(11) = {res}   -2.8649
{col 25}{txt}Prob>|t| = {res}    0.2871

95%{txt} confidence set for null hypothesis expression: [{res}-.4743{txt}, {res}.5039{txt}]
{res}
Warning: 389 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(11) = {res}    2.2221
{col 25}{txt}Prob>|t| = {res}    0.0647

95%{txt} confidence set for null hypothesis expression: [{res}-.02144{txt}, {res}.4683{txt}]
{res}
Warning: 367 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(11) = {res}    0.3644
{col 25}{txt}Prob>|t| = {res}    0.7442

95%{txt} confidence set for null hypothesis expression: [{res}-.2623{txt}, {res}.3694{txt}]
{res}
Warning: 1144 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(11) = {res}   -1.4232
{col 25}{txt}Prob>|t| = {res}    0.2682

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}       348
{txt}Group variable: {res}s_id{txt}{col 49}Number of groups{col 67}={col 69}{res}        29

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.8939{col 63}{txt}min{col 67}={col 69}{res}        12
{txt}     Between = {res}0.2422{col 63}{txt}avg{col 67}={col 69}{res}      12.0
{txt}     Overall = {res}0.0357{col 63}{txt}max{col 67}={col 69}{res}        12

{txt}{col 49}F({res}15{txt},{res}304{txt}){col 67}={col 70}{res}   170.76
{txt}corr(u_i, Xb) = {res}-0.0624{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}      lwages{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-.2298739{col 26}{space 2} .1147586{col 37}{space 1}   -2.00{col 46}{space 3}0.046{col 54}{space 4}-.4556957{col 67}{space 3} -.004052
{txt}{space 9}two {c |}{col 14}{res}{space 2} .1362988{col 26}{space 2} .0457691{col 37}{space 1}    2.98{col 46}{space 3}0.003{col 54}{space 4} .0462345{col 67}{space 3}  .226363
{txt}{space 7}three {c |}{col 14}{res}{space 2} .0144156{col 26}{space 2} .0464687{col 37}{space 1}    0.31{col 46}{space 3}0.757{col 54}{space 4}-.0770255{col 67}{space 3} .1058566
{txt}{space 8}four {c |}{col 14}{res}{space 2}-.1749881{col 26}{space 2} .0727303{col 37}{space 1}   -2.41{col 46}{space 3}0.017{col 54}{space 4}-.3181066{col 67}{space 3}-.0318696
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2007  {c |}{col 14}{res}{space 2} .1918486{col 26}{space 2} .0477057{col 37}{space 1}    4.02{col 46}{space 3}0.000{col 54}{space 4} .0979735{col 67}{space 3} .2857237
{txt}{space 7}2008  {c |}{col 14}{res}{space 2} .3451465{col 26}{space 2} .0477057{col 37}{space 1}    7.23{col 46}{space 3}0.000{col 54}{space 4} .2512714{col 67}{space 3} .4390216
{txt}{space 7}2009  {c |}{col 14}{res}{space 2} .5022412{col 26}{space 2} .0477057{col 37}{space 1}   10.53{col 46}{space 3}0.000{col 54}{space 4} .4083661{col 67}{space 3} .5961164
{txt}{space 7}2010  {c |}{col 14}{res}{space 2} .7321566{col 26}{space 2} .0490624{col 37}{space 1}   14.92{col 46}{space 3}0.000{col 54}{space 4} .6356116{col 67}{space 3} .8287016
{txt}{space 7}2011  {c |}{col 14}{res}{space 2} .8705765{col 26}{space 2} .0490624{col 37}{space 1}   17.74{col 46}{space 3}0.000{col 54}{space 4} .7740315{col 67}{space 3} .9671214
{txt}{space 7}2012  {c |}{col 14}{res}{space 2} .9464242{col 26}{space 2} .0490624{col 37}{space 1}   19.29{col 46}{space 3}0.000{col 54}{space 4} .8498792{col 67}{space 3} 1.042969
{txt}{space 7}2013  {c |}{col 14}{res}{space 2} 1.086597{col 26}{space 2} .0510702{col 37}{space 1}   21.28{col 46}{space 3}0.000{col 54}{space 4} .9861009{col 67}{space 3} 1.187093
{txt}{space 7}2014  {c |}{col 14}{res}{space 2} 1.208908{col 26}{space 2} .0510702{col 37}{space 1}   23.67{col 46}{space 3}0.000{col 54}{space 4} 1.108412{col 67}{space 3} 1.309404
{txt}{space 7}2015  {c |}{col 14}{res}{space 2} 1.306323{col 26}{space 2} .0521321{col 37}{space 1}   25.06{col 46}{space 3}0.000{col 54}{space 4} 1.203737{col 67}{space 3} 1.408908
{txt}{space 7}2016  {c |}{col 14}{res}{space 2}  1.37837{col 26}{space 2} .0521321{col 37}{space 1}   26.44{col 46}{space 3}0.000{col 54}{space 4} 1.275784{col 67}{space 3} 1.480955
{txt}{space 7}2017  {c |}{col 14}{res}{space 2} 1.461796{col 26}{space 2} .0521321{col 37}{space 1}   28.04{col 46}{space 3}0.000{col 54}{space 4} 1.359211{col 67}{space 3} 1.564382
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 10.81842{col 26}{space 2} .0326718{col 37}{space 1}  331.12{col 46}{space 3}0.000{col 54}{space 4} 10.75413{col 67}{space 3} 10.88271
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 1.9183249
     {txt}sigma_e {c |} {res} .17594317
         {txt}rho {c |} {res} .99165815{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0: F({res}28{txt}, {res}304{txt}) = {res}1043.72{col 62}{txt}Prob > F = {res}0.0000

{txt}Overriding estimator's cluster/robust settings with {res}cluster(s_id year)

Warning: 461 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(11) = {res}   -3.3150
{col 25}{txt}Prob>|t| = {res}    0.2862

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 543 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(11) = {res}    1.3346
{col 25}{txt}Prob>|t| = {res}    0.2478

95%{txt} confidence set for null hypothesis expression: [{res}-.1386{txt}, {res}.4539{txt}]
{res}
Warning: 310 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(11) = {res}    0.1637
{col 25}{txt}Prob>|t| = {res}    0.8843

95%{txt} confidence set for null hypothesis expression: [{res}-.2315{txt}, {res}.265{txt}]
{res}
Warning: 1222 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(11) = {res}   -1.4854
{col 25}{txt}Prob>|t| = {res}    0.2526

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}       348
{txt}Group variable: {res}s_id{txt}{col 49}Number of groups{col 67}={col 69}{res}        29

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.4477{col 63}{txt}min{col 67}={col 69}{res}        12
{txt}     Between = {res}0.0045{col 63}{txt}avg{col 67}={col 69}{res}      12.0
{txt}     Overall = {res}0.0200{col 63}{txt}max{col 67}={col 69}{res}        12

{txt}{col 49}F({res}15{txt},{res}304{txt}){col 67}={col 70}{res}    16.43
{txt}corr(u_i, Xb) = {res}-0.0171{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}      lrents{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2} .1658738{col 26}{space 2} .2525752{col 37}{space 1}    0.66{col 46}{space 3}0.512{col 54}{space 4}-.3311432{col 67}{space 3} .6628907
{txt}{space 9}two {c |}{col 14}{res}{space 2}-.0063845{col 26}{space 2} .1007343{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.2046092{col 67}{space 3} .1918402
{txt}{space 7}three {c |}{col 14}{res}{space 2} .0137151{col 26}{space 2} .1022742{col 37}{space 1}    0.13{col 46}{space 3}0.893{col 54}{space 4}-.1875399{col 67}{space 3}   .21497
{txt}{space 8}four {c |}{col 14}{res}{space 2}-.4387666{col 26}{space 2} .1600739{col 37}{space 1}   -2.74{col 46}{space 3}0.006{col 54}{space 4}-.7537597{col 67}{space 3}-.1237735
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2007  {c |}{col 14}{res}{space 2} .1978758{col 26}{space 2} .1049966{col 37}{space 1}    1.88{col 46}{space 3}0.060{col 54}{space 4}-.0087363{col 67}{space 3}  .404488
{txt}{space 7}2008  {c |}{col 14}{res}{space 2} .4495491{col 26}{space 2} .1049966{col 37}{space 1}    4.28{col 46}{space 3}0.000{col 54}{space 4}  .242937{col 67}{space 3} .6561613
{txt}{space 7}2009  {c |}{col 14}{res}{space 2} .5754531{col 26}{space 2} .1049966{col 37}{space 1}    5.48{col 46}{space 3}0.000{col 54}{space 4}  .368841{col 67}{space 3} .7820652
{txt}{space 7}2010  {c |}{col 14}{res}{space 2}  .805852{col 26}{space 2} .1079828{col 37}{space 1}    7.46{col 46}{space 3}0.000{col 54}{space 4} .5933638{col 67}{space 3}  1.01834
{txt}{space 7}2011  {c |}{col 14}{res}{space 2} .9639475{col 26}{space 2} .1079828{col 37}{space 1}    8.93{col 46}{space 3}0.000{col 54}{space 4} .7514593{col 67}{space 3} 1.176436
{txt}{space 7}2012  {c |}{col 14}{res}{space 2} .7692978{col 26}{space 2} .1079828{col 37}{space 1}    7.12{col 46}{space 3}0.000{col 54}{space 4} .5568095{col 67}{space 3}  .981786
{txt}{space 7}2013  {c |}{col 14}{res}{space 2} .7132392{col 26}{space 2} .1124017{col 37}{space 1}    6.35{col 46}{space 3}0.000{col 54}{space 4} .4920554{col 67}{space 3}  .934423
{txt}{space 7}2014  {c |}{col 14}{res}{space 2} .9181101{col 26}{space 2} .1124017{col 37}{space 1}    8.17{col 46}{space 3}0.000{col 54}{space 4} .6969263{col 67}{space 3} 1.139294
{txt}{space 7}2015  {c |}{col 14}{res}{space 2} .9285851{col 26}{space 2} .1147388{col 37}{space 1}    8.09{col 46}{space 3}0.000{col 54}{space 4} .7028023{col 67}{space 3} 1.154368
{txt}{space 7}2016  {c |}{col 14}{res}{space 2} 1.034054{col 26}{space 2} .1147388{col 37}{space 1}    9.01{col 46}{space 3}0.000{col 54}{space 4} .8082713{col 67}{space 3} 1.259837
{txt}{space 7}2017  {c |}{col 14}{res}{space 2} 1.113711{col 26}{space 2} .1147388{col 37}{space 1}    9.71{col 46}{space 3}0.000{col 54}{space 4} .8879283{col 67}{space 3} 1.339494
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 8.825075{col 26}{space 2} .0719082{col 37}{space 1}  122.73{col 46}{space 3}0.000{col 54}{space 4} 8.683574{col 67}{space 3} 8.966576
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 2.0793354
     {txt}sigma_e {c |} {res} .38723776
         {txt}rho {c |} {res} .96648036{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0: F({res}28{txt}, {res}304{txt}) = {res}239.35{col 62}{txt}Prob > F = {res}0.0000

{txt}Overriding estimator's cluster/robust settings with {res}cluster(s_id year)

Warning: 979 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(11) = {res}    1.4805
{col 25}{txt}Prob>|t| = {res}    0.5164

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 173 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(11) = {res}   -0.0353
{col 25}{txt}Prob>|t| = {res}    0.9763

95%{txt} confidence set for null hypothesis expression: [{res}-.4905{txt}, {res}.4726{txt}]
{res}
Warning: 153 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(11) = {res}    0.0924
{col 25}{txt}Prob>|t| = {res}    0.9340

95%{txt} confidence set for null hypothesis expression: [{res}-.3715{txt}, {res}.408{txt}]
{res}
Warning: 1671 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(11) = {res}   -1.7359
{col 25}{txt}Prob>|t| = {res}    0.2011

95%{txt} confidence set for null hypothesis expression: [{res}-2.892{txt}, {res}1.882{txt}]
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}       276
{txt}Group variable: {res}s_id{txt}{col 49}Number of groups{col 67}={col 69}{res}        23

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.9929{col 63}{txt}min{col 67}={col 69}{res}        12
{txt}     Between = {res}0.2003{col 63}{txt}avg{col 67}={col 69}{res}      12.0
{txt}     Overall = {res}0.9666{col 63}{txt}max{col 67}={col 69}{res}        12

{txt}{col 49}F({res}15{txt},{res}238{txt}){col 67}={col 70}{res}  2227.77
{txt}corr(u_i, Xb) = {res}0.0098{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        lcpi{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2} .0304795{col 26}{space 2}  .017175{col 37}{space 1}    1.77{col 46}{space 3}0.077{col 54}{space 4}-.0033548{col 67}{space 3} .0643139
{txt}{space 9}two {c |}{col 14}{res}{space 2}-.0173849{col 26}{space 2} .0079514{col 37}{space 1}   -2.19{col 46}{space 3}0.030{col 54}{space 4}-.0330491{col 67}{space 3}-.0017208
{txt}{space 7}three {c |}{col 14}{res}{space 2}-.0481124{col 26}{space 2}   .00738{col 37}{space 1}   -6.52{col 46}{space 3}0.000{col 54}{space 4}-.0626509{col 67}{space 3}-.0335739
{txt}{space 8}four {c |}{col 14}{res}{space 2} .0081452{col 26}{space 2} .0107566{col 37}{space 1}    0.76{col 46}{space 3}0.450{col 54}{space 4}-.0130451{col 67}{space 3} .0293355
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2007  {c |}{col 14}{res}{space 2}  .059258{col 26}{space 2} .0078496{col 37}{space 1}    7.55{col 46}{space 3}0.000{col 54}{space 4} .0437944{col 67}{space 3} .0747216
{txt}{space 7}2008  {c |}{col 14}{res}{space 2} .1406893{col 26}{space 2} .0078496{col 37}{space 1}   17.92{col 46}{space 3}0.000{col 54}{space 4} .1252257{col 67}{space 3}  .156153
{txt}{space 7}2009  {c |}{col 14}{res}{space 2} .2436259{col 26}{space 2} .0078496{col 37}{space 1}   31.04{col 46}{space 3}0.000{col 54}{space 4} .2281623{col 67}{space 3} .2590895
{txt}{space 7}2010  {c |}{col 14}{res}{space 2} .3590557{col 26}{space 2}  .007963{col 37}{space 1}   45.09{col 46}{space 3}0.000{col 54}{space 4} .3433686{col 67}{space 3} .3747427
{txt}{space 7}2011  {c |}{col 14}{res}{space 2} .4437702{col 26}{space 2}  .007963{col 37}{space 1}   55.73{col 46}{space 3}0.000{col 54}{space 4} .4280832{col 67}{space 3} .4594573
{txt}{space 7}2012  {c |}{col 14}{res}{space 2} .5334674{col 26}{space 2}  .007963{col 37}{space 1}   66.99{col 46}{space 3}0.000{col 54}{space 4} .5177804{col 67}{space 3} .5491545
{txt}{space 7}2013  {c |}{col 14}{res}{space 2} .6456062{col 26}{space 2} .0082995{col 37}{space 1}   77.79{col 46}{space 3}0.000{col 54}{space 4} .6292563{col 67}{space 3} .6619561
{txt}{space 7}2014  {c |}{col 14}{res}{space 2}  .705971{col 26}{space 2} .0082995{col 37}{space 1}   85.06{col 46}{space 3}0.000{col 54}{space 4} .6896212{col 67}{space 3} .7223209
{txt}{space 7}2015  {c |}{col 14}{res}{space 2} .7577278{col 26}{space 2} .0085188{col 37}{space 1}   88.95{col 46}{space 3}0.000{col 54}{space 4} .7409458{col 67}{space 3} .7745097
{txt}{space 7}2016  {c |}{col 14}{res}{space 2} .8105702{col 26}{space 2} .0085188{col 37}{space 1}   95.15{col 46}{space 3}0.000{col 54}{space 4} .7937882{col 67}{space 3} .8273521
{txt}{space 7}2017  {c |}{col 14}{res}{space 2} .8390342{col 26}{space 2} .0085188{col 37}{space 1}   98.49{col 46}{space 3}0.000{col 54}{space 4} .8222523{col 67}{space 3} .8558162
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 4.807131{col 26}{space 2} .0053197{col 37}{space 1}  903.65{col 46}{space 3}0.000{col 54}{space 4} 4.796651{col 67}{space 3} 4.817611
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .04769356
     {txt}sigma_e {c |} {res} .02551232
         {txt}rho {c |} {res} .77751962{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0: F({res}22{txt}, {res}238{txt}) = {res}37.25{col 62}{txt}Prob > F = {res}0.0000

{txt}Overriding estimator's cluster/robust settings with {res}cluster(s_id year)

Warning: 1116 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(11) = {res}    2.7224
{col 25}{txt}Prob>|t| = {res}    0.2845

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 646 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(11) = {res}   -0.8330
{col 25}{txt}Prob>|t| = {res}    0.4628

95%{txt} confidence set for null hypothesis expression: [{res}-.1141{txt}, {res}.04729{txt}]
{res}
Warning: 222 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(11) = {res}   -3.7481
{col 25}{txt}Prob>|t| = {res}    0.0144

95%{txt} confidence set for null hypothesis expression: [{res}-.07846{txt}, {res}-.02055{txt}]
{res}
Warning: 1103 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(11) = {res}    0.5316
{col 25}{txt}Prob>|t| = {res}    0.6583

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}       348
{txt}Group variable: {res}s_id{txt}{col 49}Number of groups{col 67}={col 69}{res}        29

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.4350{col 63}{txt}min{col 67}={col 69}{res}        12
{txt}     Between = {res}0.0480{col 63}{txt}avg{col 67}={col 69}{res}      12.0
{txt}     Overall = {res}0.2015{col 63}{txt}max{col 67}={col 69}{res}        12

{txt}{col 49}F({res}15{txt},{res}304{txt}){col 67}={col 70}{res}    15.61
{txt}corr(u_i, Xb) = {res}-0.1056{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}   lper_prem{col 14}{c |} Coefficient{col 26}  Std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-.0470541{col 26}{space 2} .2082556{col 37}{space 1}   -0.23{col 46}{space 3}0.821{col 54}{space 4}-.4568591{col 67}{space 3}  .362751
{txt}{space 9}two {c |}{col 14}{res}{space 2} .2569972{col 26}{space 2} .0830584{col 37}{space 1}    3.09{col 46}{space 3}0.002{col 54}{space 4} .0935551{col 67}{space 3} .4204393
{txt}{space 7}three {c |}{col 14}{res}{space 2} .0088772{col 26}{space 2} .0843281{col 37}{space 1}    0.11{col 46}{space 3}0.916{col 54}{space 4}-.1570634{col 67}{space 3} .1748178
{txt}{space 8}four {c |}{col 14}{res}{space 2} .1868334{col 26}{space 2} .1319856{col 37}{space 1}    1.42{col 46}{space 3}0.158{col 54}{space 4}-.0728876{col 67}{space 3} .4465544
{txt}{space 12} {c |}
{space 8}year {c |}
{space 7}2007  {c |}{col 14}{res}{space 2} .1782924{col 26}{space 2} .0865728{col 37}{space 1}    2.06{col 46}{space 3}0.040{col 54}{space 4} .0079347{col 67}{space 3} .3486502
{txt}{space 7}2008  {c |}{col 14}{res}{space 2} .1975939{col 26}{space 2} .0865728{col 37}{space 1}    2.28{col 46}{space 3}0.023{col 54}{space 4} .0272362{col 67}{space 3} .3679517
{txt}{space 7}2009  {c |}{col 14}{res}{space 2} .2797514{col 26}{space 2} .0865728{col 37}{space 1}    3.23{col 46}{space 3}0.001{col 54}{space 4} .1093936{col 67}{space 3} .4501092
{txt}{space 7}2010  {c |}{col 14}{res}{space 2} .2205196{col 26}{space 2} .0890349{col 37}{space 1}    2.48{col 46}{space 3}0.014{col 54}{space 4} .0453168{col 67}{space 3} .3957224
{txt}{space 7}2011  {c |}{col 14}{res}{space 2}-.0363763{col 26}{space 2} .0890349{col 37}{space 1}   -0.41{col 46}{space 3}0.683{col 54}{space 4}-.2115791{col 67}{space 3} .1388265
{txt}{space 7}2012  {c |}{col 14}{res}{space 2}-.0997047{col 26}{space 2} .0890349{col 37}{space 1}   -1.12{col 46}{space 3}0.264{col 54}{space 4}-.2749075{col 67}{space 3} .0754981
{txt}{space 7}2013  {c |}{col 14}{res}{space 2} .0109045{col 26}{space 2} .0926785{col 37}{space 1}    0.12{col 46}{space 3}0.906{col 54}{space 4}-.1714681{col 67}{space 3} .1932771
{txt}{space 7}2014  {c |}{col 14}{res}{space 2}  .324106{col 26}{space 2} .0926785{col 37}{space 1}    3.50{col 46}{space 3}0.001{col 54}{space 4} .1417335{col 67}{space 3} .5064786
{txt}{space 7}2015  {c |}{col 14}{res}{space 2} .3398002{col 26}{space 2} .0946055{col 37}{space 1}    3.59{col 46}{space 3}0.000{col 54}{space 4} .1536357{col 67}{space 3} .5259648
{txt}{space 7}2016  {c |}{col 14}{res}{space 2} .5958707{col 26}{space 2} .0946055{col 37}{space 1}    6.30{col 46}{space 3}0.000{col 54}{space 4} .4097061{col 67}{space 3} .7820353
{txt}{space 7}2017  {c |}{col 14}{res}{space 2} .7201931{col 26}{space 2} .0946055{col 37}{space 1}    7.61{col 46}{space 3}0.000{col 54}{space 4} .5340286{col 67}{space 3} .9063577
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-6.548321{col 26}{space 2} .0592905{col 37}{space 1} -110.44{col 46}{space 3}0.000{col 54}{space 4}-6.664993{col 67}{space 3}-6.431649
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .36465804
     {txt}sigma_e {c |} {res} .31928889
         {txt}rho {c |} {res} .56604372{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0: F({res}28{txt}, {res}304{txt}) = {res}12.93{col 62}{txt}Prob > F = {res}0.0000

{txt}Overriding estimator's cluster/robust settings with {res}cluster(s_id year)

Warning: 427 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(11) = {res}   -0.5857
{col 25}{txt}Prob>|t| = {res}    0.7391

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 806 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(11) = {res}    1.9515
{col 25}{txt}Prob>|t| = {res}    0.0826

95%{txt} confidence set for null hypothesis expression: [{res}-.05546{txt}, {res}.5807{txt}]
{res}
Warning: 270 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(11) = {res}    0.0792
{col 25}{txt}Prob>|t| = {res}    0.9466

95%{txt} confidence set for null hypothesis expression: [{res}-.2545{txt}, {res}.2809{txt}]
{res}
Warning: 727 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}s_id year{txt}, bootstrap clustering by {res}s_id year{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(11) = {res}    1.8872
{col 25}{txt}Prob>|t| = {res}    0.1499

95%{txt} confidence set for null hypothesis expression: [{res}-.2511{txt}, {res}.7131{txt}]
{res}{txt}
{com}. 
. 
. mat list p_val_ei
{res}
{txt}p_val_ei[4,6]
           c1         c2         c3         c4         c5         c6
r1 {res} .52694805  .28712468  .28622353  .51640798  .28447597  .73913498
{txt}r2 {res} .28822136  .06472425  .24777919   .9762874  .46284615  .08256282
{txt}r3 {res} .09575993  .74418605  .88430179  .93398334   .0144216  .94655155
{txt}r4 {res} .04944105  .26821005    .252592  .20112872  .65827338  .14991372
{reset}
{com}. outtable using _3results/tables/table3_pval_ei, mat(p_val_ei) replace format(%9.3f) norow nodots
{txt}
{com}. 
. esttab _all using _3results/tables/table3.tex, order(one two three four) keep(one two three four)  ///
>         nostar b(3) p(3) coeflabel(one "Disaster 1" two "Disaster 2" three "Disaster 3" four "Disaster 4") replace r2   
{res}{txt}(output written to {browse  `"_3results/tables/table3.tex"'})

{com}. 
. 
.         
. 
{txt}end of do-file

{com}. 
. 
. 
. do _2code/_2analysis/table4
{txt}
{com}. 
. ********************************************************************************
. * Table 4: Spillover Patterns
. 
. ********************************************************************************
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
. ** Set the control variables:
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. ** Identify spillovers:
. * Note: * indicate additional spillover weights that don't produce meaningful results
. 
. * five events:
. global x "one two three four five"
{txt}
{com}. 
. * Risk
. foreach v of varlist one_damages_cum_past20-five_damages_cum_past20 {c -(}
{txt}  2{com}. replace `v'=ln(`v'+1)
{txt}  3{com}. {c )-}
{txt}(2,086 real changes made)
(1,404 real changes made)
(711 real changes made)
(400 real changes made)
(119 real changes made)

{com}. global spil1 "one_damages_cum_past20 two_damages_cum_past20 three_damages_cum_past20 four_damages_cum_past20 five_damages_cum_past20"
{txt}
{com}. 
. global spil2 "one_number_major2_past20 two_number_major2_past20 three_number_major2_past20 four_number_major2_past20 five_number_major2_past20"
{txt}
{com}. 
. * Development characteristics:
. global spil3 "one_density two_density three_density four_density five_density"
{txt}
{com}. global spil4 "one_urban two_urban three_urban four_urban five_urban"
{txt}
{com}. global spil5 "one_elec_s two_elec_s three_elec_s four_elec_s five_elec_s"
{txt}
{com}. 
. 
. * Infrastructure characteristics:
. global spil6 "one_port two_port three_port four_port five_port"
{txt}
{com}. 
. 
. * Labor skill and composition characteristics:
. global spil7 "one_grad_s two_grad_s three_grad_s four_grad_s five_grad_s"
{txt}
{com}. 
. global spil8 "one_manu_s two_manu_s  three_manu_s  four_manu_s  five_manu_s "
{txt}
{com}. 
. 
. * Economic similarity
. global spil9 "one_sim two_sim three_sim four_sim five_sim"
{txt}
{com}. 
. * Geography Spillovers: 
. global spil10 "one_cont two_cont three_cont four_cont five_cont"
{txt}
{com}. 
. 
. 
. * Define empty p-value matrix:
. mat p_val4=J(10,10,.)
{txt}
{com}. 
. *** Regression with all five events by spillover characteristic:
. estimates clear
{res}{txt}
{com}. local j=1
{txt}
{com}. foreach y in "$spil1" "$spil2" "$spil3" "$spil4" "$spil5" "$spil6" "$spil7" "$spil8" "$spil9" "$spil10" {c -(}
{txt}  2{com}. reg fdi_ihs $x `y' $control i.date i.region1, cluster(region1)
{txt}  3{com}. 
. 
. if "`y'"=="$spil1" {c -(}
{txt}  4{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_damages_cum_past20{c )-} {c -(}two_damages_cum_past20{c )-} {c -(}three_damages_cum_past20{c )-} {c -(}four_damages_cum_past20{c )-} {c -(}five_damages_cum_past20{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt}  5{com}. {c )-}
{txt}  6{com}. 
. if "`y'"=="$spil2" {c -(}
{txt}  7{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_number_major2_past20{c )-} {c -(}two_number_major2_past20{c )-} {c -(}three_number_major2_past20{c )-} {c -(}four_number_major2_past20{c )-} {c -(}five_number_major2_past20{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt}  8{com}. {c )-}
{txt}  9{com}. 
. 
. if "`y'"=="$spil3" {c -(}
{txt} 10{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_density{c )-} {c -(}two_density{c )-} {c -(}three_density{c )-} {c -(}four_density{c )-} {c -(}five_density{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 11{com}. {c )-}
{txt} 12{com}. 
. 
. if "`y'"=="$spil4" {c -(}
{txt} 13{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_urban{c )-} {c -(}two_urban{c )-} {c -(}three_urban{c )-} {c -(}four_urban{c )-} {c -(}five_urban{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 14{com}. {c )-}
{txt} 15{com}. 
. if "`y'"=="$spil5" {c -(}
{txt} 16{com}. boottest  {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_elec_s{c )-} {c -(}two_elec_s{c )-} {c -(}three_elec_s{c )-} {c -(}four_elec_s{c )-} {c -(}five_elec_s{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 17{com}. {c )-}
{txt} 18{com}. 
. 
. if "`y'"=="$spil6" {c -(}
{txt} 19{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_port{c )-} {c -(}two_port{c )-} {c -(}three_port{c )-} {c -(}four_port{c )-} {c -(}five_port{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 20{com}. {c )-}
{txt} 21{com}. 
. if "`y'"=="$spil7" {c -(}
{txt} 22{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_grad_s{c )-} {c -(}two_grad_s{c )-} {c -(}three_grad_s{c )-} {c -(}four_grad_s{c )-} {c -(}five_grad_s{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 23{com}. {c )-}
{txt} 24{com}. 
. 
. 
. if "`y'"=="$spil8" {c -(}
{txt} 25{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_manu_s{c )-} {c -(}two_manu_s{c )-} {c -(}three_manu_s{c )-} {c -(}four_manu_s{c )-} {c -(}five_manu_s{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 26{com}. {c )-}
{txt} 27{com}. 
. if "`y'"=="$spil9" {c -(}
{txt} 28{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_sim{c )-} {c -(}two_sim{c )-} {c -(}three_sim{c )-} {c -(}four_sim{c )-} {c -(}five_sim{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 29{com}. {c )-}
{txt} 30{com}. 
. 
. if "`y'"=="$spil10" {c -(}
{txt} 31{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} ///
>         {c -(}one_cont{c )-} {c -(}two_cont{c )-} {c -(}three_cont{c )-} {c -(}four_cont{c )-} {c -(}five_cont{c )-} ///
>         , reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 32{com}. {c )-}
{txt} 33{com}. 
. 
. 
. 
. * Collect p-values:
. 
. 
. forvalues i=1/10 {c -(}
{txt} 34{com}. mat p_val4[`i',`j']=r(p_`i')
{txt} 35{com}. mat p_val4[`i',`j'] = round(p_val4[`i',`j'], 0.001)
{txt} 36{com}. 
. {c )-}
{txt} 37{com}. 
. 
. eststo spil`j'
{txt} 38{com}. local j=`j'+1
{txt} 39{com}. 
. {c )-}

{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8117
                                                {txt}Root MSE          =    {res} 1.0761

{txt}{ralign 90:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 25}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 26}{c |}{col 38}    Robust
{col 1}                 fdi_ihs{col 26}{c |} Coefficient{col 38}  std. err.{col 50}      t{col 58}   P>|t|{col 66}     [95% con{col 79}f. interval]
{hline 25}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 21}one {c |}{col 26}{res}{space 2}-3.569913{col 38}{space 2} .6793264{col 49}{space 1}   -5.26{col 58}{space 3}0.000{col 66}{space 4}-5.017863{col 79}{space 3}-2.121963
{txt}{space 21}two {c |}{col 26}{res}{space 2}-3.189664{col 38}{space 2}  1.37037{col 49}{space 1}   -2.33{col 58}{space 3}0.034{col 66}{space 4}-6.110539{col 79}{space 3}-.2687882
{txt}{space 19}three {c |}{col 26}{res}{space 2} -3.27264{col 38}{space 2} .8026513{col 49}{space 1}   -4.08{col 58}{space 3}0.001{col 66}{space 4} -4.98345{col 79}{space 3}-1.561829
{txt}{space 20}four {c |}{col 26}{res}{space 2}-2.095834{col 38}{space 2} .3519271{col 49}{space 1}   -5.96{col 58}{space 3}0.000{col 66}{space 4}-2.845949{col 79}{space 3}-1.345719
{txt}{space 20}five {c |}{col 26}{res}{space 2} -1.63732{col 38}{space 2} .3467495{col 49}{space 1}   -4.72{col 58}{space 3}0.000{col 66}{space 4}-2.376399{col 79}{space 3}-.8982405
{txt}{space 2}one_damages_cum_past20 {c |}{col 26}{res}{space 2}-.0711766{col 38}{space 2}  .030903{col 49}{space 1}   -2.30{col 58}{space 3}0.036{col 66}{space 4}-.1370447{col 79}{space 3}-.0053085
{txt}{space 2}two_damages_cum_past20 {c |}{col 26}{res}{space 2}-.0474907{col 38}{space 2} .0849449{col 49}{space 1}   -0.56{col 58}{space 3}0.584{col 66}{space 4}-.2285465{col 79}{space 3} .1335652
{txt}three_damages_cum_past20 {c |}{col 26}{res}{space 2}-.0088638{col 38}{space 2} .0412372{col 49}{space 1}   -0.21{col 58}{space 3}0.833{col 66}{space 4}-.0967587{col 79}{space 3} .0790311
{txt}{space 1}four_damages_cum_past20 {c |}{col 26}{res}{space 2} .0140392{col 38}{space 2} .0210931{col 49}{space 1}    0.67{col 58}{space 3}0.516{col 66}{space 4}-.0309197{col 79}{space 3} .0589981
{txt}{space 1}five_damages_cum_past20 {c |}{col 26}{res}{space 2}-.0067519{col 38}{space 2} .0146447{col 49}{space 1}   -0.46{col 58}{space 3}0.651{col 66}{space 4}-.0379663{col 79}{space 3} .0244624
{txt}{space 16}lag_lgdp {c |}{col 26}{res}{space 2} 1.407701{col 38}{space 2} 1.324204{col 49}{space 1}    1.06{col 58}{space 3}0.305{col 66}{space 4}-1.414774{col 79}{space 3} 4.230176
{txt}{space 16}lag_lpop {c |}{col 26}{res}{space 2}-.1145069{col 38}{space 2} .3347764{col 49}{space 1}   -0.34{col 58}{space 3}0.737{col 66}{space 4} -.828066{col 79}{space 3} .5990522
{txt}{space 24} {c |}
{space 20}date {c |}
{space 20}553  {c |}{col 26}{res}{space 2}-.0531386{col 38}{space 2} .2726175{col 49}{space 1}   -0.19{col 58}{space 3}0.848{col 66}{space 4} -.634209{col 79}{space 3} .5279318
{txt}{space 20}554  {c |}{col 26}{res}{space 2}-.4915856{col 38}{space 2} .2838562{col 49}{space 1}   -1.73{col 58}{space 3}0.104{col 66}{space 4}-1.096611{col 79}{space 3} .1134396
{txt}{space 20}555  {c |}{col 26}{res}{space 2}-.2011631{col 38}{space 2} .3045491{col 49}{space 1}   -0.66{col 58}{space 3}0.519{col 66}{space 4}-.8502942{col 79}{space 3}  .447968
{txt}{space 20}556  {c |}{col 26}{res}{space 2}-.2330706{col 38}{space 2} .2900432{col 49}{space 1}   -0.80{col 58}{space 3}0.434{col 66}{space 4} -.851283{col 79}{space 3} .3851418
{txt}{space 20}557  {c |}{col 26}{res}{space 2} .0419503{col 38}{space 2} .2876443{col 49}{space 1}    0.15{col 58}{space 3}0.886{col 66}{space 4} -.571149{col 79}{space 3} .6550495
{txt}{space 20}558  {c |}{col 26}{res}{space 2} .3595212{col 38}{space 2} .3473569{col 49}{space 1}    1.04{col 58}{space 3}0.317{col 66}{space 4}-.3808525{col 79}{space 3} 1.099895
{txt}{space 20}559  {c |}{col 26}{res}{space 2} .1886232{col 38}{space 2} .3875732{col 49}{space 1}    0.49{col 58}{space 3}0.634{col 66}{space 4}-.6374695{col 79}{space 3} 1.014716
{txt}{space 20}560  {c |}{col 26}{res}{space 2} .0725879{col 38}{space 2} .3760577{col 49}{space 1}    0.19{col 58}{space 3}0.850{col 66}{space 4}-.7289601{col 79}{space 3}  .874136
{txt}{space 20}561  {c |}{col 26}{res}{space 2} -.172525{col 38}{space 2} .2883515{col 49}{space 1}   -0.60{col 58}{space 3}0.559{col 66}{space 4}-.7871317{col 79}{space 3} .4420816
{txt}{space 20}562  {c |}{col 26}{res}{space 2}-.0148782{col 38}{space 2}  .320841{col 49}{space 1}   -0.05{col 58}{space 3}0.964{col 66}{space 4}-.6987346{col 79}{space 3} .6689783
{txt}{space 20}563  {c |}{col 26}{res}{space 2}-.0206692{col 38}{space 2} .3228138{col 49}{space 1}   -0.06{col 58}{space 3}0.950{col 66}{space 4}-.7087306{col 79}{space 3} .6673921
{txt}{space 20}564  {c |}{col 26}{res}{space 2} -.628228{col 38}{space 2} .4163717{col 49}{space 1}   -1.51{col 58}{space 3}0.152{col 66}{space 4}-1.515703{col 79}{space 3} .2592473
{txt}{space 20}565  {c |}{col 26}{res}{space 2}-.2120445{col 38}{space 2} .5491374{col 49}{space 1}   -0.39{col 58}{space 3}0.705{col 66}{space 4}-1.382503{col 79}{space 3} .9584142
{txt}{space 20}566  {c |}{col 26}{res}{space 2}-.1934593{col 38}{space 2} .3705261{col 49}{space 1}   -0.52{col 58}{space 3}0.609{col 66}{space 4}-.9832169{col 79}{space 3} .5962984
{txt}{space 20}567  {c |}{col 26}{res}{space 2}-.4162724{col 38}{space 2} .4380167{col 49}{space 1}   -0.95{col 58}{space 3}0.357{col 66}{space 4}-1.349883{col 79}{space 3} .5173381
{txt}{space 20}568  {c |}{col 26}{res}{space 2}-.3092496{col 38}{space 2} .4685499{col 49}{space 1}   -0.66{col 58}{space 3}0.519{col 66}{space 4} -1.30794{col 79}{space 3} .6894407
{txt}{space 20}569  {c |}{col 26}{res}{space 2} -.479922{col 38}{space 2} .4081538{col 49}{space 1}   -1.18{col 58}{space 3}0.258{col 66}{space 4}-1.349881{col 79}{space 3} .3900372
{txt}{space 20}570  {c |}{col 26}{res}{space 2}  .247033{col 38}{space 2} .5041718{col 49}{space 1}    0.49{col 58}{space 3}0.631{col 66}{space 4}-.8275839{col 79}{space 3}  1.32165
{txt}{space 20}571  {c |}{col 26}{res}{space 2} .2946485{col 38}{space 2} .6397024{col 49}{space 1}    0.46{col 58}{space 3}0.652{col 66}{space 4}-1.068845{col 79}{space 3} 1.658142
{txt}{space 20}572  {c |}{col 26}{res}{space 2} .0988847{col 38}{space 2} .5496197{col 49}{space 1}    0.18{col 58}{space 3}0.860{col 66}{space 4}-1.072602{col 79}{space 3} 1.270371
{txt}{space 20}573  {c |}{col 26}{res}{space 2} .4556912{col 38}{space 2} .6180796{col 49}{space 1}    0.74{col 58}{space 3}0.472{col 66}{space 4}-.8617143{col 79}{space 3} 1.773097
{txt}{space 20}574  {c |}{col 26}{res}{space 2} .6023309{col 38}{space 2} .5778237{col 49}{space 1}    1.04{col 58}{space 3}0.314{col 66}{space 4}-.6292712{col 79}{space 3} 1.833933
{txt}{space 20}575  {c |}{col 26}{res}{space 2} .8744974{col 38}{space 2} .7351309{col 49}{space 1}    1.19{col 58}{space 3}0.253{col 66}{space 4}-.6923969{col 79}{space 3} 2.441392
{txt}{space 20}576  {c |}{col 26}{res}{space 2} .2236758{col 38}{space 2} .6990099{col 49}{space 1}    0.32{col 58}{space 3}0.753{col 66}{space 4}-1.266229{col 79}{space 3}  1.71358
{txt}{space 20}577  {c |}{col 26}{res}{space 2}  .771835{col 38}{space 2}  .873806{col 49}{space 1}    0.88{col 58}{space 3}0.391{col 66}{space 4}-1.090638{col 79}{space 3} 2.634308
{txt}{space 20}578  {c |}{col 26}{res}{space 2} .4826414{col 38}{space 2} .7648412{col 49}{space 1}    0.63{col 58}{space 3}0.538{col 66}{space 4}-1.147579{col 79}{space 3} 2.112862
{txt}{space 20}579  {c |}{col 26}{res}{space 2} .6357055{col 38}{space 2} .7488685{col 49}{space 1}    0.85{col 58}{space 3}0.409{col 66}{space 4}-.9604699{col 79}{space 3} 2.231881
{txt}{space 20}580  {c |}{col 26}{res}{space 2} 1.099142{col 38}{space 2} .7169351{col 49}{space 1}    1.53{col 58}{space 3}0.146{col 66}{space 4}-.4289692{col 79}{space 3} 2.627253
{txt}{space 20}581  {c |}{col 26}{res}{space 2} .9448517{col 38}{space 2} .7455536{col 49}{space 1}    1.27{col 58}{space 3}0.224{col 66}{space 4}-.6442581{col 79}{space 3} 2.533961
{txt}{space 20}582  {c |}{col 26}{res}{space 2} .9680709{col 38}{space 2} .7651244{col 49}{space 1}    1.27{col 58}{space 3}0.225{col 66}{space 4}-.6627532{col 79}{space 3} 2.598895
{txt}{space 20}583  {c |}{col 26}{res}{space 2} .8307638{col 38}{space 2} .8490952{col 49}{space 1}    0.98{col 58}{space 3}0.343{col 66}{space 4}-.9790398{col 79}{space 3} 2.640567
{txt}{space 20}584  {c |}{col 26}{res}{space 2} .9969465{col 38}{space 2} .7269766{col 49}{space 1}    1.37{col 58}{space 3}0.190{col 66}{space 4}-.5525674{col 79}{space 3}  2.54646
{txt}{space 20}585  {c |}{col 26}{res}{space 2}  .922596{col 38}{space 2}  .681502{col 49}{space 1}    1.35{col 58}{space 3}0.196{col 66}{space 4}-.5299911{col 79}{space 3} 2.375183
{txt}{space 20}586  {c |}{col 26}{res}{space 2} .8212144{col 38}{space 2} .7397852{col 49}{space 1}    1.11{col 58}{space 3}0.284{col 66}{space 4}-.7556004{col 79}{space 3} 2.398029
{txt}{space 20}587  {c |}{col 26}{res}{space 2} .6016538{col 38}{space 2} .7757083{col 49}{space 1}    0.78{col 58}{space 3}0.450{col 66}{space 4}-1.051729{col 79}{space 3} 2.255037
{txt}{space 20}588  {c |}{col 26}{res}{space 2} .7282525{col 38}{space 2} .8967602{col 49}{space 1}    0.81{col 58}{space 3}0.429{col 66}{space 4}-1.183147{col 79}{space 3} 2.639652
{txt}{space 20}589  {c |}{col 26}{res}{space 2}  .926375{col 38}{space 2} .8563294{col 49}{space 1}    1.08{col 58}{space 3}0.296{col 66}{space 4}-.8988478{col 79}{space 3} 2.751598
{txt}{space 20}590  {c |}{col 26}{res}{space 2} .8548536{col 38}{space 2} .9289619{col 49}{space 1}    0.92{col 58}{space 3}0.372{col 66}{space 4}-1.125182{col 79}{space 3} 2.834889
{txt}{space 20}591  {c |}{col 26}{res}{space 2}  .269884{col 38}{space 2} .8459389{col 49}{space 1}    0.32{col 58}{space 3}0.754{col 66}{space 4}-1.533192{col 79}{space 3}  2.07296
{txt}{space 20}592  {c |}{col 26}{res}{space 2} .8517676{col 38}{space 2} .8451747{col 49}{space 1}    1.01{col 58}{space 3}0.330{col 66}{space 4}-.9496795{col 79}{space 3} 2.653215
{txt}{space 20}593  {c |}{col 26}{res}{space 2} 1.152757{col 38}{space 2} .9119624{col 49}{space 1}    1.26{col 58}{space 3}0.226{col 66}{space 4}-.7910447{col 79}{space 3} 3.096559
{txt}{space 20}594  {c |}{col 26}{res}{space 2} 1.162953{col 38}{space 2} .9655412{col 49}{space 1}    1.20{col 58}{space 3}0.247{col 66}{space 4}-.8950498{col 79}{space 3} 3.220955
{txt}{space 20}595  {c |}{col 26}{res}{space 2}  1.15794{col 38}{space 2} .9722425{col 49}{space 1}    1.19{col 58}{space 3}0.252{col 66}{space 4}-.9143464{col 79}{space 3} 3.230225
{txt}{space 20}596  {c |}{col 26}{res}{space 2} .8621302{col 38}{space 2} .8314467{col 49}{space 1}    1.04{col 58}{space 3}0.316{col 66}{space 4}-.9100565{col 79}{space 3} 2.634317
{txt}{space 20}597  {c |}{col 26}{res}{space 2} .8630558{col 38}{space 2} .9125285{col 49}{space 1}    0.95{col 58}{space 3}0.359{col 66}{space 4}-1.081953{col 79}{space 3} 2.808064
{txt}{space 20}598  {c |}{col 26}{res}{space 2} .9762744{col 38}{space 2} .8049913{col 49}{space 1}    1.21{col 58}{space 3}0.244{col 66}{space 4} -.739524{col 79}{space 3} 2.692073
{txt}{space 20}599  {c |}{col 26}{res}{space 2} .7705619{col 38}{space 2} .9233434{col 49}{space 1}    0.83{col 58}{space 3}0.417{col 66}{space 4}-1.197498{col 79}{space 3} 2.738622
{txt}{space 20}600  {c |}{col 26}{res}{space 2} .8211237{col 38}{space 2} 1.072432{col 49}{space 1}    0.77{col 58}{space 3}0.456{col 66}{space 4}-1.464711{col 79}{space 3} 3.106958
{txt}{space 20}601  {c |}{col 26}{res}{space 2} .5780932{col 38}{space 2} 1.025926{col 49}{space 1}    0.56{col 58}{space 3}0.581{col 66}{space 4}-1.608616{col 79}{space 3} 2.764802
{txt}{space 20}602  {c |}{col 26}{res}{space 2} 1.015046{col 38}{space 2} 1.102166{col 49}{space 1}    0.92{col 58}{space 3}0.372{col 66}{space 4}-1.334165{col 79}{space 3} 3.364256
{txt}{space 20}603  {c |}{col 26}{res}{space 2} 1.170627{col 38}{space 2} 1.734991{col 49}{space 1}    0.67{col 58}{space 3}0.510{col 66}{space 4}-2.527419{col 79}{space 3} 4.868672
{txt}{space 20}604  {c |}{col 26}{res}{space 2} 1.446886{col 38}{space 2} 1.687704{col 49}{space 1}    0.86{col 58}{space 3}0.405{col 66}{space 4} -2.15037{col 79}{space 3} 5.044141
{txt}{space 20}605  {c |}{col 26}{res}{space 2} 1.834583{col 38}{space 2} 1.706082{col 49}{space 1}    1.08{col 58}{space 3}0.299{col 66}{space 4}-1.801845{col 79}{space 3}  5.47101
{txt}{space 20}606  {c |}{col 26}{res}{space 2} 1.437882{col 38}{space 2} 1.759192{col 49}{space 1}    0.82{col 58}{space 3}0.427{col 66}{space 4}-2.311747{col 79}{space 3} 5.187511
{txt}{space 20}607  {c |}{col 26}{res}{space 2} 1.755169{col 38}{space 2}  1.65751{col 49}{space 1}    1.06{col 58}{space 3}0.306{col 66}{space 4} -1.77773{col 79}{space 3} 5.288068
{txt}{space 20}608  {c |}{col 26}{res}{space 2} 1.576879{col 38}{space 2} 1.723915{col 49}{space 1}    0.91{col 58}{space 3}0.375{col 66}{space 4}-2.097558{col 79}{space 3} 5.251316
{txt}{space 20}609  {c |}{col 26}{res}{space 2} 1.544859{col 38}{space 2} 1.843215{col 49}{space 1}    0.84{col 58}{space 3}0.415{col 66}{space 4}-2.383862{col 79}{space 3}  5.47358
{txt}{space 20}610  {c |}{col 26}{res}{space 2} 1.904804{col 38}{space 2} 1.739347{col 49}{space 1}    1.10{col 58}{space 3}0.291{col 66}{space 4}-1.802527{col 79}{space 3} 5.612135
{txt}{space 20}611  {c |}{col 26}{res}{space 2} 2.158553{col 38}{space 2} 1.626866{col 49}{space 1}    1.33{col 58}{space 3}0.204{col 66}{space 4} -1.30903{col 79}{space 3} 5.626135
{txt}{space 20}612  {c |}{col 26}{res}{space 2} 1.527559{col 38}{space 2} 1.979143{col 49}{space 1}    0.77{col 58}{space 3}0.452{col 66}{space 4}-2.690883{col 79}{space 3} 5.746002
{txt}{space 20}613  {c |}{col 26}{res}{space 2} 1.585906{col 38}{space 2} 1.941861{col 49}{space 1}    0.82{col 58}{space 3}0.427{col 66}{space 4}-2.553073{col 79}{space 3} 5.724886
{txt}{space 20}614  {c |}{col 26}{res}{space 2} 1.503662{col 38}{space 2} 1.833486{col 49}{space 1}    0.82{col 58}{space 3}0.425{col 66}{space 4}-2.404322{col 79}{space 3} 5.411645
{txt}{space 20}615  {c |}{col 26}{res}{space 2} 1.677815{col 38}{space 2} 1.717772{col 49}{space 1}    0.98{col 58}{space 3}0.344{col 66}{space 4}-1.983529{col 79}{space 3} 5.339159
{txt}{space 20}616  {c |}{col 26}{res}{space 2} 1.571692{col 38}{space 2} 1.822029{col 49}{space 1}    0.86{col 58}{space 3}0.402{col 66}{space 4}-2.311871{col 79}{space 3} 5.455254
{txt}{space 20}617  {c |}{col 26}{res}{space 2} 1.101201{col 38}{space 2}   1.9043{col 49}{space 1}    0.58{col 58}{space 3}0.572{col 66}{space 4}-2.957718{col 79}{space 3}  5.16012
{txt}{space 20}618  {c |}{col 26}{res}{space 2} 1.461547{col 38}{space 2} 1.762595{col 49}{space 1}    0.83{col 58}{space 3}0.420{col 66}{space 4}-2.295336{col 79}{space 3}  5.21843
{txt}{space 20}619  {c |}{col 26}{res}{space 2} 1.934854{col 38}{space 2} 1.833538{col 49}{space 1}    1.06{col 58}{space 3}0.308{col 66}{space 4}-1.973239{col 79}{space 3} 5.842947
{txt}{space 20}620  {c |}{col 26}{res}{space 2} 1.706996{col 38}{space 2} 1.842732{col 49}{space 1}    0.93{col 58}{space 3}0.369{col 66}{space 4}-2.220694{col 79}{space 3} 5.634686
{txt}{space 20}621  {c |}{col 26}{res}{space 2} 1.811846{col 38}{space 2} 1.878528{col 49}{space 1}    0.96{col 58}{space 3}0.350{col 66}{space 4}-2.192142{col 79}{space 3} 5.815833
{txt}{space 20}622  {c |}{col 26}{res}{space 2} 1.619572{col 38}{space 2} 1.833774{col 49}{space 1}    0.88{col 58}{space 3}0.391{col 66}{space 4}-2.289024{col 79}{space 3} 5.528168
{txt}{space 20}623  {c |}{col 26}{res}{space 2} 1.616854{col 38}{space 2} 1.693083{col 49}{space 1}    0.95{col 58}{space 3}0.355{col 66}{space 4}-1.991867{col 79}{space 3} 5.225575
{txt}{space 20}624  {c |}{col 26}{res}{space 2} 1.361592{col 38}{space 2} 1.971974{col 49}{space 1}    0.69{col 58}{space 3}0.500{col 66}{space 4} -2.84157{col 79}{space 3} 5.564754
{txt}{space 20}625  {c |}{col 26}{res}{space 2}  1.36372{col 38}{space 2} 1.969342{col 49}{space 1}    0.69{col 58}{space 3}0.499{col 66}{space 4}-2.833832{col 79}{space 3} 5.561272
{txt}{space 20}626  {c |}{col 26}{res}{space 2} 1.655339{col 38}{space 2} 1.899571{col 49}{space 1}    0.87{col 58}{space 3}0.397{col 66}{space 4}-2.393502{col 79}{space 3} 5.704179
{txt}{space 20}627  {c |}{col 26}{res}{space 2} 1.247708{col 38}{space 2} 1.938532{col 49}{space 1}    0.64{col 58}{space 3}0.530{col 66}{space 4}-2.884175{col 79}{space 3} 5.379591
{txt}{space 20}628  {c |}{col 26}{res}{space 2} .7926446{col 38}{space 2} 2.112902{col 49}{space 1}    0.38{col 58}{space 3}0.713{col 66}{space 4}-3.710899{col 79}{space 3} 5.296189
{txt}{space 20}629  {c |}{col 26}{res}{space 2} 1.177741{col 38}{space 2} 1.974403{col 49}{space 1}    0.60{col 58}{space 3}0.560{col 66}{space 4}  -3.0306{col 79}{space 3} 5.386081
{txt}{space 20}630  {c |}{col 26}{res}{space 2} 1.636421{col 38}{space 2} 1.942555{col 49}{space 1}    0.84{col 58}{space 3}0.413{col 66}{space 4}-2.504038{col 79}{space 3} 5.776879
{txt}{space 20}631  {c |}{col 26}{res}{space 2} .8223889{col 38}{space 2} 2.147567{col 49}{space 1}    0.38{col 58}{space 3}0.707{col 66}{space 4}-3.755042{col 79}{space 3}  5.39982
{txt}{space 20}632  {c |}{col 26}{res}{space 2} 1.333434{col 38}{space 2} 2.057669{col 49}{space 1}    0.65{col 58}{space 3}0.527{col 66}{space 4}-3.052384{col 79}{space 3} 5.719253
{txt}{space 20}633  {c |}{col 26}{res}{space 2}  1.79491{col 38}{space 2} 1.923926{col 49}{space 1}    0.93{col 58}{space 3}0.366{col 66}{space 4}-2.305841{col 79}{space 3} 5.895661
{txt}{space 20}634  {c |}{col 26}{res}{space 2} 1.306001{col 38}{space 2} 1.965176{col 49}{space 1}    0.66{col 58}{space 3}0.516{col 66}{space 4}-2.882671{col 79}{space 3} 5.494674
{txt}{space 20}635  {c |}{col 26}{res}{space 2} 1.573322{col 38}{space 2}  1.95201{col 49}{space 1}    0.81{col 58}{space 3}0.433{col 66}{space 4}-2.587289{col 79}{space 3} 5.733933
{txt}{space 20}636  {c |}{col 26}{res}{space 2} 1.266184{col 38}{space 2} 2.161937{col 49}{space 1}    0.59{col 58}{space 3}0.567{col 66}{space 4}-3.341875{col 79}{space 3} 5.874243
{txt}{space 20}637  {c |}{col 26}{res}{space 2} .8675229{col 38}{space 2} 2.073932{col 49}{space 1}    0.42{col 58}{space 3}0.682{col 66}{space 4} -3.55296{col 79}{space 3} 5.288005
{txt}{space 20}638  {c |}{col 26}{res}{space 2} 1.829221{col 38}{space 2} 2.083171{col 49}{space 1}    0.88{col 58}{space 3}0.394{col 66}{space 4}-2.610954{col 79}{space 3} 6.269396
{txt}{space 20}639  {c |}{col 26}{res}{space 2}  1.46809{col 38}{space 2} 2.176425{col 49}{space 1}    0.67{col 58}{space 3}0.510{col 66}{space 4}-3.170849{col 79}{space 3}  6.10703
{txt}{space 20}640  {c |}{col 26}{res}{space 2} 1.638826{col 38}{space 2} 2.033076{col 49}{space 1}    0.81{col 58}{space 3}0.433{col 66}{space 4}-2.694574{col 79}{space 3} 5.972226
{txt}{space 20}641  {c |}{col 26}{res}{space 2} 1.679891{col 38}{space 2} 2.061743{col 49}{space 1}    0.81{col 58}{space 3}0.428{col 66}{space 4}-2.714611{col 79}{space 3} 6.074393
{txt}{space 20}642  {c |}{col 26}{res}{space 2} 1.594926{col 38}{space 2} 2.006141{col 49}{space 1}    0.80{col 58}{space 3}0.439{col 66}{space 4}-2.681062{col 79}{space 3} 5.870913
{txt}{space 20}643  {c |}{col 26}{res}{space 2}  1.73386{col 38}{space 2} 2.132903{col 49}{space 1}    0.81{col 58}{space 3}0.429{col 66}{space 4}-2.812316{col 79}{space 3} 6.280035
{txt}{space 20}644  {c |}{col 26}{res}{space 2} 1.426978{col 38}{space 2} 2.119465{col 49}{space 1}    0.67{col 58}{space 3}0.511{col 66}{space 4}-3.090556{col 79}{space 3} 5.944511
{txt}{space 20}645  {c |}{col 26}{res}{space 2} 2.245373{col 38}{space 2} 2.074081{col 49}{space 1}    1.08{col 58}{space 3}0.296{col 66}{space 4}-2.175426{col 79}{space 3} 6.666173
{txt}{space 20}646  {c |}{col 26}{res}{space 2} 1.881006{col 38}{space 2} 2.071361{col 49}{space 1}    0.91{col 58}{space 3}0.378{col 66}{space 4}-2.533995{col 79}{space 3} 6.296006
{txt}{space 20}647  {c |}{col 26}{res}{space 2} 2.020294{col 38}{space 2} 2.055349{col 49}{space 1}    0.98{col 58}{space 3}0.341{col 66}{space 4}-2.360579{col 79}{space 3} 6.401167
{txt}{space 20}648  {c |}{col 26}{res}{space 2} 2.261537{col 38}{space 2} 2.250284{col 49}{space 1}    1.01{col 58}{space 3}0.331{col 66}{space 4} -2.53483{col 79}{space 3} 7.057904
{txt}{space 20}649  {c |}{col 26}{res}{space 2}  2.50642{col 38}{space 2} 2.199891{col 49}{space 1}    1.14{col 58}{space 3}0.272{col 66}{space 4}-2.182538{col 79}{space 3} 7.195378
{txt}{space 20}650  {c |}{col 26}{res}{space 2} 1.930823{col 38}{space 2} 2.222093{col 49}{space 1}    0.87{col 58}{space 3}0.399{col 66}{space 4}-2.805456{col 79}{space 3} 6.667101
{txt}{space 20}651  {c |}{col 26}{res}{space 2} 1.784016{col 38}{space 2} 2.197995{col 49}{space 1}    0.81{col 58}{space 3}0.430{col 66}{space 4}  -2.9009{col 79}{space 3} 6.468931
{txt}{space 20}652  {c |}{col 26}{res}{space 2} 1.943401{col 38}{space 2} 2.099015{col 49}{space 1}    0.93{col 58}{space 3}0.369{col 66}{space 4}-2.530544{col 79}{space 3} 6.417347
{txt}{space 20}653  {c |}{col 26}{res}{space 2} 2.682472{col 38}{space 2} 2.197485{col 49}{space 1}    1.22{col 58}{space 3}0.241{col 66}{space 4}-2.001356{col 79}{space 3}   7.3663
{txt}{space 20}654  {c |}{col 26}{res}{space 2} 2.285395{col 38}{space 2} 2.227816{col 49}{space 1}    1.03{col 58}{space 3}0.321{col 66}{space 4}-2.463081{col 79}{space 3} 7.033872
{txt}{space 20}655  {c |}{col 26}{res}{space 2} 2.290321{col 38}{space 2} 2.195032{col 49}{space 1}    1.04{col 58}{space 3}0.313{col 66}{space 4} -2.38828{col 79}{space 3} 6.968922
{txt}{space 20}656  {c |}{col 26}{res}{space 2} 2.130442{col 38}{space 2} 2.178337{col 49}{space 1}    0.98{col 58}{space 3}0.344{col 66}{space 4}-2.512573{col 79}{space 3} 6.773458
{txt}{space 20}657  {c |}{col 26}{res}{space 2} 1.941751{col 38}{space 2} 2.235918{col 49}{space 1}    0.87{col 58}{space 3}0.399{col 66}{space 4}-2.823996{col 79}{space 3} 6.707498
{txt}{space 20}658  {c |}{col 26}{res}{space 2} 1.619741{col 38}{space 2} 2.513746{col 49}{space 1}    0.64{col 58}{space 3}0.529{col 66}{space 4}-3.738183{col 79}{space 3} 6.977664
{txt}{space 20}659  {c |}{col 26}{res}{space 2} 2.161959{col 38}{space 2} 2.122598{col 49}{space 1}    1.02{col 58}{space 3}0.325{col 66}{space 4}-2.362252{col 79}{space 3}  6.68617
{txt}{space 20}660  {c |}{col 26}{res}{space 2} 1.714872{col 38}{space 2} 2.398238{col 49}{space 1}    0.72{col 58}{space 3}0.486{col 66}{space 4} -3.39685{col 79}{space 3} 6.826595
{txt}{space 20}661  {c |}{col 26}{res}{space 2} 1.750399{col 38}{space 2} 2.149093{col 49}{space 1}    0.81{col 58}{space 3}0.428{col 66}{space 4}-2.830285{col 79}{space 3} 6.331082
{txt}{space 20}662  {c |}{col 26}{res}{space 2} 2.279838{col 38}{space 2}  2.29735{col 49}{space 1}    0.99{col 58}{space 3}0.337{col 66}{space 4}-2.616846{col 79}{space 3} 7.176523
{txt}{space 20}663  {c |}{col 26}{res}{space 2} 1.738517{col 38}{space 2}  2.22501{col 49}{space 1}    0.78{col 58}{space 3}0.447{col 66}{space 4}-3.003981{col 79}{space 3} 6.481014
{txt}{space 20}664  {c |}{col 26}{res}{space 2} 1.961398{col 38}{space 2} 2.265686{col 49}{space 1}    0.87{col 58}{space 3}0.400{col 66}{space 4}-2.867798{col 79}{space 3} 6.790595
{txt}{space 20}665  {c |}{col 26}{res}{space 2} 2.335717{col 38}{space 2} 2.309954{col 49}{space 1}    1.01{col 58}{space 3}0.328{col 66}{space 4}-2.587834{col 79}{space 3} 7.259269
{txt}{space 20}666  {c |}{col 26}{res}{space 2} 2.291693{col 38}{space 2} 2.258508{col 49}{space 1}    1.01{col 58}{space 3}0.326{col 66}{space 4}-2.522203{col 79}{space 3} 7.105589
{txt}{space 20}667  {c |}{col 26}{res}{space 2} 2.130301{col 38}{space 2} 2.247798{col 49}{space 1}    0.95{col 58}{space 3}0.358{col 66}{space 4}-2.660767{col 79}{space 3} 6.921369
{txt}{space 20}668  {c |}{col 26}{res}{space 2} 1.992051{col 38}{space 2} 2.302361{col 49}{space 1}    0.87{col 58}{space 3}0.401{col 66}{space 4}-2.915315{col 79}{space 3} 6.899417
{txt}{space 20}669  {c |}{col 26}{res}{space 2}  2.10754{col 38}{space 2} 2.247385{col 49}{space 1}    0.94{col 58}{space 3}0.363{col 66}{space 4}-2.682649{col 79}{space 3} 6.897729
{txt}{space 20}670  {c |}{col 26}{res}{space 2} 1.746518{col 38}{space 2} 2.219785{col 49}{space 1}    0.79{col 58}{space 3}0.444{col 66}{space 4}-2.984842{col 79}{space 3} 6.477879
{txt}{space 20}671  {c |}{col 26}{res}{space 2} 2.037805{col 38}{space 2} 2.222772{col 49}{space 1}    0.92{col 58}{space 3}0.374{col 66}{space 4}-2.699923{col 79}{space 3} 6.775532
{txt}{space 20}672  {c |}{col 26}{res}{space 2} 1.900583{col 38}{space 2} 2.314445{col 49}{space 1}    0.82{col 58}{space 3}0.424{col 66}{space 4}-3.032539{col 79}{space 3} 6.833705
{txt}{space 20}673  {c |}{col 26}{res}{space 2} 2.032438{col 38}{space 2} 2.319709{col 49}{space 1}    0.88{col 58}{space 3}0.395{col 66}{space 4}-2.911905{col 79}{space 3} 6.976781
{txt}{space 20}674  {c |}{col 26}{res}{space 2} 2.197653{col 38}{space 2} 2.342777{col 49}{space 1}    0.94{col 58}{space 3}0.363{col 66}{space 4}-2.795859{col 79}{space 3} 7.191164
{txt}{space 20}675  {c |}{col 26}{res}{space 2} 2.559409{col 38}{space 2} 2.334143{col 49}{space 1}    1.10{col 58}{space 3}0.290{col 66}{space 4}-2.415698{col 79}{space 3} 7.534517
{txt}{space 20}676  {c |}{col 26}{res}{space 2} 2.619585{col 38}{space 2} 2.340163{col 49}{space 1}    1.12{col 58}{space 3}0.281{col 66}{space 4}-2.368354{col 79}{space 3} 7.607524
{txt}{space 20}677  {c |}{col 26}{res}{space 2} 2.304781{col 38}{space 2} 2.358541{col 49}{space 1}    0.98{col 58}{space 3}0.344{col 66}{space 4}-2.722329{col 79}{space 3} 7.331891
{txt}{space 20}678  {c |}{col 26}{res}{space 2} 2.530926{col 38}{space 2}   2.3966{col 49}{space 1}    1.06{col 58}{space 3}0.308{col 66}{space 4}-2.577305{col 79}{space 3} 7.639158
{txt}{space 20}679  {c |}{col 26}{res}{space 2} 2.628129{col 38}{space 2} 2.382773{col 49}{space 1}    1.10{col 58}{space 3}0.287{col 66}{space 4}-2.450631{col 79}{space 3} 7.706889
{txt}{space 20}680  {c |}{col 26}{res}{space 2}  2.67926{col 38}{space 2} 2.356357{col 49}{space 1}    1.14{col 58}{space 3}0.273{col 66}{space 4}-2.343198{col 79}{space 3} 7.701717
{txt}{space 20}681  {c |}{col 26}{res}{space 2} 2.690882{col 38}{space 2} 2.366129{col 49}{space 1}    1.14{col 58}{space 3}0.273{col 66}{space 4}-2.352402{col 79}{space 3} 7.734166
{txt}{space 20}682  {c |}{col 26}{res}{space 2} 2.351032{col 38}{space 2} 2.363616{col 49}{space 1}    0.99{col 58}{space 3}0.336{col 66}{space 4}-2.686896{col 79}{space 3}  7.38896
{txt}{space 20}683  {c |}{col 26}{res}{space 2} 2.193066{col 38}{space 2} 2.373066{col 49}{space 1}    0.92{col 58}{space 3}0.370{col 66}{space 4}-2.865006{col 79}{space 3} 7.251137
{txt}{space 20}684  {c |}{col 26}{res}{space 2} 2.317018{col 38}{space 2} 2.488208{col 49}{space 1}    0.93{col 58}{space 3}0.366{col 66}{space 4}-2.986471{col 79}{space 3} 7.620508
{txt}{space 20}685  {c |}{col 26}{res}{space 2} 2.136768{col 38}{space 2} 2.503768{col 49}{space 1}    0.85{col 58}{space 3}0.407{col 66}{space 4}-3.199887{col 79}{space 3} 7.473423
{txt}{space 20}686  {c |}{col 26}{res}{space 2} 2.130442{col 38}{space 2}  2.50083{col 49}{space 1}    0.85{col 58}{space 3}0.408{col 66}{space 4}-3.199951{col 79}{space 3} 7.460835
{txt}{space 20}687  {c |}{col 26}{res}{space 2} 2.467988{col 38}{space 2} 2.481054{col 49}{space 1}    0.99{col 58}{space 3}0.336{col 66}{space 4}-2.820253{col 79}{space 3}  7.75623
{txt}{space 20}688  {c |}{col 26}{res}{space 2} 2.174103{col 38}{space 2}  2.52395{col 49}{space 1}    0.86{col 58}{space 3}0.403{col 66}{space 4}-3.205568{col 79}{space 3} 7.553774
{txt}{space 20}689  {c |}{col 26}{res}{space 2} 2.153184{col 38}{space 2} 2.488487{col 49}{space 1}    0.87{col 58}{space 3}0.401{col 66}{space 4}  -3.1509{col 79}{space 3} 7.457267
{txt}{space 20}690  {c |}{col 26}{res}{space 2} 1.869885{col 38}{space 2} 2.504217{col 49}{space 1}    0.75{col 58}{space 3}0.467{col 66}{space 4}-3.467728{col 79}{space 3} 7.207498
{txt}{space 20}691  {c |}{col 26}{res}{space 2} 2.015767{col 38}{space 2} 2.488709{col 49}{space 1}    0.81{col 58}{space 3}0.431{col 66}{space 4}-3.288789{col 79}{space 3} 7.320324
{txt}{space 20}692  {c |}{col 26}{res}{space 2}  2.19457{col 38}{space 2} 2.532586{col 49}{space 1}    0.87{col 58}{space 3}0.400{col 66}{space 4} -3.20351{col 79}{space 3} 7.592651
{txt}{space 20}693  {c |}{col 26}{res}{space 2} 2.102379{col 38}{space 2} 2.469253{col 49}{space 1}    0.85{col 58}{space 3}0.408{col 66}{space 4} -3.16071{col 79}{space 3} 7.365468
{txt}{space 20}694  {c |}{col 26}{res}{space 2} 2.187406{col 38}{space 2} 2.529065{col 49}{space 1}    0.86{col 58}{space 3}0.401{col 66}{space 4} -3.20317{col 79}{space 3} 7.577981
{txt}{space 20}695  {c |}{col 26}{res}{space 2} 1.977069{col 38}{space 2} 2.494466{col 49}{space 1}    0.79{col 58}{space 3}0.440{col 66}{space 4}-3.339759{col 79}{space 3} 7.293897
{txt}{space 20}696  {c |}{col 26}{res}{space 2} 2.136206{col 38}{space 2} 2.583772{col 49}{space 1}    0.83{col 58}{space 3}0.421{col 66}{space 4}-3.370974{col 79}{space 3} 7.643386
{txt}{space 20}697  {c |}{col 26}{res}{space 2}  2.09598{col 38}{space 2} 2.584659{col 49}{space 1}    0.81{col 58}{space 3}0.430{col 66}{space 4}-3.413091{col 79}{space 3} 7.605051
{txt}{space 20}698  {c |}{col 26}{res}{space 2} 2.154071{col 38}{space 2} 2.620613{col 49}{space 1}    0.82{col 58}{space 3}0.424{col 66}{space 4}-3.431633{col 79}{space 3} 7.739775
{txt}{space 20}699  {c |}{col 26}{res}{space 2} 1.947115{col 38}{space 2} 2.588043{col 49}{space 1}    0.75{col 58}{space 3}0.463{col 66}{space 4}-3.569167{col 79}{space 3} 7.463397
{txt}{space 20}700  {c |}{col 26}{res}{space 2} 2.223208{col 38}{space 2} 2.620876{col 49}{space 1}    0.85{col 58}{space 3}0.410{col 66}{space 4}-3.363057{col 79}{space 3} 7.809474
{txt}{space 20}701  {c |}{col 26}{res}{space 2}  1.85873{col 38}{space 2} 2.605865{col 49}{space 1}    0.71{col 58}{space 3}0.487{col 66}{space 4} -3.69554{col 79}{space 3} 7.413001
{txt}{space 20}702  {c |}{col 26}{res}{space 2} 1.653769{col 38}{space 2}  2.62372{col 49}{space 1}    0.63{col 58}{space 3}0.538{col 66}{space 4}-3.938558{col 79}{space 3} 7.246096
{txt}{space 20}703  {c |}{col 26}{res}{space 2} 2.199993{col 38}{space 2} 2.646272{col 49}{space 1}    0.83{col 58}{space 3}0.419{col 66}{space 4}-3.440402{col 79}{space 3} 7.840387
{txt}{space 20}704  {c |}{col 26}{res}{space 2} 2.444689{col 38}{space 2} 2.521998{col 49}{space 1}    0.97{col 58}{space 3}0.348{col 66}{space 4}-2.930823{col 79}{space 3} 7.820201
{txt}{space 20}705  {c |}{col 26}{res}{space 2} 2.507755{col 38}{space 2} 2.584302{col 49}{space 1}    0.97{col 58}{space 3}0.347{col 66}{space 4}-3.000554{col 79}{space 3} 8.016063
{txt}{space 20}706  {c |}{col 26}{res}{space 2} 2.422529{col 38}{space 2} 2.553334{col 49}{space 1}    0.95{col 58}{space 3}0.358{col 66}{space 4}-3.019772{col 79}{space 3} 7.864831
{txt}{space 20}707  {c |}{col 26}{res}{space 2} 2.298322{col 38}{space 2} 2.618221{col 49}{space 1}    0.88{col 58}{space 3}0.394{col 66}{space 4}-3.282284{col 79}{space 3} 7.878927
{txt}{space 20}708  {c |}{col 26}{res}{space 2} 2.706047{col 38}{space 2} 2.787414{col 49}{space 1}    0.97{col 58}{space 3}0.347{col 66}{space 4}-3.235186{col 79}{space 3} 8.647279
{txt}{space 20}709  {c |}{col 26}{res}{space 2} 2.116942{col 38}{space 2} 2.749098{col 49}{space 1}    0.77{col 58}{space 3}0.453{col 66}{space 4}-3.742621{col 79}{space 3} 7.976504
{txt}{space 20}710  {c |}{col 26}{res}{space 2} 2.430143{col 38}{space 2} 2.746641{col 49}{space 1}    0.88{col 58}{space 3}0.390{col 66}{space 4}-3.424183{col 79}{space 3} 8.284469
{txt}{space 20}711  {c |}{col 26}{res}{space 2} 2.751626{col 38}{space 2} 2.736737{col 49}{space 1}    1.01{col 58}{space 3}0.331{col 66}{space 4} -3.08159{col 79}{space 3} 8.584843
{txt}{space 20}712  {c |}{col 26}{res}{space 2} 2.338528{col 38}{space 2} 2.730067{col 49}{space 1}    0.86{col 58}{space 3}0.405{col 66}{space 4}-3.480473{col 79}{space 3} 8.157529
{txt}{space 20}713  {c |}{col 26}{res}{space 2} 2.799756{col 38}{space 2} 2.791823{col 49}{space 1}    1.00{col 58}{space 3}0.332{col 66}{space 4}-3.150874{col 79}{space 3} 8.750387
{txt}{space 20}714  {c |}{col 26}{res}{space 2} 2.455752{col 38}{space 2} 2.729914{col 49}{space 1}    0.90{col 58}{space 3}0.383{col 66}{space 4}-3.362921{col 79}{space 3} 8.274426
{txt}{space 20}715  {c |}{col 26}{res}{space 2} 2.470625{col 38}{space 2} 2.730886{col 49}{space 1}    0.90{col 58}{space 3}0.380{col 66}{space 4}-3.350121{col 79}{space 3} 8.291371
{txt}{space 20}716  {c |}{col 26}{res}{space 2} 2.373121{col 38}{space 2} 2.778241{col 49}{space 1}    0.85{col 58}{space 3}0.406{col 66}{space 4}-3.548558{col 79}{space 3} 8.294801
{txt}{space 20}717  {c |}{col 26}{res}{space 2}  2.21993{col 38}{space 2} 2.787195{col 49}{space 1}    0.80{col 58}{space 3}0.438{col 66}{space 4}-3.720836{col 79}{space 3} 8.160696
{txt}{space 20}718  {c |}{col 26}{res}{space 2} 2.596841{col 38}{space 2}  2.73249{col 49}{space 1}    0.95{col 58}{space 3}0.357{col 66}{space 4}-3.227323{col 79}{space 3} 8.421005
{txt}{space 20}719  {c |}{col 26}{res}{space 2} 2.455835{col 38}{space 2} 2.764605{col 49}{space 1}    0.89{col 58}{space 3}0.388{col 66}{space 4}-3.436782{col 79}{space 3} 8.348452
{txt}{space 24} {c |}
{space 17}region1 {c |}
{space 14}bangalore  {c |}{col 26}{res}{space 2} 1.302817{col 38}{space 2} .2555239{col 49}{space 1}    5.10{col 58}{space 3}0.000{col 66}{space 4} .7581805{col 79}{space 3} 1.847453
{txt}{space 17}bhopal  {c |}{col 26}{res}{space 2} -2.02694{col 38}{space 2} .9624771{col 49}{space 1}   -2.11{col 58}{space 3}0.052{col 66}{space 4}-4.078411{col 79}{space 3} .0245314
{txt}{space 12}bubaneshwar  {c |}{col 26}{res}{space 2}-1.225247{col 38}{space 2} 1.494214{col 49}{space 1}   -0.82{col 58}{space 3}0.425{col 66}{space 4}-4.410088{col 79}{space 3} 1.959594
{txt}{space 13}chandigarh  {c |}{col 26}{res}{space 2}-.9272867{col 38}{space 2} .3753635{col 49}{space 1}   -2.47{col 58}{space 3}0.026{col 66}{space 4}-1.727355{col 79}{space 3}-.1272183
{txt}{space 16}chennai  {c |}{col 26}{res}{space 2} .9855933{col 38}{space 2} .1686015{col 49}{space 1}    5.85{col 58}{space 3}0.000{col 66}{space 4} .6262277{col 79}{space 3} 1.344959
{txt}{space 15}guwahati  {c |}{col 26}{res}{space 2}-.0239719{col 38}{space 2} 1.569901{col 49}{space 1}   -0.02{col 58}{space 3}0.988{col 66}{space 4}-3.370136{col 79}{space 3} 3.322193
{txt}{space 14}hyderabad  {c |}{col 26}{res}{space 2} .9842659{col 38}{space 2} .6992988{col 49}{space 1}    1.41{col 58}{space 3}0.180{col 66}{space 4}-.5062541{col 79}{space 3} 2.474786
{txt}{space 17}jaipur  {c |}{col 26}{res}{space 2}-2.632751{col 38}{space 2}  .693529{col 49}{space 1}   -3.80{col 58}{space 3}0.002{col 66}{space 4}-4.110973{col 79}{space 3}-1.154529
{txt}{space 17}kanpur  {c |}{col 26}{res}{space 2}-2.462526{col 38}{space 2} .7731942{col 49}{space 1}   -3.18{col 58}{space 3}0.006{col 66}{space 4} -4.11055{col 79}{space 3}-.8145011
{txt}{space 18}kochi  {c |}{col 26}{res}{space 2}-1.604217{col 38}{space 2} .8868449{col 49}{space 1}   -1.81{col 58}{space 3}0.091{col 66}{space 4}-3.494482{col 79}{space 3} .2860479
{txt}{space 16}kolkata  {c |}{col 26}{res}{space 2}  1.82122{col 38}{space 2} .5482327{col 49}{space 1}    3.32{col 58}{space 3}0.005{col 66}{space 4} .6526901{col 79}{space 3} 2.989751
{txt}{space 17}mumbai  {c |}{col 26}{res}{space 2} .3229803{col 38}{space 2} .9167366{col 49}{space 1}    0.35{col 58}{space 3}0.730{col 66}{space 4}-1.630998{col 79}{space 3} 2.276958
{txt}{space 14}new_delhi  {c |}{col 26}{res}{space 2} 2.244021{col 38}{space 2} 1.113497{col 49}{space 1}    2.02{col 58}{space 3}0.062{col 66}{space 4}-.1293416{col 79}{space 3} 4.617383
{txt}{space 17}panaji  {c |}{col 26}{res}{space 2}  .320181{col 38}{space 2} 4.127342{col 49}{space 1}    0.08{col 58}{space 3}0.939{col 66}{space 4} -8.47704{col 79}{space 3} 9.117402
{txt}{space 18}patna  {c |}{col 26}{res}{space 2} .5428288{col 38}{space 2}  1.41237{col 49}{space 1}    0.38{col 58}{space 3}0.706{col 66}{space 4}-2.467567{col 79}{space 3} 3.553225
{txt}{space 24} {c |}
{space 19}_cons {c |}{col 26}{res}{space 2}-12.31981{col 38}{space 2} 17.36031{col 49}{space 1}   -0.71{col 58}{space 3}0.489{col 66}{space 4}-49.32243{col 79}{space 3} 24.68281
{txt}{hline 25}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 80 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -5.4315
{col 25}{txt}Prob>|t| = {res}    0.0040

95%{txt} confidence set for null hypothesis expression: [{res}-5.058{txt}, {res}-2.013{txt}]
{res}
Warning: 24 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -2.3488
{col 25}{txt}Prob>|t| = {res}    0.0605

95%{txt} confidence set for null hypothesis expression: [{res}-6.447{txt}, {res}.2446{txt}]
{res}
Warning: 22 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -4.0848
{col 25}{txt}Prob>|t| = {res}    0.0058

95%{txt} confidence set for null hypothesis expression: [{res}-5.068{txt}, {res}-1.562{txt}]
{res}
Warning: 15 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -6.0130
{col 25}{txt}Prob>|t| = {res}    0.0023

95%{txt} confidence set for null hypothesis expression: [{res}-2.841{txt}, {res}-1.343{txt}]
{res}
Warning: 54 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -4.5883
{col 25}{txt}Prob>|t| = {res}    0.0673

95%{txt} confidence set for null hypothesis expression: [{res}-3.735{txt}, {res}.483{txt}]
{res}
Warning: 65 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_damages_cum_past20

{txt}{col 28}t(15) = {res}   -2.9607
{col 25}{txt}Prob>|t| = {res}    0.0257

95%{txt} confidence set for null hypothesis expression: [{res}-.128{txt}, {res}-.01272{txt}]
{res}
Warning: 28 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_damages_cum_past20

{txt}{col 28}t(15) = {res}   -0.5647
{col 25}{txt}Prob>|t| = {res}    0.6108

95%{txt} confidence set for null hypothesis expression: [{res}-.2658{txt}, {res}.1777{txt}]
{res}
Warning: 18 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_damages_cum_past20

{txt}{col 28}t(15) = {res}   -0.2164
{col 25}{txt}Prob>|t| = {res}    0.8399

95%{txt} confidence set for null hypothesis expression: [{res}-.1092{txt}, {res}.08893{txt}]
{res}
Warning: 9 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_damages_cum_past20

{txt}{col 28}t(15) = {res}    0.6699
{col 25}{txt}Prob>|t| = {res}    0.5216

95%{txt} confidence set for null hypothesis expression: [{res}-.03248{txt}, {res}.06117{txt}]
{res}
Warning: 27 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_damages_cum_past20

{txt}{col 28}t(15) = {res}   -0.4806
{col 25}{txt}Prob>|t| = {res}    0.6404

95%{txt} confidence set for null hypothesis expression: [{res}-.03916{txt}, {res}.02568{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8113
                                                {txt}Root MSE          =    {res} 1.0772

{txt}{ralign 92:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 27}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 28}{c |}{col 40}    Robust
{col 1}                   fdi_ihs{col 28}{c |} Coefficient{col 40}  std. err.{col 52}      t{col 60}   P>|t|{col 68}     [95% con{col 81}f. interval]
{hline 27}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 23}one {c |}{col 28}{res}{space 2}-2.748973{col 40}{space 2} .4594266{col 51}{space 1}   -5.98{col 60}{space 3}0.000{col 68}{space 4}-3.728218{col 81}{space 3}-1.769729
{txt}{space 23}two {c |}{col 28}{res}{space 2}-2.340897{col 40}{space 2} .5598356{col 51}{space 1}   -4.18{col 60}{space 3}0.001{col 68}{space 4}-3.534159{col 81}{space 3}-1.147636
{txt}{space 21}three {c |}{col 28}{res}{space 2}-3.029126{col 40}{space 2} .6074876{col 51}{space 1}   -4.99{col 60}{space 3}0.000{col 68}{space 4}-4.323955{col 81}{space 3}-1.734297
{txt}{space 22}four {c |}{col 28}{res}{space 2}-2.450294{col 40}{space 2} .3586154{col 51}{space 1}   -6.83{col 60}{space 3}0.000{col 68}{space 4}-3.214665{col 81}{space 3}-1.685923
{txt}{space 22}five {c |}{col 28}{res}{space 2}-1.587874{col 40}{space 2} .4780145{col 51}{space 1}   -3.32{col 60}{space 3}0.005{col 68}{space 4}-2.606738{col 81}{space 3}-.5690103
{txt}{space 2}one_number_major2_past20 {c |}{col 28}{res}{space 2}-.1664379{col 40}{space 2} .0783447{col 51}{space 1}   -2.12{col 60}{space 3}0.051{col 68}{space 4}-.3334257{col 81}{space 3} .0005499
{txt}{space 2}two_number_major2_past20 {c |}{col 28}{res}{space 2} .0989471{col 40}{space 2} .1172816{col 51}{space 1}    0.84{col 60}{space 3}0.412{col 68}{space 4}-.1510326{col 81}{space 3} .3489269
{txt}three_number_major2_past20 {c |}{col 28}{res}{space 2} .0717889{col 40}{space 2} .1532089{col 51}{space 1}    0.47{col 60}{space 3}0.646{col 68}{space 4}-.2547681{col 81}{space 3} .3983458
{txt}{space 1}four_number_major2_past20 {c |}{col 28}{res}{space 2}-.0687648{col 40}{space 2} .1533522{col 51}{space 1}   -0.45{col 60}{space 3}0.660{col 68}{space 4}-.3956273{col 81}{space 3} .2580977
{txt}{space 1}five_number_major2_past20 {c |}{col 28}{res}{space 2} .0316965{col 40}{space 2} .1529728{col 51}{space 1}    0.21{col 60}{space 3}0.839{col 68}{space 4}-.2943574{col 81}{space 3} .3577504
{txt}{space 18}lag_lgdp {c |}{col 28}{res}{space 2} 1.811727{col 40}{space 2} 1.436626{col 51}{space 1}    1.26{col 60}{space 3}0.227{col 68}{space 4}-1.250369{col 81}{space 3} 4.873824
{txt}{space 18}lag_lpop {c |}{col 28}{res}{space 2}-.1322881{col 40}{space 2} .3171566{col 51}{space 1}   -0.42{col 60}{space 3}0.683{col 68}{space 4}-.8082914{col 81}{space 3} .5437152
{txt}{space 26} {c |}
{space 22}date {c |}
{space 22}553  {c |}{col 28}{res}{space 2}-.0531386{col 40}{space 2} .2726175{col 51}{space 1}   -0.19{col 60}{space 3}0.848{col 68}{space 4} -.634209{col 81}{space 3} .5279318
{txt}{space 22}554  {c |}{col 28}{res}{space 2}-.4915856{col 40}{space 2} .2838562{col 51}{space 1}   -1.73{col 60}{space 3}0.104{col 68}{space 4}-1.096611{col 81}{space 3} .1134396
{txt}{space 22}555  {c |}{col 28}{res}{space 2}-.2011631{col 40}{space 2} .3045491{col 51}{space 1}   -0.66{col 60}{space 3}0.519{col 68}{space 4}-.8502942{col 81}{space 3}  .447968
{txt}{space 22}556  {c |}{col 28}{res}{space 2}-.2330706{col 40}{space 2} .2900432{col 51}{space 1}   -0.80{col 60}{space 3}0.434{col 68}{space 4} -.851283{col 81}{space 3} .3851418
{txt}{space 22}557  {c |}{col 28}{res}{space 2} .0419503{col 40}{space 2} .2876443{col 51}{space 1}    0.15{col 60}{space 3}0.886{col 68}{space 4} -.571149{col 81}{space 3} .6550495
{txt}{space 22}558  {c |}{col 28}{res}{space 2} .3595212{col 40}{space 2} .3473569{col 51}{space 1}    1.04{col 60}{space 3}0.317{col 68}{space 4}-.3808525{col 81}{space 3} 1.099895
{txt}{space 22}559  {c |}{col 28}{res}{space 2} .1886232{col 40}{space 2} .3875732{col 51}{space 1}    0.49{col 60}{space 3}0.634{col 68}{space 4}-.6374695{col 81}{space 3} 1.014716
{txt}{space 22}560  {c |}{col 28}{res}{space 2} .0725879{col 40}{space 2} .3760577{col 51}{space 1}    0.19{col 60}{space 3}0.850{col 68}{space 4}-.7289601{col 81}{space 3}  .874136
{txt}{space 22}561  {c |}{col 28}{res}{space 2} -.172525{col 40}{space 2} .2883515{col 51}{space 1}   -0.60{col 60}{space 3}0.559{col 68}{space 4}-.7871317{col 81}{space 3} .4420816
{txt}{space 22}562  {c |}{col 28}{res}{space 2}-.0148782{col 40}{space 2}  .320841{col 51}{space 1}   -0.05{col 60}{space 3}0.964{col 68}{space 4}-.6987346{col 81}{space 3} .6689783
{txt}{space 22}563  {c |}{col 28}{res}{space 2}-.0206692{col 40}{space 2} .3228138{col 51}{space 1}   -0.06{col 60}{space 3}0.950{col 68}{space 4}-.7087306{col 81}{space 3} .6673921
{txt}{space 22}564  {c |}{col 28}{res}{space 2}-.6937492{col 40}{space 2} .4327532{col 51}{space 1}   -1.60{col 60}{space 3}0.130{col 68}{space 4}-1.616141{col 81}{space 3} .2286424
{txt}{space 22}565  {c |}{col 28}{res}{space 2}-.2775657{col 40}{space 2} .5601057{col 51}{space 1}   -0.50{col 60}{space 3}0.627{col 68}{space 4}-1.471403{col 81}{space 3} .9162713
{txt}{space 22}566  {c |}{col 28}{res}{space 2}-.2589805{col 40}{space 2} .3839716{col 51}{space 1}   -0.67{col 60}{space 3}0.510{col 68}{space 4}-1.077397{col 81}{space 3} .5594355
{txt}{space 22}567  {c |}{col 28}{res}{space 2}-.4817936{col 40}{space 2} .4665237{col 51}{space 1}   -1.03{col 60}{space 3}0.318{col 68}{space 4}-1.476165{col 81}{space 3}  .512578
{txt}{space 22}568  {c |}{col 28}{res}{space 2}-.3747709{col 40}{space 2} .4977266{col 51}{space 1}   -0.75{col 60}{space 3}0.463{col 68}{space 4} -1.43565{col 81}{space 3} .6861082
{txt}{space 22}569  {c |}{col 28}{res}{space 2}-.5454433{col 40}{space 2} .4227292{col 51}{space 1}   -1.29{col 60}{space 3}0.216{col 68}{space 4}-1.446469{col 81}{space 3} .3555827
{txt}{space 22}570  {c |}{col 28}{res}{space 2} .1815117{col 40}{space 2} .5052865{col 51}{space 1}    0.36{col 60}{space 3}0.724{col 68}{space 4} -.895481{col 81}{space 3} 1.258504
{txt}{space 22}571  {c |}{col 28}{res}{space 2}-.6019066{col 40}{space 2} .4496382{col 51}{space 1}   -1.34{col 60}{space 3}0.201{col 68}{space 4}-1.560288{col 81}{space 3} .3564745
{txt}{space 22}572  {c |}{col 28}{res}{space 2}-.7976703{col 40}{space 2} .3842569{col 51}{space 1}   -2.08{col 60}{space 3}0.056{col 68}{space 4}-1.616694{col 81}{space 3} .0213538
{txt}{space 22}573  {c |}{col 28}{res}{space 2}-.4408638{col 40}{space 2} .5239224{col 51}{space 1}   -0.84{col 60}{space 3}0.413{col 68}{space 4}-1.557578{col 81}{space 3} .6758504
{txt}{space 22}574  {c |}{col 28}{res}{space 2}-.2942242{col 40}{space 2} .4223955{col 51}{space 1}   -0.70{col 60}{space 3}0.497{col 68}{space 4}-1.194539{col 81}{space 3} .6060905
{txt}{space 22}575  {c |}{col 28}{res}{space 2}-.0220576{col 40}{space 2} .5828248{col 51}{space 1}   -0.04{col 60}{space 3}0.970{col 68}{space 4}-1.264319{col 81}{space 3} 1.220204
{txt}{space 22}576  {c |}{col 28}{res}{space 2}-.7302306{col 40}{space 2}   .66315{col 51}{space 1}   -1.10{col 60}{space 3}0.288{col 68}{space 4}-2.143701{col 81}{space 3} .6832403
{txt}{space 22}577  {c |}{col 28}{res}{space 2}-.1820713{col 40}{space 2} .7137369{col 51}{space 1}   -0.26{col 60}{space 3}0.802{col 68}{space 4}-1.703365{col 81}{space 3} 1.339223
{txt}{space 22}578  {c |}{col 28}{res}{space 2}-.4712649{col 40}{space 2} .7405179{col 51}{space 1}   -0.64{col 60}{space 3}0.534{col 68}{space 4}-2.049641{col 81}{space 3} 1.107112
{txt}{space 22}579  {c |}{col 28}{res}{space 2}-.3182008{col 40}{space 2} .6422016{col 51}{space 1}   -0.50{col 60}{space 3}0.627{col 68}{space 4}-1.687021{col 81}{space 3} 1.050619
{txt}{space 22}580  {c |}{col 28}{res}{space 2} .1452355{col 40}{space 2} .6078745{col 51}{space 1}    0.24{col 60}{space 3}0.814{col 68}{space 4}-1.150418{col 81}{space 3} 1.440889
{txt}{space 22}581  {c |}{col 28}{res}{space 2}-.0090547{col 40}{space 2} .6016018{col 51}{space 1}   -0.02{col 60}{space 3}0.988{col 68}{space 4}-1.291339{col 81}{space 3} 1.273229
{txt}{space 22}582  {c |}{col 28}{res}{space 2} .0141646{col 40}{space 2} .6276615{col 51}{space 1}    0.02{col 60}{space 3}0.982{col 68}{space 4}-1.323664{col 81}{space 3} 1.351993
{txt}{space 22}583  {c |}{col 28}{res}{space 2}-.1231425{col 40}{space 2} .7132168{col 51}{space 1}   -0.17{col 60}{space 3}0.865{col 68}{space 4}-1.643328{col 81}{space 3} 1.397043
{txt}{space 22}584  {c |}{col 28}{res}{space 2} .0430402{col 40}{space 2} .6668926{col 51}{space 1}    0.06{col 60}{space 3}0.949{col 68}{space 4}-1.378408{col 81}{space 3} 1.464488
{txt}{space 22}585  {c |}{col 28}{res}{space 2}-.0313103{col 40}{space 2} .5695845{col 51}{space 1}   -0.05{col 60}{space 3}0.957{col 68}{space 4}-1.245351{col 81}{space 3}  1.18273
{txt}{space 22}586  {c |}{col 28}{res}{space 2}-.1326919{col 40}{space 2} .6311534{col 51}{space 1}   -0.21{col 60}{space 3}0.836{col 68}{space 4}-1.477964{col 81}{space 3}  1.21258
{txt}{space 22}587  {c |}{col 28}{res}{space 2}-.3522525{col 40}{space 2} .6725773{col 51}{space 1}   -0.52{col 60}{space 3}0.608{col 68}{space 4}-1.785817{col 81}{space 3} 1.081312
{txt}{space 22}588  {c |}{col 28}{res}{space 2}-.2886733{col 40}{space 2} .8306261{col 51}{space 1}   -0.35{col 60}{space 3}0.733{col 68}{space 4}-2.059111{col 81}{space 3} 1.481764
{txt}{space 22}589  {c |}{col 28}{res}{space 2}-.0905508{col 40}{space 2} .8368679{col 51}{space 1}   -0.11{col 60}{space 3}0.915{col 68}{space 4}-1.874292{col 81}{space 3} 1.693191
{txt}{space 22}590  {c |}{col 28}{res}{space 2}-.1620722{col 40}{space 2} .8335765{col 51}{space 1}   -0.19{col 60}{space 3}0.848{col 68}{space 4}-1.938799{col 81}{space 3} 1.614654
{txt}{space 22}591  {c |}{col 28}{res}{space 2}-.7470418{col 40}{space 2} .8325195{col 51}{space 1}   -0.90{col 60}{space 3}0.384{col 68}{space 4}-2.521515{col 81}{space 3} 1.027432
{txt}{space 22}592  {c |}{col 28}{res}{space 2}-.1651582{col 40}{space 2}  .763218{col 51}{space 1}   -0.22{col 60}{space 3}0.832{col 68}{space 4}-1.791919{col 81}{space 3} 1.461602
{txt}{space 22}593  {c |}{col 28}{res}{space 2} .1358313{col 40}{space 2} .8653532{col 51}{space 1}    0.16{col 60}{space 3}0.877{col 68}{space 4}-1.708625{col 81}{space 3} 1.980288
{txt}{space 22}594  {c |}{col 28}{res}{space 2} .1460267{col 40}{space 2} .8557138{col 51}{space 1}    0.17{col 60}{space 3}0.867{col 68}{space 4}-1.677884{col 81}{space 3} 1.969938
{txt}{space 22}595  {c |}{col 28}{res}{space 2} .1410137{col 40}{space 2}  .925131{col 51}{space 1}    0.15{col 60}{space 3}0.881{col 68}{space 4}-1.830856{col 81}{space 3} 2.112884
{txt}{space 22}596  {c |}{col 28}{res}{space 2}-.1547956{col 40}{space 2} .7731641{col 51}{space 1}   -0.20{col 60}{space 3}0.844{col 68}{space 4}-1.802756{col 81}{space 3} 1.493165
{txt}{space 22}597  {c |}{col 28}{res}{space 2}  -.15387{col 40}{space 2} .8425385{col 51}{space 1}   -0.18{col 60}{space 3}0.858{col 68}{space 4}-1.949698{col 81}{space 3} 1.641958
{txt}{space 22}598  {c |}{col 28}{res}{space 2}-.0406514{col 40}{space 2} .8019622{col 51}{space 1}   -0.05{col 60}{space 3}0.960{col 68}{space 4}-1.749993{col 81}{space 3} 1.668691
{txt}{space 22}599  {c |}{col 28}{res}{space 2}-.2463639{col 40}{space 2} .8355217{col 51}{space 1}   -0.29{col 60}{space 3}0.772{col 68}{space 4}-2.027236{col 81}{space 3} 1.534508
{txt}{space 22}600  {c |}{col 28}{res}{space 2}-.2525455{col 40}{space 2} 1.054725{col 51}{space 1}   -0.24{col 60}{space 3}0.814{col 68}{space 4}-2.500639{col 81}{space 3} 1.995548
{txt}{space 22}601  {c |}{col 28}{res}{space 2} -.495576{col 40}{space 2} 1.033012{col 51}{space 1}   -0.48{col 60}{space 3}0.638{col 68}{space 4} -2.69739{col 81}{space 3} 1.706238
{txt}{space 22}602  {c |}{col 28}{res}{space 2}-.0586234{col 40}{space 2} 1.106242{col 51}{space 1}   -0.05{col 60}{space 3}0.958{col 68}{space 4}-2.416522{col 81}{space 3} 2.299275
{txt}{space 22}603  {c |}{col 28}{res}{space 2}-.6887112{col 40}{space 2}  1.02362{col 51}{space 1}   -0.67{col 60}{space 3}0.511{col 68}{space 4}-2.870505{col 81}{space 3} 1.493083
{txt}{space 22}604  {c |}{col 28}{res}{space 2}-.4124524{col 40}{space 2} 1.024298{col 51}{space 1}   -0.40{col 60}{space 3}0.693{col 68}{space 4}-2.595692{col 81}{space 3} 1.770787
{txt}{space 22}605  {c |}{col 28}{res}{space 2}-.0247552{col 40}{space 2} 1.019693{col 51}{space 1}   -0.02{col 60}{space 3}0.981{col 68}{space 4}-2.198179{col 81}{space 3} 2.148669
{txt}{space 22}606  {c |}{col 28}{res}{space 2}-.4214564{col 40}{space 2} 1.093888{col 51}{space 1}   -0.39{col 60}{space 3}0.705{col 68}{space 4}-2.753024{col 81}{space 3} 1.910111
{txt}{space 22}607  {c |}{col 28}{res}{space 2}-.1041692{col 40}{space 2} 1.029332{col 51}{space 1}   -0.10{col 60}{space 3}0.921{col 68}{space 4}-2.298139{col 81}{space 3}   2.0898
{txt}{space 22}608  {c |}{col 28}{res}{space 2}-.2824587{col 40}{space 2}  1.06303{col 51}{space 1}   -0.27{col 60}{space 3}0.794{col 68}{space 4}-2.548254{col 81}{space 3} 1.983337
{txt}{space 22}609  {c |}{col 28}{res}{space 2}-.3144788{col 40}{space 2} 1.176032{col 51}{space 1}   -0.27{col 60}{space 3}0.793{col 68}{space 4}-2.821132{col 81}{space 3} 2.192174
{txt}{space 22}610  {c |}{col 28}{res}{space 2} .0454658{col 40}{space 2} 1.127271{col 51}{space 1}    0.04{col 60}{space 3}0.968{col 68}{space 4}-2.357256{col 81}{space 3} 2.448187
{txt}{space 22}611  {c |}{col 28}{res}{space 2} .2992148{col 40}{space 2} 1.001588{col 51}{space 1}    0.30{col 60}{space 3}0.769{col 68}{space 4}-1.835619{col 81}{space 3} 2.434049
{txt}{space 22}612  {c |}{col 28}{res}{space 2}-.4011606{col 40}{space 2} 1.328795{col 51}{space 1}   -0.30{col 60}{space 3}0.767{col 68}{space 4} -3.23342{col 81}{space 3} 2.431099
{txt}{space 22}613  {c |}{col 28}{res}{space 2}-.3428135{col 40}{space 2} 1.404642{col 51}{space 1}   -0.24{col 60}{space 3}0.810{col 68}{space 4}-3.336737{col 81}{space 3}  2.65111
{txt}{space 22}614  {c |}{col 28}{res}{space 2}-.4250581{col 40}{space 2} 1.290767{col 51}{space 1}   -0.33{col 60}{space 3}0.746{col 68}{space 4}-3.176263{col 81}{space 3} 2.326147
{txt}{space 22}615  {c |}{col 28}{res}{space 2}-.2509049{col 40}{space 2} 1.298681{col 51}{space 1}   -0.19{col 60}{space 3}0.849{col 68}{space 4}-3.018978{col 81}{space 3} 2.517168
{txt}{space 22}616  {c |}{col 28}{res}{space 2} -.357028{col 40}{space 2} 1.280672{col 51}{space 1}   -0.28{col 60}{space 3}0.784{col 68}{space 4}-3.086715{col 81}{space 3} 2.372659
{txt}{space 22}617  {c |}{col 28}{res}{space 2}-.8275185{col 40}{space 2} 1.433463{col 51}{space 1}   -0.58{col 60}{space 3}0.572{col 68}{space 4}-3.882872{col 81}{space 3} 2.227835
{txt}{space 22}618  {c |}{col 28}{res}{space 2}-.4671728{col 40}{space 2} 1.229271{col 51}{space 1}   -0.38{col 60}{space 3}0.709{col 68}{space 4}-3.087302{col 81}{space 3} 2.152956
{txt}{space 22}619  {c |}{col 28}{res}{space 2}  .006134{col 40}{space 2} 1.305327{col 51}{space 1}    0.00{col 60}{space 3}0.996{col 68}{space 4}-2.776104{col 81}{space 3} 2.788372
{txt}{space 22}620  {c |}{col 28}{res}{space 2}-.2217239{col 40}{space 2} 1.399674{col 51}{space 1}   -0.16{col 60}{space 3}0.876{col 68}{space 4}-3.205059{col 81}{space 3} 2.761611
{txt}{space 22}621  {c |}{col 28}{res}{space 2}-.1168741{col 40}{space 2} 1.271822{col 51}{space 1}   -0.09{col 60}{space 3}0.928{col 68}{space 4}-2.827698{col 81}{space 3}  2.59395
{txt}{space 22}622  {c |}{col 28}{res}{space 2}-.3091476{col 40}{space 2}  1.25718{col 51}{space 1}   -0.25{col 60}{space 3}0.809{col 68}{space 4}-2.988764{col 81}{space 3} 2.370469
{txt}{space 22}623  {c |}{col 28}{res}{space 2}-.3118661{col 40}{space 2} 1.196588{col 51}{space 1}   -0.26{col 60}{space 3}0.798{col 68}{space 4}-2.862332{col 81}{space 3}   2.2386
{txt}{space 22}624  {c |}{col 28}{res}{space 2} -.622789{col 40}{space 2} 1.476155{col 51}{space 1}   -0.42{col 60}{space 3}0.679{col 68}{space 4}-3.769139{col 81}{space 3} 2.523561
{txt}{space 22}625  {c |}{col 28}{res}{space 2} -.620661{col 40}{space 2} 1.468434{col 51}{space 1}   -0.42{col 60}{space 3}0.679{col 68}{space 4}-3.750554{col 81}{space 3} 2.509232
{txt}{space 22}626  {c |}{col 28}{res}{space 2}-.3290425{col 40}{space 2} 1.503455{col 51}{space 1}   -0.22{col 60}{space 3}0.830{col 68}{space 4}-3.533581{col 81}{space 3} 2.875496
{txt}{space 22}627  {c |}{col 28}{res}{space 2} -.736673{col 40}{space 2} 1.482626{col 51}{space 1}   -0.50{col 60}{space 3}0.626{col 68}{space 4}-3.896816{col 81}{space 3}  2.42347
{txt}{space 22}628  {c |}{col 28}{res}{space 2}-1.191737{col 40}{space 2} 1.517944{col 51}{space 1}   -0.79{col 60}{space 3}0.445{col 68}{space 4}-4.427157{col 81}{space 3} 2.043683
{txt}{space 22}629  {c |}{col 28}{res}{space 2}-.8066407{col 40}{space 2} 1.477053{col 51}{space 1}   -0.55{col 60}{space 3}0.593{col 68}{space 4}-3.954905{col 81}{space 3} 2.341623
{txt}{space 22}630  {c |}{col 28}{res}{space 2}-.3479607{col 40}{space 2} 1.465639{col 51}{space 1}   -0.24{col 60}{space 3}0.816{col 68}{space 4}-3.471896{col 81}{space 3} 2.775975
{txt}{space 22}631  {c |}{col 28}{res}{space 2}-1.161992{col 40}{space 2} 1.587657{col 51}{space 1}   -0.73{col 60}{space 3}0.476{col 68}{space 4}-4.546004{col 81}{space 3} 2.222019
{txt}{space 22}632  {c |}{col 28}{res}{space 2} -.650947{col 40}{space 2} 1.506668{col 51}{space 1}   -0.43{col 60}{space 3}0.672{col 68}{space 4}-3.862333{col 81}{space 3} 2.560439
{txt}{space 22}633  {c |}{col 28}{res}{space 2}-.1894713{col 40}{space 2} 1.438954{col 51}{space 1}   -0.13{col 60}{space 3}0.897{col 68}{space 4} -3.25653{col 81}{space 3} 2.877587
{txt}{space 22}634  {c |}{col 28}{res}{space 2}  -.67838{col 40}{space 2}  1.47429{col 51}{space 1}   -0.46{col 60}{space 3}0.652{col 68}{space 4}-3.820754{col 81}{space 3} 2.463994
{txt}{space 22}635  {c |}{col 28}{res}{space 2}-.4110595{col 40}{space 2} 1.461133{col 51}{space 1}   -0.28{col 60}{space 3}0.782{col 68}{space 4}-3.525391{col 81}{space 3} 2.703273
{txt}{space 22}636  {c |}{col 28}{res}{space 2}-.7667611{col 40}{space 2}  1.65738{col 51}{space 1}   -0.46{col 60}{space 3}0.650{col 68}{space 4}-4.299383{col 81}{space 3} 2.765861
{txt}{space 22}637  {c |}{col 28}{res}{space 2}-1.165422{col 40}{space 2} 1.604312{col 51}{space 1}   -0.73{col 60}{space 3}0.479{col 68}{space 4}-4.584933{col 81}{space 3} 2.254089
{txt}{space 22}638  {c |}{col 28}{res}{space 2}-.2037243{col 40}{space 2} 1.634149{col 51}{space 1}   -0.12{col 60}{space 3}0.902{col 68}{space 4}-3.686831{col 81}{space 3} 3.279383
{txt}{space 22}639  {c |}{col 28}{res}{space 2}-.5648548{col 40}{space 2} 1.635147{col 51}{space 1}   -0.35{col 60}{space 3}0.735{col 68}{space 4}-4.050087{col 81}{space 3} 2.920378
{txt}{space 22}640  {c |}{col 28}{res}{space 2}-.3941195{col 40}{space 2} 1.592188{col 51}{space 1}   -0.25{col 60}{space 3}0.808{col 68}{space 4}-3.787788{col 81}{space 3} 2.999549
{txt}{space 22}641  {c |}{col 28}{res}{space 2}-.5267753{col 40}{space 2} 1.601771{col 51}{space 1}   -0.33{col 60}{space 3}0.747{col 68}{space 4} -3.94087{col 81}{space 3}  2.88732
{txt}{space 22}642  {c |}{col 28}{res}{space 2}-.6117406{col 40}{space 2} 1.591791{col 51}{space 1}   -0.38{col 60}{space 3}0.706{col 68}{space 4}-4.004564{col 81}{space 3} 2.781082
{txt}{space 22}643  {c |}{col 28}{res}{space 2}-.4728065{col 40}{space 2} 1.694615{col 51}{space 1}   -0.28{col 60}{space 3}0.784{col 68}{space 4}-4.084794{col 81}{space 3} 3.139181
{txt}{space 22}644  {c |}{col 28}{res}{space 2}-.7796885{col 40}{space 2} 1.694652{col 51}{space 1}   -0.46{col 60}{space 3}0.652{col 68}{space 4}-4.391753{col 81}{space 3} 2.832376
{txt}{space 22}645  {c |}{col 28}{res}{space 2} .0387071{col 40}{space 2} 1.759268{col 51}{space 1}    0.02{col 60}{space 3}0.983{col 68}{space 4}-3.711084{col 81}{space 3} 3.788498
{txt}{space 22}646  {c |}{col 28}{res}{space 2}-.3256605{col 40}{space 2} 1.712559{col 51}{space 1}   -0.19{col 60}{space 3}0.852{col 68}{space 4}-3.975894{col 81}{space 3} 3.324573
{txt}{space 22}647  {c |}{col 28}{res}{space 2}-.1863723{col 40}{space 2} 1.753583{col 51}{space 1}   -0.11{col 60}{space 3}0.917{col 68}{space 4}-3.924046{col 81}{space 3} 3.551302
{txt}{space 22}648  {c |}{col 28}{res}{space 2}-.0000914{col 40}{space 2} 1.938256{col 51}{space 1}   -0.00{col 60}{space 3}1.000{col 68}{space 4}-4.131386{col 81}{space 3} 4.131203
{txt}{space 22}649  {c |}{col 28}{res}{space 2}  .244792{col 40}{space 2} 1.869377{col 51}{space 1}    0.13{col 60}{space 3}0.898{col 68}{space 4}-3.739692{col 81}{space 3} 4.229276
{txt}{space 22}650  {c |}{col 28}{res}{space 2}-.3308054{col 40}{space 2} 1.863798{col 51}{space 1}   -0.18{col 60}{space 3}0.861{col 68}{space 4}-4.303397{col 81}{space 3} 3.641786
{txt}{space 22}651  {c |}{col 28}{res}{space 2}-.4776126{col 40}{space 2} 1.885481{col 51}{space 1}   -0.25{col 60}{space 3}0.803{col 68}{space 4} -4.49642{col 81}{space 3} 3.541195
{txt}{space 22}652  {c |}{col 28}{res}{space 2}-.3182268{col 40}{space 2} 1.801464{col 51}{space 1}   -0.18{col 60}{space 3}0.862{col 68}{space 4}-4.157956{col 81}{space 3} 3.521503
{txt}{space 22}653  {c |}{col 28}{res}{space 2}  .420844{col 40}{space 2} 1.912258{col 51}{space 1}    0.22{col 60}{space 3}0.829{col 68}{space 4}-3.655037{col 81}{space 3} 4.496725
{txt}{space 22}654  {c |}{col 28}{res}{space 2} .0237673{col 40}{space 2} 1.898993{col 51}{space 1}    0.01{col 60}{space 3}0.990{col 68}{space 4} -4.02384{col 81}{space 3} 4.071374
{txt}{space 22}655  {c |}{col 28}{res}{space 2} .0286927{col 40}{space 2} 1.885328{col 51}{space 1}    0.02{col 60}{space 3}0.988{col 68}{space 4}-3.989788{col 81}{space 3} 4.047173
{txt}{space 22}656  {c |}{col 28}{res}{space 2}-.1311858{col 40}{space 2} 1.839459{col 51}{space 1}   -0.07{col 60}{space 3}0.944{col 68}{space 4}  -4.0519{col 81}{space 3} 3.789528
{txt}{space 22}657  {c |}{col 28}{res}{space 2}-.3198771{col 40}{space 2} 1.950615{col 51}{space 1}   -0.16{col 60}{space 3}0.872{col 68}{space 4}-4.477515{col 81}{space 3} 3.837761
{txt}{space 22}658  {c |}{col 28}{res}{space 2}-.6418876{col 40}{space 2} 2.280756{col 51}{space 1}   -0.28{col 60}{space 3}0.782{col 68}{space 4}-5.503204{col 81}{space 3} 4.219429
{txt}{space 22}659  {c |}{col 28}{res}{space 2}-.0996695{col 40}{space 2} 1.847455{col 51}{space 1}   -0.05{col 60}{space 3}0.958{col 68}{space 4}-4.037426{col 81}{space 3} 3.838087
{txt}{space 22}660  {c |}{col 28}{res}{space 2}-.5814706{col 40}{space 2} 2.111119{col 51}{space 1}   -0.28{col 60}{space 3}0.787{col 68}{space 4}-5.081215{col 81}{space 3} 3.918274
{txt}{space 22}661  {c |}{col 28}{res}{space 2}-.5459439{col 40}{space 2} 1.925972{col 51}{space 1}   -0.28{col 60}{space 3}0.781{col 68}{space 4}-4.651056{col 81}{space 3} 3.559168
{txt}{space 22}662  {c |}{col 28}{res}{space 2}-.0165044{col 40}{space 2} 2.019306{col 51}{space 1}   -0.01{col 60}{space 3}0.994{col 68}{space 4}-4.320553{col 81}{space 3} 4.287544
{txt}{space 22}663  {c |}{col 28}{res}{space 2}-.5578262{col 40}{space 2} 1.918309{col 51}{space 1}   -0.29{col 60}{space 3}0.775{col 68}{space 4}-4.646604{col 81}{space 3} 3.530952
{txt}{space 22}664  {c |}{col 28}{res}{space 2}-.3349445{col 40}{space 2} 1.943372{col 51}{space 1}   -0.17{col 60}{space 3}0.865{col 68}{space 4}-4.477144{col 81}{space 3} 3.807255
{txt}{space 22}665  {c |}{col 28}{res}{space 2} .0393746{col 40}{space 2}  1.99056{col 51}{space 1}    0.02{col 60}{space 3}0.984{col 68}{space 4}-4.203404{col 81}{space 3} 4.282154
{txt}{space 22}666  {c |}{col 28}{res}{space 2}-.0046496{col 40}{space 2} 1.938458{col 51}{space 1}   -0.00{col 60}{space 3}0.998{col 68}{space 4}-4.136375{col 81}{space 3} 4.127075
{txt}{space 22}667  {c |}{col 28}{res}{space 2}-.1660418{col 40}{space 2}  1.93545{col 51}{space 1}   -0.09{col 60}{space 3}0.933{col 68}{space 4}-4.291356{col 81}{space 3} 3.959272
{txt}{space 22}668  {c |}{col 28}{res}{space 2}-.3042916{col 40}{space 2}  1.98149{col 51}{space 1}   -0.15{col 60}{space 3}0.880{col 68}{space 4}-4.527737{col 81}{space 3} 3.919154
{txt}{space 22}669  {c |}{col 28}{res}{space 2}-.1888028{col 40}{space 2} 1.947952{col 51}{space 1}   -0.10{col 60}{space 3}0.924{col 68}{space 4}-4.340764{col 81}{space 3} 3.963158
{txt}{space 22}670  {c |}{col 28}{res}{space 2}-.3778772{col 40}{space 2} 1.859464{col 51}{space 1}   -0.20{col 60}{space 3}0.842{col 68}{space 4}-4.341231{col 81}{space 3} 3.585476
{txt}{space 22}671  {c |}{col 28}{res}{space 2}-.0865908{col 40}{space 2} 1.857844{col 51}{space 1}   -0.05{col 60}{space 3}0.963{col 68}{space 4}-4.046491{col 81}{space 3}  3.87331
{txt}{space 22}672  {c |}{col 28}{res}{space 2} -.265512{col 40}{space 2} 1.959149{col 51}{space 1}   -0.14{col 60}{space 3}0.894{col 68}{space 4} -4.44134{col 81}{space 3} 3.910316
{txt}{space 22}673  {c |}{col 28}{res}{space 2}-.1336569{col 40}{space 2} 1.976999{col 51}{space 1}   -0.07{col 60}{space 3}0.947{col 68}{space 4}-4.347531{col 81}{space 3} 4.080217
{txt}{space 22}674  {c |}{col 28}{res}{space 2} .0315574{col 40}{space 2} 2.024481{col 51}{space 1}    0.02{col 60}{space 3}0.988{col 68}{space 4}-4.283521{col 81}{space 3} 4.346636
{txt}{space 22}675  {c |}{col 28}{res}{space 2} .3933143{col 40}{space 2} 2.025342{col 51}{space 1}    0.19{col 60}{space 3}0.849{col 68}{space 4}-3.923599{col 81}{space 3} 4.710228
{txt}{space 22}676  {c |}{col 28}{res}{space 2}   .45349{col 40}{space 2} 2.047028{col 51}{space 1}    0.22{col 60}{space 3}0.828{col 68}{space 4}-3.909646{col 81}{space 3} 4.816626
{txt}{space 22}677  {c |}{col 28}{res}{space 2} .1386857{col 40}{space 2} 2.017397{col 51}{space 1}    0.07{col 60}{space 3}0.946{col 68}{space 4}-4.161295{col 81}{space 3} 4.438666
{txt}{space 22}678  {c |}{col 28}{res}{space 2} .3648312{col 40}{space 2} 2.049514{col 51}{space 1}    0.18{col 60}{space 3}0.861{col 68}{space 4}-4.003605{col 81}{space 3} 4.733267
{txt}{space 22}679  {c |}{col 28}{res}{space 2} .4620338{col 40}{space 2} 2.038542{col 51}{space 1}    0.23{col 60}{space 3}0.824{col 68}{space 4}-3.883015{col 81}{space 3} 4.807083
{txt}{space 22}680  {c |}{col 28}{res}{space 2} .5131644{col 40}{space 2}  2.01685{col 51}{space 1}    0.25{col 60}{space 3}0.803{col 68}{space 4} -3.78565{col 81}{space 3} 4.811979
{txt}{space 22}681  {c |}{col 28}{res}{space 2} .5247872{col 40}{space 2} 2.026936{col 51}{space 1}    0.26{col 60}{space 3}0.799{col 68}{space 4}-3.795525{col 81}{space 3}   4.8451
{txt}{space 22}682  {c |}{col 28}{res}{space 2} .1849368{col 40}{space 2} 2.037861{col 51}{space 1}    0.09{col 60}{space 3}0.929{col 68}{space 4}-4.158662{col 81}{space 3} 4.528535
{txt}{space 22}683  {c |}{col 28}{res}{space 2} .0269704{col 40}{space 2} 2.046807{col 51}{space 1}    0.01{col 60}{space 3}0.990{col 68}{space 4}-4.335696{col 81}{space 3} 4.389637
{txt}{space 22}684  {c |}{col 28}{res}{space 2} .1011101{col 40}{space 2} 2.230536{col 51}{space 1}    0.05{col 60}{space 3}0.964{col 68}{space 4}-4.653164{col 81}{space 3} 4.855385
{txt}{space 22}685  {c |}{col 28}{res}{space 2}  -.07914{col 40}{space 2} 2.203669{col 51}{space 1}   -0.04{col 60}{space 3}0.972{col 68}{space 4}-4.776149{col 81}{space 3} 4.617869
{txt}{space 22}686  {c |}{col 28}{res}{space 2}-.0854658{col 40}{space 2} 2.238454{col 51}{space 1}   -0.04{col 60}{space 3}0.970{col 68}{space 4}-4.856617{col 81}{space 3} 4.685686
{txt}{space 22}687  {c |}{col 28}{res}{space 2} .2543011{col 40}{space 2} 2.184444{col 51}{space 1}    0.12{col 60}{space 3}0.909{col 68}{space 4} -4.40173{col 81}{space 3} 4.910332
{txt}{space 22}688  {c |}{col 28}{res}{space 2}-.0397335{col 40}{space 2}  2.23823{col 51}{space 1}   -0.02{col 60}{space 3}0.986{col 68}{space 4}-4.810407{col 81}{space 3}  4.73094
{txt}{space 22}689  {c |}{col 28}{res}{space 2}-.0608012{col 40}{space 2} 2.222147{col 51}{space 1}   -0.03{col 60}{space 3}0.979{col 68}{space 4}-4.797195{col 81}{space 3} 4.675592
{txt}{space 22}690  {c |}{col 28}{res}{space 2}-.3442471{col 40}{space 2}  2.23018{col 51}{space 1}   -0.15{col 60}{space 3}0.879{col 68}{space 4}-5.097763{col 81}{space 3} 4.409269
{txt}{space 22}691  {c |}{col 28}{res}{space 2}-.1985119{col 40}{space 2} 2.242661{col 51}{space 1}   -0.09{col 60}{space 3}0.931{col 68}{space 4} -4.97863{col 81}{space 3} 4.581606
{txt}{space 22}692  {c |}{col 28}{res}{space 2}-.0198546{col 40}{space 2} 2.241998{col 51}{space 1}   -0.01{col 60}{space 3}0.993{col 68}{space 4}-4.798561{col 81}{space 3} 4.758851
{txt}{space 22}693  {c |}{col 28}{res}{space 2}-.1121911{col 40}{space 2} 2.202397{col 51}{space 1}   -0.05{col 60}{space 3}0.960{col 68}{space 4}-4.806488{col 81}{space 3} 4.582106
{txt}{space 22}694  {c |}{col 28}{res}{space 2}-.0273087{col 40}{space 2} 2.249948{col 51}{space 1}   -0.01{col 60}{space 3}0.990{col 68}{space 4}-4.822959{col 81}{space 3} 4.768342
{txt}{space 22}695  {c |}{col 28}{res}{space 2}-.2377884{col 40}{space 2} 2.223247{col 51}{space 1}   -0.11{col 60}{space 3}0.916{col 68}{space 4}-4.976527{col 81}{space 3}  4.50095
{txt}{space 22}696  {c |}{col 28}{res}{space 2}-.1070075{col 40}{space 2} 2.322132{col 51}{space 1}   -0.05{col 60}{space 3}0.964{col 68}{space 4}-5.056515{col 81}{space 3}   4.8425
{txt}{space 22}697  {c |}{col 28}{res}{space 2}-.1472341{col 40}{space 2} 2.313039{col 51}{space 1}   -0.06{col 60}{space 3}0.950{col 68}{space 4}-5.077359{col 81}{space 3} 4.782891
{txt}{space 22}698  {c |}{col 28}{res}{space 2}-.0891426{col 40}{space 2} 2.333632{col 51}{space 1}   -0.04{col 60}{space 3}0.970{col 68}{space 4}-5.063161{col 81}{space 3} 4.884876
{txt}{space 22}699  {c |}{col 28}{res}{space 2}-.2960986{col 40}{space 2} 2.321192{col 51}{space 1}   -0.13{col 60}{space 3}0.900{col 68}{space 4}-5.243603{col 81}{space 3} 4.651406
{txt}{space 22}700  {c |}{col 28}{res}{space 2}-.0200052{col 40}{space 2} 2.342543{col 51}{space 1}   -0.01{col 60}{space 3}0.993{col 68}{space 4}-5.013018{col 81}{space 3} 4.973007
{txt}{space 22}701  {c |}{col 28}{res}{space 2}-.3844836{col 40}{space 2} 2.326824{col 51}{space 1}   -0.17{col 60}{space 3}0.871{col 68}{space 4}-5.343992{col 81}{space 3} 4.575025
{txt}{space 22}702  {c |}{col 28}{res}{space 2}-.5894447{col 40}{space 2} 2.380987{col 51}{space 1}   -0.25{col 60}{space 3}0.808{col 68}{space 4}-5.664398{col 81}{space 3} 4.485508
{txt}{space 22}703  {c |}{col 28}{res}{space 2}-.0940129{col 40}{space 2} 2.329362{col 51}{space 1}   -0.04{col 60}{space 3}0.968{col 68}{space 4} -5.05893{col 81}{space 3} 4.870904
{txt}{space 22}704  {c |}{col 28}{res}{space 2} .1506832{col 40}{space 2} 2.238036{col 51}{space 1}    0.07{col 60}{space 3}0.947{col 68}{space 4}-4.619578{col 81}{space 3} 4.920945
{txt}{space 22}705  {c |}{col 28}{res}{space 2} .2137488{col 40}{space 2} 2.289689{col 51}{space 1}    0.09{col 60}{space 3}0.927{col 68}{space 4}-4.666608{col 81}{space 3} 5.094105
{txt}{space 22}706  {c |}{col 28}{res}{space 2} .1285233{col 40}{space 2} 2.282425{col 51}{space 1}    0.06{col 60}{space 3}0.956{col 68}{space 4} -4.73635{col 81}{space 3} 4.993397
{txt}{space 22}707  {c |}{col 28}{res}{space 2} .0043158{col 40}{space 2} 2.356479{col 51}{space 1}    0.00{col 60}{space 3}0.999{col 68}{space 4}  -5.0184{col 81}{space 3} 5.027032
{txt}{space 22}708  {c |}{col 28}{res}{space 2} .3636813{col 40}{space 2} 2.534649{col 51}{space 1}    0.14{col 60}{space 3}0.888{col 68}{space 4}-5.038795{col 81}{space 3} 5.766157
{txt}{space 22}709  {c |}{col 28}{res}{space 2}-.2254239{col 40}{space 2} 2.533146{col 51}{space 1}   -0.09{col 60}{space 3}0.930{col 68}{space 4}-5.624697{col 81}{space 3}  5.17385
{txt}{space 22}710  {c |}{col 28}{res}{space 2} .0877774{col 40}{space 2} 2.504388{col 51}{space 1}    0.04{col 60}{space 3}0.973{col 68}{space 4}-5.250199{col 81}{space 3} 5.425754
{txt}{space 22}711  {c |}{col 28}{res}{space 2} .4092609{col 40}{space 2} 2.466215{col 51}{space 1}    0.17{col 60}{space 3}0.870{col 68}{space 4}-4.847353{col 81}{space 3} 5.665875
{txt}{space 22}712  {c |}{col 28}{res}{space 2}-.0038372{col 40}{space 2} 2.495147{col 51}{space 1}   -0.00{col 60}{space 3}0.999{col 68}{space 4}-5.322118{col 81}{space 3} 5.314443
{txt}{space 22}713  {c |}{col 28}{res}{space 2} .4573908{col 40}{space 2} 2.512272{col 51}{space 1}    0.18{col 60}{space 3}0.858{col 68}{space 4} -4.89739{col 81}{space 3} 5.812172
{txt}{space 22}714  {c |}{col 28}{res}{space 2} .1133869{col 40}{space 2} 2.472219{col 51}{space 1}    0.05{col 60}{space 3}0.964{col 68}{space 4}-5.156023{col 81}{space 3} 5.382797
{txt}{space 22}715  {c |}{col 28}{res}{space 2} .1282595{col 40}{space 2} 2.497924{col 51}{space 1}    0.05{col 60}{space 3}0.960{col 68}{space 4} -5.19594{col 81}{space 3} 5.452459
{txt}{space 22}716  {c |}{col 28}{res}{space 2} .0307559{col 40}{space 2} 2.524586{col 51}{space 1}    0.01{col 60}{space 3}0.990{col 68}{space 4}-5.350272{col 81}{space 3} 5.411783
{txt}{space 22}717  {c |}{col 28}{res}{space 2}-.1224358{col 40}{space 2} 2.508241{col 51}{space 1}   -0.05{col 60}{space 3}0.962{col 68}{space 4}-5.468625{col 81}{space 3} 5.223753
{txt}{space 22}718  {c |}{col 28}{res}{space 2} .2544755{col 40}{space 2} 2.476076{col 51}{space 1}    0.10{col 60}{space 3}0.920{col 68}{space 4}-5.023155{col 81}{space 3} 5.532106
{txt}{space 22}719  {c |}{col 28}{res}{space 2} .1134693{col 40}{space 2} 2.519175{col 51}{space 1}    0.05{col 60}{space 3}0.965{col 68}{space 4}-5.256024{col 81}{space 3} 5.482963
{txt}{space 26} {c |}
{space 19}region1 {c |}
{space 16}bangalore  {c |}{col 28}{res}{space 2} 1.401538{col 40}{space 2} .3880783{col 51}{space 1}    3.61{col 60}{space 3}0.003{col 68}{space 4} .5743686{col 81}{space 3} 2.228707
{txt}{space 19}bhopal  {c |}{col 28}{res}{space 2} -1.41453{col 40}{space 2} 1.005729{col 51}{space 1}   -1.41{col 60}{space 3}0.180{col 68}{space 4} -3.55819{col 81}{space 3} .7291307
{txt}{space 14}bubaneshwar  {c |}{col 28}{res}{space 2}-.5926035{col 40}{space 2} 1.518089{col 51}{space 1}   -0.39{col 60}{space 3}0.702{col 68}{space 4}-3.828333{col 81}{space 3} 2.643126
{txt}{space 15}chandigarh  {c |}{col 28}{res}{space 2}-.7197799{col 40}{space 2} .3832973{col 51}{space 1}   -1.88{col 60}{space 3}0.080{col 68}{space 4}-1.536759{col 81}{space 3} .0971989
{txt}{space 18}chennai  {c |}{col 28}{res}{space 2} 1.024996{col 40}{space 2} .1850088{col 51}{space 1}    5.54{col 60}{space 3}0.000{col 68}{space 4} .6306589{col 81}{space 3} 1.419333
{txt}{space 17}guwahati  {c |}{col 28}{res}{space 2} .4858581{col 40}{space 2} 1.628393{col 51}{space 1}    0.30{col 60}{space 3}0.770{col 68}{space 4}-2.984979{col 81}{space 3} 3.956695
{txt}{space 16}hyderabad  {c |}{col 28}{res}{space 2} 1.280129{col 40}{space 2} .7031832{col 51}{space 1}    1.82{col 60}{space 3}0.089{col 68}{space 4}-.2186704{col 81}{space 3} 2.778929
{txt}{space 19}jaipur  {c |}{col 28}{res}{space 2}-2.169925{col 40}{space 2} .7385682{col 51}{space 1}   -2.94{col 60}{space 3}0.010{col 68}{space 4}-3.744145{col 81}{space 3}-.5957037
{txt}{space 19}kanpur  {c |}{col 28}{res}{space 2}-2.414467{col 40}{space 2} .7801798{col 51}{space 1}   -3.09{col 60}{space 3}0.007{col 68}{space 4} -4.07738{col 81}{space 3}-.7515527
{txt}{space 20}kochi  {c |}{col 28}{res}{space 2}-1.314094{col 40}{space 2} .9399116{col 51}{space 1}   -1.40{col 60}{space 3}0.182{col 68}{space 4}-3.317469{col 81}{space 3} .6892798
{txt}{space 18}kolkata  {c |}{col 28}{res}{space 2} 2.050521{col 40}{space 2} .5366881{col 51}{space 1}    3.82{col 60}{space 3}0.002{col 68}{space 4}  .906597{col 81}{space 3} 3.194444
{txt}{space 19}mumbai  {c |}{col 28}{res}{space 2} .2380093{col 40}{space 2} .9939767{col 51}{space 1}    0.24{col 60}{space 3}0.814{col 68}{space 4}-1.880602{col 81}{space 3} 2.356621
{txt}{space 16}new_delhi  {c |}{col 28}{res}{space 2} 3.003033{col 40}{space 2} 1.129194{col 51}{space 1}    2.66{col 60}{space 3}0.018{col 68}{space 4} .5962118{col 81}{space 3} 5.409853
{txt}{space 19}panaji  {c |}{col 28}{res}{space 2} 1.458659{col 40}{space 2} 4.450379{col 51}{space 1}    0.33{col 60}{space 3}0.748{col 68}{space 4}-8.027099{col 81}{space 3} 10.94442
{txt}{space 20}patna  {c |}{col 28}{res}{space 2} 1.108995{col 40}{space 2} 1.523105{col 51}{space 1}    0.73{col 60}{space 3}0.478{col 68}{space 4}-2.137426{col 81}{space 3} 4.355417
{txt}{space 26} {c |}
{space 21}_cons {c |}{col 28}{res}{space 2}-17.29836{col 40}{space 2} 18.73279{col 51}{space 1}   -0.92{col 60}{space 3}0.370{col 68}{space 4}-57.22636{col 81}{space 3} 22.62965
{txt}{hline 27}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 551 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -5.9368
{col 25}{txt}Prob>|t| = {res}    0.0176

95%{txt} confidence set for null hypothesis expression: [{res}-3.928{txt}, {res}-1.493{txt}]
{res}
Warning: 20 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -4.1766
{col 25}{txt}Prob>|t| = {res}    0.0047

95%{txt} confidence set for null hypothesis expression: [{res}-3.639{txt}, {res}-1.151{txt}]
{res}
Warning: 13 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -4.9752
{col 25}{txt}Prob>|t| = {res}    0.0039

95%{txt} confidence set for null hypothesis expression: [{res}-4.388{txt}, {res}-1.684{txt}]
{res}
Warning: 31 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -6.9626
{col 25}{txt}Prob>|t| = {res}    0.0020

95%{txt} confidence set for null hypothesis expression: [{res}-3.185{txt}, {res}-1.73{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -3.3169
{col 25}{txt}Prob>|t| = {res}    0.1645

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 35 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_number_major2_past20

{txt}{col 28}t(15) = {res}   -2.4189
{col 25}{txt}Prob>|t| = {res}    0.0484

95%{txt} confidence set for null hypothesis expression: [{res}-.3352{txt}, {res}-.001645{txt}]
{res}
Warning: 15 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_number_major2_past20

{txt}{col 28}t(15) = {res}    0.8417
{col 25}{txt}Prob>|t| = {res}    0.4638

95%{txt} confidence set for null hypothesis expression: [{res}-.2029{txt}, {res}.3933{txt}]
{res}
Warning: 11 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_number_major2_past20

{txt}{col 28}t(15) = {res}    0.4764
{col 25}{txt}Prob>|t| = {res}    0.6667

95%{txt} confidence set for null hypothesis expression: [{res}-.2849{txt}, {res}.4362{txt}]
{res}
Warning: 29 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_number_major2_past20

{txt}{col 28}t(15) = {res}   -0.4624
{col 25}{txt}Prob>|t| = {res}    0.6814

95%{txt} confidence set for null hypothesis expression: [{res}-.4851{txt}, {res}.3166{txt}]
{res}
Warning: 197 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_number_major2_past20

{txt}{col 28}t(15) = {res}    0.2106
{col 25}{txt}Prob>|t| = {res}    0.8636

95%{txt} confidence set for null hypothesis expression: [{res}-.6746{txt}, {res}.6847{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8196
                                                {txt}Root MSE          =    {res} 1.0532

{txt}{ralign 79:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}      fdi_ihs{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}one {c |}{col 15}{res}{space 2}-2.480361{col 27}{space 2} .4148007{col 38}{space 1}   -5.98{col 47}{space 3}0.000{col 55}{space 4}-3.364488{col 68}{space 3}-1.596234
{txt}{space 10}two {c |}{col 15}{res}{space 2}-2.238725{col 27}{space 2} .6739833{col 38}{space 1}   -3.32{col 47}{space 3}0.005{col 55}{space 4}-3.675287{col 68}{space 3}-.8021639
{txt}{space 8}three {c |}{col 15}{res}{space 2}-3.169122{col 27}{space 2} .5258422{col 38}{space 1}   -6.03{col 47}{space 3}0.000{col 55}{space 4}-4.289928{col 68}{space 3}-2.048316
{txt}{space 9}four {c |}{col 15}{res}{space 2}-2.275203{col 27}{space 2} .2730667{col 38}{space 1}   -8.33{col 47}{space 3}0.000{col 55}{space 4}-2.857231{col 68}{space 3}-1.693175
{txt}{space 9}five {c |}{col 15}{res}{space 2}-2.093821{col 27}{space 2} .2307606{col 38}{space 1}   -9.07{col 47}{space 3}0.000{col 55}{space 4}-2.585676{col 68}{space 3}-1.601967
{txt}{space 2}one_density {c |}{col 15}{res}{space 2} .0052222{col 27}{space 2} .0011596{col 38}{space 1}    4.50{col 47}{space 3}0.000{col 55}{space 4} .0027505{col 68}{space 3} .0076939
{txt}{space 2}two_density {c |}{col 15}{res}{space 2}  .000691{col 27}{space 2} .0024447{col 38}{space 1}    0.28{col 47}{space 3}0.781{col 55}{space 4}-.0045198{col 68}{space 3} .0059018
{txt}three_density {c |}{col 15}{res}{space 2} .1212951{col 27}{space 2} .0874144{col 38}{space 1}    1.39{col 47}{space 3}0.186{col 55}{space 4}-.0650242{col 68}{space 3} .3076145
{txt}{space 1}four_density {c |}{col 15}{res}{space 2} .0216732{col 27}{space 2} .0024939{col 38}{space 1}    8.69{col 47}{space 3}0.000{col 55}{space 4} .0163575{col 68}{space 3} .0269888
{txt}{space 1}five_density {c |}{col 15}{res}{space 2}-.0052436{col 27}{space 2} .0010451{col 38}{space 1}   -5.02{col 47}{space 3}0.000{col 55}{space 4}-.0074712{col 68}{space 3}-.0030161
{txt}{space 5}lag_lgdp {c |}{col 15}{res}{space 2} .7877042{col 27}{space 2} .9420456{col 38}{space 1}    0.84{col 47}{space 3}0.416{col 55}{space 4}-1.220219{col 68}{space 3} 2.795627
{txt}{space 5}lag_lpop {c |}{col 15}{res}{space 2}-.1341087{col 27}{space 2}   .25954{col 38}{space 1}   -0.52{col 47}{space 3}0.613{col 55}{space 4} -.687305{col 68}{space 3} .4190876
{txt}{space 13} {c |}
{space 9}date {c |}
{space 9}553  {c |}{col 15}{res}{space 2}-.0531386{col 27}{space 2} .2726175{col 38}{space 1}   -0.19{col 47}{space 3}0.848{col 55}{space 4} -.634209{col 68}{space 3} .5279318
{txt}{space 9}554  {c |}{col 15}{res}{space 2}-.4915856{col 27}{space 2} .2838562{col 38}{space 1}   -1.73{col 47}{space 3}0.104{col 55}{space 4}-1.096611{col 68}{space 3} .1134396
{txt}{space 9}555  {c |}{col 15}{res}{space 2}-.2011631{col 27}{space 2} .3045491{col 38}{space 1}   -0.66{col 47}{space 3}0.519{col 55}{space 4}-.8502942{col 68}{space 3}  .447968
{txt}{space 9}556  {c |}{col 15}{res}{space 2}-.2330706{col 27}{space 2} .2900432{col 38}{space 1}   -0.80{col 47}{space 3}0.434{col 55}{space 4} -.851283{col 68}{space 3} .3851418
{txt}{space 9}557  {c |}{col 15}{res}{space 2} .0419503{col 27}{space 2} .2876443{col 38}{space 1}    0.15{col 47}{space 3}0.886{col 55}{space 4} -.571149{col 68}{space 3} .6550495
{txt}{space 9}558  {c |}{col 15}{res}{space 2} .3595212{col 27}{space 2} .3473569{col 38}{space 1}    1.04{col 47}{space 3}0.317{col 55}{space 4}-.3808525{col 68}{space 3} 1.099895
{txt}{space 9}559  {c |}{col 15}{res}{space 2} .1886232{col 27}{space 2} .3875732{col 38}{space 1}    0.49{col 47}{space 3}0.634{col 55}{space 4}-.6374695{col 68}{space 3} 1.014716
{txt}{space 9}560  {c |}{col 15}{res}{space 2} .0725879{col 27}{space 2} .3760577{col 38}{space 1}    0.19{col 47}{space 3}0.850{col 55}{space 4}-.7289601{col 68}{space 3}  .874136
{txt}{space 9}561  {c |}{col 15}{res}{space 2} -.172525{col 27}{space 2} .2883515{col 38}{space 1}   -0.60{col 47}{space 3}0.559{col 55}{space 4}-.7871317{col 68}{space 3} .4420816
{txt}{space 9}562  {c |}{col 15}{res}{space 2}-.0148782{col 27}{space 2}  .320841{col 38}{space 1}   -0.05{col 47}{space 3}0.964{col 55}{space 4}-.6987346{col 68}{space 3} .6689783
{txt}{space 9}563  {c |}{col 15}{res}{space 2}-.0206692{col 27}{space 2} .3228138{col 38}{space 1}   -0.06{col 47}{space 3}0.950{col 55}{space 4}-.7087306{col 68}{space 3} .6673921
{txt}{space 9}564  {c |}{col 15}{res}{space 2}-.5271446{col 27}{space 2} .3566383{col 38}{space 1}   -1.48{col 47}{space 3}0.160{col 55}{space 4}-1.287301{col 68}{space 3}  .233012
{txt}{space 9}565  {c |}{col 15}{res}{space 2}-.1109611{col 27}{space 2} .4890678{col 38}{space 1}   -0.23{col 47}{space 3}0.824{col 55}{space 4}-1.153385{col 68}{space 3} .9314623
{txt}{space 9}566  {c |}{col 15}{res}{space 2}-.0923759{col 27}{space 2} .3179032{col 38}{space 1}   -0.29{col 47}{space 3}0.775{col 55}{space 4}-.7699705{col 68}{space 3} .5852188
{txt}{space 9}567  {c |}{col 15}{res}{space 2} -.315189{col 27}{space 2} .4188459{col 38}{space 1}   -0.75{col 47}{space 3}0.463{col 55}{space 4}-1.207938{col 68}{space 3}   .57756
{txt}{space 9}568  {c |}{col 15}{res}{space 2}-.2081662{col 27}{space 2} .4441924{col 38}{space 1}   -0.47{col 47}{space 3}0.646{col 55}{space 4} -1.15494{col 68}{space 3} .7386074
{txt}{space 9}569  {c |}{col 15}{res}{space 2}-.3788387{col 27}{space 2} .3644549{col 38}{space 1}   -1.04{col 47}{space 3}0.315{col 55}{space 4}-1.155656{col 68}{space 3} .3979787
{txt}{space 9}570  {c |}{col 15}{res}{space 2} .3481164{col 27}{space 2}   .46163{col 38}{space 1}    0.75{col 47}{space 3}0.462{col 55}{space 4}-.6358246{col 68}{space 3} 1.332057
{txt}{space 9}571  {c |}{col 15}{res}{space 2}-.6693356{col 27}{space 2} .3908791{col 38}{space 1}   -1.71{col 47}{space 3}0.107{col 55}{space 4}-1.502475{col 68}{space 3} .1638034
{txt}{space 9}572  {c |}{col 15}{res}{space 2}-.8650994{col 27}{space 2} .3240982{col 38}{space 1}   -2.67{col 47}{space 3}0.018{col 55}{space 4}-1.555898{col 68}{space 3}-.1743005
{txt}{space 9}573  {c |}{col 15}{res}{space 2}-.5082929{col 27}{space 2} .4715992{col 38}{space 1}   -1.08{col 47}{space 3}0.298{col 55}{space 4}-1.513483{col 68}{space 3} .4968969
{txt}{space 9}574  {c |}{col 15}{res}{space 2}-.3616532{col 27}{space 2} .3573747{col 38}{space 1}   -1.01{col 47}{space 3}0.328{col 55}{space 4}-1.123379{col 68}{space 3}  .400073
{txt}{space 9}575  {c |}{col 15}{res}{space 2}-.0894866{col 27}{space 2} .5252632{col 38}{space 1}   -0.17{col 47}{space 3}0.867{col 55}{space 4}-1.209059{col 68}{space 3} 1.030085
{txt}{space 9}576  {c |}{col 15}{res}{space 2}-.6517648{col 27}{space 2} .5532435{col 38}{space 1}   -1.18{col 47}{space 3}0.257{col 55}{space 4}-1.830975{col 68}{space 3} .5274458
{txt}{space 9}577  {c |}{col 15}{res}{space 2}-.1036055{col 27}{space 2} .5589807{col 38}{space 1}   -0.19{col 47}{space 3}0.855{col 55}{space 4}-1.295045{col 68}{space 3} 1.087834
{txt}{space 9}578  {c |}{col 15}{res}{space 2}-.3927991{col 27}{space 2} .6461921{col 38}{space 1}   -0.61{col 47}{space 3}0.552{col 55}{space 4}-1.770125{col 68}{space 3} .9845267
{txt}{space 9}579  {c |}{col 15}{res}{space 2}-.2397351{col 27}{space 2} .5118235{col 38}{space 1}   -0.47{col 47}{space 3}0.646{col 55}{space 4}-1.330661{col 68}{space 3}  .851191
{txt}{space 9}580  {c |}{col 15}{res}{space 2} .2237012{col 27}{space 2} .4756188{col 38}{space 1}    0.47{col 47}{space 3}0.645{col 55}{space 4}-.7900562{col 68}{space 3} 1.237459
{txt}{space 9}581  {c |}{col 15}{res}{space 2} .0694111{col 27}{space 2} .4507273{col 38}{space 1}    0.15{col 47}{space 3}0.880{col 55}{space 4}-.8912913{col 68}{space 3} 1.030114
{txt}{space 9}582  {c |}{col 15}{res}{space 2} .0926304{col 27}{space 2} .5065153{col 38}{space 1}    0.18{col 47}{space 3}0.857{col 55}{space 4}-.9869814{col 68}{space 3} 1.172242
{txt}{space 9}583  {c |}{col 15}{res}{space 2}-.0446768{col 27}{space 2} .5643195{col 38}{space 1}   -0.08{col 47}{space 3}0.938{col 55}{space 4}-1.247495{col 68}{space 3} 1.158142
{txt}{space 9}584  {c |}{col 15}{res}{space 2}  .121506{col 27}{space 2} .5261298{col 38}{space 1}    0.23{col 47}{space 3}0.820{col 55}{space 4}-.9999131{col 68}{space 3} 1.242925
{txt}{space 9}585  {c |}{col 15}{res}{space 2} .0471554{col 27}{space 2} .4455929{col 38}{space 1}    0.11{col 47}{space 3}0.917{col 55}{space 4}-.9026034{col 68}{space 3} .9969143
{txt}{space 9}586  {c |}{col 15}{res}{space 2}-.0542261{col 27}{space 2} .5166585{col 38}{space 1}   -0.10{col 47}{space 3}0.918{col 55}{space 4}-1.155458{col 68}{space 3} 1.047005
{txt}{space 9}587  {c |}{col 15}{res}{space 2}-.2737867{col 27}{space 2} .5702579{col 38}{space 1}   -0.48{col 47}{space 3}0.638{col 55}{space 4}-1.489263{col 68}{space 3} .9416892
{txt}{space 9}588  {c |}{col 15}{res}{space 2}-.0499514{col 27}{space 2} .6066128{col 38}{space 1}   -0.08{col 47}{space 3}0.935{col 55}{space 4}-1.342916{col 68}{space 3} 1.243013
{txt}{space 9}589  {c |}{col 15}{res}{space 2} .1481711{col 27}{space 2} .6298715{col 38}{space 1}    0.24{col 47}{space 3}0.817{col 55}{space 4}-1.194368{col 68}{space 3}  1.49071
{txt}{space 9}590  {c |}{col 15}{res}{space 2} .0766497{col 27}{space 2} .6382726{col 38}{space 1}    0.12{col 47}{space 3}0.906{col 55}{space 4}-1.283796{col 68}{space 3} 1.437095
{txt}{space 9}591  {c |}{col 15}{res}{space 2}-.5083199{col 27}{space 2}  .677559{col 38}{space 1}   -0.75{col 47}{space 3}0.465{col 55}{space 4}-1.952503{col 68}{space 3} .9358629
{txt}{space 9}592  {c |}{col 15}{res}{space 2} .0735637{col 27}{space 2}  .539204{col 38}{space 1}    0.14{col 47}{space 3}0.893{col 55}{space 4}-1.075722{col 68}{space 3}  1.22285
{txt}{space 9}593  {c |}{col 15}{res}{space 2} .3745532{col 27}{space 2}  .663519{col 38}{space 1}    0.56{col 47}{space 3}0.581{col 55}{space 4}-1.039704{col 68}{space 3} 1.788811
{txt}{space 9}594  {c |}{col 15}{res}{space 2} .3847486{col 27}{space 2} .6187411{col 38}{space 1}    0.62{col 47}{space 3}0.543{col 55}{space 4}-.9340668{col 68}{space 3} 1.703564
{txt}{space 9}595  {c |}{col 15}{res}{space 2} .3797356{col 27}{space 2} .6912701{col 38}{space 1}    0.55{col 47}{space 3}0.591{col 55}{space 4}-1.093672{col 68}{space 3} 1.853143
{txt}{space 9}596  {c |}{col 15}{res}{space 2} .0839262{col 27}{space 2}  .548028{col 38}{space 1}    0.15{col 47}{space 3}0.880{col 55}{space 4}-1.084168{col 68}{space 3}  1.25202
{txt}{space 9}597  {c |}{col 15}{res}{space 2} .0848519{col 27}{space 2} .6071275{col 38}{space 1}    0.14{col 47}{space 3}0.891{col 55}{space 4} -1.20921{col 68}{space 3} 1.378913
{txt}{space 9}598  {c |}{col 15}{res}{space 2} .1980705{col 27}{space 2} .5988489{col 38}{space 1}    0.33{col 47}{space 3}0.745{col 55}{space 4}-1.078346{col 68}{space 3} 1.474487
{txt}{space 9}599  {c |}{col 15}{res}{space 2} -.007642{col 27}{space 2} .6254252{col 38}{space 1}   -0.01{col 47}{space 3}0.990{col 55}{space 4}-1.340704{col 68}{space 3}  1.32542
{txt}{space 9}600  {c |}{col 15}{res}{space 2} .1304666{col 27}{space 2} .7415531{col 38}{space 1}    0.18{col 47}{space 3}0.863{col 55}{space 4}-1.450116{col 68}{space 3}  1.71105
{txt}{space 9}601  {c |}{col 15}{res}{space 2}-.1125639{col 27}{space 2} .7094385{col 38}{space 1}   -0.16{col 47}{space 3}0.876{col 55}{space 4}-1.624696{col 68}{space 3} 1.399568
{txt}{space 9}602  {c |}{col 15}{res}{space 2} .3243888{col 27}{space 2} .8177459{col 38}{space 1}    0.40{col 47}{space 3}0.697{col 55}{space 4}-1.418595{col 68}{space 3} 2.067373
{txt}{space 9}603  {c |}{col 15}{res}{space 2}-.2627741{col 27}{space 2} .6477308{col 38}{space 1}   -0.41{col 47}{space 3}0.691{col 55}{space 4} -1.64338{col 68}{space 3} 1.117832
{txt}{space 9}604  {c |}{col 15}{res}{space 2} .0134847{col 27}{space 2} .6910968{col 38}{space 1}    0.02{col 47}{space 3}0.985{col 55}{space 4}-1.459553{col 68}{space 3} 1.486523
{txt}{space 9}605  {c |}{col 15}{res}{space 2} .4011819{col 27}{space 2} .6710867{col 38}{space 1}    0.60{col 47}{space 3}0.559{col 55}{space 4}-1.029205{col 68}{space 3} 1.831569
{txt}{space 9}606  {c |}{col 15}{res}{space 2} .0044808{col 27}{space 2} .7649434{col 38}{space 1}    0.01{col 47}{space 3}0.995{col 55}{space 4}-1.625957{col 68}{space 3} 1.634919
{txt}{space 9}607  {c |}{col 15}{res}{space 2} .3217679{col 27}{space 2} .7151726{col 38}{space 1}    0.45{col 47}{space 3}0.659{col 55}{space 4}-1.202586{col 68}{space 3} 1.846122
{txt}{space 9}608  {c |}{col 15}{res}{space 2} .1434784{col 27}{space 2} .7544411{col 38}{space 1}    0.19{col 47}{space 3}0.852{col 55}{space 4}-1.464575{col 68}{space 3} 1.751532
{txt}{space 9}609  {c |}{col 15}{res}{space 2} .1114583{col 27}{space 2} .8814035{col 38}{space 1}    0.13{col 47}{space 3}0.901{col 55}{space 4}-1.767209{col 68}{space 3} 1.990125
{txt}{space 9}610  {c |}{col 15}{res}{space 2} .4714029{col 27}{space 2} .8565369{col 38}{space 1}    0.55{col 47}{space 3}0.590{col 55}{space 4}-1.354262{col 68}{space 3} 2.297068
{txt}{space 9}611  {c |}{col 15}{res}{space 2} .7251519{col 27}{space 2} .6705933{col 38}{space 1}    1.08{col 47}{space 3}0.297{col 55}{space 4}-.7041838{col 68}{space 3} 2.154488
{txt}{space 9}612  {c |}{col 15}{res}{space 2} .2011686{col 27}{space 2} .9126632{col 38}{space 1}    0.22{col 47}{space 3}0.829{col 55}{space 4}-1.744127{col 68}{space 3} 2.146464
{txt}{space 9}613  {c |}{col 15}{res}{space 2} .2595157{col 27}{space 2} 1.037821{col 38}{space 1}    0.25{col 47}{space 3}0.806{col 55}{space 4}-1.952546{col 68}{space 3} 2.471578
{txt}{space 9}614  {c |}{col 15}{res}{space 2} .1772711{col 27}{space 2} .8703417{col 38}{space 1}    0.20{col 47}{space 3}0.841{col 55}{space 4}-1.677818{col 68}{space 3} 2.032361
{txt}{space 9}615  {c |}{col 15}{res}{space 2} .3514244{col 27}{space 2} .9739986{col 38}{space 1}    0.36{col 47}{space 3}0.723{col 55}{space 4}-1.724604{col 68}{space 3} 2.427453
{txt}{space 9}616  {c |}{col 15}{res}{space 2} .2453013{col 27}{space 2} .9008454{col 38}{space 1}    0.27{col 47}{space 3}0.789{col 55}{space 4}-1.674805{col 68}{space 3} 2.165408
{txt}{space 9}617  {c |}{col 15}{res}{space 2}-.2251892{col 27}{space 2} 1.110455{col 38}{space 1}   -0.20{col 47}{space 3}0.842{col 55}{space 4}-2.592069{col 68}{space 3} 2.141691
{txt}{space 9}618  {c |}{col 15}{res}{space 2} .1351564{col 27}{space 2} .8483308{col 38}{space 1}    0.16{col 47}{space 3}0.876{col 55}{space 4}-1.673018{col 68}{space 3} 1.943331
{txt}{space 9}619  {c |}{col 15}{res}{space 2} .6084632{col 27}{space 2} .9038328{col 38}{space 1}    0.67{col 47}{space 3}0.511{col 55}{space 4}-1.318011{col 68}{space 3} 2.534937
{txt}{space 9}620  {c |}{col 15}{res}{space 2} .3806053{col 27}{space 2} 1.071533{col 38}{space 1}    0.36{col 47}{space 3}0.727{col 55}{space 4}-1.903313{col 68}{space 3} 2.664523
{txt}{space 9}621  {c |}{col 15}{res}{space 2} .4854552{col 27}{space 2} .8420696{col 38}{space 1}    0.58{col 47}{space 3}0.573{col 55}{space 4}-1.309374{col 68}{space 3} 2.280284
{txt}{space 9}622  {c |}{col 15}{res}{space 2} .2931817{col 27}{space 2} .8520223{col 38}{space 1}    0.34{col 47}{space 3}0.736{col 55}{space 4}-1.522861{col 68}{space 3} 2.109224
{txt}{space 9}623  {c |}{col 15}{res}{space 2} .2904631{col 27}{space 2} .8499447{col 38}{space 1}    0.34{col 47}{space 3}0.737{col 55}{space 4}-1.521151{col 68}{space 3} 2.102077
{txt}{space 9}624  {c |}{col 15}{res}{space 2} .1282922{col 27}{space 2} 1.011273{col 38}{space 1}    0.13{col 47}{space 3}0.901{col 55}{space 4}-2.027186{col 68}{space 3}  2.28377
{txt}{space 9}625  {c |}{col 15}{res}{space 2} .1304202{col 27}{space 2} 1.063795{col 38}{space 1}    0.12{col 47}{space 3}0.904{col 55}{space 4}-2.137005{col 68}{space 3} 2.397846
{txt}{space 9}626  {c |}{col 15}{res}{space 2} .4220387{col 27}{space 2}  1.08504{col 38}{space 1}    0.39{col 47}{space 3}0.703{col 55}{space 4} -1.89067{col 68}{space 3} 2.734747
{txt}{space 9}627  {c |}{col 15}{res}{space 2} .0144082{col 27}{space 2} 1.065779{col 38}{space 1}    0.01{col 47}{space 3}0.989{col 55}{space 4}-2.257247{col 68}{space 3} 2.286063
{txt}{space 9}628  {c |}{col 15}{res}{space 2}-.4406555{col 27}{space 2} 1.065617{col 38}{space 1}   -0.41{col 47}{space 3}0.685{col 55}{space 4}-2.711965{col 68}{space 3} 1.830654
{txt}{space 9}629  {c |}{col 15}{res}{space 2}-.0555595{col 27}{space 2} 1.009022{col 38}{space 1}   -0.06{col 47}{space 3}0.957{col 55}{space 4} -2.20624{col 68}{space 3} 2.095121
{txt}{space 9}630  {c |}{col 15}{res}{space 2} .4031205{col 27}{space 2} 1.009124{col 38}{space 1}    0.40{col 47}{space 3}0.695{col 55}{space 4}-1.747776{col 68}{space 3} 2.554017
{txt}{space 9}631  {c |}{col 15}{res}{space 2}-.4109112{col 27}{space 2} 1.156691{col 38}{space 1}   -0.36{col 47}{space 3}0.727{col 55}{space 4}-2.876339{col 68}{space 3} 2.054516
{txt}{space 9}632  {c |}{col 15}{res}{space 2} .1001342{col 27}{space 2} 1.037912{col 38}{space 1}    0.10{col 47}{space 3}0.924{col 55}{space 4}-2.112123{col 68}{space 3} 2.312391
{txt}{space 9}633  {c |}{col 15}{res}{space 2} .5616099{col 27}{space 2} .9471824{col 38}{space 1}    0.59{col 47}{space 3}0.562{col 55}{space 4}-1.457262{col 68}{space 3} 2.580481
{txt}{space 9}634  {c |}{col 15}{res}{space 2} .0727012{col 27}{space 2} 1.006679{col 38}{space 1}    0.07{col 47}{space 3}0.943{col 55}{space 4}-2.072984{col 68}{space 3} 2.218386
{txt}{space 9}635  {c |}{col 15}{res}{space 2} .3400217{col 27}{space 2} 1.024718{col 38}{space 1}    0.33{col 47}{space 3}0.745{col 55}{space 4}-1.844113{col 68}{space 3} 2.524157
{txt}{space 9}636  {c |}{col 15}{res}{space 2} .1079761{col 27}{space 2} 1.117976{col 38}{space 1}    0.10{col 47}{space 3}0.924{col 55}{space 4}-2.274932{col 68}{space 3} 2.490885
{txt}{space 9}637  {c |}{col 15}{res}{space 2}-.2906851{col 27}{space 2} 1.128896{col 38}{space 1}   -0.26{col 47}{space 3}0.800{col 55}{space 4}-2.696871{col 68}{space 3}   2.1155
{txt}{space 9}638  {c |}{col 15}{res}{space 2} .6710129{col 27}{space 2}  1.10677{col 38}{space 1}    0.61{col 47}{space 3}0.553{col 55}{space 4}-1.688012{col 68}{space 3} 3.030038
{txt}{space 9}639  {c |}{col 15}{res}{space 2} .3098824{col 27}{space 2}  1.06027{col 38}{space 1}    0.29{col 47}{space 3}0.774{col 55}{space 4}-1.950029{col 68}{space 3} 2.569794
{txt}{space 9}640  {c |}{col 15}{res}{space 2} .4806177{col 27}{space 2} 1.079441{col 38}{space 1}    0.45{col 47}{space 3}0.662{col 55}{space 4}-1.820157{col 68}{space 3} 2.781392
{txt}{space 9}641  {c |}{col 15}{res}{space 2} .1837948{col 27}{space 2} 1.066663{col 38}{space 1}    0.17{col 47}{space 3}0.865{col 55}{space 4}-2.089744{col 68}{space 3} 2.457334
{txt}{space 9}642  {c |}{col 15}{res}{space 2} .0988294{col 27}{space 2} 1.037238{col 38}{space 1}    0.10{col 47}{space 3}0.925{col 55}{space 4} -2.11199{col 68}{space 3} 2.309649
{txt}{space 9}643  {c |}{col 15}{res}{space 2} .2377636{col 27}{space 2} 1.088824{col 38}{space 1}    0.22{col 47}{space 3}0.830{col 55}{space 4} -2.08301{col 68}{space 3} 2.558537
{txt}{space 9}644  {c |}{col 15}{res}{space 2}-.0691185{col 27}{space 2}  1.07224{col 38}{space 1}   -0.06{col 47}{space 3}0.949{col 55}{space 4}-2.354545{col 68}{space 3} 2.216308
{txt}{space 9}645  {c |}{col 15}{res}{space 2} .7492771{col 27}{space 2} 1.213844{col 38}{space 1}    0.62{col 47}{space 3}0.546{col 55}{space 4}-1.837971{col 68}{space 3} 3.336525
{txt}{space 9}646  {c |}{col 15}{res}{space 2} .3849095{col 27}{space 2} 1.131563{col 38}{space 1}    0.34{col 47}{space 3}0.738{col 55}{space 4}-2.026961{col 68}{space 3}  2.79678
{txt}{space 9}647  {c |}{col 15}{res}{space 2} .5241978{col 27}{space 2} 1.200393{col 38}{space 1}    0.44{col 47}{space 3}0.669{col 55}{space 4} -2.03438{col 68}{space 3} 3.082775
{txt}{space 9}648  {c |}{col 15}{res}{space 2} .8501398{col 27}{space 2} 1.277826{col 38}{space 1}    0.67{col 47}{space 3}0.516{col 55}{space 4}-1.873482{col 68}{space 3} 3.573762
{txt}{space 9}649  {c |}{col 15}{res}{space 2} 1.095023{col 27}{space 2} 1.256148{col 38}{space 1}    0.87{col 47}{space 3}0.397{col 55}{space 4}-1.582392{col 68}{space 3} 3.772438
{txt}{space 9}650  {c |}{col 15}{res}{space 2} .5194259{col 27}{space 2} 1.202766{col 38}{space 1}    0.43{col 47}{space 3}0.672{col 55}{space 4}-2.044208{col 68}{space 3}  3.08306
{txt}{space 9}651  {c |}{col 15}{res}{space 2} .3726187{col 27}{space 2} 1.256719{col 38}{space 1}    0.30{col 47}{space 3}0.771{col 55}{space 4}-2.306015{col 68}{space 3} 3.051253
{txt}{space 9}652  {c |}{col 15}{res}{space 2} .5320045{col 27}{space 2} 1.212459{col 38}{space 1}    0.44{col 47}{space 3}0.667{col 55}{space 4} -2.05229{col 68}{space 3} 3.116299
{txt}{space 9}653  {c |}{col 15}{res}{space 2} 1.271075{col 27}{space 2} 1.286806{col 38}{space 1}    0.99{col 47}{space 3}0.339{col 55}{space 4}-1.471687{col 68}{space 3} 4.013838
{txt}{space 9}654  {c |}{col 15}{res}{space 2} .8739986{col 27}{space 2} 1.256674{col 38}{space 1}    0.70{col 47}{space 3}0.497{col 55}{space 4} -1.80454{col 68}{space 3} 3.552537
{txt}{space 9}655  {c |}{col 15}{res}{space 2}  .878924{col 27}{space 2} 1.292729{col 38}{space 1}    0.68{col 47}{space 3}0.507{col 55}{space 4}-1.876463{col 68}{space 3}  3.63431
{txt}{space 9}656  {c |}{col 15}{res}{space 2} .7190455{col 27}{space 2} 1.206298{col 38}{space 1}    0.60{col 47}{space 3}0.560{col 55}{space 4}-1.852118{col 68}{space 3} 3.290208
{txt}{space 9}657  {c |}{col 15}{res}{space 2} .5303542{col 27}{space 2}  1.28998{col 38}{space 1}    0.41{col 47}{space 3}0.687{col 55}{space 4}-2.219174{col 68}{space 3} 3.279882
{txt}{space 9}658  {c |}{col 15}{res}{space 2} .2083436{col 27}{space 2}  1.50124{col 38}{space 1}    0.14{col 47}{space 3}0.891{col 55}{space 4}-2.991474{col 68}{space 3} 3.408161
{txt}{space 9}659  {c |}{col 15}{res}{space 2} .7505617{col 27}{space 2} 1.260193{col 38}{space 1}    0.60{col 47}{space 3}0.560{col 55}{space 4}-1.935476{col 68}{space 3} 3.436599
{txt}{space 9}660  {c |}{col 15}{res}{space 2} .3575064{col 27}{space 2} 1.359538{col 38}{space 1}    0.26{col 47}{space 3}0.796{col 55}{space 4}-2.540281{col 68}{space 3} 3.255294
{txt}{space 9}661  {c |}{col 15}{res}{space 2} .3930331{col 27}{space 2}  1.35527{col 38}{space 1}    0.29{col 47}{space 3}0.776{col 55}{space 4}-2.495657{col 68}{space 3} 3.281723
{txt}{space 9}662  {c |}{col 15}{res}{space 2} .9224726{col 27}{space 2} 1.341865{col 38}{space 1}    0.69{col 47}{space 3}0.502{col 55}{space 4}-1.937644{col 68}{space 3}  3.78259
{txt}{space 9}663  {c |}{col 15}{res}{space 2} .3811508{col 27}{space 2}  1.25978{col 38}{space 1}    0.30{col 47}{space 3}0.766{col 55}{space 4}-2.304007{col 68}{space 3} 3.066309
{txt}{space 9}664  {c |}{col 15}{res}{space 2} .6040325{col 27}{space 2} 1.277615{col 38}{space 1}    0.47{col 47}{space 3}0.643{col 55}{space 4} -2.11914{col 68}{space 3} 3.327205
{txt}{space 9}665  {c |}{col 15}{res}{space 2} .9783516{col 27}{space 2} 1.359848{col 38}{space 1}    0.72{col 47}{space 3}0.483{col 55}{space 4}-1.920095{col 68}{space 3} 3.876798
{txt}{space 9}666  {c |}{col 15}{res}{space 2} .9343274{col 27}{space 2} 1.269533{col 38}{space 1}    0.74{col 47}{space 3}0.473{col 55}{space 4}-1.771618{col 68}{space 3} 3.640273
{txt}{space 9}667  {c |}{col 15}{res}{space 2} .7729352{col 27}{space 2} 1.264645{col 38}{space 1}    0.61{col 47}{space 3}0.550{col 55}{space 4}-1.922591{col 68}{space 3} 3.468461
{txt}{space 9}668  {c |}{col 15}{res}{space 2} .6346854{col 27}{space 2} 1.281255{col 38}{space 1}    0.50{col 47}{space 3}0.628{col 55}{space 4}-2.096246{col 68}{space 3} 3.365617
{txt}{space 9}669  {c |}{col 15}{res}{space 2} .7501742{col 27}{space 2} 1.277412{col 38}{space 1}    0.59{col 47}{space 3}0.566{col 55}{space 4}-1.972565{col 68}{space 3} 3.472913
{txt}{space 9}670  {c |}{col 15}{res}{space 2} .3497905{col 27}{space 2} 1.249468{col 38}{space 1}    0.28{col 47}{space 3}0.783{col 55}{space 4}-2.313387{col 68}{space 3} 3.012968
{txt}{space 9}671  {c |}{col 15}{res}{space 2} .6410769{col 27}{space 2} 1.261314{col 38}{space 1}    0.51{col 47}{space 3}0.619{col 55}{space 4}-2.047349{col 68}{space 3} 3.329503
{txt}{space 9}672  {c |}{col 15}{res}{space 2} .5683904{col 27}{space 2} 1.299449{col 38}{space 1}    0.44{col 47}{space 3}0.668{col 55}{space 4}-2.201319{col 68}{space 3}   3.3381
{txt}{space 9}673  {c |}{col 15}{res}{space 2} .7002455{col 27}{space 2} 1.323575{col 38}{space 1}    0.53{col 47}{space 3}0.605{col 55}{space 4}-2.120887{col 68}{space 3} 3.521378
{txt}{space 9}674  {c |}{col 15}{res}{space 2} .8654598{col 27}{space 2} 1.379094{col 38}{space 1}    0.63{col 47}{space 3}0.540{col 55}{space 4} -2.07401{col 68}{space 3} 3.804929
{txt}{space 9}675  {c |}{col 15}{res}{space 2} 1.227217{col 27}{space 2} 1.429288{col 38}{space 1}    0.86{col 47}{space 3}0.404{col 55}{space 4}-1.819239{col 68}{space 3} 4.273672
{txt}{space 9}676  {c |}{col 15}{res}{space 2} 1.287392{col 27}{space 2}  1.40952{col 38}{space 1}    0.91{col 47}{space 3}0.376{col 55}{space 4}-1.716928{col 68}{space 3} 4.291713
{txt}{space 9}677  {c |}{col 15}{res}{space 2} .9725881{col 27}{space 2} 1.370563{col 38}{space 1}    0.71{col 47}{space 3}0.489{col 55}{space 4}-1.948698{col 68}{space 3} 3.893874
{txt}{space 9}678  {c |}{col 15}{res}{space 2} 1.198734{col 27}{space 2} 1.397692{col 38}{space 1}    0.86{col 47}{space 3}0.405{col 55}{space 4}-1.780377{col 68}{space 3} 4.177844
{txt}{space 9}679  {c |}{col 15}{res}{space 2} 1.295936{col 27}{space 2} 1.375574{col 38}{space 1}    0.94{col 47}{space 3}0.361{col 55}{space 4} -1.63603{col 68}{space 3} 4.227903
{txt}{space 9}680  {c |}{col 15}{res}{space 2} 1.347067{col 27}{space 2}  1.31418{col 38}{space 1}    1.03{col 47}{space 3}0.322{col 55}{space 4}-1.454042{col 68}{space 3} 4.148175
{txt}{space 9}681  {c |}{col 15}{res}{space 2}  1.35869{col 27}{space 2} 1.385961{col 38}{space 1}    0.98{col 47}{space 3}0.342{col 55}{space 4}-1.595415{col 68}{space 3} 4.312795
{txt}{space 9}682  {c |}{col 15}{res}{space 2} 1.018839{col 27}{space 2} 1.434887{col 38}{space 1}    0.71{col 47}{space 3}0.489{col 55}{space 4}-2.039549{col 68}{space 3} 4.077228
{txt}{space 9}683  {c |}{col 15}{res}{space 2} .8608728{col 27}{space 2} 1.371405{col 38}{space 1}    0.63{col 47}{space 3}0.540{col 55}{space 4}-2.062207{col 68}{space 3} 3.783953
{txt}{space 9}684  {c |}{col 15}{res}{space 2} 1.061806{col 27}{space 2} 1.518042{col 38}{space 1}    0.70{col 47}{space 3}0.495{col 55}{space 4}-2.173825{col 68}{space 3} 4.297437
{txt}{space 9}685  {c |}{col 15}{res}{space 2} .8815561{col 27}{space 2} 1.505207{col 38}{space 1}    0.59{col 47}{space 3}0.567{col 55}{space 4}-2.326716{col 68}{space 3} 4.089828
{txt}{space 9}686  {c |}{col 15}{res}{space 2} .8752302{col 27}{space 2} 1.552793{col 38}{space 1}    0.56{col 47}{space 3}0.581{col 55}{space 4} -2.43447{col 68}{space 3}  4.18493
{txt}{space 9}687  {c |}{col 15}{res}{space 2} 1.209368{col 27}{space 2} 1.510088{col 38}{space 1}    0.80{col 47}{space 3}0.436{col 55}{space 4}-2.009309{col 68}{space 3} 4.428044
{txt}{space 9}688  {c |}{col 15}{res}{space 2} .9157118{col 27}{space 2} 1.533489{col 38}{space 1}    0.60{col 47}{space 3}0.559{col 55}{space 4}-2.352842{col 68}{space 3} 4.184266
{txt}{space 9}689  {c |}{col 15}{res}{space 2} .8950204{col 27}{space 2} 1.522278{col 38}{space 1}    0.59{col 47}{space 3}0.565{col 55}{space 4}-2.349639{col 68}{space 3}  4.13968
{txt}{space 9}690  {c |}{col 15}{res}{space 2} .6119484{col 27}{space 2} 1.518429{col 38}{space 1}    0.40{col 47}{space 3}0.693{col 55}{space 4}-2.624507{col 68}{space 3} 3.848403
{txt}{space 9}691  {c |}{col 15}{res}{space 2} .7580555{col 27}{space 2} 1.600274{col 38}{space 1}    0.47{col 47}{space 3}0.643{col 55}{space 4}-2.652847{col 68}{space 3} 4.168958
{txt}{space 9}692  {c |}{col 15}{res}{space 2} .9370825{col 27}{space 2} 1.548146{col 38}{space 1}    0.61{col 47}{space 3}0.554{col 55}{space 4}-2.362712{col 68}{space 3} 4.236877
{txt}{space 9}693  {c |}{col 15}{res}{space 2} .8451136{col 27}{space 2} 1.510835{col 38}{space 1}    0.56{col 47}{space 3}0.584{col 55}{space 4}-2.375155{col 68}{space 3} 4.065382
{txt}{space 9}694  {c |}{col 15}{res}{space 2} .9303614{col 27}{space 2} 1.532679{col 38}{space 1}    0.61{col 47}{space 3}0.553{col 55}{space 4}-2.336466{col 68}{space 3} 4.197189
{txt}{space 9}695  {c |}{col 15}{res}{space 2} .7202452{col 27}{space 2} 1.525856{col 38}{space 1}    0.47{col 47}{space 3}0.644{col 55}{space 4}-2.532041{col 68}{space 3} 3.972531
{txt}{space 9}696  {c |}{col 15}{res}{space 2} .9233771{col 27}{space 2} 1.602558{col 38}{space 1}    0.58{col 47}{space 3}0.573{col 55}{space 4}-2.492393{col 68}{space 3} 4.339148
{txt}{space 9}697  {c |}{col 15}{res}{space 2} .8831505{col 27}{space 2}  1.60497{col 38}{space 1}    0.55{col 47}{space 3}0.590{col 55}{space 4}-2.537762{col 68}{space 3} 4.304063
{txt}{space 9}698  {c |}{col 15}{res}{space 2}  .941242{col 27}{space 2} 1.591536{col 38}{space 1}    0.59{col 47}{space 3}0.563{col 55}{space 4}-2.451037{col 68}{space 3} 4.333521
{txt}{space 9}699  {c |}{col 15}{res}{space 2}  .734286{col 27}{space 2} 1.592138{col 38}{space 1}    0.46{col 47}{space 3}0.651{col 55}{space 4}-2.659275{col 68}{space 3} 4.127847
{txt}{space 9}700  {c |}{col 15}{res}{space 2} 1.010379{col 27}{space 2} 1.631426{col 38}{space 1}    0.62{col 47}{space 3}0.545{col 55}{space 4}-2.466923{col 68}{space 3} 4.487682
{txt}{space 9}701  {c |}{col 15}{res}{space 2}  .645901{col 27}{space 2} 1.591718{col 38}{space 1}    0.41{col 47}{space 3}0.691{col 55}{space 4}-2.746766{col 68}{space 3} 4.038568
{txt}{space 9}702  {c |}{col 15}{res}{space 2} .4409399{col 27}{space 2}    1.636{col 38}{space 1}    0.27{col 47}{space 3}0.791{col 55}{space 4}-3.046111{col 68}{space 3} 3.927991
{txt}{space 9}703  {c |}{col 15}{res}{space 2} 1.011784{col 27}{space 2} 1.590919{col 38}{space 1}    0.64{col 47}{space 3}0.534{col 55}{space 4} -2.37918{col 68}{space 3} 4.402748
{txt}{space 9}704  {c |}{col 15}{res}{space 2}  1.25648{col 27}{space 2} 1.489322{col 38}{space 1}    0.84{col 47}{space 3}0.412{col 55}{space 4}-1.917934{col 68}{space 3} 4.430894
{txt}{space 9}705  {c |}{col 15}{res}{space 2} 1.319546{col 27}{space 2} 1.534535{col 38}{space 1}    0.86{col 47}{space 3}0.403{col 55}{space 4}-1.951239{col 68}{space 3}  4.59033
{txt}{space 9}706  {c |}{col 15}{res}{space 2}  1.23432{col 27}{space 2} 1.539456{col 38}{space 1}    0.80{col 47}{space 3}0.435{col 55}{space 4}-2.046952{col 68}{space 3} 4.515592
{txt}{space 9}707  {c |}{col 15}{res}{space 2} 1.110113{col 27}{space 2} 1.586797{col 38}{space 1}    0.70{col 47}{space 3}0.495{col 55}{space 4}-2.272066{col 68}{space 3} 4.492291
{txt}{space 9}708  {c |}{col 15}{res}{space 2} 1.592778{col 27}{space 2} 1.690198{col 38}{space 1}    0.94{col 47}{space 3}0.361{col 55}{space 4}-2.009794{col 68}{space 3}  5.19535
{txt}{space 9}709  {c |}{col 15}{res}{space 2} 1.003673{col 27}{space 2} 1.679574{col 38}{space 1}    0.60{col 47}{space 3}0.559{col 55}{space 4}-2.576255{col 68}{space 3}   4.5836
{txt}{space 9}710  {c |}{col 15}{res}{space 2} 1.316874{col 27}{space 2} 1.710582{col 38}{space 1}    0.77{col 47}{space 3}0.453{col 55}{space 4}-2.329145{col 68}{space 3} 4.962893
{txt}{space 9}711  {c |}{col 15}{res}{space 2} 1.638358{col 27}{space 2} 1.632345{col 38}{space 1}    1.00{col 47}{space 3}0.331{col 55}{space 4}-1.840904{col 68}{space 3} 5.117619
{txt}{space 9}712  {c |}{col 15}{res}{space 2} 1.225259{col 27}{space 2}  1.67943{col 38}{space 1}    0.73{col 47}{space 3}0.477{col 55}{space 4} -2.35436{col 68}{space 3} 4.804879
{txt}{space 9}713  {c |}{col 15}{res}{space 2} 1.686487{col 27}{space 2} 1.696326{col 38}{space 1}    0.99{col 47}{space 3}0.336{col 55}{space 4}-1.929146{col 68}{space 3} 5.302121
{txt}{space 9}714  {c |}{col 15}{res}{space 2} 1.342484{col 27}{space 2} 1.596898{col 38}{space 1}    0.84{col 47}{space 3}0.414{col 55}{space 4}-2.061223{col 68}{space 3}  4.74619
{txt}{space 9}715  {c |}{col 15}{res}{space 2} 1.357356{col 27}{space 2} 1.709668{col 38}{space 1}    0.79{col 47}{space 3}0.440{col 55}{space 4}-2.286715{col 68}{space 3} 5.001427
{txt}{space 9}716  {c |}{col 15}{res}{space 2} 1.259853{col 27}{space 2} 1.704596{col 38}{space 1}    0.74{col 47}{space 3}0.471{col 55}{space 4}-2.373407{col 68}{space 3} 4.893112
{txt}{space 9}717  {c |}{col 15}{res}{space 2} 1.106661{col 27}{space 2} 1.701815{col 38}{space 1}    0.65{col 47}{space 3}0.525{col 55}{space 4}-2.520671{col 68}{space 3} 4.733993
{txt}{space 9}718  {c |}{col 15}{res}{space 2} 1.483572{col 27}{space 2} 1.668281{col 38}{space 1}    0.89{col 47}{space 3}0.388{col 55}{space 4}-2.072284{col 68}{space 3} 5.039428
{txt}{space 9}719  {c |}{col 15}{res}{space 2} 1.342566{col 27}{space 2} 1.699885{col 38}{space 1}    0.79{col 47}{space 3}0.442{col 55}{space 4}-2.280653{col 68}{space 3} 4.965785
{txt}{space 13} {c |}
{space 6}region1 {c |}
{space 3}bangalore  {c |}{col 15}{res}{space 2} 1.375232{col 27}{space 2} .1885838{col 38}{space 1}    7.29{col 47}{space 3}0.000{col 55}{space 4} .9732749{col 68}{space 3} 1.777188
{txt}{space 6}bhopal  {c |}{col 15}{res}{space 2}-1.956677{col 27}{space 2} .5948532{col 38}{space 1}   -3.29{col 47}{space 3}0.005{col 55}{space 4}-3.224576{col 68}{space 3}-.6887772
{txt}{space 1}bubaneshwar  {c |}{col 15}{res}{space 2}-1.722331{col 27}{space 2} 1.055885{col 38}{space 1}   -1.63{col 47}{space 3}0.124{col 55}{space 4}-3.972898{col 68}{space 3} .5282351
{txt}{space 2}chandigarh  {c |}{col 15}{res}{space 2}-.3510113{col 27}{space 2} .1821684{col 38}{space 1}   -1.93{col 47}{space 3}0.073{col 55}{space 4}-.7392941{col 68}{space 3} .0372715
{txt}{space 5}chennai  {c |}{col 15}{res}{space 2} .9946718{col 27}{space 2} .1427077{col 38}{space 1}    6.97{col 47}{space 3}0.000{col 55}{space 4} .6904976{col 68}{space 3} 1.298846
{txt}{space 4}guwahati  {c |}{col 15}{res}{space 2}-.5511264{col 27}{space 2} 1.107467{col 38}{space 1}   -0.50{col 47}{space 3}0.626{col 55}{space 4}-2.911637{col 68}{space 3} 1.809384
{txt}{space 3}hyderabad  {c |}{col 15}{res}{space 2} .7190463{col 27}{space 2} .4916524{col 38}{space 1}    1.46{col 47}{space 3}0.164{col 55}{space 4} -.328886{col 68}{space 3} 1.766979
{txt}{space 6}jaipur  {c |}{col 15}{res}{space 2}-2.432473{col 27}{space 2} .4040888{col 38}{space 1}   -6.02{col 47}{space 3}0.000{col 55}{space 4}-3.293768{col 68}{space 3}-1.571179
{txt}{space 6}kanpur  {c |}{col 15}{res}{space 2}-1.799722{col 27}{space 2} .5200367{col 38}{space 1}   -3.46{col 47}{space 3}0.003{col 55}{space 4}-2.908154{col 68}{space 3}  -.69129
{txt}{space 7}kochi  {c |}{col 15}{res}{space 2} -2.35721{col 27}{space 2} .6868448{col 38}{space 1}   -3.43{col 47}{space 3}0.004{col 55}{space 4}-3.821185{col 68}{space 3}-.8932346
{txt}{space 5}kolkata  {c |}{col 15}{res}{space 2} 1.902257{col 27}{space 2} .3703096{col 38}{space 1}    5.14{col 47}{space 3}0.000{col 55}{space 4} 1.112961{col 68}{space 3} 2.691553
{txt}{space 6}mumbai  {c |}{col 15}{res}{space 2} .8940669{col 27}{space 2} .6561416{col 38}{space 1}    1.36{col 47}{space 3}0.193{col 55}{space 4}-.5044657{col 68}{space 3}   2.2926
{txt}{space 3}new_delhi  {c |}{col 15}{res}{space 2} 1.644399{col 27}{space 2} .8039077{col 38}{space 1}    2.05{col 47}{space 3}0.059{col 55}{space 4}-.0690901{col 68}{space 3} 3.357887
{txt}{space 6}panaji  {c |}{col 15}{res}{space 2}-1.373288{col 27}{space 2} 3.018663{col 38}{space 1}   -0.45{col 47}{space 3}0.656{col 55}{space 4}-7.807415{col 68}{space 3} 5.060839
{txt}{space 7}patna  {c |}{col 15}{res}{space 2} .1130252{col 27}{space 2} 1.010931{col 38}{space 1}    0.11{col 47}{space 3}0.912{col 55}{space 4}-2.041724{col 68}{space 3} 2.267774
{txt}{space 13} {c |}
{space 8}_cons {c |}{col 15}{res}{space 2}-4.582526{col 27}{space 2}   12.564{col 38}{space 1}   -0.36{col 47}{space 3}0.720{col 55}{space 4}-31.36206{col 68}{space 3} 22.19701
{txt}{hline 14}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 710 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -5.9339
{col 25}{txt}Prob>|t| = {res}    0.0217

95%{txt} confidence set for null hypothesis expression: [{res}-3.59{txt}, {res}-1.279{txt}]
{res}
Warning: 7 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -3.3163
{col 25}{txt}Prob>|t| = {res}    0.0115

95%{txt} confidence set for null hypothesis expression: [{res}-3.906{txt}, {res}-.7392{txt}]
{res}
Warning: 15 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -6.0093
{col 25}{txt}Prob>|t| = {res}    0.0021

95%{txt} confidence set for null hypothesis expression: [{res}-4.373{txt}, {res}-1.987{txt}]
{res}
Warning: 236 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -8.2971
{col 25}{txt}Prob>|t| = {res}    0.0054

95%{txt} confidence set for null hypothesis expression: [{res}-2.911{txt}, {res}-1.641{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -9.0257
{col 25}{txt}Prob>|t| = {res}    0.0028

95%{txt} confidence set for null hypothesis expression: [{res}-2.742{txt}, {res}-1.425{txt}]
{res}
Warning: 183 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_density

{txt}{col 28}t(15) = {res}    5.3880
{col 25}{txt}Prob>|t| = {res}    0.0720

95%{txt} confidence set for null hypothesis expression: [{res}-.0008874{txt}, {res}.01141{txt}]
{res}
Warning: 130 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_density

{txt}{col 28}t(15) = {res}    0.2701
{col 25}{txt}Prob>|t| = {res}    0.9050

95%{txt} confidence set for null hypothesis expression: [{res}-.01644{txt}, {res}.0215{txt}]
{res}
Warning: 39 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_density

{txt}{col 28}t(15) = {res}    1.3908
{col 25}{txt}Prob>|t| = {res}    0.2913

95%{txt} confidence set for null hypothesis expression: [{res}-.1748{txt}, {res}.3942{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_density

{txt}{col 28}t(15) = {res}    8.5751
{col 25}{txt}Prob>|t| = {res}    0.0018

95%{txt} confidence set for null hypothesis expression: [{res}.01229{txt}, {res}.03141{txt}]
{res}
Warning: 115 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_density

{txt}{col 28}t(15) = {res}   -5.4495
{col 25}{txt}Prob>|t| = {res}    0.0668

95%{txt} confidence set for null hypothesis expression: [{res}-.01124{txt}, {res}.000611{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8152
                                                {txt}Root MSE          =    {res}  1.066

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-2.294508{col 26}{space 2} .3583231{col 37}{space 1}   -6.40{col 46}{space 3}0.000{col 54}{space 4}-3.058256{col 67}{space 3}-1.530761
{txt}{space 9}two {c |}{col 14}{res}{space 2}-2.496259{col 26}{space 2}  .719654{col 37}{space 1}   -3.47{col 46}{space 3}0.003{col 54}{space 4}-4.030166{col 67}{space 3}-.9623531
{txt}{space 7}three {c |}{col 14}{res}{space 2}-3.343156{col 26}{space 2} .6341925{col 37}{space 1}   -5.27{col 46}{space 3}0.000{col 54}{space 4}-4.694905{col 67}{space 3}-1.991407
{txt}{space 8}four {c |}{col 14}{res}{space 2}-1.825234{col 26}{space 2}  .394624{col 37}{space 1}   -4.63{col 46}{space 3}0.000{col 54}{space 4}-2.666355{col 67}{space 3} -.984113
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.634467{col 26}{space 2} .2392395{col 37}{space 1}   -6.83{col 46}{space 3}0.000{col 54}{space 4}-2.144394{col 67}{space 3} -1.12454
{txt}{space 3}one_urban {c |}{col 14}{res}{space 2} .0070249{col 26}{space 2} .0035684{col 37}{space 1}    1.97{col 46}{space 3}0.068{col 54}{space 4} -.000581{col 67}{space 3} .0146307
{txt}{space 3}two_urban {c |}{col 14}{res}{space 2}-.0012928{col 26}{space 2}  .005726{col 37}{space 1}   -0.23{col 46}{space 3}0.824{col 54}{space 4}-.0134975{col 67}{space 3}  .010912
{txt}{space 1}three_urban {c |}{col 14}{res}{space 2}-.0071959{col 26}{space 2} .0139845{col 37}{space 1}   -0.51{col 46}{space 3}0.614{col 54}{space 4}-.0370032{col 67}{space 3} .0226114
{txt}{space 2}four_urban {c |}{col 14}{res}{space 2} .0164051{col 26}{space 2} .0061582{col 37}{space 1}    2.66{col 46}{space 3}0.018{col 54}{space 4} .0032792{col 67}{space 3}  .029531
{txt}{space 2}five_urban {c |}{col 14}{res}{space 2}-.0022453{col 26}{space 2} .0030394{col 37}{space 1}   -0.74{col 46}{space 3}0.471{col 54}{space 4}-.0087237{col 67}{space 3}  .004233
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} .8800446{col 26}{space 2} 1.019695{col 37}{space 1}    0.86{col 46}{space 3}0.402{col 54}{space 4}-1.293385{col 67}{space 3} 3.053474
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.0874347{col 26}{space 2} .3222344{col 37}{space 1}   -0.27{col 46}{space 3}0.790{col 54}{space 4} -.774261{col 67}{space 3} .5993916
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2726175{col 37}{space 1}   -0.19{col 46}{space 3}0.848{col 54}{space 4} -.634209{col 67}{space 3} .5279318
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2838562{col 37}{space 1}   -1.73{col 46}{space 3}0.104{col 54}{space 4}-1.096611{col 67}{space 3} .1134396
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3045491{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-.8502942{col 67}{space 3}  .447968
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2900432{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4} -.851283{col 67}{space 3} .3851418
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2876443{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4} -.571149{col 67}{space 3} .6550495
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3473569{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.3808525{col 67}{space 3} 1.099895
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3875732{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-.6374695{col 67}{space 3} 1.014716
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3760577{col 37}{space 1}    0.19{col 46}{space 3}0.850{col 54}{space 4}-.7289601{col 67}{space 3}  .874136
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2883515{col 37}{space 1}   -0.60{col 46}{space 3}0.559{col 54}{space 4}-.7871317{col 67}{space 3} .4420816
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2}  .320841{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6987346{col 67}{space 3} .6689783
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3228138{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7087306{col 67}{space 3} .6673921
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.5427017{col 26}{space 2} .3762353{col 37}{space 1}   -1.44{col 46}{space 3}0.170{col 54}{space 4}-1.344628{col 67}{space 3} .2592248
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.1265183{col 26}{space 2} .5042146{col 37}{space 1}   -0.25{col 46}{space 3}0.805{col 54}{space 4}-1.201226{col 67}{space 3} .9481898
{txt}{space 8}566  {c |}{col 14}{res}{space 2} -.107933{col 26}{space 2} .3331654{col 37}{space 1}   -0.32{col 46}{space 3}0.750{col 54}{space 4}-.8180584{col 67}{space 3} .6021923
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.3307462{col 26}{space 2} .4273727{col 37}{space 1}   -0.77{col 46}{space 3}0.451{col 54}{space 4}-1.241669{col 67}{space 3} .5801771
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.2237234{col 26}{space 2} .4576207{col 37}{space 1}   -0.49{col 46}{space 3}0.632{col 54}{space 4}-1.199119{col 67}{space 3} .7516721
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.3943958{col 26}{space 2} .3816659{col 37}{space 1}   -1.03{col 46}{space 3}0.318{col 54}{space 4}-1.207897{col 67}{space 3} .4191057
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .3325592{col 26}{space 2}  .475047{col 37}{space 1}    0.70{col 46}{space 3}0.495{col 54}{space 4}-.6799796{col 67}{space 3} 1.345098
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.8876557{col 26}{space 2} .4484958{col 37}{space 1}   -1.98{col 46}{space 3}0.066{col 54}{space 4}-1.843602{col 67}{space 3} .0682904
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-1.083419{col 26}{space 2} .3834463{col 37}{space 1}   -2.83{col 46}{space 3}0.013{col 54}{space 4}-1.900716{col 67}{space 3} -.266123
{txt}{space 8}573  {c |}{col 14}{res}{space 2} -.726613{col 26}{space 2} .5328371{col 37}{space 1}   -1.36{col 46}{space 3}0.193{col 54}{space 4}-1.862328{col 67}{space 3} .4091023
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.5799733{col 26}{space 2} .4077029{col 37}{space 1}   -1.42{col 46}{space 3}0.175{col 54}{space 4}-1.448972{col 67}{space 3} .2890249
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.3078067{col 26}{space 2} .5623461{col 37}{space 1}   -0.55{col 46}{space 3}0.592{col 54}{space 4}-1.506419{col 67}{space 3} .8908056
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.8837718{col 26}{space 2}  .608241{col 37}{space 1}   -1.45{col 46}{space 3}0.167{col 54}{space 4}-2.180207{col 67}{space 3} .4126631
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.3356126{col 26}{space 2} .5903056{col 37}{space 1}   -0.57{col 46}{space 3}0.578{col 54}{space 4}-1.593819{col 67}{space 3}  .922594
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.6248062{col 26}{space 2} .7093532{col 37}{space 1}   -0.88{col 46}{space 3}0.392{col 54}{space 4}-2.136757{col 67}{space 3} .8871444
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.4717421{col 26}{space 2} .5563294{col 37}{space 1}   -0.85{col 46}{space 3}0.410{col 54}{space 4} -1.65753{col 67}{space 3} .7140459
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.0083058{col 26}{space 2} .5495178{col 37}{space 1}   -0.02{col 46}{space 3}0.988{col 54}{space 4}-1.179575{col 67}{space 3} 1.162964
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.1625959{col 26}{space 2} .5146584{col 37}{space 1}   -0.32{col 46}{space 3}0.756{col 54}{space 4}-1.259564{col 67}{space 3} .9343724
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.1393767{col 26}{space 2} .5537534{col 37}{space 1}   -0.25{col 46}{space 3}0.805{col 54}{space 4}-1.319674{col 67}{space 3} 1.040921
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.2766838{col 26}{space 2}  .610366{col 37}{space 1}   -0.45{col 46}{space 3}0.657{col 54}{space 4}-1.577648{col 67}{space 3}  1.02428
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.1105011{col 26}{space 2} .5818628{col 37}{space 1}   -0.19{col 46}{space 3}0.852{col 54}{space 4}-1.350712{col 67}{space 3}  1.12971
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.1848516{col 26}{space 2} .5000583{col 37}{space 1}   -0.37{col 46}{space 3}0.717{col 54}{space 4}-1.250701{col 67}{space 3} .8809974
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.2862332{col 26}{space 2} .5726438{col 37}{space 1}   -0.50{col 46}{space 3}0.624{col 54}{space 4}-1.506795{col 67}{space 3} .9343282
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.5057938{col 26}{space 2} .6027478{col 37}{space 1}   -0.84{col 46}{space 3}0.415{col 54}{space 4} -1.79052{col 67}{space 3} .7789328
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.2969355{col 26}{space 2} .6572173{col 37}{space 1}   -0.45{col 46}{space 3}0.658{col 54}{space 4}-1.697761{col 67}{space 3}  1.10389
{txt}{space 8}589  {c |}{col 14}{res}{space 2} -.098813{col 26}{space 2}  .700604{col 37}{space 1}   -0.14{col 46}{space 3}0.890{col 54}{space 4}-1.592115{col 67}{space 3} 1.394489
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.1703345{col 26}{space 2} .6988324{col 37}{space 1}   -0.24{col 46}{space 3}0.811{col 54}{space 4}-1.659861{col 67}{space 3} 1.319192
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-.7553041{col 26}{space 2} .7364154{col 37}{space 1}   -1.03{col 46}{space 3}0.321{col 54}{space 4}-2.324936{col 67}{space 3} .8143281
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.1734204{col 26}{space 2} .6057045{col 37}{space 1}   -0.29{col 46}{space 3}0.779{col 54}{space 4}-1.464449{col 67}{space 3} 1.117608
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .1275691{col 26}{space 2} .7048219{col 37}{space 1}    0.18{col 46}{space 3}0.859{col 54}{space 4}-1.374723{col 67}{space 3} 1.629861
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .1377644{col 26}{space 2} .6815361{col 37}{space 1}    0.20{col 46}{space 3}0.843{col 54}{space 4}-1.314895{col 67}{space 3} 1.590424
{txt}{space 8}595  {c |}{col 14}{res}{space 2} .1327514{col 26}{space 2} .7529846{col 37}{space 1}    0.18{col 46}{space 3}0.862{col 54}{space 4}-1.472197{col 67}{space 3}   1.7377
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.1630579{col 26}{space 2} .6120663{col 37}{space 1}   -0.27{col 46}{space 3}0.794{col 54}{space 4}-1.467646{col 67}{space 3} 1.141531
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.1621322{col 26}{space 2} .6482635{col 37}{space 1}   -0.25{col 46}{space 3}0.806{col 54}{space 4}-1.543873{col 67}{space 3} 1.219609
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.0489137{col 26}{space 2} .6544735{col 37}{space 1}   -0.07{col 46}{space 3}0.941{col 54}{space 4}-1.443891{col 67}{space 3} 1.346063
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.2546262{col 26}{space 2} .6887399{col 37}{space 1}   -0.37{col 46}{space 3}0.717{col 54}{space 4}-1.722641{col 67}{space 3} 1.213388
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.1299965{col 26}{space 2} .7904761{col 37}{space 1}   -0.16{col 46}{space 3}0.872{col 54}{space 4}-1.814856{col 67}{space 3} 1.554863
{txt}{space 8}601  {c |}{col 14}{res}{space 2} -.373027{col 26}{space 2} .7820613{col 37}{space 1}   -0.48{col 46}{space 3}0.640{col 54}{space 4}-2.039951{col 67}{space 3} 1.293897
{txt}{space 8}602  {c |}{col 14}{res}{space 2} .0639257{col 26}{space 2} .8682129{col 37}{space 1}    0.07{col 46}{space 3}0.942{col 54}{space 4}-1.786626{col 67}{space 3} 1.914478
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.4149999{col 26}{space 2} .6892149{col 37}{space 1}   -0.60{col 46}{space 3}0.556{col 54}{space 4}-1.884027{col 67}{space 3} 1.054027
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-.1387411{col 26}{space 2} .7342193{col 37}{space 1}   -0.19{col 46}{space 3}0.853{col 54}{space 4}-1.703693{col 67}{space 3}  1.42621
{txt}{space 8}605  {c |}{col 14}{res}{space 2} .2489561{col 26}{space 2} .7080735{col 37}{space 1}    0.35{col 46}{space 3}0.730{col 54}{space 4}-1.260267{col 67}{space 3} 1.758179
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-.1477451{col 26}{space 2}  .797053{col 37}{space 1}   -0.19{col 46}{space 3}0.855{col 54}{space 4}-1.846623{col 67}{space 3} 1.551133
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .1695421{col 26}{space 2} .7546269{col 37}{space 1}    0.22{col 46}{space 3}0.825{col 54}{space 4}-1.438907{col 67}{space 3} 1.777991
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-.0087474{col 26}{space 2} .7835053{col 37}{space 1}   -0.01{col 46}{space 3}0.991{col 54}{space 4}-1.678749{col 67}{space 3} 1.661255
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-.0407675{col 26}{space 2} .9364983{col 37}{space 1}   -0.04{col 46}{space 3}0.966{col 54}{space 4}-2.036866{col 67}{space 3} 1.955331
{txt}{space 8}610  {c |}{col 14}{res}{space 2} .3191771{col 26}{space 2} .9312688{col 37}{space 1}    0.34{col 46}{space 3}0.737{col 54}{space 4}-1.665775{col 67}{space 3}  2.30413
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .5729261{col 26}{space 2} .7275514{col 37}{space 1}    0.79{col 46}{space 3}0.443{col 54}{space 4} -.977813{col 67}{space 3} 2.123665
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .0325003{col 26}{space 2} .9821982{col 37}{space 1}    0.03{col 46}{space 3}0.974{col 54}{space 4}-2.061006{col 67}{space 3} 2.126006
{txt}{space 8}613  {c |}{col 14}{res}{space 2} .0908474{col 26}{space 2} 1.118341{col 37}{space 1}    0.08{col 46}{space 3}0.936{col 54}{space 4} -2.29284{col 67}{space 3} 2.474535
{txt}{space 8}614  {c |}{col 14}{res}{space 2} .0086028{col 26}{space 2}  .907686{col 37}{space 1}    0.01{col 46}{space 3}0.993{col 54}{space 4}-1.926084{col 67}{space 3}  1.94329
{txt}{space 8}615  {c |}{col 14}{res}{space 2} .1827561{col 26}{space 2}  1.04345{col 37}{space 1}    0.18{col 46}{space 3}0.863{col 54}{space 4}-2.041304{col 67}{space 3} 2.406817
{txt}{space 8}616  {c |}{col 14}{res}{space 2}  .076633{col 26}{space 2} .9695633{col 37}{space 1}    0.08{col 46}{space 3}0.938{col 54}{space 4}-1.989942{col 67}{space 3} 2.143208
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-.3938575{col 26}{space 2} 1.203393{col 37}{space 1}   -0.33{col 46}{space 3}0.748{col 54}{space 4} -2.95883{col 67}{space 3} 2.171115
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-.0335119{col 26}{space 2} .9144574{col 37}{space 1}   -0.04{col 46}{space 3}0.971{col 54}{space 4}-1.982632{col 67}{space 3} 1.915608
{txt}{space 8}619  {c |}{col 14}{res}{space 2} .4397949{col 26}{space 2} .9563761{col 37}{space 1}    0.46{col 46}{space 3}0.652{col 54}{space 4}-1.598672{col 67}{space 3} 2.478262
{txt}{space 8}620  {c |}{col 14}{res}{space 2}  .211937{col 26}{space 2} 1.177701{col 37}{space 1}    0.18{col 46}{space 3}0.860{col 54}{space 4}-2.298273{col 67}{space 3} 2.722147
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .3167869{col 26}{space 2} .9039191{col 37}{space 1}    0.35{col 46}{space 3}0.731{col 54}{space 4}-1.609871{col 67}{space 3} 2.243445
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .1245134{col 26}{space 2} .9185006{col 37}{space 1}    0.14{col 46}{space 3}0.894{col 54}{space 4}-1.833224{col 67}{space 3} 2.082251
{txt}{space 8}623  {c |}{col 14}{res}{space 2} .1217948{col 26}{space 2} .9240101{col 37}{space 1}    0.13{col 46}{space 3}0.897{col 54}{space 4}-1.847686{col 67}{space 3} 2.091276
{txt}{space 8}624  {c |}{col 14}{res}{space 2} -.061403{col 26}{space 2} 1.108918{col 37}{space 1}   -0.06{col 46}{space 3}0.957{col 54}{space 4}-2.425006{col 67}{space 3}   2.3022
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-.0592751{col 26}{space 2} 1.140543{col 37}{space 1}   -0.05{col 46}{space 3}0.959{col 54}{space 4}-2.490284{col 67}{space 3} 2.371734
{txt}{space 8}626  {c |}{col 14}{res}{space 2} .2323434{col 26}{space 2} 1.189941{col 37}{space 1}    0.20{col 46}{space 3}0.848{col 54}{space 4}-2.303955{col 67}{space 3} 2.768642
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-.1752871{col 26}{space 2} 1.160768{col 37}{space 1}   -0.15{col 46}{space 3}0.882{col 54}{space 4}-2.649406{col 67}{space 3} 2.298832
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-.6303507{col 26}{space 2} 1.145483{col 37}{space 1}   -0.55{col 46}{space 3}0.590{col 54}{space 4} -3.07189{col 67}{space 3} 1.811188
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-.2452548{col 26}{space 2} 1.085373{col 37}{space 1}   -0.23{col 46}{space 3}0.824{col 54}{space 4}-2.558672{col 67}{space 3} 2.068163
{txt}{space 8}630  {c |}{col 14}{res}{space 2} .2134252{col 26}{space 2} 1.073777{col 37}{space 1}    0.20{col 46}{space 3}0.845{col 54}{space 4}-2.075277{col 67}{space 3} 2.502128
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-.6006065{col 26}{space 2} 1.218757{col 37}{space 1}   -0.49{col 46}{space 3}0.629{col 54}{space 4}-3.198326{col 67}{space 3} 1.997114
{txt}{space 8}632  {c |}{col 14}{res}{space 2} -.089561{col 26}{space 2} 1.113517{col 37}{space 1}   -0.08{col 46}{space 3}0.937{col 54}{space 4}-2.462966{col 67}{space 3} 2.283844
{txt}{space 8}633  {c |}{col 14}{res}{space 2} .3719147{col 26}{space 2} 1.013928{col 37}{space 1}    0.37{col 46}{space 3}0.719{col 54}{space 4}-1.789221{col 67}{space 3}  2.53305
{txt}{space 8}634  {c |}{col 14}{res}{space 2} -.116994{col 26}{space 2} 1.064359{col 37}{space 1}   -0.11{col 46}{space 3}0.914{col 54}{space 4}-2.385623{col 67}{space 3} 2.151635
{txt}{space 8}635  {c |}{col 14}{res}{space 2} .1503265{col 26}{space 2} 1.096689{col 37}{space 1}    0.14{col 46}{space 3}0.893{col 54}{space 4}-2.187211{col 67}{space 3} 2.487864
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-.0934338{col 26}{space 2} 1.217945{col 37}{space 1}   -0.08{col 46}{space 3}0.940{col 54}{space 4}-2.689421{col 67}{space 3} 2.502554
{txt}{space 8}637  {c |}{col 14}{res}{space 2} -.492095{col 26}{space 2} 1.227167{col 37}{space 1}   -0.40{col 46}{space 3}0.694{col 54}{space 4} -3.10774{col 67}{space 3}  2.12355
{txt}{space 8}638  {c |}{col 14}{res}{space 2}  .469603{col 26}{space 2} 1.187437{col 37}{space 1}    0.40{col 46}{space 3}0.698{col 54}{space 4}-2.061359{col 67}{space 3} 3.000565
{txt}{space 8}639  {c |}{col 14}{res}{space 2} .1084725{col 26}{space 2} 1.133709{col 37}{space 1}    0.10{col 46}{space 3}0.925{col 54}{space 4}-2.307971{col 67}{space 3} 2.524916
{txt}{space 8}640  {c |}{col 14}{res}{space 2} .2792078{col 26}{space 2} 1.172804{col 37}{space 1}    0.24{col 46}{space 3}0.815{col 54}{space 4}-2.220564{col 67}{space 3}  2.77898
{txt}{space 8}641  {c |}{col 14}{res}{space 2} .4082476{col 26}{space 2}  1.20089{col 37}{space 1}    0.34{col 46}{space 3}0.739{col 54}{space 4}-2.151389{col 67}{space 3} 2.967884
{txt}{space 8}642  {c |}{col 14}{res}{space 2} .3232823{col 26}{space 2} 1.200773{col 37}{space 1}    0.27{col 46}{space 3}0.791{col 54}{space 4}-2.236105{col 67}{space 3} 2.882669
{txt}{space 8}643  {c |}{col 14}{res}{space 2} .4622164{col 26}{space 2} 1.183259{col 37}{space 1}    0.39{col 46}{space 3}0.702{col 54}{space 4}-2.059839{col 67}{space 3} 2.984272
{txt}{space 8}644  {c |}{col 14}{res}{space 2} .1553343{col 26}{space 2} 1.209209{col 37}{space 1}    0.13{col 46}{space 3}0.899{col 54}{space 4}-2.422034{col 67}{space 3} 2.732703
{txt}{space 8}645  {c |}{col 14}{res}{space 2}   .97373{col 26}{space 2} 1.418244{col 37}{space 1}    0.69{col 46}{space 3}0.503{col 54}{space 4}-2.049186{col 67}{space 3} 3.996646
{txt}{space 8}646  {c |}{col 14}{res}{space 2} .6093624{col 26}{space 2} 1.297674{col 37}{space 1}    0.47{col 46}{space 3}0.645{col 54}{space 4}-2.156565{col 67}{space 3}  3.37529
{txt}{space 8}647  {c |}{col 14}{res}{space 2} .7486506{col 26}{space 2} 1.401298{col 37}{space 1}    0.53{col 46}{space 3}0.601{col 54}{space 4}-2.238145{col 67}{space 3} 3.735446
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 1.061644{col 26}{space 2}  1.43522{col 37}{space 1}    0.74{col 46}{space 3}0.471{col 54}{space 4}-1.997456{col 67}{space 3} 4.120744
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 1.306528{col 26}{space 2}  1.42048{col 37}{space 1}    0.92{col 46}{space 3}0.372{col 54}{space 4}-1.721153{col 67}{space 3} 4.334208
{txt}{space 8}650  {c |}{col 14}{res}{space 2} .7309302{col 26}{space 2}   1.3766{col 37}{space 1}    0.53{col 46}{space 3}0.603{col 54}{space 4}-2.203223{col 67}{space 3} 3.665084
{txt}{space 8}651  {c |}{col 14}{res}{space 2} .5841229{col 26}{space 2} 1.430579{col 37}{space 1}    0.41{col 46}{space 3}0.689{col 54}{space 4}-2.465085{col 67}{space 3} 3.633331
{txt}{space 8}652  {c |}{col 14}{res}{space 2} .7435088{col 26}{space 2} 1.364098{col 37}{space 1}    0.55{col 46}{space 3}0.594{col 54}{space 4}-2.163997{col 67}{space 3} 3.651015
{txt}{space 8}653  {c |}{col 14}{res}{space 2}  1.48258{col 26}{space 2} 1.460632{col 37}{space 1}    1.02{col 46}{space 3}0.326{col 54}{space 4}-1.630684{col 67}{space 3} 4.595844
{txt}{space 8}654  {c |}{col 14}{res}{space 2} 1.085503{col 26}{space 2} 1.420088{col 37}{space 1}    0.76{col 46}{space 3}0.456{col 54}{space 4}-1.941344{col 67}{space 3}  4.11235
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 1.090428{col 26}{space 2} 1.463245{col 37}{space 1}    0.75{col 46}{space 3}0.468{col 54}{space 4}-2.028404{col 67}{space 3} 4.209261
{txt}{space 8}656  {c |}{col 14}{res}{space 2} .9305497{col 26}{space 2} 1.390552{col 37}{space 1}    0.67{col 46}{space 3}0.514{col 54}{space 4}-2.033341{col 67}{space 3} 3.894441
{txt}{space 8}657  {c |}{col 14}{res}{space 2} .7418584{col 26}{space 2} 1.437015{col 37}{space 1}    0.52{col 46}{space 3}0.613{col 54}{space 4}-2.321066{col 67}{space 3} 3.804783
{txt}{space 8}658  {c |}{col 14}{res}{space 2} .4198479{col 26}{space 2} 1.602714{col 37}{space 1}    0.26{col 46}{space 3}0.797{col 54}{space 4}-2.996256{col 67}{space 3} 3.835952
{txt}{space 8}659  {c |}{col 14}{res}{space 2}  .962066{col 26}{space 2} 1.429511{col 37}{space 1}    0.67{col 46}{space 3}0.511{col 54}{space 4}-2.084866{col 67}{space 3} 4.008998
{txt}{space 8}660  {c |}{col 14}{res}{space 2} .5602544{col 26}{space 2} 1.500982{col 37}{space 1}    0.37{col 46}{space 3}0.714{col 54}{space 4}-2.639012{col 67}{space 3} 3.759521
{txt}{space 8}661  {c |}{col 14}{res}{space 2}  .595781{col 26}{space 2} 1.551366{col 37}{space 1}    0.38{col 46}{space 3}0.706{col 54}{space 4}-2.710877{col 67}{space 3} 3.902439
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 1.125221{col 26}{space 2} 1.530848{col 37}{space 1}    0.74{col 46}{space 3}0.474{col 54}{space 4}-2.137704{col 67}{space 3} 4.388145
{txt}{space 8}663  {c |}{col 14}{res}{space 2} .5838988{col 26}{space 2} 1.455628{col 37}{space 1}    0.40{col 46}{space 3}0.694{col 54}{space 4}-2.518699{col 67}{space 3} 3.686496
{txt}{space 8}664  {c |}{col 14}{res}{space 2} .8067804{col 26}{space 2} 1.495932{col 37}{space 1}    0.54{col 46}{space 3}0.598{col 54}{space 4}-2.381724{col 67}{space 3} 3.995284
{txt}{space 8}665  {c |}{col 14}{res}{space 2}   1.1811{col 26}{space 2} 1.555348{col 37}{space 1}    0.76{col 46}{space 3}0.459{col 54}{space 4}-2.134046{col 67}{space 3} 4.496246
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 1.137075{col 26}{space 2} 1.433095{col 37}{space 1}    0.79{col 46}{space 3}0.440{col 54}{space 4}-1.917495{col 67}{space 3} 4.191645
{txt}{space 8}667  {c |}{col 14}{res}{space 2} .9756831{col 26}{space 2} 1.430933{col 37}{space 1}    0.68{col 46}{space 3}0.506{col 54}{space 4}-2.074279{col 67}{space 3} 4.025646
{txt}{space 8}668  {c |}{col 14}{res}{space 2} .8374333{col 26}{space 2} 1.447408{col 37}{space 1}    0.58{col 46}{space 3}0.571{col 54}{space 4}-2.247644{col 67}{space 3}  3.92251
{txt}{space 8}669  {c |}{col 14}{res}{space 2} .9529222{col 26}{space 2} 1.475054{col 37}{space 1}    0.65{col 46}{space 3}0.528{col 54}{space 4} -2.19108{col 67}{space 3} 4.096925
{txt}{space 8}670  {c |}{col 14}{res}{space 2} .2940935{col 26}{space 2} 1.398064{col 37}{space 1}    0.21{col 46}{space 3}0.836{col 54}{space 4}-2.685809{col 67}{space 3} 3.273996
{txt}{space 8}671  {c |}{col 14}{res}{space 2} .5853798{col 26}{space 2} 1.412111{col 37}{space 1}    0.41{col 46}{space 3}0.684{col 54}{space 4}-2.424464{col 67}{space 3} 3.595224
{txt}{space 8}672  {c |}{col 14}{res}{space 2} .5025726{col 26}{space 2} 1.443023{col 37}{space 1}    0.35{col 46}{space 3}0.732{col 54}{space 4}-2.573159{col 67}{space 3} 3.578304
{txt}{space 8}673  {c |}{col 14}{res}{space 2} .6344277{col 26}{space 2} 1.467235{col 37}{space 1}    0.43{col 46}{space 3}0.672{col 54}{space 4}-2.492909{col 67}{space 3} 3.761764
{txt}{space 8}674  {c |}{col 14}{res}{space 2}  .799642{col 26}{space 2} 1.525519{col 37}{space 1}    0.52{col 46}{space 3}0.608{col 54}{space 4}-2.451924{col 67}{space 3} 4.051208
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 1.161399{col 26}{space 2}  1.57409{col 37}{space 1}    0.74{col 46}{space 3}0.472{col 54}{space 4}-2.193695{col 67}{space 3} 4.516493
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 1.221575{col 26}{space 2} 1.552538{col 37}{space 1}    0.79{col 46}{space 3}0.444{col 54}{space 4}-2.087582{col 67}{space 3} 4.530732
{txt}{space 8}677  {c |}{col 14}{res}{space 2} .9067703{col 26}{space 2}  1.51033{col 37}{space 1}    0.60{col 46}{space 3}0.557{col 54}{space 4}-2.312421{col 67}{space 3} 4.125962
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 1.132916{col 26}{space 2} 1.521991{col 37}{space 1}    0.74{col 46}{space 3}0.468{col 54}{space 4}-2.111131{col 67}{space 3} 4.376962
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 1.230118{col 26}{space 2} 1.510293{col 37}{space 1}    0.81{col 46}{space 3}0.428{col 54}{space 4}-1.988994{col 67}{space 3} 4.449231
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 1.281249{col 26}{space 2} 1.457126{col 37}{space 1}    0.88{col 46}{space 3}0.393{col 54}{space 4}-1.824542{col 67}{space 3}  4.38704
{txt}{space 8}681  {c |}{col 14}{res}{space 2} 1.292872{col 26}{space 2} 1.510162{col 37}{space 1}    0.86{col 46}{space 3}0.405{col 54}{space 4}-1.925963{col 67}{space 3} 4.511707
{txt}{space 8}682  {c |}{col 14}{res}{space 2} .9530214{col 26}{space 2} 1.563652{col 37}{space 1}    0.61{col 46}{space 3}0.551{col 54}{space 4}-2.379823{col 67}{space 3} 4.285866
{txt}{space 8}683  {c |}{col 14}{res}{space 2} .7950551{col 26}{space 2} 1.522377{col 37}{space 1}    0.52{col 46}{space 3}0.609{col 54}{space 4}-2.449815{col 67}{space 3} 4.039926
{txt}{space 8}684  {c |}{col 14}{res}{space 2} .9840189{col 26}{space 2} 1.675279{col 37}{space 1}    0.59{col 46}{space 3}0.566{col 54}{space 4}-2.586753{col 67}{space 3} 4.554791
{txt}{space 8}685  {c |}{col 14}{res}{space 2} .8037688{col 26}{space 2} 1.634431{col 37}{space 1}    0.49{col 46}{space 3}0.630{col 54}{space 4}-2.679938{col 67}{space 3} 4.287476
{txt}{space 8}686  {c |}{col 14}{res}{space 2} .7974429{col 26}{space 2} 1.692734{col 37}{space 1}    0.47{col 46}{space 3}0.644{col 54}{space 4}-2.810534{col 67}{space 3}  4.40542
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 1.132088{col 26}{space 2}  1.62562{col 37}{space 1}    0.70{col 46}{space 3}0.497{col 54}{space 4} -2.33284{col 67}{space 3} 4.597016
{txt}{space 8}688  {c |}{col 14}{res}{space 2}  .838398{col 26}{space 2} 1.670813{col 37}{space 1}    0.50{col 46}{space 3}0.623{col 54}{space 4}-2.722856{col 67}{space 3} 4.399652
{txt}{space 8}689  {c |}{col 14}{res}{space 2} .8176726{col 26}{space 2} 1.658578{col 37}{space 1}    0.49{col 46}{space 3}0.629{col 54}{space 4}-2.717503{col 67}{space 3} 4.352848
{txt}{space 8}690  {c |}{col 14}{res}{space 2}  .534567{col 26}{space 2} 1.657318{col 37}{space 1}    0.32{col 46}{space 3}0.751{col 54}{space 4}-2.997924{col 67}{space 3} 4.067058
{txt}{space 8}691  {c |}{col 14}{res}{space 2} .6806405{col 26}{space 2} 1.728233{col 37}{space 1}    0.39{col 46}{space 3}0.699{col 54}{space 4}-3.003002{col 67}{space 3} 4.364283
{txt}{space 8}692  {c |}{col 14}{res}{space 2} .8596341{col 26}{space 2} 1.673451{col 37}{space 1}    0.51{col 46}{space 3}0.615{col 54}{space 4}-2.707242{col 67}{space 3}  4.42651
{txt}{space 8}693  {c |}{col 14}{res}{space 2} .7676321{col 26}{space 2} 1.651157{col 37}{space 1}    0.46{col 46}{space 3}0.649{col 54}{space 4}-2.751727{col 67}{space 3} 4.286991
{txt}{space 8}694  {c |}{col 14}{res}{space 2}  .852847{col 26}{space 2} 1.674291{col 37}{space 1}    0.51{col 46}{space 3}0.618{col 54}{space 4} -2.71582{col 67}{space 3} 4.421514
{txt}{space 8}695  {c |}{col 14}{res}{space 2}  .642698{col 26}{space 2} 1.655545{col 37}{space 1}    0.39{col 46}{space 3}0.703{col 54}{space 4}-2.886013{col 67}{space 3} 4.171409
{txt}{space 8}696  {c |}{col 14}{res}{space 2} .8388282{col 26}{space 2} 1.743113{col 37}{space 1}    0.48{col 46}{space 3}0.637{col 54}{space 4} -2.87653{col 67}{space 3} 4.554187
{txt}{space 8}697  {c |}{col 14}{res}{space 2} .7986017{col 26}{space 2} 1.737547{col 37}{space 1}    0.46{col 46}{space 3}0.652{col 54}{space 4}-2.904892{col 67}{space 3} 4.502095
{txt}{space 8}698  {c |}{col 14}{res}{space 2} .8566932{col 26}{space 2} 1.712067{col 37}{space 1}    0.50{col 46}{space 3}0.624{col 54}{space 4}-2.792491{col 67}{space 3} 4.505878
{txt}{space 8}699  {c |}{col 14}{res}{space 2} .6497372{col 26}{space 2} 1.731496{col 37}{space 1}    0.38{col 46}{space 3}0.713{col 54}{space 4}-3.040859{col 67}{space 3} 4.340334
{txt}{space 8}700  {c |}{col 14}{res}{space 2} .9258305{col 26}{space 2} 1.754915{col 37}{space 1}    0.53{col 46}{space 3}0.606{col 54}{space 4}-2.814683{col 67}{space 3} 4.666344
{txt}{space 8}701  {c |}{col 14}{res}{space 2} .5613522{col 26}{space 2} 1.727527{col 37}{space 1}    0.32{col 46}{space 3}0.750{col 54}{space 4}-3.120785{col 67}{space 3} 4.243489
{txt}{space 8}702  {c |}{col 14}{res}{space 2}  .356391{col 26}{space 2} 1.779792{col 37}{space 1}    0.20{col 46}{space 3}0.844{col 54}{space 4}-3.437146{col 67}{space 3} 4.149928
{txt}{space 8}703  {c |}{col 14}{res}{space 2} .9084976{col 26}{space 2}  1.73083{col 37}{space 1}    0.52{col 46}{space 3}0.607{col 54}{space 4}-2.780679{col 67}{space 3} 4.597674
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 1.153194{col 26}{space 2} 1.643829{col 37}{space 1}    0.70{col 46}{space 3}0.494{col 54}{space 4}-2.350545{col 67}{space 3} 4.656933
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 1.216259{col 26}{space 2} 1.689603{col 37}{space 1}    0.72{col 46}{space 3}0.483{col 54}{space 4}-2.385043{col 67}{space 3} 4.817562
{txt}{space 8}706  {c |}{col 14}{res}{space 2} 1.131034{col 26}{space 2} 1.697027{col 37}{space 1}    0.67{col 46}{space 3}0.515{col 54}{space 4}-2.486094{col 67}{space 3} 4.748162
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 1.006826{col 26}{space 2} 1.762884{col 37}{space 1}    0.57{col 46}{space 3}0.576{col 54}{space 4}-2.750672{col 67}{space 3} 4.764325
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 1.477649{col 26}{space 2}  1.85896{col 37}{space 1}    0.79{col 46}{space 3}0.439{col 54}{space 4} -2.48463{col 67}{space 3} 5.439928
{txt}{space 8}709  {c |}{col 14}{res}{space 2}  .888544{col 26}{space 2} 1.870033{col 37}{space 1}    0.48{col 46}{space 3}0.642{col 54}{space 4}-3.097336{col 67}{space 3} 4.874424
{txt}{space 8}710  {c |}{col 14}{res}{space 2} 1.201745{col 26}{space 2} 1.882068{col 37}{space 1}    0.64{col 46}{space 3}0.533{col 54}{space 4}-2.809788{col 67}{space 3} 5.213279
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 1.523229{col 26}{space 2} 1.787698{col 37}{space 1}    0.85{col 46}{space 3}0.408{col 54}{space 4} -2.28716{col 67}{space 3} 5.333618
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 1.110131{col 26}{space 2} 1.839078{col 37}{space 1}    0.60{col 46}{space 3}0.555{col 54}{space 4}-2.809772{col 67}{space 3} 5.030033
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 1.571359{col 26}{space 2} 1.838916{col 37}{space 1}    0.85{col 46}{space 3}0.406{col 54}{space 4}-2.348199{col 67}{space 3} 5.490916
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 1.227355{col 26}{space 2} 1.754552{col 37}{space 1}    0.70{col 46}{space 3}0.495{col 54}{space 4}-2.512384{col 67}{space 3} 4.967093
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 1.242227{col 26}{space 2} 1.863583{col 37}{space 1}    0.67{col 46}{space 3}0.515{col 54}{space 4}-2.729907{col 67}{space 3} 5.214361
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 1.144724{col 26}{space 2} 1.859402{col 37}{space 1}    0.62{col 46}{space 3}0.547{col 54}{space 4}-2.818499{col 67}{space 3} 5.107946
{txt}{space 8}717  {c |}{col 14}{res}{space 2}  .991532{col 26}{space 2} 1.852218{col 37}{space 1}    0.54{col 46}{space 3}0.600{col 54}{space 4}-2.956376{col 67}{space 3}  4.93944
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 1.368443{col 26}{space 2} 1.825849{col 37}{space 1}    0.75{col 46}{space 3}0.465{col 54}{space 4}-2.523262{col 67}{space 3} 5.260148
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 1.227437{col 26}{space 2} 1.855375{col 37}{space 1}    0.66{col 46}{space 3}0.518{col 54}{space 4}-2.727202{col 67}{space 3} 5.182076
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.441945{col 26}{space 2} .2259711{col 37}{space 1}    6.38{col 46}{space 3}0.000{col 54}{space 4} .9602987{col 67}{space 3} 1.923591
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.956778{col 26}{space 2}   .64652{col 37}{space 1}   -3.03{col 46}{space 3}0.008{col 54}{space 4}-3.334803{col 67}{space 3}-.5787532
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.441878{col 26}{space 2} 1.146937{col 37}{space 1}   -1.26{col 46}{space 3}0.228{col 54}{space 4}-3.886516{col 67}{space 3}  1.00276
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.3107058{col 26}{space 2} .1688697{col 37}{space 1}   -1.84{col 46}{space 3}0.086{col 54}{space 4}-.6706431{col 67}{space 3} .0492314
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.140219{col 26}{space 2} .1355931{col 37}{space 1}    8.41{col 46}{space 3}0.000{col 54}{space 4} .8512094{col 67}{space 3} 1.429229
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} -.327472{col 26}{space 2} 1.210348{col 37}{space 1}   -0.27{col 46}{space 3}0.790{col 54}{space 4}-2.907268{col 67}{space 3} 2.252324
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2}  .821441{col 26}{space 2} .5397458{col 37}{space 1}    1.52{col 46}{space 3}0.149{col 54}{space 4}-.3289999{col 67}{space 3} 1.971882
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.368829{col 26}{space 2} .4380663{col 37}{space 1}   -5.41{col 46}{space 3}0.000{col 54}{space 4}-3.302545{col 67}{space 3}-1.435112
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-1.831255{col 26}{space 2} .6125067{col 37}{space 1}   -2.99{col 46}{space 3}0.009{col 54}{space 4}-3.136782{col 67}{space 3}-.5257282
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.863661{col 26}{space 2}  .718004{col 37}{space 1}   -2.60{col 46}{space 3}0.020{col 54}{space 4}-3.394051{col 67}{space 3}-.3332721
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 1.981214{col 26}{space 2} .3994631{col 37}{space 1}    4.96{col 46}{space 3}0.000{col 54}{space 4} 1.129779{col 67}{space 3}  2.83265
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}  .823423{col 26}{space 2} .7217081{col 37}{space 1}    1.14{col 46}{space 3}0.272{col 54}{space 4}-.7148614{col 67}{space 3} 2.361707
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.015736{col 26}{space 2} .9837434{col 37}{space 1}    2.05{col 46}{space 3}0.058{col 54}{space 4}-.0810633{col 67}{space 3} 4.112536
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}-.9509096{col 26}{space 2} 3.465294{col 37}{space 1}   -0.27{col 46}{space 3}0.788{col 54}{space 4}-8.337009{col 67}{space 3}  6.43519
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}  .262376{col 26}{space 2} 1.064406{col 37}{space 1}    0.25{col 46}{space 3}0.809{col 54}{space 4}-2.006352{col 67}{space 3} 2.531104
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-6.320867{col 26}{space 2} 14.11973{col 37}{space 1}   -0.45{col 46}{space 3}0.661{col 54}{space 4}-36.41636{col 67}{space 3} 23.77463
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 361 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -6.3564
{col 25}{txt}Prob>|t| = {res}    0.0118

95%{txt} confidence set for null hypothesis expression: [{res}-3.318{txt}, {res}-1.299{txt}]
{res}
Warning: 6 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -3.4619
{col 25}{txt}Prob>|t| = {res}    0.0119

95%{txt} confidence set for null hypothesis expression: [{res}-4.205{txt}, {res}-.802{txt}]
{res}
Warning: 9 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -5.2749
{col 25}{txt}Prob>|t| = {res}    0.0023

95%{txt} confidence set for null hypothesis expression: [{res}-4.72{txt}, {res}-1.99{txt}]
{res}
Warning: 17 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -4.6340
{col 25}{txt}Prob>|t| = {res}    0.0087

95%{txt} confidence set for null hypothesis expression: [{res}-2.791{txt}, {res}-.8594{txt}]
{res}
Warning: 19 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -6.5975
{col 25}{txt}Prob>|t| = {res}    0.0279

95%{txt} confidence set for null hypothesis expression: [{res}-2.719{txt}, {res}-.5482{txt}]
{res}
Warning: 89 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_urban

{txt}{col 28}t(15) = {res}    2.2994
{col 25}{txt}Prob>|t| = {res}    0.0758

95%{txt} confidence set for null hypothesis expression: [{res}-.001053{txt}, {res}.01451{txt}]
{res}
Warning: 29 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_urban

{txt}{col 28}t(15) = {res}   -0.2203
{col 25}{txt}Prob>|t| = {res}    0.8573

95%{txt} confidence set for null hypothesis expression: [{res}-.01954{txt}, {res}.01614{txt}]
{res}
Warning: 22 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_urban

{txt}{col 28}t(15) = {res}   -0.5174
{col 25}{txt}Prob>|t| = {res}    0.6443

95%{txt} confidence set for null hypothesis expression: [{res}-.04259{txt}, {res}.02594{txt}]
{res}
Warning: 24 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_urban

{txt}{col 28}t(15) = {res}    2.6625
{col 25}{txt}Prob>|t| = {res}    0.0587

95%{txt} confidence set for null hypothesis expression: [{res}-.001184{txt}, {res}.03148{txt}]
{res}
Warning: 69 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_urban

{txt}{col 28}t(15) = {res}   -0.7747
{col 25}{txt}Prob>|t| = {res}    0.4877

95%{txt} confidence set for null hypothesis expression: [{res}-.009588{txt}, {res}.004967{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8143
                                                {txt}Root MSE          =    {res} 1.0685

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-2.168508{col 26}{space 2} .3336825{col 37}{space 1}   -6.50{col 46}{space 3}0.000{col 54}{space 4}-2.879736{col 67}{space 3}-1.457281
{txt}{space 9}two {c |}{col 14}{res}{space 2}-2.593253{col 26}{space 2}  .633182{col 37}{space 1}   -4.10{col 46}{space 3}0.001{col 54}{space 4}-3.942848{col 67}{space 3}-1.243657
{txt}{space 7}three {c |}{col 14}{res}{space 2}-3.253981{col 26}{space 2} .6277136{col 37}{space 1}   -5.18{col 46}{space 3}0.000{col 54}{space 4}-4.591921{col 67}{space 3}-1.916041
{txt}{space 8}four {c |}{col 14}{res}{space 2}-1.884876{col 26}{space 2} .4207344{col 37}{space 1}   -4.48{col 46}{space 3}0.000{col 54}{space 4} -2.78165{col 67}{space 3}-.9881021
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.935529{col 26}{space 2} .2984207{col 37}{space 1}   -6.49{col 46}{space 3}0.000{col 54}{space 4}-2.571597{col 67}{space 3} -1.29946
{txt}{space 2}one_elec_s {c |}{col 14}{res}{space 2} .0109612{col 26}{space 2} .0048248{col 37}{space 1}    2.27{col 46}{space 3}0.038{col 54}{space 4} .0006774{col 67}{space 3}  .021245
{txt}{space 2}two_elec_s {c |}{col 14}{res}{space 2} -.004675{col 26}{space 2} .0096617{col 37}{space 1}   -0.48{col 46}{space 3}0.635{col 54}{space 4}-.0252683{col 67}{space 3} .0159184
{txt}three_elec_s {c |}{col 14}{res}{space 2}-.0071669{col 26}{space 2} .0129677{col 37}{space 1}   -0.55{col 46}{space 3}0.589{col 54}{space 4} -.034807{col 67}{space 3} .0204732
{txt}{space 1}four_elec_s {c |}{col 14}{res}{space 2} .0162363{col 26}{space 2} .0078319{col 37}{space 1}    2.07{col 46}{space 3}0.056{col 54}{space 4}-.0004571{col 67}{space 3} .0329297
{txt}{space 1}five_elec_s {c |}{col 14}{res}{space 2}-.0033273{col 26}{space 2} .0031381{col 37}{space 1}   -1.06{col 46}{space 3}0.306{col 54}{space 4}-.0100161{col 67}{space 3} .0033615
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 1.078074{col 26}{space 2}  1.04787{col 37}{space 1}    1.03{col 46}{space 3}0.320{col 54}{space 4}-1.155407{col 67}{space 3} 3.311555
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.1128765{col 26}{space 2} .3184645{col 37}{space 1}   -0.35{col 46}{space 3}0.728{col 54}{space 4}-.7916676{col 67}{space 3} .5659146
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2726175{col 37}{space 1}   -0.19{col 46}{space 3}0.848{col 54}{space 4} -.634209{col 67}{space 3} .5279318
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2838562{col 37}{space 1}   -1.73{col 46}{space 3}0.104{col 54}{space 4}-1.096611{col 67}{space 3} .1134396
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3045491{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-.8502942{col 67}{space 3}  .447968
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2900432{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4} -.851283{col 67}{space 3} .3851418
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2876443{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4} -.571149{col 67}{space 3} .6550495
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3473569{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.3808525{col 67}{space 3} 1.099895
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3875732{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-.6374695{col 67}{space 3} 1.014716
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3760577{col 37}{space 1}    0.19{col 46}{space 3}0.850{col 54}{space 4}-.7289601{col 67}{space 3}  .874136
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2883515{col 37}{space 1}   -0.60{col 46}{space 3}0.559{col 54}{space 4}-.7871317{col 67}{space 3} .4420816
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2}  .320841{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6987346{col 67}{space 3} .6689783
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3228138{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7087306{col 67}{space 3} .6673921
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.5746243{col 26}{space 2} .3849969{col 37}{space 1}   -1.49{col 46}{space 3}0.156{col 54}{space 4}-1.395226{col 67}{space 3} .2459772
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.1584408{col 26}{space 2} .5136048{col 37}{space 1}   -0.31{col 46}{space 3}0.762{col 54}{space 4}-1.253164{col 67}{space 3}  .936282
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.1398556{col 26}{space 2} .3419939{col 37}{space 1}   -0.41{col 46}{space 3}0.688{col 54}{space 4}-.8687984{col 67}{space 3} .5890871
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.3626688{col 26}{space 2} .4350117{col 37}{space 1}   -0.83{col 46}{space 3}0.418{col 54}{space 4}-1.289874{col 67}{space 3} .5645367
{txt}{space 8}568  {c |}{col 14}{res}{space 2} -.255646{col 26}{space 2} .4695103{col 37}{space 1}   -0.54{col 46}{space 3}0.594{col 54}{space 4}-1.256384{col 67}{space 3} .7450916
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.4263184{col 26}{space 2} .3855842{col 37}{space 1}   -1.11{col 46}{space 3}0.286{col 54}{space 4}-1.248172{col 67}{space 3} .3955349
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .3006366{col 26}{space 2} .4808648{col 37}{space 1}    0.63{col 46}{space 3}0.541{col 54}{space 4}-.7243024{col 67}{space 3} 1.325576
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-1.073509{col 26}{space 2} .4874583{col 37}{space 1}   -2.20{col 46}{space 3}0.044{col 54}{space 4}-2.112501{col 67}{space 3}-.0345158
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-1.269272{col 26}{space 2} .4330761{col 37}{space 1}   -2.93{col 46}{space 3}0.010{col 54}{space 4}-2.192352{col 67}{space 3}-.3461924
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.9124658{col 26}{space 2} .5696018{col 37}{space 1}   -1.60{col 46}{space 3}0.130{col 54}{space 4}-2.126543{col 67}{space 3} .3016118
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.7658261{col 26}{space 2} .4458925{col 37}{space 1}   -1.72{col 46}{space 3}0.106{col 54}{space 4}-1.716224{col 67}{space 3} .1845713
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.4936595{col 26}{space 2} .5806542{col 37}{space 1}   -0.85{col 46}{space 3}0.409{col 54}{space 4}-1.731295{col 67}{space 3} .7439756
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-1.097544{col 26}{space 2} .6654013{col 37}{space 1}   -1.65{col 46}{space 3}0.120{col 54}{space 4}-2.515813{col 67}{space 3} .3207255
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.5493845{col 26}{space 2} .6295649{col 37}{space 1}   -0.87{col 46}{space 3}0.397{col 54}{space 4} -1.89127{col 67}{space 3} .7925013
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.8385782{col 26}{space 2} .7589861{col 37}{space 1}   -1.10{col 46}{space 3}0.287{col 54}{space 4}-2.456319{col 67}{space 3} .7791624
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.6855141{col 26}{space 2} .6068342{col 37}{space 1}   -1.13{col 46}{space 3}0.276{col 54}{space 4}-1.978951{col 67}{space 3} .6079224
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.2220778{col 26}{space 2} .6096686{col 37}{space 1}   -0.36{col 46}{space 3}0.721{col 54}{space 4}-1.521556{col 67}{space 3}   1.0774
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.3763679{col 26}{space 2} .5568493{col 37}{space 1}   -0.68{col 46}{space 3}0.509{col 54}{space 4}-1.563264{col 67}{space 3} .8105282
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.3531487{col 26}{space 2}   .58156{col 37}{space 1}   -0.61{col 46}{space 3}0.553{col 54}{space 4}-1.592715{col 67}{space 3} .8864172
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.4904558{col 26}{space 2} .6556903{col 37}{space 1}   -0.75{col 46}{space 3}0.466{col 54}{space 4}-1.888027{col 67}{space 3} .9071151
{txt}{space 8}584  {c |}{col 14}{res}{space 2} -.324273{col 26}{space 2}  .636008{col 37}{space 1}   -0.51{col 46}{space 3}0.618{col 54}{space 4}-1.679892{col 67}{space 3} 1.031346
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.3986236{col 26}{space 2} .5591314{col 37}{space 1}   -0.71{col 46}{space 3}0.487{col 54}{space 4}-1.590384{col 67}{space 3} .7931367
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.5000051{col 26}{space 2} .6129644{col 37}{space 1}   -0.82{col 46}{space 3}0.427{col 54}{space 4}-1.806508{col 67}{space 3} .8064975
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.7195657{col 26}{space 2} .6318885{col 37}{space 1}   -1.14{col 46}{space 3}0.273{col 54}{space 4}-2.066404{col 67}{space 3} .6272727
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.5414066{col 26}{space 2} .7205643{col 37}{space 1}   -0.75{col 46}{space 3}0.464{col 54}{space 4}-2.077253{col 67}{space 3} .9944398
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.3432841{col 26}{space 2} .7597817{col 37}{space 1}   -0.45{col 46}{space 3}0.658{col 54}{space 4} -1.96272{col 67}{space 3} 1.276152
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.4148055{col 26}{space 2} .7309516{col 37}{space 1}   -0.57{col 46}{space 3}0.579{col 54}{space 4}-1.972792{col 67}{space 3} 1.143181
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-.9997751{col 26}{space 2} .7799182{col 37}{space 1}   -1.28{col 46}{space 3}0.219{col 54}{space 4}-2.662131{col 67}{space 3} .6625812
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.4178915{col 26}{space 2} .6773388{col 37}{space 1}   -0.62{col 46}{space 3}0.547{col 54}{space 4}-1.861605{col 67}{space 3} 1.025822
{txt}{space 8}593  {c |}{col 14}{res}{space 2} -.116902{col 26}{space 2} .7519825{col 37}{space 1}   -0.16{col 46}{space 3}0.879{col 54}{space 4}-1.719715{col 67}{space 3} 1.485911
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-.1067066{col 26}{space 2} .7466764{col 37}{space 1}   -0.14{col 46}{space 3}0.888{col 54}{space 4} -1.69821{col 67}{space 3} 1.484796
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-.1117196{col 26}{space 2} .8211959{col 37}{space 1}   -0.14{col 46}{space 3}0.894{col 54}{space 4}-1.862057{col 67}{space 3} 1.638618
{txt}{space 8}596  {c |}{col 14}{res}{space 2} -.407529{col 26}{space 2}  .698576{col 37}{space 1}   -0.58{col 46}{space 3}0.568{col 54}{space 4}-1.896509{col 67}{space 3} 1.081451
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.4066033{col 26}{space 2} .7168977{col 37}{space 1}   -0.57{col 46}{space 3}0.579{col 54}{space 4}-1.934635{col 67}{space 3} 1.121428
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.2933847{col 26}{space 2} .7150404{col 37}{space 1}   -0.41{col 46}{space 3}0.687{col 54}{space 4}-1.817457{col 67}{space 3} 1.230688
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.4990972{col 26}{space 2} .7337009{col 37}{space 1}   -0.68{col 46}{space 3}0.507{col 54}{space 4}-2.062944{col 67}{space 3} 1.064749
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.4021115{col 26}{space 2} .8632845{col 37}{space 1}   -0.47{col 46}{space 3}0.648{col 54}{space 4}-2.242159{col 67}{space 3} 1.437936
{txt}{space 8}601  {c |}{col 14}{res}{space 2} -.645142{col 26}{space 2} .8732605{col 37}{space 1}   -0.74{col 46}{space 3}0.471{col 54}{space 4}-2.506453{col 67}{space 3} 1.216169
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.2081894{col 26}{space 2} .9209618{col 37}{space 1}   -0.23{col 46}{space 3}0.824{col 54}{space 4}-2.171173{col 67}{space 3} 1.754794
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.5548738{col 26}{space 2} .8945776{col 37}{space 1}   -0.62{col 46}{space 3}0.544{col 54}{space 4}-2.461621{col 67}{space 3} 1.351873
{txt}{space 8}604  {c |}{col 14}{res}{space 2} -.278615{col 26}{space 2} .8819549{col 37}{space 1}   -0.32{col 46}{space 3}0.756{col 54}{space 4}-2.158457{col 67}{space 3} 1.601227
{txt}{space 8}605  {c |}{col 14}{res}{space 2} .1090822{col 26}{space 2} .9191042{col 37}{space 1}    0.12{col 46}{space 3}0.907{col 54}{space 4}-1.849942{col 67}{space 3} 2.068106
{txt}{space 8}606  {c |}{col 14}{res}{space 2} -.287619{col 26}{space 2} 1.031475{col 37}{space 1}   -0.28{col 46}{space 3}0.784{col 54}{space 4}-2.486156{col 67}{space 3} 1.910918
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .0296682{col 26}{space 2} .9038359{col 37}{space 1}    0.03{col 46}{space 3}0.974{col 54}{space 4}-1.896812{col 67}{space 3} 1.956149
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-.1486214{col 26}{space 2} .9809249{col 37}{space 1}   -0.15{col 46}{space 3}0.882{col 54}{space 4}-2.239413{col 67}{space 3} 1.942171
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-.1806414{col 26}{space 2} 1.057251{col 37}{space 1}   -0.17{col 46}{space 3}0.867{col 54}{space 4}-2.434119{col 67}{space 3} 2.072836
{txt}{space 8}610  {c |}{col 14}{res}{space 2} .1793031{col 26}{space 2} 1.006112{col 37}{space 1}    0.18{col 46}{space 3}0.861{col 54}{space 4}-1.965174{col 67}{space 3}  2.32378
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .4330522{col 26}{space 2} .8591584{col 37}{space 1}    0.50{col 46}{space 3}0.622{col 54}{space 4}-1.398201{col 67}{space 3} 2.264305
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-.1411874{col 26}{space 2} 1.163867{col 37}{space 1}   -0.12{col 46}{space 3}0.905{col 54}{space 4}-2.621911{col 67}{space 3} 2.339537
{txt}{space 8}613  {c |}{col 14}{res}{space 2}-.0828403{col 26}{space 2}  1.18788{col 37}{space 1}   -0.07{col 46}{space 3}0.945{col 54}{space 4}-2.614747{col 67}{space 3} 2.449066
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-.1650849{col 26}{space 2}  1.10573{col 37}{space 1}   -0.15{col 46}{space 3}0.883{col 54}{space 4}-2.521893{col 67}{space 3} 2.191723
{txt}{space 8}615  {c |}{col 14}{res}{space 2} .0090683{col 26}{space 2} 1.037904{col 37}{space 1}    0.01{col 46}{space 3}0.993{col 54}{space 4}-2.203172{col 67}{space 3} 2.221309
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-.0970548{col 26}{space 2} 1.102779{col 37}{space 1}   -0.09{col 46}{space 3}0.931{col 54}{space 4}-2.447573{col 67}{space 3} 2.253463
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-.5675452{col 26}{space 2} 1.213844{col 37}{space 1}   -0.47{col 46}{space 3}0.647{col 54}{space 4}-3.154792{col 67}{space 3} 2.019701
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-.2071996{col 26}{space 2} .9865983{col 37}{space 1}   -0.21{col 46}{space 3}0.836{col 54}{space 4}-2.310084{col 67}{space 3} 1.895685
{txt}{space 8}619  {c |}{col 14}{res}{space 2} .2661072{col 26}{space 2} 1.076778{col 37}{space 1}    0.25{col 46}{space 3}0.808{col 54}{space 4}-2.028991{col 67}{space 3} 2.561205
{txt}{space 8}620  {c |}{col 14}{res}{space 2} .0382493{col 26}{space 2}  1.16981{col 37}{space 1}    0.03{col 46}{space 3}0.974{col 54}{space 4}-2.455141{col 67}{space 3}  2.53164
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .1430991{col 26}{space 2} 1.106055{col 37}{space 1}    0.13{col 46}{space 3}0.899{col 54}{space 4}-2.214402{col 67}{space 3}   2.5006
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-.0491743{col 26}{space 2} 1.038476{col 37}{space 1}   -0.05{col 46}{space 3}0.963{col 54}{space 4}-2.262633{col 67}{space 3} 2.164285
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-.0518929{col 26}{space 2} .9572113{col 37}{space 1}   -0.05{col 46}{space 3}0.957{col 54}{space 4}-2.092141{col 67}{space 3} 1.988355
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-.2596346{col 26}{space 2} 1.193988{col 37}{space 1}   -0.22{col 46}{space 3}0.831{col 54}{space 4} -2.80456{col 67}{space 3} 2.285291
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-.2575067{col 26}{space 2} 1.193258{col 37}{space 1}   -0.22{col 46}{space 3}0.832{col 54}{space 4}-2.800876{col 67}{space 3} 2.285862
{txt}{space 8}626  {c |}{col 14}{res}{space 2} .0341118{col 26}{space 2} 1.196431{col 37}{space 1}    0.03{col 46}{space 3}0.978{col 54}{space 4} -2.51602{col 67}{space 3} 2.584244
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-.3735187{col 26}{space 2} 1.188802{col 37}{space 1}   -0.31{col 46}{space 3}0.758{col 54}{space 4} -2.90739{col 67}{space 3} 2.160352
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-.8285823{col 26}{space 2}  1.29111{col 37}{space 1}   -0.64{col 46}{space 3}0.531{col 54}{space 4}-3.580519{col 67}{space 3} 1.923354
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-.4434864{col 26}{space 2} 1.209784{col 37}{space 1}   -0.37{col 46}{space 3}0.719{col 54}{space 4} -3.02208{col 67}{space 3} 2.135107
{txt}{space 8}630  {c |}{col 14}{res}{space 2} .0151936{col 26}{space 2} 1.209648{col 37}{space 1}    0.01{col 46}{space 3}0.990{col 54}{space 4}-2.563109{col 67}{space 3} 2.593497
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-.7988381{col 26}{space 2} 1.360399{col 37}{space 1}   -0.59{col 46}{space 3}0.566{col 54}{space 4}-3.698461{col 67}{space 3} 2.100785
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-.2877926{col 26}{space 2} 1.255232{col 37}{space 1}   -0.23{col 46}{space 3}0.822{col 54}{space 4}-2.963256{col 67}{space 3}  2.38767
{txt}{space 8}633  {c |}{col 14}{res}{space 2} .1736831{col 26}{space 2} 1.172662{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-2.325787{col 67}{space 3} 2.673153
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-.3152256{col 26}{space 2} 1.188925{col 37}{space 1}   -0.27{col 46}{space 3}0.795{col 54}{space 4}-2.849359{col 67}{space 3} 2.218908
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-.0479051{col 26}{space 2} 1.209454{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-2.625795{col 67}{space 3} 2.529985
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-.3152656{col 26}{space 2} 1.364375{col 37}{space 1}   -0.23{col 46}{space 3}0.820{col 54}{space 4}-3.223362{col 67}{space 3} 2.592831
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-.7139268{col 26}{space 2} 1.320305{col 37}{space 1}   -0.54{col 46}{space 3}0.597{col 54}{space 4} -3.52809{col 67}{space 3} 2.100237
{txt}{space 8}638  {c |}{col 14}{res}{space 2} .2477712{col 26}{space 2} 1.341169{col 37}{space 1}    0.18{col 46}{space 3}0.856{col 54}{space 4}-2.610863{col 67}{space 3} 3.106405
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-.1133593{col 26}{space 2} 1.341679{col 37}{space 1}   -0.08{col 46}{space 3}0.934{col 54}{space 4} -2.97308{col 67}{space 3} 2.746361
{txt}{space 8}640  {c |}{col 14}{res}{space 2}  .057376{col 26}{space 2} 1.300302{col 37}{space 1}    0.04{col 46}{space 3}0.965{col 54}{space 4}-2.714151{col 67}{space 3} 2.828903
{txt}{space 8}641  {c |}{col 14}{res}{space 2} .1752538{col 26}{space 2} 1.362526{col 37}{space 1}    0.13{col 46}{space 3}0.899{col 54}{space 4}-2.728901{col 67}{space 3} 3.079409
{txt}{space 8}642  {c |}{col 14}{res}{space 2} .0902885{col 26}{space 2} 1.363163{col 37}{space 1}    0.07{col 46}{space 3}0.948{col 54}{space 4}-2.815225{col 67}{space 3} 2.995801
{txt}{space 8}643  {c |}{col 14}{res}{space 2} .2292226{col 26}{space 2} 1.420485{col 37}{space 1}    0.16{col 46}{space 3}0.874{col 54}{space 4} -2.79847{col 67}{space 3} 3.256915
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-.0776594{col 26}{space 2} 1.465562{col 37}{space 1}   -0.05{col 46}{space 3}0.958{col 54}{space 4}-3.201431{col 67}{space 3} 3.046112
{txt}{space 8}645  {c |}{col 14}{res}{space 2} .7407362{col 26}{space 2} 1.528172{col 37}{space 1}    0.48{col 46}{space 3}0.635{col 54}{space 4}-2.516486{col 67}{space 3} 3.997958
{txt}{space 8}646  {c |}{col 14}{res}{space 2} .3763686{col 26}{space 2} 1.495415{col 37}{space 1}    0.25{col 46}{space 3}0.805{col 54}{space 4}-2.811033{col 67}{space 3} 3.563771
{txt}{space 8}647  {c |}{col 14}{res}{space 2} .5156568{col 26}{space 2} 1.519223{col 37}{space 1}    0.34{col 46}{space 3}0.739{col 54}{space 4}-2.722491{col 67}{space 3} 3.753805
{txt}{space 8}648  {c |}{col 14}{res}{space 2} .8018389{col 26}{space 2} 1.550773{col 37}{space 1}    0.52{col 46}{space 3}0.613{col 54}{space 4}-2.503556{col 67}{space 3} 4.107233
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 1.046722{col 26}{space 2} 1.538038{col 37}{space 1}    0.68{col 46}{space 3}0.507{col 54}{space 4}-2.231528{col 67}{space 3} 4.324973
{txt}{space 8}650  {c |}{col 14}{res}{space 2} .4711249{col 26}{space 2} 1.536988{col 37}{space 1}    0.31{col 46}{space 3}0.763{col 54}{space 4}-2.804888{col 67}{space 3} 3.747137
{txt}{space 8}651  {c |}{col 14}{res}{space 2} .3243177{col 26}{space 2} 1.572142{col 37}{space 1}    0.21{col 46}{space 3}0.839{col 54}{space 4}-3.026624{col 67}{space 3} 3.675259
{txt}{space 8}652  {c |}{col 14}{res}{space 2} .4837035{col 26}{space 2} 1.496532{col 37}{space 1}    0.32{col 46}{space 3}0.751{col 54}{space 4}-2.706079{col 67}{space 3} 3.673486
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 1.222774{col 26}{space 2} 1.596777{col 37}{space 1}    0.77{col 46}{space 3}0.456{col 54}{space 4}-2.180675{col 67}{space 3} 4.626224
{txt}{space 8}654  {c |}{col 14}{res}{space 2} .8256976{col 26}{space 2} 1.575334{col 37}{space 1}    0.52{col 46}{space 3}0.608{col 54}{space 4}-2.532047{col 67}{space 3} 4.183442
{txt}{space 8}655  {c |}{col 14}{res}{space 2}  .830623{col 26}{space 2} 1.568969{col 37}{space 1}    0.53{col 46}{space 3}0.604{col 54}{space 4}-2.513556{col 67}{space 3} 4.174802
{txt}{space 8}656  {c |}{col 14}{res}{space 2} .6707445{col 26}{space 2} 1.526126{col 37}{space 1}    0.44{col 46}{space 3}0.667{col 54}{space 4}-2.582116{col 67}{space 3} 3.923605
{txt}{space 8}657  {c |}{col 14}{res}{space 2} .4820532{col 26}{space 2} 1.563916{col 37}{space 1}    0.31{col 46}{space 3}0.762{col 54}{space 4}-2.851354{col 67}{space 3} 3.815461
{txt}{space 8}658  {c |}{col 14}{res}{space 2} .1600427{col 26}{space 2} 1.752331{col 37}{space 1}    0.09{col 46}{space 3}0.928{col 54}{space 4}-3.574962{col 67}{space 3} 3.895048
{txt}{space 8}659  {c |}{col 14}{res}{space 2} .7022608{col 26}{space 2} 1.542733{col 37}{space 1}    0.46{col 46}{space 3}0.655{col 54}{space 4}-2.585997{col 67}{space 3} 3.990519
{txt}{space 8}660  {c |}{col 14}{res}{space 2} .2837052{col 26}{space 2} 1.674046{col 37}{space 1}    0.17{col 46}{space 3}0.868{col 54}{space 4}-3.284438{col 67}{space 3} 3.851849
{txt}{space 8}661  {c |}{col 14}{res}{space 2} .3192319{col 26}{space 2} 1.567261{col 37}{space 1}    0.20{col 46}{space 3}0.841{col 54}{space 4}-3.021306{col 67}{space 3} 3.659769
{txt}{space 8}662  {c |}{col 14}{res}{space 2} .8486714{col 26}{space 2} 1.670777{col 37}{space 1}    0.51{col 46}{space 3}0.619{col 54}{space 4}-2.712506{col 67}{space 3} 4.409849
{txt}{space 8}663  {c |}{col 14}{res}{space 2} .3073496{col 26}{space 2} 1.587703{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4} -3.07676{col 67}{space 3} 3.691459
{txt}{space 8}664  {c |}{col 14}{res}{space 2} .5302313{col 26}{space 2} 1.617643{col 37}{space 1}    0.33{col 46}{space 3}0.748{col 54}{space 4}-2.917694{col 67}{space 3} 3.978157
{txt}{space 8}665  {c |}{col 14}{res}{space 2} .9045504{col 26}{space 2} 1.640825{col 37}{space 1}    0.55{col 46}{space 3}0.590{col 54}{space 4}-2.592786{col 67}{space 3} 4.401886
{txt}{space 8}666  {c |}{col 14}{res}{space 2} .8605262{col 26}{space 2} 1.575522{col 37}{space 1}    0.55{col 46}{space 3}0.593{col 54}{space 4}-2.497619{col 67}{space 3} 4.218671
{txt}{space 8}667  {c |}{col 14}{res}{space 2}  .699134{col 26}{space 2} 1.575641{col 37}{space 1}    0.44{col 46}{space 3}0.664{col 54}{space 4}-2.659265{col 67}{space 3} 4.057533
{txt}{space 8}668  {c |}{col 14}{res}{space 2} .5608842{col 26}{space 2}  1.58933{col 37}{space 1}    0.35{col 46}{space 3}0.729{col 54}{space 4}-2.826692{col 67}{space 3} 3.948461
{txt}{space 8}669  {c |}{col 14}{res}{space 2}  .676373{col 26}{space 2} 1.614638{col 37}{space 1}    0.42{col 46}{space 3}0.681{col 54}{space 4}-2.765146{col 67}{space 3} 4.117892
{txt}{space 8}670  {c |}{col 14}{res}{space 2} .0195896{col 26}{space 2} 1.538737{col 37}{space 1}    0.01{col 46}{space 3}0.990{col 54}{space 4}-3.260152{col 67}{space 3} 3.299331
{txt}{space 8}671  {c |}{col 14}{res}{space 2} .3108759{col 26}{space 2} 1.553816{col 37}{space 1}    0.20{col 46}{space 3}0.844{col 54}{space 4}-3.001005{col 67}{space 3} 3.622757
{txt}{space 8}672  {c |}{col 14}{res}{space 2} .2078248{col 26}{space 2} 1.613322{col 37}{space 1}    0.13{col 46}{space 3}0.899{col 54}{space 4}-3.230891{col 67}{space 3}  3.64654
{txt}{space 8}673  {c |}{col 14}{res}{space 2} .3396799{col 26}{space 2} 1.632885{col 37}{space 1}    0.21{col 46}{space 3}0.838{col 54}{space 4}-3.140732{col 67}{space 3} 3.820092
{txt}{space 8}674  {c |}{col 14}{res}{space 2} .5048942{col 26}{space 2} 1.672754{col 37}{space 1}    0.30{col 46}{space 3}0.767{col 54}{space 4}-3.060497{col 67}{space 3} 4.070286
{txt}{space 8}675  {c |}{col 14}{res}{space 2} .8666511{col 26}{space 2} 1.671672{col 37}{space 1}    0.52{col 46}{space 3}0.612{col 54}{space 4}-2.696432{col 67}{space 3} 4.429735
{txt}{space 8}676  {c |}{col 14}{res}{space 2} .9268268{col 26}{space 2} 1.672573{col 37}{space 1}    0.55{col 46}{space 3}0.588{col 54}{space 4}-2.638178{col 67}{space 3} 4.491831
{txt}{space 8}677  {c |}{col 14}{res}{space 2} .6120224{col 26}{space 2} 1.668381{col 37}{space 1}    0.37{col 46}{space 3}0.719{col 54}{space 4}-2.944047{col 67}{space 3} 4.168092
{txt}{space 8}678  {c |}{col 14}{res}{space 2}  .838168{col 26}{space 2} 1.673681{col 37}{space 1}    0.50{col 46}{space 3}0.624{col 54}{space 4}-2.729198{col 67}{space 3} 4.405534
{txt}{space 8}679  {c |}{col 14}{res}{space 2} .9353706{col 26}{space 2} 1.694134{col 37}{space 1}    0.55{col 46}{space 3}0.589{col 54}{space 4} -2.67559{col 67}{space 3} 4.546331
{txt}{space 8}680  {c |}{col 14}{res}{space 2} .9865012{col 26}{space 2} 1.640473{col 37}{space 1}    0.60{col 46}{space 3}0.557{col 54}{space 4}-2.510084{col 67}{space 3} 4.483086
{txt}{space 8}681  {c |}{col 14}{res}{space 2}  .998124{col 26}{space 2} 1.651192{col 37}{space 1}    0.60{col 46}{space 3}0.555{col 54}{space 4}-2.521309{col 67}{space 3} 4.517557
{txt}{space 8}682  {c |}{col 14}{res}{space 2} .6582736{col 26}{space 2} 1.693626{col 37}{space 1}    0.39{col 46}{space 3}0.703{col 54}{space 4}-2.951605{col 67}{space 3} 4.268152
{txt}{space 8}683  {c |}{col 14}{res}{space 2} .5003072{col 26}{space 2} 1.683829{col 37}{space 1}    0.30{col 46}{space 3}0.770{col 54}{space 4}-3.088689{col 67}{space 3} 4.089303
{txt}{space 8}684  {c |}{col 14}{res}{space 2} .6650485{col 26}{space 2}  1.79782{col 37}{space 1}    0.37{col 46}{space 3}0.717{col 54}{space 4}-3.166915{col 67}{space 3} 4.497012
{txt}{space 8}685  {c |}{col 14}{res}{space 2} .4847984{col 26}{space 2} 1.790149{col 37}{space 1}    0.27{col 46}{space 3}0.790{col 54}{space 4}-3.330814{col 67}{space 3} 4.300411
{txt}{space 8}686  {c |}{col 14}{res}{space 2} .4784726{col 26}{space 2} 1.806545{col 37}{space 1}    0.26{col 46}{space 3}0.795{col 54}{space 4}-3.372087{col 67}{space 3} 4.329032
{txt}{space 8}687  {c |}{col 14}{res}{space 2} .8142065{col 26}{space 2} 1.777489{col 37}{space 1}    0.46{col 46}{space 3}0.653{col 54}{space 4}-2.974422{col 67}{space 3} 4.602835
{txt}{space 8}688  {c |}{col 14}{res}{space 2}  .520443{col 26}{space 2} 1.821398{col 37}{space 1}    0.29{col 46}{space 3}0.779{col 54}{space 4}-3.361775{col 67}{space 3} 4.402661
{txt}{space 8}689  {c |}{col 14}{res}{space 2} .4996449{col 26}{space 2} 1.820966{col 37}{space 1}    0.27{col 46}{space 3}0.788{col 54}{space 4}-3.381653{col 67}{space 3} 4.380943
{txt}{space 8}690  {c |}{col 14}{res}{space 2} .2164669{col 26}{space 2} 1.827286{col 37}{space 1}    0.12{col 46}{space 3}0.907{col 54}{space 4}-3.678301{col 67}{space 3} 4.111235
{txt}{space 8}691  {c |}{col 14}{res}{space 2} .3624686{col 26}{space 2} 1.823555{col 37}{space 1}    0.20{col 46}{space 3}0.845{col 54}{space 4}-3.524347{col 67}{space 3} 4.249284
{txt}{space 8}692  {c |}{col 14}{res}{space 2} .5413907{col 26}{space 2} 1.816559{col 37}{space 1}    0.30{col 46}{space 3}0.770{col 54}{space 4}-3.330514{col 67}{space 3} 4.413295
{txt}{space 8}693  {c |}{col 14}{res}{space 2} .4493176{col 26}{space 2} 1.793804{col 37}{space 1}    0.25{col 46}{space 3}0.806{col 54}{space 4}-3.374084{col 67}{space 3} 4.272719
{txt}{space 8}694  {c |}{col 14}{res}{space 2} .5344618{col 26}{space 2}  1.83283{col 37}{space 1}    0.29{col 46}{space 3}0.775{col 54}{space 4}-3.372122{col 67}{space 3} 4.441046
{txt}{space 8}695  {c |}{col 14}{res}{space 2} .3242425{col 26}{space 2} 1.817114{col 37}{space 1}    0.18{col 46}{space 3}0.861{col 54}{space 4}-3.548844{col 67}{space 3} 4.197328
{txt}{space 8}696  {c |}{col 14}{res}{space 2}  .506646{col 26}{space 2} 1.898239{col 37}{space 1}    0.27{col 46}{space 3}0.793{col 54}{space 4}-3.539354{col 67}{space 3} 4.552646
{txt}{space 8}697  {c |}{col 14}{res}{space 2} .4664195{col 26}{space 2} 1.878674{col 37}{space 1}    0.25{col 46}{space 3}0.807{col 54}{space 4}-3.537879{col 67}{space 3} 4.470717
{txt}{space 8}698  {c |}{col 14}{res}{space 2}  .524511{col 26}{space 2} 1.891773{col 37}{space 1}    0.28{col 46}{space 3}0.785{col 54}{space 4}-3.507708{col 67}{space 3}  4.55673
{txt}{space 8}699  {c |}{col 14}{res}{space 2}  .317555{col 26}{space 2} 1.885007{col 37}{space 1}    0.17{col 46}{space 3}0.868{col 54}{space 4}-3.700242{col 67}{space 3} 4.335352
{txt}{space 8}700  {c |}{col 14}{res}{space 2} .5936483{col 26}{space 2} 1.891453{col 37}{space 1}    0.31{col 46}{space 3}0.758{col 54}{space 4}-3.437888{col 67}{space 3} 4.625184
{txt}{space 8}701  {c |}{col 14}{res}{space 2}   .22917{col 26}{space 2} 1.897997{col 37}{space 1}    0.12{col 46}{space 3}0.905{col 54}{space 4}-3.816315{col 67}{space 3} 4.274655
{txt}{space 8}702  {c |}{col 14}{res}{space 2} .0242088{col 26}{space 2} 1.949023{col 37}{space 1}    0.01{col 46}{space 3}0.990{col 54}{space 4}-4.130036{col 67}{space 3} 4.178453
{txt}{space 8}703  {c |}{col 14}{res}{space 2} .6126208{col 26}{space 2} 1.947471{col 37}{space 1}    0.31{col 46}{space 3}0.757{col 54}{space 4}-3.538315{col 67}{space 3} 4.763557
{txt}{space 8}704  {c |}{col 14}{res}{space 2}  .857317{col 26}{space 2} 1.804984{col 37}{space 1}    0.47{col 46}{space 3}0.642{col 54}{space 4}-2.989915{col 67}{space 3} 4.704549
{txt}{space 8}705  {c |}{col 14}{res}{space 2} .9203826{col 26}{space 2} 1.866602{col 37}{space 1}    0.49{col 46}{space 3}0.629{col 54}{space 4}-3.058186{col 67}{space 3} 4.898951
{txt}{space 8}706  {c |}{col 14}{res}{space 2}  .835157{col 26}{space 2} 1.852877{col 37}{space 1}    0.45{col 46}{space 3}0.659{col 54}{space 4}-3.114157{col 67}{space 3} 4.784471
{txt}{space 8}707  {c |}{col 14}{res}{space 2} .7109495{col 26}{space 2}  1.94451{col 37}{space 1}    0.37{col 46}{space 3}0.720{col 54}{space 4}-3.433676{col 67}{space 3} 4.855575
{txt}{space 8}708  {c |}{col 14}{res}{space 2}  1.15833{col 26}{space 2} 2.021947{col 37}{space 1}    0.57{col 46}{space 3}0.575{col 54}{space 4}-3.151349{col 67}{space 3} 5.468008
{txt}{space 8}709  {c |}{col 14}{res}{space 2} .5692245{col 26}{space 2} 2.056601{col 37}{space 1}    0.28{col 46}{space 3}0.786{col 54}{space 4}-3.814317{col 67}{space 3} 4.952766
{txt}{space 8}710  {c |}{col 14}{res}{space 2} .8824258{col 26}{space 2} 2.031055{col 37}{space 1}    0.43{col 46}{space 3}0.670{col 54}{space 4}-3.446666{col 67}{space 3} 5.211518
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 1.203909{col 26}{space 2}  1.94407{col 37}{space 1}    0.62{col 46}{space 3}0.545{col 54}{space 4}-2.939778{col 67}{space 3} 5.347597
{txt}{space 8}712  {c |}{col 14}{res}{space 2} .7908112{col 26}{space 2} 1.997174{col 37}{space 1}    0.40{col 46}{space 3}0.698{col 54}{space 4}-3.466064{col 67}{space 3} 5.047687
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 1.252039{col 26}{space 2} 2.023539{col 37}{space 1}    0.62{col 46}{space 3}0.545{col 54}{space 4}-3.061032{col 67}{space 3} 5.565111
{txt}{space 8}714  {c |}{col 14}{res}{space 2} .9080353{col 26}{space 2} 1.951073{col 37}{space 1}    0.47{col 46}{space 3}0.648{col 54}{space 4}-3.250578{col 67}{space 3} 5.066649
{txt}{space 8}715  {c |}{col 14}{res}{space 2} .9229079{col 26}{space 2} 2.007674{col 37}{space 1}    0.46{col 46}{space 3}0.652{col 54}{space 4}-3.356347{col 67}{space 3} 5.202163
{txt}{space 8}716  {c |}{col 14}{res}{space 2} .8254043{col 26}{space 2} 2.032506{col 37}{space 1}    0.41{col 46}{space 3}0.690{col 54}{space 4} -3.50678{col 67}{space 3} 5.157589
{txt}{space 8}717  {c |}{col 14}{res}{space 2} .6722126{col 26}{space 2} 2.028812{col 37}{space 1}    0.33{col 46}{space 3}0.745{col 54}{space 4}-3.652098{col 67}{space 3} 4.996523
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 1.049124{col 26}{space 2} 1.985539{col 37}{space 1}    0.53{col 46}{space 3}0.605{col 54}{space 4}-3.182952{col 67}{space 3}   5.2812
{txt}{space 8}719  {c |}{col 14}{res}{space 2} .9081177{col 26}{space 2} 2.020027{col 37}{space 1}    0.45{col 46}{space 3}0.659{col 54}{space 4}-3.397468{col 67}{space 3} 5.213703
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.552112{col 26}{space 2}  .264238{col 37}{space 1}    5.87{col 46}{space 3}0.000{col 54}{space 4} .9889025{col 67}{space 3} 2.115322
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.577485{col 26}{space 2}  .724963{col 37}{space 1}   -2.18{col 46}{space 3}0.046{col 54}{space 4}-3.122707{col 67}{space 3}-.0322631
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.117692{col 26}{space 2} 1.158317{col 37}{space 1}   -0.96{col 46}{space 3}0.350{col 54}{space 4}-3.586586{col 67}{space 3} 1.351202
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.5177363{col 26}{space 2}  .189371{col 37}{space 1}   -2.73{col 46}{space 3}0.015{col 54}{space 4} -.921371{col 67}{space 3}-.1141015
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.230835{col 26}{space 2} .1617885{col 37}{space 1}    7.61{col 46}{space 3}0.000{col 54}{space 4} .8859909{col 67}{space 3} 1.575679
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} .0338273{col 26}{space 2} 1.217757{col 37}{space 1}    0.03{col 46}{space 3}0.978{col 54}{space 4} -2.56176{col 67}{space 3} 2.629414
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2}  .993725{col 26}{space 2} .5893529{col 37}{space 1}    1.69{col 46}{space 3}0.112{col 54}{space 4} -.262451{col 67}{space 3} 2.249901
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2} -2.24868{col 26}{space 2} .4956544{col 37}{space 1}   -4.54{col 46}{space 3}0.000{col 54}{space 4}-3.305142{col 67}{space 3}-1.192217
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-1.829889{col 26}{space 2} .6158598{col 37}{space 1}   -2.97{col 46}{space 3}0.010{col 54}{space 4}-3.142563{col 67}{space 3}-.5172152
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.906473{col 26}{space 2} .7200582{col 37}{space 1}   -2.65{col 46}{space 3}0.018{col 54}{space 4} -3.44124{col 67}{space 3}-.3717047
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 2.068419{col 26}{space 2} .4215919{col 37}{space 1}    4.91{col 46}{space 3}0.000{col 54}{space 4} 1.169817{col 67}{space 3} 2.967021
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} .7001578{col 26}{space 2} .7429922{col 37}{space 1}    0.94{col 46}{space 3}0.361{col 54}{space 4}-.8834925{col 67}{space 3} 2.283808
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.311828{col 26}{space 2} .9277826{col 37}{space 1}    2.49{col 46}{space 3}0.025{col 54}{space 4} .3343059{col 67}{space 3}  4.28935
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}-.5251047{col 26}{space 2} 3.427191{col 37}{space 1}   -0.15{col 46}{space 3}0.880{col 54}{space 4} -7.82999{col 67}{space 3} 6.779781
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} .5168674{col 26}{space 2} 1.130061{col 37}{space 1}    0.46{col 46}{space 3}0.654{col 54}{space 4}-1.891801{col 67}{space 3} 2.925536
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-8.546655{col 26}{space 2} 14.20661{col 37}{space 1}   -0.60{col 46}{space 3}0.556{col 54}{space 4}-38.82732{col 67}{space 3} 21.73401
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 262 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -6.0605
{col 25}{txt}Prob>|t| = {res}    0.0083

95%{txt} confidence set for null hypothesis expression: [{res}-3.108{txt}, {res}-1.232{txt}]
{res}
Warning: 4 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -4.0757
{col 25}{txt}Prob>|t| = {res}    0.0030

95%{txt} confidence set for null hypothesis expression: [{res}-4{txt}, {res}-1.175{txt}]
{res}
Warning: 12 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -5.1976
{col 25}{txt}Prob>|t| = {res}    0.0024

95%{txt} confidence set for null hypothesis expression: [{res}-4.586{txt}, {res}-1.93{txt}]
{res}
Warning: 30 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -4.4889
{col 25}{txt}Prob>|t| = {res}    0.0098

95%{txt} confidence set for null hypothesis expression: [{res}-2.931{txt}, {res}-.8826{txt}]
{res}
Warning: 14 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -6.2949
{col 25}{txt}Prob>|t| = {res}    0.0239

95%{txt} confidence set for null hypothesis expression: [{res}-3.1{txt}, {res}-.7295{txt}]
{res}
Warning: 43 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_elec_s

{txt}{col 28}t(15) = {res}    2.3492
{col 25}{txt}Prob>|t| = {res}    0.0488

95%{txt} confidence set for null hypothesis expression: [{res}.00007484{txt}, {res}.02155{txt}]
{res}
Warning: 7 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_elec_s

{txt}{col 28}t(15) = {res}   -0.4882
{col 25}{txt}Prob>|t| = {res}    0.6530

95%{txt} confidence set for null hypothesis expression: [{res}-.02798{txt}, {res}.0182{txt}]
{res}
Warning: 17 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_elec_s

{txt}{col 28}t(15) = {res}   -0.5529
{col 25}{txt}Prob>|t| = {res}    0.6140

95%{txt} confidence set for null hypothesis expression: [{res}-.04134{txt}, {res}.02393{txt}]
{res}
Warning: 12 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_elec_s

{txt}{col 28}t(15) = {res}    2.0598
{col 25}{txt}Prob>|t| = {res}    0.0886

95%{txt} confidence set for null hypothesis expression: [{res}-.00342{txt}, {res}.03402{txt}]
{res}
Warning: 55 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_elec_s

{txt}{col 28}t(15) = {res}   -1.1439
{col 25}{txt}Prob>|t| = {res}    0.2923

95%{txt} confidence set for null hypothesis expression: [{res}-.0104{txt}, {res}.003528{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8115
                                                {txt}Root MSE          =    {res} 1.0768

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-2.521809{col 26}{space 2} .4329821{col 37}{space 1}   -5.82{col 46}{space 3}0.000{col 54}{space 4}-3.444688{col 67}{space 3} -1.59893
{txt}{space 9}two {c |}{col 14}{res}{space 2}-2.445274{col 26}{space 2} .6168143{col 37}{space 1}   -3.96{col 46}{space 3}0.001{col 54}{space 4}-3.759982{col 67}{space 3}-1.130565
{txt}{space 7}three {c |}{col 14}{res}{space 2}-2.954383{col 26}{space 2} .6360705{col 37}{space 1}   -4.64{col 46}{space 3}0.000{col 54}{space 4}-4.310135{col 67}{space 3}-1.598631
{txt}{space 8}four {c |}{col 14}{res}{space 2}-2.518917{col 26}{space 2} .3572401{col 37}{space 1}   -7.05{col 46}{space 3}0.000{col 54}{space 4}-3.280356{col 67}{space 3}-1.757477
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.750832{col 26}{space 2} .2537914{col 37}{space 1}   -6.90{col 46}{space 3}0.000{col 54}{space 4}-2.291776{col 67}{space 3}-1.209889
{txt}{space 4}one_port {c |}{col 14}{res}{space 2} .0780025{col 26}{space 2} .2146798{col 37}{space 1}    0.36{col 46}{space 3}0.721{col 54}{space 4}-.3795767{col 67}{space 3} .5355817
{txt}{space 4}two_port {c |}{col 14}{res}{space 2}-.1338274{col 26}{space 2} .3683375{col 37}{space 1}   -0.36{col 46}{space 3}0.721{col 54}{space 4}-.9189201{col 67}{space 3} .6512654
{txt}{space 2}three_port {c |}{col 14}{res}{space 2} .4339113{col 26}{space 2} .4416078{col 37}{space 1}    0.98{col 46}{space 3}0.341{col 54}{space 4}-.5073533{col 67}{space 3} 1.375176
{txt}{space 3}four_port {c |}{col 14}{res}{space 2}-.1002283{col 26}{space 2}  .297528{col 37}{space 1}   -0.34{col 46}{space 3}0.741{col 54}{space 4}-.7343941{col 67}{space 3} .5339376
{txt}{space 3}five_port {c |}{col 14}{res}{space 2}-.1993316{col 26}{space 2} .2633547{col 37}{space 1}   -0.76{col 46}{space 3}0.461{col 54}{space 4}-.7606589{col 67}{space 3} .3619957
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 1.787986{col 26}{space 2} 1.486374{col 37}{space 1}    1.20{col 46}{space 3}0.248{col 54}{space 4}-1.380145{col 67}{space 3} 4.956118
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.2392466{col 26}{space 2} .3449922{col 37}{space 1}   -0.69{col 46}{space 3}0.499{col 54}{space 4}-.9745801{col 67}{space 3} .4960868
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2726175{col 37}{space 1}   -0.19{col 46}{space 3}0.848{col 54}{space 4} -.634209{col 67}{space 3} .5279318
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2838562{col 37}{space 1}   -1.73{col 46}{space 3}0.104{col 54}{space 4}-1.096611{col 67}{space 3} .1134396
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3045491{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-.8502942{col 67}{space 3}  .447968
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2900432{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4} -.851283{col 67}{space 3} .3851418
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2876443{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4} -.571149{col 67}{space 3} .6550495
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3473569{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.3808525{col 67}{space 3} 1.099895
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3875732{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-.6374695{col 67}{space 3} 1.014716
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3760577{col 37}{space 1}    0.19{col 46}{space 3}0.850{col 54}{space 4}-.7289601{col 67}{space 3}  .874136
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2883515{col 37}{space 1}   -0.60{col 46}{space 3}0.559{col 54}{space 4}-.7871317{col 67}{space 3} .4420816
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2}  .320841{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6987346{col 67}{space 3} .6689783
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3228138{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7087306{col 67}{space 3} .6673921
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.6886596{col 26}{space 2} .4342385{col 37}{space 1}   -1.59{col 46}{space 3}0.134{col 54}{space 4}-1.614217{col 67}{space 3} .2368979
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.2724762{col 26}{space 2} .5722185{col 37}{space 1}   -0.48{col 46}{space 3}0.641{col 54}{space 4}-1.492131{col 67}{space 3} .9471788
{txt}{space 8}566  {c |}{col 14}{res}{space 2} -.253891{col 26}{space 2} .3946473{col 37}{space 1}   -0.64{col 46}{space 3}0.530{col 54}{space 4}-1.095062{col 67}{space 3} .5872799
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.4767041{col 26}{space 2} .4660777{col 37}{space 1}   -1.02{col 46}{space 3}0.323{col 54}{space 4}-1.470125{col 67}{space 3}  .516717
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.3696813{col 26}{space 2} .4982186{col 37}{space 1}   -0.74{col 46}{space 3}0.470{col 54}{space 4}-1.431609{col 67}{space 3} .6922464
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.5403537{col 26}{space 2} .4265601{col 37}{space 1}   -1.27{col 46}{space 3}0.225{col 54}{space 4}-1.449545{col 67}{space 3} .3688377
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .1866013{col 26}{space 2} .5124036{col 37}{space 1}    0.36{col 46}{space 3}0.721{col 54}{space 4}-.9055611{col 67}{space 3} 1.278764
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.8153742{col 26}{space 2}  .427796{col 37}{space 1}   -1.91{col 46}{space 3}0.076{col 54}{space 4}  -1.7272{col 67}{space 3} .0964513
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-1.011138{col 26}{space 2} .3618774{col 37}{space 1}   -2.79{col 46}{space 3}0.014{col 54}{space 4}-1.782461{col 67}{space 3}-.2398146
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.6543315{col 26}{space 2} .5183608{col 37}{space 1}   -1.26{col 46}{space 3}0.226{col 54}{space 4}-1.759191{col 67}{space 3} .4505284
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.5076918{col 26}{space 2} .3992949{col 37}{space 1}   -1.27{col 46}{space 3}0.223{col 54}{space 4}-1.358769{col 67}{space 3} .3433851
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.2355252{col 26}{space 2} .5747304{col 37}{space 1}   -0.41{col 46}{space 3}0.688{col 54}{space 4}-1.460534{col 67}{space 3} .9894836
{txt}{space 8}576  {c |}{col 14}{res}{space 2} -.939095{col 26}{space 2}  .642814{col 37}{space 1}   -1.46{col 46}{space 3}0.165{col 54}{space 4}-2.309221{col 67}{space 3} .4310305
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.3909358{col 26}{space 2} .6808716{col 37}{space 1}   -0.57{col 46}{space 3}0.574{col 54}{space 4}-1.842179{col 67}{space 3} 1.060308
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.6801294{col 26}{space 2} .7255497{col 37}{space 1}   -0.94{col 46}{space 3}0.363{col 54}{space 4}-2.226602{col 67}{space 3} .8663431
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.5270653{col 26}{space 2} .6040981{col 37}{space 1}   -0.87{col 46}{space 3}0.397{col 54}{space 4} -1.81467{col 67}{space 3} .7605394
{txt}{space 8}580  {c |}{col 14}{res}{space 2} -.063629{col 26}{space 2} .5942845{col 37}{space 1}   -0.11{col 46}{space 3}0.916{col 54}{space 4}-1.330317{col 67}{space 3} 1.203058
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.2179192{col 26}{space 2} .5724227{col 37}{space 1}   -0.38{col 46}{space 3}0.709{col 54}{space 4}-1.438009{col 67}{space 3} 1.002171
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.1946999{col 26}{space 2} .6041468{col 37}{space 1}   -0.32{col 46}{space 3}0.752{col 54}{space 4}-1.482408{col 67}{space 3} 1.093008
{txt}{space 8}583  {c |}{col 14}{res}{space 2} -.332007{col 26}{space 2} .6723621{col 37}{space 1}   -0.49{col 46}{space 3}0.629{col 54}{space 4}-1.765113{col 67}{space 3} 1.101099
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.1658243{col 26}{space 2}  .646213{col 37}{space 1}   -0.26{col 46}{space 3}0.801{col 54}{space 4}-1.543195{col 67}{space 3} 1.211546
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.2401748{col 26}{space 2} .5357207{col 37}{space 1}   -0.45{col 46}{space 3}0.660{col 54}{space 4}-1.382037{col 67}{space 3} .9016869
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.3415564{col 26}{space 2} .6165591{col 37}{space 1}   -0.55{col 46}{space 3}0.588{col 54}{space 4}-1.655721{col 67}{space 3} .9726082
{txt}{space 8}587  {c |}{col 14}{res}{space 2} -.561117{col 26}{space 2} .6396735{col 37}{space 1}   -0.88{col 46}{space 3}0.394{col 54}{space 4}-1.924549{col 67}{space 3} .8023147
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.4926128{col 26}{space 2} .7842678{col 37}{space 1}   -0.63{col 46}{space 3}0.539{col 54}{space 4} -2.16424{col 67}{space 3} 1.179015
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.2944903{col 26}{space 2} .8170948{col 37}{space 1}   -0.36{col 46}{space 3}0.724{col 54}{space 4}-2.036087{col 67}{space 3} 1.447106
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.3660117{col 26}{space 2} .8040592{col 37}{space 1}   -0.46{col 46}{space 3}0.655{col 54}{space 4}-2.079823{col 67}{space 3}   1.3478
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-.9509813{col 26}{space 2} .7925891{col 37}{space 1}   -1.20{col 46}{space 3}0.249{col 54}{space 4}-2.640345{col 67}{space 3} .7383824
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.3690977{col 26}{space 2} .7368762{col 37}{space 1}   -0.50{col 46}{space 3}0.624{col 54}{space 4}-1.939712{col 67}{space 3} 1.201517
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-.0681082{col 26}{space 2} .8476523{col 37}{space 1}   -0.08{col 46}{space 3}0.937{col 54}{space 4}-1.874836{col 67}{space 3}  1.73862
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-.0579128{col 26}{space 2} .8229868{col 37}{space 1}   -0.07{col 46}{space 3}0.945{col 54}{space 4}-1.812068{col 67}{space 3} 1.696242
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-.0629258{col 26}{space 2} .9120189{col 37}{space 1}   -0.07{col 46}{space 3}0.946{col 54}{space 4}-2.006848{col 67}{space 3} 1.880996
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.3587352{col 26}{space 2} .7367502{col 37}{space 1}   -0.49{col 46}{space 3}0.633{col 54}{space 4}-1.929081{col 67}{space 3} 1.211611
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.3578095{col 26}{space 2} .8023925{col 37}{space 1}   -0.45{col 46}{space 3}0.662{col 54}{space 4}-2.068069{col 67}{space 3}  1.35245
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.2445909{col 26}{space 2} .7925426{col 37}{space 1}   -0.31{col 46}{space 3}0.762{col 54}{space 4}-1.933856{col 67}{space 3} 1.444674
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.4503034{col 26}{space 2}  .814181{col 37}{space 1}   -0.55{col 46}{space 3}0.588{col 54}{space 4}-2.185689{col 67}{space 3} 1.285082
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.4520647{col 26}{space 2} 1.023073{col 37}{space 1}   -0.44{col 46}{space 3}0.665{col 54}{space 4}-2.632693{col 67}{space 3} 1.728564
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-.6950952{col 26}{space 2} 1.003377{col 37}{space 1}   -0.69{col 46}{space 3}0.499{col 54}{space 4}-2.833742{col 67}{space 3} 1.443552
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.2581425{col 26}{space 2} 1.089947{col 37}{space 1}   -0.24{col 46}{space 3}0.816{col 54}{space 4}-2.581309{col 67}{space 3} 2.065024
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.7293765{col 26}{space 2} 1.075477{col 37}{space 1}   -0.68{col 46}{space 3}0.508{col 54}{space 4}-3.021702{col 67}{space 3} 1.562949
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-.4531177{col 26}{space 2} 1.067123{col 37}{space 1}   -0.42{col 46}{space 3}0.677{col 54}{space 4}-2.727637{col 67}{space 3} 1.821402
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-.0654205{col 26}{space 2} 1.091669{col 37}{space 1}   -0.06{col 46}{space 3}0.953{col 54}{space 4}-2.392257{col 67}{space 3} 2.261416
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-.4621216{col 26}{space 2} 1.176432{col 37}{space 1}   -0.39{col 46}{space 3}0.700{col 54}{space 4}-2.969628{col 67}{space 3} 2.045384
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-.1448345{col 26}{space 2} 1.098327{col 37}{space 1}   -0.13{col 46}{space 3}0.897{col 54}{space 4}-2.485864{col 67}{space 3} 2.196195
{txt}{space 8}608  {c |}{col 14}{res}{space 2} -.323124{col 26}{space 2} 1.135345{col 37}{space 1}   -0.28{col 46}{space 3}0.780{col 54}{space 4}-2.743054{col 67}{space 3} 2.096806
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-.3551441{col 26}{space 2} 1.220816{col 37}{space 1}   -0.29{col 46}{space 3}0.775{col 54}{space 4}-2.957252{col 67}{space 3} 2.246963
{txt}{space 8}610  {c |}{col 14}{res}{space 2} .0048005{col 26}{space 2} 1.197567{col 37}{space 1}    0.00{col 46}{space 3}0.997{col 54}{space 4}-2.547754{col 67}{space 3} 2.557355
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .2585495{col 26}{space 2} 1.052156{col 37}{space 1}    0.25{col 46}{space 3}0.809{col 54}{space 4}-1.984068{col 67}{space 3} 2.501167
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-.4365031{col 26}{space 2} 1.381174{col 37}{space 1}   -0.32{col 46}{space 3}0.756{col 54}{space 4}-3.380407{col 67}{space 3} 2.507401
{txt}{space 8}613  {c |}{col 14}{res}{space 2} -.378156{col 26}{space 2} 1.454345{col 37}{space 1}   -0.26{col 46}{space 3}0.798{col 54}{space 4} -3.47802{col 67}{space 3} 2.721708
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-.4604006{col 26}{space 2} 1.331298{col 37}{space 1}   -0.35{col 46}{space 3}0.734{col 54}{space 4}-3.297995{col 67}{space 3} 2.377194
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-.2862474{col 26}{space 2} 1.333636{col 37}{space 1}   -0.21{col 46}{space 3}0.833{col 54}{space 4}-3.128826{col 67}{space 3} 2.556331
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-.3923705{col 26}{space 2} 1.362193{col 37}{space 1}   -0.29{col 46}{space 3}0.777{col 54}{space 4}-3.295816{col 67}{space 3} 2.511075
{txt}{space 8}617  {c |}{col 14}{res}{space 2} -.862861{col 26}{space 2} 1.495748{col 37}{space 1}   -0.58{col 46}{space 3}0.573{col 54}{space 4}-4.050972{col 67}{space 3}  2.32525
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-.5025153{col 26}{space 2} 1.269621{col 37}{space 1}   -0.40{col 46}{space 3}0.698{col 54}{space 4}-3.208649{col 67}{space 3} 2.203618
{txt}{space 8}619  {c |}{col 14}{res}{space 2}-.0292085{col 26}{space 2} 1.356695{col 37}{space 1}   -0.02{col 46}{space 3}0.983{col 54}{space 4}-2.920936{col 67}{space 3} 2.862519
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-.2570664{col 26}{space 2} 1.466969{col 37}{space 1}   -0.18{col 46}{space 3}0.863{col 54}{space 4}-3.383837{col 67}{space 3} 2.869704
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-.1522166{col 26}{space 2} 1.334787{col 37}{space 1}   -0.11{col 46}{space 3}0.911{col 54}{space 4}-2.997248{col 67}{space 3} 2.692815
{txt}{space 8}622  {c |}{col 14}{res}{space 2}  -.34449{col 26}{space 2} 1.288062{col 37}{space 1}   -0.27{col 46}{space 3}0.793{col 54}{space 4}-3.089929{col 67}{space 3} 2.400949
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-.3472086{col 26}{space 2} 1.247503{col 37}{space 1}   -0.28{col 46}{space 3}0.785{col 54}{space 4}-3.006198{col 67}{space 3} 2.311781
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-.6371813{col 26}{space 2} 1.501117{col 37}{space 1}   -0.42{col 46}{space 3}0.677{col 54}{space 4}-3.836736{col 67}{space 3} 2.562373
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-.6350533{col 26}{space 2} 1.518852{col 37}{space 1}   -0.42{col 46}{space 3}0.682{col 54}{space 4} -3.87241{col 67}{space 3} 2.602303
{txt}{space 8}626  {c |}{col 14}{res}{space 2}-.3434348{col 26}{space 2}  1.56708{col 37}{space 1}   -0.22{col 46}{space 3}0.829{col 54}{space 4}-3.683587{col 67}{space 3} 2.996718
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-.7510653{col 26}{space 2} 1.539431{col 37}{space 1}   -0.49{col 46}{space 3}0.633{col 54}{space 4}-4.032284{col 67}{space 3} 2.530153
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-1.206129{col 26}{space 2} 1.588349{col 37}{space 1}   -0.76{col 46}{space 3}0.459{col 54}{space 4}-4.591614{col 67}{space 3} 2.179356
{txt}{space 8}629  {c |}{col 14}{res}{space 2} -.821033{col 26}{space 2} 1.523397{col 37}{space 1}   -0.54{col 46}{space 3}0.598{col 54}{space 4}-4.068076{col 67}{space 3}  2.42601
{txt}{space 8}630  {c |}{col 14}{res}{space 2} -.362353{col 26}{space 2} 1.512254{col 37}{space 1}   -0.24{col 46}{space 3}0.814{col 54}{space 4}-3.585646{col 67}{space 3}  2.86094
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-1.176385{col 26}{space 2} 1.625491{col 37}{space 1}   -0.72{col 46}{space 3}0.480{col 54}{space 4}-4.641037{col 67}{space 3} 2.288268
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-.6653392{col 26}{space 2} 1.543719{col 37}{space 1}   -0.43{col 46}{space 3}0.673{col 54}{space 4}-3.955697{col 67}{space 3} 2.625019
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-.2038636{col 26}{space 2} 1.474021{col 37}{space 1}   -0.14{col 46}{space 3}0.892{col 54}{space 4}-3.345665{col 67}{space 3} 2.937937
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-.6927723{col 26}{space 2} 1.494116{col 37}{space 1}   -0.46{col 46}{space 3}0.650{col 54}{space 4}-3.877404{col 67}{space 3}  2.49186
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-.4254518{col 26}{space 2} 1.515482{col 37}{space 1}   -0.28{col 46}{space 3}0.783{col 54}{space 4}-3.655626{col 67}{space 3} 2.804723
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-.7769897{col 26}{space 2} 1.701565{col 37}{space 1}   -0.46{col 46}{space 3}0.654{col 54}{space 4}-4.403789{col 67}{space 3}  2.84981
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-1.175651{col 26}{space 2} 1.661114{col 37}{space 1}   -0.71{col 46}{space 3}0.490{col 54}{space 4}-4.716232{col 67}{space 3}  2.36493
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-.2139529{col 26}{space 2} 1.682252{col 37}{space 1}   -0.13{col 46}{space 3}0.900{col 54}{space 4}-3.799588{col 67}{space 3} 3.371682
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-.5750835{col 26}{space 2}  1.68076{col 37}{space 1}   -0.34{col 46}{space 3}0.737{col 54}{space 4}-4.157538{col 67}{space 3} 3.007371
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-.4043481{col 26}{space 2} 1.654642{col 37}{space 1}   -0.24{col 46}{space 3}0.810{col 54}{space 4}-3.931135{col 67}{space 3} 3.122439
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-.6598934{col 26}{space 2} 1.693784{col 37}{space 1}   -0.39{col 46}{space 3}0.702{col 54}{space 4}-4.270108{col 67}{space 3} 2.950321
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-.7448588{col 26}{space 2} 1.701497{col 37}{space 1}   -0.44{col 46}{space 3}0.668{col 54}{space 4}-4.371513{col 67}{space 3} 2.881796
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-.6059246{col 26}{space 2} 1.798946{col 37}{space 1}   -0.34{col 46}{space 3}0.741{col 54}{space 4}-4.440288{col 67}{space 3} 3.228438
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-.9128067{col 26}{space 2} 1.788148{col 37}{space 1}   -0.51{col 46}{space 3}0.617{col 54}{space 4}-4.724154{col 67}{space 3} 2.898541
{txt}{space 8}645  {c |}{col 14}{res}{space 2}-.0944111{col 26}{space 2} 1.882205{col 37}{space 1}   -0.05{col 46}{space 3}0.961{col 54}{space 4}-4.106235{col 67}{space 3} 3.917413
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-.4587786{col 26}{space 2} 1.838349{col 37}{space 1}   -0.25{col 46}{space 3}0.806{col 54}{space 4}-4.377127{col 67}{space 3}  3.45957
{txt}{space 8}647  {c |}{col 14}{res}{space 2}-.3194904{col 26}{space 2}  1.89875{col 37}{space 1}   -0.17{col 46}{space 3}0.869{col 54}{space 4}-4.366579{col 67}{space 3} 3.727598
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-.1291562{col 26}{space 2}  2.05204{col 37}{space 1}   -0.06{col 46}{space 3}0.951{col 54}{space 4}-4.502976{col 67}{space 3} 4.244663
{txt}{space 8}649  {c |}{col 14}{res}{space 2} .1157272{col 26}{space 2} 2.001296{col 37}{space 1}    0.06{col 46}{space 3}0.955{col 54}{space 4}-4.149934{col 67}{space 3} 4.381388
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-.4598702{col 26}{space 2}  1.97403{col 37}{space 1}   -0.23{col 46}{space 3}0.819{col 54}{space 4}-4.667414{col 67}{space 3} 3.747674
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-.6066774{col 26}{space 2} 2.026871{col 37}{space 1}   -0.30{col 46}{space 3}0.769{col 54}{space 4} -4.92685{col 67}{space 3} 3.713495
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-.4472916{col 26}{space 2}  1.91751{col 37}{space 1}   -0.23{col 46}{space 3}0.819{col 54}{space 4}-4.534367{col 67}{space 3} 3.639784
{txt}{space 8}653  {c |}{col 14}{res}{space 2} .2917792{col 26}{space 2} 2.037735{col 37}{space 1}    0.14{col 46}{space 3}0.888{col 54}{space 4} -4.05155{col 67}{space 3} 4.635108
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-.1052975{col 26}{space 2} 2.030961{col 37}{space 1}   -0.05{col 46}{space 3}0.959{col 54}{space 4}-4.434189{col 67}{space 3} 4.223594
{txt}{space 8}655  {c |}{col 14}{res}{space 2}-.1003721{col 26}{space 2} 2.013947{col 37}{space 1}   -0.05{col 46}{space 3}0.961{col 54}{space 4}-4.392998{col 67}{space 3} 4.192254
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-.2602506{col 26}{space 2}  1.93909{col 37}{space 1}   -0.13{col 46}{space 3}0.895{col 54}{space 4}-4.393323{col 67}{space 3} 3.872822
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-.4489419{col 26}{space 2}   2.0703{col 37}{space 1}   -0.22{col 46}{space 3}0.831{col 54}{space 4}-4.861682{col 67}{space 3} 3.963798
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-.7709524{col 26}{space 2} 2.386685{col 37}{space 1}   -0.32{col 46}{space 3}0.751{col 54}{space 4} -5.85805{col 67}{space 3} 4.316145
{txt}{space 8}659  {c |}{col 14}{res}{space 2}-.2287344{col 26}{space 2}   1.9882{col 37}{space 1}   -0.12{col 46}{space 3}0.910{col 54}{space 4}-4.466482{col 67}{space 3} 4.009014
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-.7067451{col 26}{space 2} 2.193437{col 37}{space 1}   -0.32{col 46}{space 3}0.752{col 54}{space 4}-5.381945{col 67}{space 3} 3.968455
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-.6712184{col 26}{space 2} 2.011309{col 37}{space 1}   -0.33{col 46}{space 3}0.743{col 54}{space 4}-4.958223{col 67}{space 3} 3.615786
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-.1417789{col 26}{space 2} 2.140669{col 37}{space 1}   -0.07{col 46}{space 3}0.948{col 54}{space 4}-4.704507{col 67}{space 3} 4.420949
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-.6831007{col 26}{space 2} 2.023062{col 37}{space 1}   -0.34{col 46}{space 3}0.740{col 54}{space 4}-4.995156{col 67}{space 3} 3.628954
{txt}{space 8}664  {c |}{col 14}{res}{space 2}-.4602191{col 26}{space 2} 2.045161{col 37}{space 1}   -0.23{col 46}{space 3}0.825{col 54}{space 4}-4.819376{col 67}{space 3} 3.898937
{txt}{space 8}665  {c |}{col 14}{res}{space 2}-.0858999{col 26}{space 2} 2.086461{col 37}{space 1}   -0.04{col 46}{space 3}0.968{col 54}{space 4}-4.533085{col 67}{space 3} 4.361285
{txt}{space 8}666  {c |}{col 14}{res}{space 2}-.1299242{col 26}{space 2} 2.047483{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-4.494031{col 67}{space 3} 4.234183
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-.2913164{col 26}{space 2} 2.042485{col 37}{space 1}   -0.14{col 46}{space 3}0.888{col 54}{space 4} -4.64477{col 67}{space 3} 4.062137
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-.4295662{col 26}{space 2} 2.087565{col 37}{space 1}   -0.21{col 46}{space 3}0.840{col 54}{space 4}-4.879107{col 67}{space 3} 4.019974
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-.3140773{col 26}{space 2} 2.055193{col 37}{space 1}   -0.15{col 46}{space 3}0.881{col 54}{space 4}-4.694617{col 67}{space 3} 4.066463
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-.4996014{col 26}{space 2}  1.98428{col 37}{space 1}   -0.25{col 46}{space 3}0.805{col 54}{space 4}-4.728995{col 67}{space 3} 3.729792
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-.2083151{col 26}{space 2} 1.987644{col 37}{space 1}   -0.10{col 46}{space 3}0.918{col 54}{space 4}-4.444878{col 67}{space 3} 4.028248
{txt}{space 8}672  {c |}{col 14}{res}{space 2}-.3835293{col 26}{space 2}  2.08531{col 37}{space 1}   -0.18{col 46}{space 3}0.857{col 54}{space 4}-4.828262{col 67}{space 3} 4.061204
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-.2516742{col 26}{space 2}  2.10606{col 37}{space 1}   -0.12{col 46}{space 3}0.906{col 54}{space 4}-4.740634{col 67}{space 3} 4.237286
{txt}{space 8}674  {c |}{col 14}{res}{space 2}-.0864599{col 26}{space 2} 2.157179{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-4.684378{col 67}{space 3} 4.511458
{txt}{space 8}675  {c |}{col 14}{res}{space 2}  .275297{col 26}{space 2} 2.176597{col 37}{space 1}    0.13{col 46}{space 3}0.901{col 54}{space 4}-4.364009{col 67}{space 3} 4.914604
{txt}{space 8}676  {c |}{col 14}{res}{space 2} .3354727{col 26}{space 2} 2.199895{col 37}{space 1}    0.15{col 46}{space 3}0.881{col 54}{space 4}-4.353493{col 67}{space 3} 5.024438
{txt}{space 8}677  {c |}{col 14}{res}{space 2} .0206684{col 26}{space 2} 2.156305{col 37}{space 1}    0.01{col 46}{space 3}0.992{col 54}{space 4}-4.575386{col 67}{space 3} 4.616723
{txt}{space 8}678  {c |}{col 14}{res}{space 2} .2468139{col 26}{space 2} 2.189195{col 37}{space 1}    0.11{col 46}{space 3}0.912{col 54}{space 4}-4.419344{col 67}{space 3} 4.912972
{txt}{space 8}679  {c |}{col 14}{res}{space 2} .3440165{col 26}{space 2} 2.169569{col 37}{space 1}    0.16{col 46}{space 3}0.876{col 54}{space 4}-4.280311{col 67}{space 3} 4.968344
{txt}{space 8}680  {c |}{col 14}{res}{space 2} .3951471{col 26}{space 2} 2.163899{col 37}{space 1}    0.18{col 46}{space 3}0.858{col 54}{space 4}-4.217095{col 67}{space 3} 5.007389
{txt}{space 8}681  {c |}{col 14}{res}{space 2} .4067699{col 26}{space 2} 2.166178{col 37}{space 1}    0.19{col 46}{space 3}0.854{col 54}{space 4} -4.21033{col 67}{space 3}  5.02387
{txt}{space 8}682  {c |}{col 14}{res}{space 2} .0669195{col 26}{space 2} 2.169605{col 37}{space 1}    0.03{col 46}{space 3}0.976{col 54}{space 4}-4.557483{col 67}{space 3} 4.691323
{txt}{space 8}683  {c |}{col 14}{res}{space 2}-.0910468{col 26}{space 2} 2.188442{col 37}{space 1}   -0.04{col 46}{space 3}0.967{col 54}{space 4}  -4.7556{col 67}{space 3} 4.573506
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-.0127354{col 26}{space 2} 2.358285{col 37}{space 1}   -0.01{col 46}{space 3}0.996{col 54}{space 4}-5.039301{col 67}{space 3} 5.013831
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-.1929855{col 26}{space 2} 2.347408{col 37}{space 1}   -0.08{col 46}{space 3}0.936{col 54}{space 4}-5.196368{col 67}{space 3} 4.810397
{txt}{space 8}686  {c |}{col 14}{res}{space 2}-.1993113{col 26}{space 2} 2.392245{col 37}{space 1}   -0.08{col 46}{space 3}0.935{col 54}{space 4} -5.29826{col 67}{space 3} 4.899637
{txt}{space 8}687  {c |}{col 14}{res}{space 2} .1403251{col 26}{space 2} 2.349416{col 37}{space 1}    0.06{col 46}{space 3}0.953{col 54}{space 4}-4.867337{col 67}{space 3} 5.147988
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-.1537008{col 26}{space 2} 2.381693{col 37}{space 1}   -0.06{col 46}{space 3}0.949{col 54}{space 4}-5.230159{col 67}{space 3} 4.922757
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-.1747597{col 26}{space 2} 2.376824{col 37}{space 1}   -0.07{col 46}{space 3}0.942{col 54}{space 4}-5.240841{col 67}{space 3} 4.891321
{txt}{space 8}690  {c |}{col 14}{res}{space 2} -.458197{col 26}{space 2} 2.384144{col 37}{space 1}   -0.19{col 46}{space 3}0.850{col 54}{space 4}-5.539879{col 67}{space 3} 4.623485
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-.3124531{col 26}{space 2} 2.421238{col 37}{space 1}   -0.13{col 46}{space 3}0.899{col 54}{space 4}-5.473201{col 67}{space 3} 4.848294
{txt}{space 8}692  {c |}{col 14}{res}{space 2}-.1337873{col 26}{space 2} 2.393831{col 37}{space 1}   -0.06{col 46}{space 3}0.956{col 54}{space 4}-5.236118{col 67}{space 3} 4.968544
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-.2261152{col 26}{space 2} 2.357405{col 37}{space 1}   -0.10{col 46}{space 3}0.925{col 54}{space 4}-5.250804{col 67}{space 3} 4.798574
{txt}{space 8}694  {c |}{col 14}{res}{space 2}-.1412244{col 26}{space 2} 2.398182{col 37}{space 1}   -0.06{col 46}{space 3}0.954{col 54}{space 4}-5.252828{col 67}{space 3} 4.970379
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-.3516956{col 26}{space 2} 2.392411{col 37}{space 1}   -0.15{col 46}{space 3}0.885{col 54}{space 4}-5.450999{col 67}{space 3} 4.747607
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-.2181399{col 26}{space 2} 2.476874{col 37}{space 1}   -0.09{col 46}{space 3}0.931{col 54}{space 4}-5.497471{col 67}{space 3} 5.061191
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-.2583664{col 26}{space 2} 2.471221{col 37}{space 1}   -0.10{col 46}{space 3}0.918{col 54}{space 4}-5.525649{col 67}{space 3} 5.008916
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-.2002749{col 26}{space 2} 2.493456{col 37}{space 1}   -0.08{col 46}{space 3}0.937{col 54}{space 4} -5.51495{col 67}{space 3}   5.1144
{txt}{space 8}699  {c |}{col 14}{res}{space 2}-.4072309{col 26}{space 2}  2.48072{col 37}{space 1}   -0.16{col 46}{space 3}0.872{col 54}{space 4}-5.694761{col 67}{space 3} 4.880299
{txt}{space 8}700  {c |}{col 14}{res}{space 2}-.1311376{col 26}{space 2} 2.470067{col 37}{space 1}   -0.05{col 46}{space 3}0.958{col 54}{space 4}-5.395961{col 67}{space 3} 5.133685
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-.4956159{col 26}{space 2} 2.485851{col 37}{space 1}   -0.20{col 46}{space 3}0.845{col 54}{space 4}-5.794083{col 67}{space 3} 4.802851
{txt}{space 8}702  {c |}{col 14}{res}{space 2}-.7005771{col 26}{space 2} 2.538692{col 37}{space 1}   -0.28{col 46}{space 3}0.786{col 54}{space 4}-6.111672{col 67}{space 3} 4.710518
{txt}{space 8}703  {c |}{col 14}{res}{space 2}-.1496616{col 26}{space 2} 2.518856{col 37}{space 1}   -0.06{col 46}{space 3}0.953{col 54}{space 4}-5.518476{col 67}{space 3} 5.219152
{txt}{space 8}704  {c |}{col 14}{res}{space 2} .0950346{col 26}{space 2} 2.391468{col 37}{space 1}    0.04{col 46}{space 3}0.969{col 54}{space 4}-5.002259{col 67}{space 3} 5.192328
{txt}{space 8}705  {c |}{col 14}{res}{space 2} .1581002{col 26}{space 2} 2.446457{col 37}{space 1}    0.06{col 46}{space 3}0.949{col 54}{space 4}  -5.0564{col 67}{space 3} 5.372601
{txt}{space 8}706  {c |}{col 14}{res}{space 2} .0728746{col 26}{space 2} 2.450636{col 37}{space 1}    0.03{col 46}{space 3}0.977{col 54}{space 4}-5.150532{col 67}{space 3} 5.296281
{txt}{space 8}707  {c |}{col 14}{res}{space 2}-.0513329{col 26}{space 2} 2.522711{col 37}{space 1}   -0.02{col 46}{space 3}0.984{col 54}{space 4}-5.428364{col 67}{space 3} 5.325699
{txt}{space 8}708  {c |}{col 14}{res}{space 2} .3125554{col 26}{space 2} 2.704435{col 37}{space 1}    0.12{col 46}{space 3}0.910{col 54}{space 4}-5.451811{col 67}{space 3} 6.076921
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-.2765498{col 26}{space 2}  2.69444{col 37}{space 1}   -0.10{col 46}{space 3}0.920{col 54}{space 4}-6.019613{col 67}{space 3} 5.466514
{txt}{space 8}710  {c |}{col 14}{res}{space 2} .0366515{col 26}{space 2} 2.672168{col 37}{space 1}    0.01{col 46}{space 3}0.989{col 54}{space 4}-5.658939{col 67}{space 3} 5.732242
{txt}{space 8}711  {c |}{col 14}{res}{space 2}  .358135{col 26}{space 2} 2.617467{col 37}{space 1}    0.14{col 46}{space 3}0.893{col 54}{space 4}-5.220865{col 67}{space 3} 5.937135
{txt}{space 8}712  {c |}{col 14}{res}{space 2}-.0549631{col 26}{space 2} 2.648919{col 37}{space 1}   -0.02{col 46}{space 3}0.984{col 54}{space 4}   -5.701{col 67}{space 3} 5.591074
{txt}{space 8}713  {c |}{col 14}{res}{space 2} .4062649{col 26}{space 2} 2.676077{col 37}{space 1}    0.15{col 46}{space 3}0.881{col 54}{space 4}-5.297658{col 67}{space 3} 6.110188
{txt}{space 8}714  {c |}{col 14}{res}{space 2}  .062261{col 26}{space 2} 2.625397{col 37}{space 1}    0.02{col 46}{space 3}0.981{col 54}{space 4} -5.53364{col 67}{space 3} 5.658162
{txt}{space 8}715  {c |}{col 14}{res}{space 2} .0771336{col 26}{space 2} 2.663376{col 37}{space 1}    0.03{col 46}{space 3}0.977{col 54}{space 4}-5.599718{col 67}{space 3} 5.753986
{txt}{space 8}716  {c |}{col 14}{res}{space 2}  -.02037{col 26}{space 2} 2.682413{col 37}{space 1}   -0.01{col 46}{space 3}0.994{col 54}{space 4}-5.737799{col 67}{space 3} 5.697059
{txt}{space 8}717  {c |}{col 14}{res}{space 2}-.1735617{col 26}{space 2} 2.675991{col 37}{space 1}   -0.06{col 46}{space 3}0.949{col 54}{space 4}-5.877302{col 67}{space 3} 5.530178
{txt}{space 8}718  {c |}{col 14}{res}{space 2} .2033496{col 26}{space 2} 2.636129{col 37}{space 1}    0.08{col 46}{space 3}0.940{col 54}{space 4}-5.415426{col 67}{space 3} 5.822125
{txt}{space 8}719  {c |}{col 14}{res}{space 2} .0623434{col 26}{space 2} 2.675282{col 37}{space 1}    0.02{col 46}{space 3}0.982{col 54}{space 4}-5.639885{col 67}{space 3} 5.764572
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.345929{col 26}{space 2} .4570121{col 37}{space 1}    2.95{col 46}{space 3}0.010{col 54}{space 4} .3718311{col 67}{space 3} 2.320028
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.285348{col 26}{space 2}  .954139{col 37}{space 1}   -1.35{col 46}{space 3}0.198{col 54}{space 4}-3.319047{col 67}{space 3} .7483513
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-.7555617{col 26}{space 2} 1.506379{col 37}{space 1}   -0.50{col 46}{space 3}0.623{col 54}{space 4}-3.966333{col 67}{space 3}  2.45521
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.6071041{col 26}{space 2} .4059598{col 37}{space 1}   -1.50{col 46}{space 3}0.156{col 54}{space 4}-1.472387{col 67}{space 3} .2581788
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .8872419{col 26}{space 2} .3952065{col 37}{space 1}    2.25{col 46}{space 3}0.040{col 54}{space 4} .0448793{col 67}{space 3} 1.729605
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} .4746861{col 26}{space 2} 1.591748{col 37}{space 1}    0.30{col 46}{space 3}0.770{col 54}{space 4}-2.918044{col 67}{space 3} 3.867416
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 1.091212{col 26}{space 2} .8095308{col 37}{space 1}    1.35{col 46}{space 3}0.198{col 54}{space 4}-.6342621{col 67}{space 3} 2.816686
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.042446{col 26}{space 2} .6558565{col 37}{space 1}   -3.11{col 46}{space 3}0.007{col 54}{space 4}-3.440371{col 67}{space 3}-.6445207
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-2.185615{col 26}{space 2} .6959193{col 37}{space 1}   -3.14{col 46}{space 3}0.007{col 54}{space 4}-3.668932{col 67}{space 3}-.7022983
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.596929{col 26}{space 2} 1.009562{col 37}{space 1}   -1.58{col 46}{space 3}0.135{col 54}{space 4} -3.74876{col 67}{space 3} .5549029
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 2.086688{col 26}{space 2} .4807975{col 37}{space 1}    4.34{col 46}{space 3}0.001{col 54}{space 4} 1.061892{col 67}{space 3} 3.111483
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} .1535727{col 26}{space 2} 1.085872{col 37}{space 1}    0.14{col 46}{space 3}0.889{col 54}{space 4}-2.160909{col 67}{space 3} 2.468054
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.940743{col 26}{space 2} 1.053187{col 37}{space 1}    2.79{col 46}{space 3}0.014{col 54}{space 4} .6959277{col 67}{space 3} 5.185557
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} .9890402{col 26}{space 2} 4.379746{col 37}{space 1}    0.23{col 46}{space 3}0.824{col 54}{space 4}-8.346168{col 67}{space 3} 10.32425
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} 1.139411{col 26}{space 2} 1.540179{col 37}{space 1}    0.74{col 46}{space 3}0.471{col 54}{space 4}-2.143404{col 67}{space 3} 4.422225
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-15.83373{col 26}{space 2} 18.68761{col 37}{space 1}   -0.85{col 46}{space 3}0.410{col 54}{space 4}-55.66542{col 67}{space 3} 23.99796
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 631 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -5.6943
{col 25}{txt}Prob>|t| = {res}    0.0207

95%{txt} confidence set for null hypothesis expression: [{res}-3.752{txt}, {res}-1.275{txt}]
{res}
Warning: 14 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -3.9614
{col 25}{txt}Prob>|t| = {res}    0.0062

95%{txt} confidence set for null hypothesis expression: [{res}-3.965{txt}, {res}-1.075{txt}]
{res}
Warning: 10 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -4.6397
{col 25}{txt}Prob>|t| = {res}    0.0038

95%{txt} confidence set for null hypothesis expression: [{res}-4.404{txt}, {res}-1.54{txt}]
{res}
Warning: 16 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -7.0839
{col 25}{txt}Prob>|t| = {res}    0.0007

95%{txt} confidence set for null hypothesis expression: [{res}-3.248{txt}, {res}-1.792{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -6.8766
{col 25}{txt}Prob>|t| = {res}    0.0113

95%{txt} confidence set for null hypothesis expression: [{res}-2.673{txt}, {res}-.8117{txt}]
{res}
Warning: 20 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_port

{txt}{col 28}t(15) = {res}    0.3728
{col 25}{txt}Prob>|t| = {res}    0.7180

95%{txt} confidence set for null hypothesis expression: [{res}-.3915{txt}, {res}.5421{txt}]
{res}
Warning: 7 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_port

{txt}{col 28}t(15) = {res}   -0.3672
{col 25}{txt}Prob>|t| = {res}    0.7325

95%{txt} confidence set for null hypothesis expression: [{res}-.9785{txt}, {res}.7022{txt}]
{res}
Warning: 9 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_port

{txt}{col 28}t(15) = {res}    0.9868
{col 25}{txt}Prob>|t| = {res}    0.3485

95%{txt} confidence set for null hypothesis expression: [{res}-.5367{txt}, {res}1.409{txt}]
{res}
Warning: 11 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_port

{txt}{col 28}t(15) = {res}   -0.3366
{col 25}{txt}Prob>|t| = {res}    0.7473

95%{txt} confidence set for null hypothesis expression: [{res}-.7836{txt}, {res}.5765{txt}]
{res}
Warning: 92 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_port

{txt}{col 28}t(15) = {res}   -0.7842
{col 25}{txt}Prob>|t| = {res}    0.4963

95%{txt} confidence set for null hypothesis expression: [{res}-.9562{txt}, {res}.5152{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8163
                                                {txt}Root MSE          =    {res}  1.063

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-2.230561{col 26}{space 2} .3922842{col 37}{space 1}   -5.69{col 46}{space 3}0.000{col 54}{space 4}-3.066695{col 67}{space 3}-1.394427
{txt}{space 9}two {c |}{col 14}{res}{space 2}-2.607272{col 26}{space 2} .6942573{col 37}{space 1}   -3.76{col 46}{space 3}0.002{col 54}{space 4}-4.087047{col 67}{space 3}-1.127498
{txt}{space 7}three {c |}{col 14}{res}{space 2}-3.394488{col 26}{space 2} .6132158{col 37}{space 1}   -5.54{col 46}{space 3}0.000{col 54}{space 4}-4.701526{col 67}{space 3}-2.087449
{txt}{space 8}four {c |}{col 14}{res}{space 2}-1.850876{col 26}{space 2} .3808983{col 37}{space 1}   -4.86{col 46}{space 3}0.000{col 54}{space 4}-2.662741{col 67}{space 3} -1.03901
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.779674{col 26}{space 2} .2001148{col 37}{space 1}   -8.89{col 46}{space 3}0.000{col 54}{space 4}-2.206208{col 67}{space 3}-1.353139
{txt}{space 2}one_grad_s {c |}{col 14}{res}{space 2} .0691966{col 26}{space 2} .0243124{col 37}{space 1}    2.85{col 46}{space 3}0.012{col 54}{space 4} .0173761{col 67}{space 3} .1210172
{txt}{space 2}two_grad_s {c |}{col 14}{res}{space 2}-.0295143{col 26}{space 2} .0403602{col 37}{space 1}   -0.73{col 46}{space 3}0.476{col 54}{space 4}-.1155401{col 67}{space 3} .0565115
{txt}three_grad_s {c |}{col 14}{res}{space 2}-.0654681{col 26}{space 2} .1073694{col 37}{space 1}   -0.61{col 46}{space 3}0.551{col 54}{space 4}-.2943207{col 67}{space 3} .1633844
{txt}{space 1}four_grad_s {c |}{col 14}{res}{space 2} .1416907{col 26}{space 2} .0338227{col 37}{space 1}    4.19{col 46}{space 3}0.001{col 54}{space 4} .0695993{col 67}{space 3} .2137821
{txt}{space 1}five_grad_s {c |}{col 14}{res}{space 2}-.0310308{col 26}{space 2} .0166467{col 37}{space 1}   -1.86{col 46}{space 3}0.082{col 54}{space 4}-.0665123{col 67}{space 3} .0044507
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} .8260593{col 26}{space 2} 1.023816{col 37}{space 1}    0.81{col 46}{space 3}0.432{col 54}{space 4}-1.356153{col 67}{space 3} 3.008271
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.1019279{col 26}{space 2} .3173176{col 37}{space 1}   -0.32{col 46}{space 3}0.752{col 54}{space 4}-.7782744{col 67}{space 3} .5744186
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2726175{col 37}{space 1}   -0.19{col 46}{space 3}0.848{col 54}{space 4} -.634209{col 67}{space 3} .5279318
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2838562{col 37}{space 1}   -1.73{col 46}{space 3}0.104{col 54}{space 4}-1.096611{col 67}{space 3} .1134396
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3045491{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-.8502942{col 67}{space 3}  .447968
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2900432{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4} -.851283{col 67}{space 3} .3851418
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2876443{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4} -.571149{col 67}{space 3} .6550495
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3473569{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.3808525{col 67}{space 3} 1.099895
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3875732{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-.6374695{col 67}{space 3} 1.014716
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3760577{col 37}{space 1}    0.19{col 46}{space 3}0.850{col 54}{space 4}-.7289601{col 67}{space 3}  .874136
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2883515{col 37}{space 1}   -0.60{col 46}{space 3}0.559{col 54}{space 4}-.7871317{col 67}{space 3} .4420816
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2}  .320841{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6987346{col 67}{space 3} .6689783
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3228138{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7087306{col 67}{space 3} .6673921
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.5337533{col 26}{space 2} .3778824{col 37}{space 1}   -1.41{col 46}{space 3}0.178{col 54}{space 4}-1.339191{col 67}{space 3}  .271684
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.1175698{col 26}{space 2} .5061045{col 37}{space 1}   -0.23{col 46}{space 3}0.819{col 54}{space 4}-1.196306{col 67}{space 3} .9611664
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.0989846{col 26}{space 2}  .334575{col 37}{space 1}   -0.30{col 46}{space 3}0.771{col 54}{space 4}-.8121144{col 67}{space 3} .6141452
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.3217978{col 26}{space 2} .4370132{col 37}{space 1}   -0.74{col 46}{space 3}0.473{col 54}{space 4}-1.253269{col 67}{space 3} .6096738
{txt}{space 8}568  {c |}{col 14}{res}{space 2} -.214775{col 26}{space 2} .4669073{col 37}{space 1}   -0.46{col 46}{space 3}0.652{col 54}{space 4}-1.209964{col 67}{space 3} .7804144
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.3854474{col 26}{space 2} .3833061{col 37}{space 1}   -1.01{col 46}{space 3}0.331{col 54}{space 4}-1.202445{col 67}{space 3} .4315502
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .3415076{col 26}{space 2} .4770755{col 37}{space 1}    0.72{col 46}{space 3}0.485{col 54}{space 4}-.6753548{col 67}{space 3}  1.35837
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.9381331{col 26}{space 2} .4361666{col 37}{space 1}   -2.15{col 46}{space 3}0.048{col 54}{space 4}  -1.8678{col 67}{space 3} -.008466
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-1.133897{col 26}{space 2} .3659091{col 37}{space 1}   -3.10{col 46}{space 3}0.007{col 54}{space 4}-1.913814{col 67}{space 3}  -.35398
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.7770904{col 26}{space 2} .4969693{col 37}{space 1}   -1.56{col 46}{space 3}0.139{col 54}{space 4}-1.836355{col 67}{space 3} .2821746
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.6304507{col 26}{space 2}  .389849{col 37}{space 1}   -1.62{col 46}{space 3}0.127{col 54}{space 4}-1.461394{col 67}{space 3} .2004928
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.3582841{col 26}{space 2} .5429603{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-1.515577{col 67}{space 3} .7990084
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.9263934{col 26}{space 2} .5951901{col 37}{space 1}   -1.56{col 46}{space 3}0.140{col 54}{space 4}-2.195011{col 67}{space 3} .3422242
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.3782342{col 26}{space 2}  .575723{col 37}{space 1}   -0.66{col 46}{space 3}0.521{col 54}{space 4}-1.605359{col 67}{space 3} .8488903
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.6674278{col 26}{space 2} .6956086{col 37}{space 1}   -0.96{col 46}{space 3}0.353{col 54}{space 4}-2.150082{col 67}{space 3} .8152268
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.5143637{col 26}{space 2} .5358045{col 37}{space 1}   -0.96{col 46}{space 3}0.352{col 54}{space 4}-1.656404{col 67}{space 3} .6276767
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.0509274{col 26}{space 2} .5449815{col 37}{space 1}   -0.09{col 46}{space 3}0.927{col 54}{space 4}-1.212528{col 67}{space 3} 1.110673
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.2052175{col 26}{space 2} .5029915{col 37}{space 1}   -0.41{col 46}{space 3}0.689{col 54}{space 4}-1.277319{col 67}{space 3} .8668835
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.1819983{col 26}{space 2} .5364532{col 37}{space 1}   -0.34{col 46}{space 3}0.739{col 54}{space 4}-1.325421{col 67}{space 3} .9614247
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.3193054{col 26}{space 2} .5983454{col 37}{space 1}   -0.53{col 46}{space 3}0.601{col 54}{space 4}-1.594648{col 67}{space 3} .9560376
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.1531227{col 26}{space 2} .5596705{col 37}{space 1}   -0.27{col 46}{space 3}0.788{col 54}{space 4}-1.346032{col 67}{space 3} 1.039787
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.2274732{col 26}{space 2}  .486674{col 37}{space 1}   -0.47{col 46}{space 3}0.647{col 54}{space 4}-1.264794{col 67}{space 3} .8098479
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.3288548{col 26}{space 2} .5599517{col 37}{space 1}   -0.59{col 46}{space 3}0.566{col 54}{space 4}-1.522364{col 67}{space 3} .8646541
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.5484154{col 26}{space 2} .5803902{col 37}{space 1}   -0.94{col 46}{space 3}0.360{col 54}{space 4}-1.785488{col 67}{space 3}  .688657
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.3309457{col 26}{space 2} .6429977{col 37}{space 1}   -0.51{col 46}{space 3}0.614{col 54}{space 4}-1.701463{col 67}{space 3} 1.039571
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.1328232{col 26}{space 2} .6877843{col 37}{space 1}   -0.19{col 46}{space 3}0.849{col 54}{space 4}-1.598801{col 67}{space 3} 1.333154
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.2043447{col 26}{space 2} .6898942{col 37}{space 1}   -0.30{col 46}{space 3}0.771{col 54}{space 4}-1.674819{col 67}{space 3}  1.26613
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-.7893143{col 26}{space 2} .7194761{col 37}{space 1}   -1.10{col 46}{space 3}0.290{col 54}{space 4}-2.322841{col 67}{space 3} .7442127
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.2074306{col 26}{space 2} .6134348{col 37}{space 1}   -0.34{col 46}{space 3}0.740{col 54}{space 4}-1.514936{col 67}{space 3} 1.100075
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .0935588{col 26}{space 2} .6840491{col 37}{space 1}    0.14{col 46}{space 3}0.893{col 54}{space 4}-1.364457{col 67}{space 3} 1.551575
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .1037542{col 26}{space 2}  .671694{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4}-1.327928{col 67}{space 3} 1.535436
{txt}{space 8}595  {c |}{col 14}{res}{space 2} .0987412{col 26}{space 2} .7447048{col 37}{space 1}    0.13{col 46}{space 3}0.896{col 54}{space 4} -1.48856{col 67}{space 3} 1.686042
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.1970681{col 26}{space 2}  .613966{col 37}{space 1}   -0.32{col 46}{space 3}0.753{col 54}{space 4}-1.505706{col 67}{space 3}  1.11157
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.1961424{col 26}{space 2} .6403349{col 37}{space 1}   -0.31{col 46}{space 3}0.764{col 54}{space 4}-1.560984{col 67}{space 3} 1.168699
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.0829239{col 26}{space 2} .6404032{col 37}{space 1}   -0.13{col 46}{space 3}0.899{col 54}{space 4}-1.447911{col 67}{space 3} 1.282063
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.2886364{col 26}{space 2} .6840428{col 37}{space 1}   -0.42{col 46}{space 3}0.679{col 54}{space 4}-1.746639{col 67}{space 3} 1.169366
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.1562551{col 26}{space 2} .7751589{col 37}{space 1}   -0.20{col 46}{space 3}0.843{col 54}{space 4}-1.808467{col 67}{space 3} 1.495957
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-.3992856{col 26}{space 2} .7809127{col 37}{space 1}   -0.51{col 46}{space 3}0.617{col 54}{space 4}-2.063762{col 67}{space 3}  1.26519
{txt}{space 8}602  {c |}{col 14}{res}{space 2} .0376671{col 26}{space 2} .8529416{col 37}{space 1}    0.04{col 46}{space 3}0.965{col 54}{space 4}-1.780335{col 67}{space 3} 1.855669
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.3453138{col 26}{space 2} .7297466{col 37}{space 1}   -0.47{col 46}{space 3}0.643{col 54}{space 4}-1.900732{col 67}{space 3} 1.210104
{txt}{space 8}604  {c |}{col 14}{res}{space 2} -.069055{col 26}{space 2} .7593519{col 37}{space 1}   -0.09{col 46}{space 3}0.929{col 54}{space 4}-1.687575{col 67}{space 3} 1.549465
{txt}{space 8}605  {c |}{col 14}{res}{space 2} .3186422{col 26}{space 2} .7634351{col 37}{space 1}    0.42{col 46}{space 3}0.682{col 54}{space 4}-1.308581{col 67}{space 3} 1.945866
{txt}{space 8}606  {c |}{col 14}{res}{space 2} -.078059{col 26}{space 2} .8659348{col 37}{space 1}   -0.09{col 46}{space 3}0.929{col 54}{space 4}-1.923755{col 67}{space 3} 1.767637
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .2392282{col 26}{space 2} .7939443{col 37}{space 1}    0.30{col 46}{space 3}0.767{col 54}{space 4}-1.453024{col 67}{space 3} 1.931481
{txt}{space 8}608  {c |}{col 14}{res}{space 2} .0609387{col 26}{space 2} .8490759{col 37}{space 1}    0.07{col 46}{space 3}0.944{col 54}{space 4}-1.748824{col 67}{space 3} 1.870701
{txt}{space 8}609  {c |}{col 14}{res}{space 2} .0289186{col 26}{space 2} .9527702{col 37}{space 1}    0.03{col 46}{space 3}0.976{col 54}{space 4}-2.001863{col 67}{space 3}   2.0597
{txt}{space 8}610  {c |}{col 14}{res}{space 2} .3888632{col 26}{space 2} .9186455{col 37}{space 1}    0.42{col 46}{space 3}0.678{col 54}{space 4}-1.569183{col 67}{space 3}  2.34691
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .6426122{col 26}{space 2} .7592986{col 37}{space 1}    0.85{col 46}{space 3}0.411{col 54}{space 4}-.9757945{col 67}{space 3} 2.261019
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .1116517{col 26}{space 2} 1.018816{col 37}{space 1}    0.11{col 46}{space 3}0.914{col 54}{space 4}-2.059902{col 67}{space 3} 2.283206
{txt}{space 8}613  {c |}{col 14}{res}{space 2} .1699988{col 26}{space 2} 1.110319{col 37}{space 1}    0.15{col 46}{space 3}0.880{col 54}{space 4} -2.19659{col 67}{space 3} 2.536588
{txt}{space 8}614  {c |}{col 14}{res}{space 2} .0877542{col 26}{space 2} .9736445{col 37}{space 1}    0.09{col 46}{space 3}0.929{col 54}{space 4} -1.98752{col 67}{space 3} 2.163028
{txt}{space 8}615  {c |}{col 14}{res}{space 2} .2619074{col 26}{space 2}  1.03106{col 37}{space 1}    0.25{col 46}{space 3}0.803{col 54}{space 4}-1.935746{col 67}{space 3} 2.459561
{txt}{space 8}616  {c |}{col 14}{res}{space 2} .1557843{col 26}{space 2} 1.007649{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4} -1.99197{col 67}{space 3} 2.303538
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-.3147062{col 26}{space 2}  1.17979{col 37}{space 1}   -0.27{col 46}{space 3}0.793{col 54}{space 4}-2.829369{col 67}{space 3} 2.199957
{txt}{space 8}618  {c |}{col 14}{res}{space 2} .0456395{col 26}{space 2} .9158831{col 37}{space 1}    0.05{col 46}{space 3}0.961{col 54}{space 4}-1.906519{col 67}{space 3} 1.997798
{txt}{space 8}619  {c |}{col 14}{res}{space 2} .5189463{col 26}{space 2} .9716112{col 37}{space 1}    0.53{col 46}{space 3}0.601{col 54}{space 4}-1.551994{col 67}{space 3} 2.589886
{txt}{space 8}620  {c |}{col 14}{res}{space 2} .2910884{col 26}{space 2} 1.139242{col 37}{space 1}    0.26{col 46}{space 3}0.802{col 54}{space 4}-2.137149{col 67}{space 3} 2.719326
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .3959382{col 26}{space 2} .9576457{col 37}{space 1}    0.41{col 46}{space 3}0.685{col 54}{space 4}-1.645235{col 67}{space 3} 2.437112
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .2036647{col 26}{space 2} .9367276{col 37}{space 1}    0.22{col 46}{space 3}0.831{col 54}{space 4}-1.792923{col 67}{space 3} 2.200252
{txt}{space 8}623  {c |}{col 14}{res}{space 2} .2009462{col 26}{space 2} .9142077{col 37}{space 1}    0.22{col 46}{space 3}0.829{col 54}{space 4}-1.747641{col 67}{space 3} 2.149534
{txt}{space 8}624  {c |}{col 14}{res}{space 2} .0279471{col 26}{space 2} 1.109266{col 37}{space 1}    0.03{col 46}{space 3}0.980{col 54}{space 4}-2.336397{col 67}{space 3} 2.392291
{txt}{space 8}625  {c |}{col 14}{res}{space 2}  .030075{col 26}{space 2}  1.12371{col 37}{space 1}    0.03{col 46}{space 3}0.979{col 54}{space 4}-2.365055{col 67}{space 3} 2.425205
{txt}{space 8}626  {c |}{col 14}{res}{space 2} .3216936{col 26}{space 2} 1.159751{col 37}{space 1}    0.28{col 46}{space 3}0.785{col 54}{space 4}-2.150258{col 67}{space 3} 2.793645
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-.0859369{col 26}{space 2} 1.134356{col 37}{space 1}   -0.08{col 46}{space 3}0.941{col 54}{space 4}-2.503761{col 67}{space 3} 2.331887
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-.5410006{col 26}{space 2} 1.157088{col 37}{space 1}   -0.47{col 46}{space 3}0.647{col 54}{space 4}-3.007275{col 67}{space 3} 1.925274
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-.1559046{col 26}{space 2} 1.114144{col 37}{space 1}   -0.14{col 46}{space 3}0.891{col 54}{space 4}-2.530646{col 67}{space 3} 2.218837
{txt}{space 8}630  {c |}{col 14}{res}{space 2} .3027754{col 26}{space 2} 1.103889{col 37}{space 1}    0.27{col 46}{space 3}0.788{col 54}{space 4}-2.050109{col 67}{space 3} 2.655659
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-.5112564{col 26}{space 2} 1.229313{col 37}{space 1}   -0.42{col 46}{space 3}0.683{col 54}{space 4}-3.131475{col 67}{space 3} 2.108962
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-.0002109{col 26}{space 2} 1.134007{col 37}{space 1}   -0.00{col 46}{space 3}1.000{col 54}{space 4} -2.41729{col 67}{space 3} 2.416868
{txt}{space 8}633  {c |}{col 14}{res}{space 2} .4612648{col 26}{space 2} 1.056362{col 37}{space 1}    0.44{col 46}{space 3}0.669{col 54}{space 4}-1.790318{col 67}{space 3} 2.712847
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-.0276439{col 26}{space 2} 1.096957{col 37}{space 1}   -0.03{col 46}{space 3}0.980{col 54}{space 4}-2.365753{col 67}{space 3} 2.310465
{txt}{space 8}635  {c |}{col 14}{res}{space 2} .2396766{col 26}{space 2}  1.11397{col 37}{space 1}    0.22{col 46}{space 3}0.833{col 54}{space 4}-2.134694{col 67}{space 3} 2.614047
{txt}{space 8}636  {c |}{col 14}{res}{space 2} .0026099{col 26}{space 2} 1.235232{col 37}{space 1}    0.00{col 46}{space 3}0.998{col 54}{space 4}-2.630225{col 67}{space 3} 2.635445
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-.3960513{col 26}{space 2} 1.235121{col 37}{space 1}   -0.32{col 46}{space 3}0.753{col 54}{space 4}-3.028649{col 67}{space 3} 2.236547
{txt}{space 8}638  {c |}{col 14}{res}{space 2} .5656467{col 26}{space 2} 1.224566{col 37}{space 1}    0.46{col 46}{space 3}0.651{col 54}{space 4}-2.044454{col 67}{space 3} 3.175748
{txt}{space 8}639  {c |}{col 14}{res}{space 2} .2045162{col 26}{space 2} 1.175309{col 37}{space 1}    0.17{col 46}{space 3}0.864{col 54}{space 4}-2.300596{col 67}{space 3} 2.709629
{txt}{space 8}640  {c |}{col 14}{res}{space 2} .3752516{col 26}{space 2}  1.20145{col 37}{space 1}    0.31{col 46}{space 3}0.759{col 54}{space 4}-2.185579{col 67}{space 3} 2.936083
{txt}{space 8}641  {c |}{col 14}{res}{space 2} .5194088{col 26}{space 2} 1.302767{col 37}{space 1}    0.40{col 46}{space 3}0.696{col 54}{space 4}-2.257374{col 67}{space 3} 3.296192
{txt}{space 8}642  {c |}{col 14}{res}{space 2} .4344434{col 26}{space 2} 1.299995{col 37}{space 1}    0.33{col 46}{space 3}0.743{col 54}{space 4}-2.336429{col 67}{space 3} 3.205316
{txt}{space 8}643  {c |}{col 14}{res}{space 2} .5733775{col 26}{space 2} 1.318617{col 37}{space 1}    0.43{col 46}{space 3}0.670{col 54}{space 4}-2.237188{col 67}{space 3} 3.383944
{txt}{space 8}644  {c |}{col 14}{res}{space 2} .2664955{col 26}{space 2} 1.343692{col 37}{space 1}    0.20{col 46}{space 3}0.845{col 54}{space 4}-2.597515{col 67}{space 3} 3.130506
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 1.084891{col 26}{space 2} 1.488029{col 37}{space 1}    0.73{col 46}{space 3}0.477{col 54}{space 4}-2.086768{col 67}{space 3}  4.25655
{txt}{space 8}646  {c |}{col 14}{res}{space 2} .7205235{col 26}{space 2} 1.411567{col 37}{space 1}    0.51{col 46}{space 3}0.617{col 54}{space 4}-2.288161{col 67}{space 3} 3.729208
{txt}{space 8}647  {c |}{col 14}{res}{space 2} .8598118{col 26}{space 2} 1.477388{col 37}{space 1}    0.58{col 46}{space 3}0.569{col 54}{space 4}-2.289166{col 67}{space 3}  4.00879
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 1.180278{col 26}{space 2} 1.510825{col 37}{space 1}    0.78{col 46}{space 3}0.447{col 54}{space 4}-2.039969{col 67}{space 3} 4.400525
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 1.425161{col 26}{space 2}  1.50124{col 37}{space 1}    0.95{col 46}{space 3}0.358{col 54}{space 4}-1.774655{col 67}{space 3} 4.624978
{txt}{space 8}650  {c |}{col 14}{res}{space 2} .8495639{col 26}{space 2} 1.471127{col 37}{space 1}    0.58{col 46}{space 3}0.572{col 54}{space 4}-2.286069{col 67}{space 3} 3.985196
{txt}{space 8}651  {c |}{col 14}{res}{space 2} .7027567{col 26}{space 2}  1.52864{col 37}{space 1}    0.46{col 46}{space 3}0.652{col 54}{space 4}-2.555462{col 67}{space 3} 3.960975
{txt}{space 8}652  {c |}{col 14}{res}{space 2} .8621425{col 26}{space 2} 1.472682{col 37}{space 1}    0.59{col 46}{space 3}0.567{col 54}{space 4}-2.276805{col 67}{space 3}  4.00109
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 1.601213{col 26}{space 2} 1.554596{col 37}{space 1}    1.03{col 46}{space 3}0.319{col 54}{space 4}-1.712329{col 67}{space 3} 4.914756
{txt}{space 8}654  {c |}{col 14}{res}{space 2} 1.204137{col 26}{space 2} 1.525872{col 37}{space 1}    0.79{col 46}{space 3}0.442{col 54}{space 4}-2.048183{col 67}{space 3} 4.456456
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 1.209062{col 26}{space 2} 1.547233{col 37}{space 1}    0.78{col 46}{space 3}0.447{col 54}{space 4}-2.088788{col 67}{space 3} 4.506912
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 1.049183{col 26}{space 2} 1.468246{col 37}{space 1}    0.71{col 46}{space 3}0.486{col 54}{space 4}-2.080308{col 67}{space 3} 4.178675
{txt}{space 8}657  {c |}{col 14}{res}{space 2} .8604922{col 26}{space 2} 1.525998{col 37}{space 1}    0.56{col 46}{space 3}0.581{col 54}{space 4}-2.392096{col 67}{space 3}  4.11308
{txt}{space 8}658  {c |}{col 14}{res}{space 2} .5384816{col 26}{space 2} 1.688875{col 37}{space 1}    0.32{col 46}{space 3}0.754{col 54}{space 4}-3.061269{col 67}{space 3} 4.138233
{txt}{space 8}659  {c |}{col 14}{res}{space 2}   1.0807{col 26}{space 2} 1.528432{col 37}{space 1}    0.71{col 46}{space 3}0.490{col 54}{space 4}-2.177077{col 67}{space 3} 4.338476
{txt}{space 8}660  {c |}{col 14}{res}{space 2}    .6838{col 26}{space 2} 1.602465{col 37}{space 1}    0.43{col 46}{space 3}0.676{col 54}{space 4}-2.731773{col 67}{space 3} 4.099373
{txt}{space 8}661  {c |}{col 14}{res}{space 2} .7193267{col 26}{space 2} 1.606554{col 37}{space 1}    0.45{col 46}{space 3}0.661{col 54}{space 4}-2.704962{col 67}{space 3} 4.143616
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 1.248766{col 26}{space 2} 1.616345{col 37}{space 1}    0.77{col 46}{space 3}0.452{col 54}{space 4}-2.196392{col 67}{space 3} 4.693925
{txt}{space 8}663  {c |}{col 14}{res}{space 2} .7074444{col 26}{space 2} 1.548666{col 37}{space 1}    0.46{col 46}{space 3}0.654{col 54}{space 4}-2.593459{col 67}{space 3} 4.008348
{txt}{space 8}664  {c |}{col 14}{res}{space 2} .9303261{col 26}{space 2} 1.567123{col 37}{space 1}    0.59{col 46}{space 3}0.562{col 54}{space 4}-2.409918{col 67}{space 3}  4.27057
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 1.304645{col 26}{space 2} 1.618643{col 37}{space 1}    0.81{col 46}{space 3}0.433{col 54}{space 4}-2.145411{col 67}{space 3} 4.754701
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 1.260621{col 26}{space 2} 1.522805{col 37}{space 1}    0.83{col 46}{space 3}0.421{col 54}{space 4}-1.985162{col 67}{space 3} 4.506404
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 1.099229{col 26}{space 2} 1.527141{col 37}{space 1}    0.72{col 46}{space 3}0.483{col 54}{space 4}-2.155796{col 67}{space 3} 4.354253
{txt}{space 8}668  {c |}{col 14}{res}{space 2}  .960979{col 26}{space 2} 1.530092{col 37}{space 1}    0.63{col 46}{space 3}0.539{col 54}{space 4}-2.300334{col 67}{space 3} 4.222292
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 1.076468{col 26}{space 2} 1.567806{col 37}{space 1}    0.69{col 46}{space 3}0.503{col 54}{space 4}-2.265232{col 67}{space 3} 4.418168
{txt}{space 8}670  {c |}{col 14}{res}{space 2} .3999135{col 26}{space 2} 1.481708{col 37}{space 1}    0.27{col 46}{space 3}0.791{col 54}{space 4}-2.758271{col 67}{space 3} 3.558099
{txt}{space 8}671  {c |}{col 14}{res}{space 2} .6911999{col 26}{space 2} 1.492048{col 37}{space 1}    0.46{col 46}{space 3}0.650{col 54}{space 4}-2.489024{col 67}{space 3} 3.871424
{txt}{space 8}672  {c |}{col 14}{res}{space 2} .6141608{col 26}{space 2} 1.544584{col 37}{space 1}    0.40{col 46}{space 3}0.697{col 54}{space 4}-2.678041{col 67}{space 3} 3.906363
{txt}{space 8}673  {c |}{col 14}{res}{space 2} .7460158{col 26}{space 2} 1.569598{col 37}{space 1}    0.48{col 46}{space 3}0.641{col 54}{space 4}-2.599503{col 67}{space 3} 4.091535
{txt}{space 8}674  {c |}{col 14}{res}{space 2} .9112301{col 26}{space 2} 1.625483{col 37}{space 1}    0.56{col 46}{space 3}0.583{col 54}{space 4}-2.553404{col 67}{space 3} 4.375864
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 1.272987{col 26}{space 2} 1.650792{col 37}{space 1}    0.77{col 46}{space 3}0.453{col 54}{space 4}-2.245593{col 67}{space 3} 4.791567
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 1.333163{col 26}{space 2} 1.634701{col 37}{space 1}    0.82{col 46}{space 3}0.428{col 54}{space 4}-2.151119{col 67}{space 3} 4.817445
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 1.018358{col 26}{space 2} 1.602168{col 37}{space 1}    0.64{col 46}{space 3}0.535{col 54}{space 4}-2.396581{col 67}{space 3} 4.433298
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 1.244504{col 26}{space 2} 1.621767{col 37}{space 1}    0.77{col 46}{space 3}0.455{col 54}{space 4} -2.21221{col 67}{space 3} 4.701218
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 1.341707{col 26}{space 2} 1.616108{col 37}{space 1}    0.83{col 46}{space 3}0.419{col 54}{space 4}-2.102947{col 67}{space 3}  4.78636
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 1.392837{col 26}{space 2} 1.555913{col 37}{space 1}    0.90{col 46}{space 3}0.385{col 54}{space 4}-1.923514{col 67}{space 3} 4.709188
{txt}{space 8}681  {c |}{col 14}{res}{space 2}  1.40446{col 26}{space 2} 1.597131{col 37}{space 1}    0.88{col 46}{space 3}0.393{col 54}{space 4}-1.999745{col 67}{space 3} 4.808665
{txt}{space 8}682  {c |}{col 14}{res}{space 2}  1.06461{col 26}{space 2} 1.664023{col 37}{space 1}    0.64{col 46}{space 3}0.532{col 54}{space 4}-2.482171{col 67}{space 3} 4.611391
{txt}{space 8}683  {c |}{col 14}{res}{space 2} .9066432{col 26}{space 2} 1.613195{col 37}{space 1}    0.56{col 46}{space 3}0.582{col 54}{space 4}-2.531801{col 67}{space 3} 4.345088
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 1.102457{col 26}{space 2} 1.755203{col 37}{space 1}    0.63{col 46}{space 3}0.539{col 54}{space 4}-2.638669{col 67}{space 3} 4.843583
{txt}{space 8}685  {c |}{col 14}{res}{space 2} .9222073{col 26}{space 2} 1.740505{col 37}{space 1}    0.53{col 46}{space 3}0.604{col 54}{space 4}-2.787592{col 67}{space 3} 4.632007
{txt}{space 8}686  {c |}{col 14}{res}{space 2} .9158814{col 26}{space 2}   1.7775{col 37}{space 1}    0.52{col 46}{space 3}0.614{col 54}{space 4}-2.872771{col 67}{space 3} 4.704534
{txt}{space 8}687  {c |}{col 14}{res}{space 2}  1.25023{col 26}{space 2}  1.73672{col 37}{space 1}    0.72{col 46}{space 3}0.483{col 54}{space 4}  -2.4515{col 67}{space 3}  4.95196
{txt}{space 8}688  {c |}{col 14}{res}{space 2} .9565597{col 26}{space 2}  1.76916{col 37}{space 1}    0.54{col 46}{space 3}0.597{col 54}{space 4}-2.814316{col 67}{space 3} 4.727435
{txt}{space 8}689  {c |}{col 14}{res}{space 2} .9358541{col 26}{space 2} 1.770245{col 37}{space 1}    0.53{col 46}{space 3}0.605{col 54}{space 4}-2.837335{col 67}{space 3} 4.709043
{txt}{space 8}690  {c |}{col 14}{res}{space 2} .6527682{col 26}{space 2} 1.768774{col 37}{space 1}    0.37{col 46}{space 3}0.717{col 54}{space 4}-3.117284{col 67}{space 3} 4.422821
{txt}{space 8}691  {c |}{col 14}{res}{space 2} .7988614{col 26}{space 2} 1.823312{col 37}{space 1}    0.44{col 46}{space 3}0.668{col 54}{space 4}-3.087436{col 67}{space 3} 4.685159
{txt}{space 8}692  {c |}{col 14}{res}{space 2} .9778745{col 26}{space 2} 1.770949{col 37}{space 1}    0.55{col 46}{space 3}0.589{col 54}{space 4}-2.796813{col 67}{space 3} 4.752562
{txt}{space 8}693  {c |}{col 14}{res}{space 2} .8858918{col 26}{space 2} 1.757124{col 37}{space 1}    0.50{col 46}{space 3}0.621{col 54}{space 4}-2.859329{col 67}{space 3} 4.631112
{txt}{space 8}694  {c |}{col 14}{res}{space 2}  .971126{col 26}{space 2} 1.775003{col 37}{space 1}    0.55{col 46}{space 3}0.592{col 54}{space 4}-2.812203{col 67}{space 3} 4.754455
{txt}{space 8}695  {c |}{col 14}{res}{space 2} .7609961{col 26}{space 2}  1.76824{col 37}{space 1}    0.43{col 46}{space 3}0.673{col 54}{space 4}-3.007919{col 67}{space 3} 4.529911
{txt}{space 8}696  {c |}{col 14}{res}{space 2} .9610884{col 26}{space 2} 1.852806{col 37}{space 1}    0.52{col 46}{space 3}0.612{col 54}{space 4}-2.988073{col 67}{space 3}  4.91025
{txt}{space 8}697  {c |}{col 14}{res}{space 2} .9208619{col 26}{space 2} 1.841828{col 37}{space 1}    0.50{col 46}{space 3}0.624{col 54}{space 4}-3.004902{col 67}{space 3} 4.846626
{txt}{space 8}698  {c |}{col 14}{res}{space 2} .9789534{col 26}{space 2} 1.831091{col 37}{space 1}    0.53{col 46}{space 3}0.601{col 54}{space 4}-2.923924{col 67}{space 3} 4.881831
{txt}{space 8}699  {c |}{col 14}{res}{space 2} .7719974{col 26}{space 2}  1.83917{col 37}{space 1}    0.42{col 46}{space 3}0.681{col 54}{space 4}-3.148102{col 67}{space 3} 4.692096
{txt}{space 8}700  {c |}{col 14}{res}{space 2} 1.048091{col 26}{space 2} 1.856622{col 37}{space 1}    0.56{col 46}{space 3}0.581{col 54}{space 4}-2.909205{col 67}{space 3} 5.005387
{txt}{space 8}701  {c |}{col 14}{res}{space 2} .6836123{col 26}{space 2} 1.845547{col 37}{space 1}    0.37{col 46}{space 3}0.716{col 54}{space 4}-3.250078{col 67}{space 3} 4.617303
{txt}{space 8}702  {c |}{col 14}{res}{space 2} .4786512{col 26}{space 2} 1.896025{col 37}{space 1}    0.25{col 46}{space 3}0.804{col 54}{space 4} -3.56263{col 67}{space 3} 4.519932
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 1.068978{col 26}{space 2} 1.875738{col 37}{space 1}    0.57{col 46}{space 3}0.577{col 54}{space 4}-2.929063{col 67}{space 3} 5.067019
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 1.313674{col 26}{space 2} 1.757682{col 37}{space 1}    0.75{col 46}{space 3}0.466{col 54}{space 4}-2.432736{col 67}{space 3} 5.060084
{txt}{space 8}705  {c |}{col 14}{res}{space 2}  1.37674{col 26}{space 2} 1.811814{col 37}{space 1}    0.76{col 46}{space 3}0.459{col 54}{space 4} -2.48505{col 67}{space 3}  5.23853
{txt}{space 8}706  {c |}{col 14}{res}{space 2} 1.291514{col 26}{space 2} 1.808336{col 37}{space 1}    0.71{col 46}{space 3}0.486{col 54}{space 4}-2.562863{col 67}{space 3} 5.145891
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 1.167307{col 26}{space 2} 1.881409{col 37}{space 1}    0.62{col 46}{space 3}0.544{col 54}{space 4}-2.842821{col 67}{space 3} 5.177435
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 1.644854{col 26}{space 2} 1.961588{col 37}{space 1}    0.84{col 46}{space 3}0.415{col 54}{space 4}-2.536172{col 67}{space 3}  5.82588
{txt}{space 8}709  {c |}{col 14}{res}{space 2} 1.055749{col 26}{space 2} 1.975746{col 37}{space 1}    0.53{col 46}{space 3}0.601{col 54}{space 4}-3.155454{col 67}{space 3} 5.266951
{txt}{space 8}710  {c |}{col 14}{res}{space 2}  1.36895{col 26}{space 2} 1.988176{col 37}{space 1}    0.69{col 46}{space 3}0.502{col 54}{space 4}-2.868747{col 67}{space 3} 5.606647
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 1.690434{col 26}{space 2} 1.887796{col 37}{space 1}    0.90{col 46}{space 3}0.385{col 54}{space 4}-2.333308{col 67}{space 3} 5.714175
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 1.277335{col 26}{space 2} 1.945974{col 37}{space 1}    0.66{col 46}{space 3}0.522{col 54}{space 4}-2.870411{col 67}{space 3} 5.425081
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 1.738563{col 26}{space 2} 1.952529{col 37}{space 1}    0.89{col 46}{space 3}0.387{col 54}{space 4}-2.423154{col 67}{space 3} 5.900281
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 1.394559{col 26}{space 2} 1.868741{col 37}{space 1}    0.75{col 46}{space 3}0.467{col 54}{space 4}-2.588568{col 67}{space 3} 5.377687
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 1.409432{col 26}{space 2} 1.974673{col 37}{space 1}    0.71{col 46}{space 3}0.486{col 54}{space 4}-2.799485{col 67}{space 3} 5.618349
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 1.311928{col 26}{space 2} 1.974594{col 37}{space 1}    0.66{col 46}{space 3}0.517{col 54}{space 4} -2.89682{col 67}{space 3} 5.520677
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 1.158737{col 26}{space 2} 1.972237{col 37}{space 1}    0.59{col 46}{space 3}0.566{col 54}{space 4}-3.044987{col 67}{space 3} 5.362461
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 1.535648{col 26}{space 2} 1.932512{col 37}{space 1}    0.79{col 46}{space 3}0.439{col 54}{space 4}-2.583405{col 67}{space 3} 5.654701
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 1.394642{col 26}{space 2} 1.965972{col 37}{space 1}    0.71{col 46}{space 3}0.489{col 54}{space 4}-2.795729{col 67}{space 3} 5.585013
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2}  1.38095{col 26}{space 2} .2184872{col 37}{space 1}    6.32{col 46}{space 3}0.000{col 54}{space 4} .9152558{col 67}{space 3} 1.846644
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.896506{col 26}{space 2} .6472399{col 37}{space 1}   -2.93{col 46}{space 3}0.010{col 54}{space 4}-3.276065{col 67}{space 3}-.5169463
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.594882{col 26}{space 2}  1.12527{col 37}{space 1}   -1.42{col 46}{space 3}0.177{col 54}{space 4}-3.993338{col 67}{space 3} .8035728
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.3865413{col 26}{space 2} .1716164{col 37}{space 1}   -2.25{col 46}{space 3}0.040{col 54}{space 4} -.752333{col 67}{space 3}-.0207497
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.136098{col 26}{space 2} .1187189{col 37}{space 1}    9.57{col 46}{space 3}0.000{col 54}{space 4} .8830545{col 67}{space 3} 1.389141
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-.4061211{col 26}{space 2} 1.177565{col 37}{space 1}   -0.34{col 46}{space 3}0.735{col 54}{space 4}-2.916042{col 67}{space 3}   2.1038
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .7534814{col 26}{space 2} .5423585{col 37}{space 1}    1.39{col 46}{space 3}0.185{col 54}{space 4}-.4025283{col 67}{space 3} 1.909491
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.429144{col 26}{space 2} .4524484{col 37}{space 1}   -5.37{col 46}{space 3}0.000{col 54}{space 4}-3.393515{col 67}{space 3}-1.464773
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-1.843116{col 26}{space 2} .5935744{col 37}{space 1}   -3.11{col 46}{space 3}0.007{col 54}{space 4} -3.10829{col 67}{space 3} -.577942
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-2.014827{col 26}{space 2} .7087718{col 37}{space 1}   -2.84{col 46}{space 3}0.012{col 54}{space 4}-3.525538{col 67}{space 3}-.5041153
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 1.935426{col 26}{space 2} .4009626{col 37}{space 1}    4.83{col 46}{space 3}0.000{col 54}{space 4} 1.080794{col 67}{space 3} 2.790057
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}  .831742{col 26}{space 2} .7340423{col 37}{space 1}    1.13{col 46}{space 3}0.275{col 54}{space 4}-.7328321{col 67}{space 3} 2.396316
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 1.832855{col 26}{space 2} .9276743{col 37}{space 1}    1.98{col 46}{space 3}0.067{col 54}{space 4}-.1444361{col 67}{space 3} 3.810146
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} -1.25071{col 26}{space 2} 3.363634{col 37}{space 1}   -0.37{col 46}{space 3}0.715{col 54}{space 4}-8.420128{col 67}{space 3} 5.918707
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} .1737695{col 26}{space 2} 1.082684{col 37}{space 1}    0.16{col 46}{space 3}0.875{col 54}{space 4}-2.133918{col 67}{space 3} 2.481457
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-5.449672{col 26}{space 2} 13.92794{col 37}{space 1}   -0.39{col 46}{space 3}0.701{col 54}{space 4}-35.13637{col 67}{space 3} 24.23703
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 336 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -5.4969
{col 25}{txt}Prob>|t| = {res}    0.0153

95%{txt} confidence set for null hypothesis expression: [{res}-3.379{txt}, {res}-1.094{txt}]
{res}
Warning: 8 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -3.7498
{col 25}{txt}Prob>|t| = {res}    0.0059

95%{txt} confidence set for null hypothesis expression: [{res}-4.278{txt}, {res}-1.028{txt}]
{res}
Warning: 11 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -5.5509
{col 25}{txt}Prob>|t| = {res}    0.0018

95%{txt} confidence set for null hypothesis expression: [{res}-4.724{txt}, {res}-2.098{txt}]
{res}
Warning: 59 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -4.8612
{col 25}{txt}Prob>|t| = {res}    0.0106

95%{txt} confidence set for null hypothesis expression: [{res}-2.843{txt}, {res}-.8978{txt}]
{res}
Warning: 5 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -8.5489
{col 25}{txt}Prob>|t| = {res}    0.0063

95%{txt} confidence set for null hypothesis expression: [{res}-2.5{txt}, {res}-1.046{txt}]
{res}
Warning: 135 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_grad_s

{txt}{col 28}t(15) = {res}    2.7728
{col 25}{txt}Prob>|t| = {res}    0.0620

95%{txt} confidence set for null hypothesis expression: [{res}-.006589{txt}, {res}.1437{txt}]
{res}
Warning: 58 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_grad_s

{txt}{col 28}t(15) = {res}   -0.7239
{col 25}{txt}Prob>|t| = {res}    0.5704

95%{txt} confidence set for null hypothesis expression: [{res}-.1817{txt}, {res}.1036{txt}]
{res}
Warning: 17 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_grad_s

{txt}{col 28}t(15) = {res}   -0.6125
{col 25}{txt}Prob>|t| = {res}    0.6005

95%{txt} confidence set for null hypothesis expression: [{res}-.3718{txt}, {res}.2124{txt}]
{res}
Warning: 47 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_grad_s

{txt}{col 28}t(15) = {res}    4.1471
{col 25}{txt}Prob>|t| = {res}    0.0183

95%{txt} confidence set for null hypothesis expression: [{res}.04374{txt}, {res}.2301{txt}]
{res}
Warning: 80 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_grad_s

{txt}{col 28}t(15) = {res}   -1.9915
{col 25}{txt}Prob>|t| = {res}    0.1053

95%{txt} confidence set for null hypothesis expression: [{res}-.07308{txt}, {res}.008888{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8120
                                                {txt}Root MSE          =    {res} 1.0752

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-3.060741{col 26}{space 2} .5067608{col 37}{space 1}   -6.04{col 46}{space 3}0.000{col 54}{space 4}-4.140876{col 67}{space 3}-1.980606
{txt}{space 9}two {c |}{col 14}{res}{space 2}-3.035161{col 26}{space 2}  1.22462{col 37}{space 1}   -2.48{col 46}{space 3}0.026{col 54}{space 4}-5.645378{col 67}{space 3} -.424945
{txt}{space 7}three {c |}{col 14}{res}{space 2}-3.298453{col 26}{space 2} .7765257{col 37}{space 1}   -4.25{col 46}{space 3}0.001{col 54}{space 4}-4.953579{col 67}{space 3}-1.643328
{txt}{space 8}four {c |}{col 14}{res}{space 2}-1.911575{col 26}{space 2} .3622124{col 37}{space 1}   -5.28{col 46}{space 3}0.000{col 54}{space 4}-2.683613{col 67}{space 3}-1.139538
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.662215{col 26}{space 2} .2483791{col 37}{space 1}   -6.69{col 46}{space 3}0.000{col 54}{space 4}-2.191622{col 67}{space 3}-1.132807
{txt}{space 2}one_manu_s {c |}{col 14}{res}{space 2}-.0189364{col 26}{space 2} .0132481{col 37}{space 1}   -1.43{col 46}{space 3}0.173{col 54}{space 4}-.0471741{col 67}{space 3} .0093013
{txt}{space 2}two_manu_s {c |}{col 14}{res}{space 2}-.0132812{col 26}{space 2} .0363887{col 37}{space 1}   -0.36{col 46}{space 3}0.720{col 54}{space 4}-.0908418{col 67}{space 3} .0642795
{txt}three_manu_s {c |}{col 14}{res}{space 2}-.0155358{col 26}{space 2} .0214674{col 37}{space 1}   -0.72{col 46}{space 3}0.480{col 54}{space 4}-.0612925{col 67}{space 3}  .030221
{txt}{space 1}four_manu_s {c |}{col 14}{res}{space 2} .0111535{col 26}{space 2} .0153681{col 37}{space 1}    0.73{col 46}{space 3}0.479{col 54}{space 4}-.0216028{col 67}{space 3} .0439097
{txt}{space 1}five_manu_s {c |}{col 14}{res}{space 2}-.0002121{col 26}{space 2} .0072916{col 37}{space 1}   -0.03{col 46}{space 3}0.977{col 54}{space 4}-.0157539{col 67}{space 3} .0153296
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 1.550982{col 26}{space 2} 1.346761{col 37}{space 1}    1.15{col 46}{space 3}0.267{col 54}{space 4}-1.319572{col 67}{space 3} 4.421536
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.0096946{col 26}{space 2} .3459456{col 37}{space 1}   -0.03{col 46}{space 3}0.978{col 54}{space 4}-.7470601{col 67}{space 3}  .727671
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2726175{col 37}{space 1}   -0.19{col 46}{space 3}0.848{col 54}{space 4} -.634209{col 67}{space 3} .5279318
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2838562{col 37}{space 1}   -1.73{col 46}{space 3}0.104{col 54}{space 4}-1.096611{col 67}{space 3} .1134396
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3045491{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-.8502942{col 67}{space 3}  .447968
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2900432{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4} -.851283{col 67}{space 3} .3851418
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2876443{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4} -.571149{col 67}{space 3} .6550495
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3473569{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.3808525{col 67}{space 3} 1.099895
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3875732{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-.6374695{col 67}{space 3} 1.014716
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3760577{col 37}{space 1}    0.19{col 46}{space 3}0.850{col 54}{space 4}-.7289601{col 67}{space 3}  .874136
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2883515{col 37}{space 1}   -0.60{col 46}{space 3}0.559{col 54}{space 4}-.7871317{col 67}{space 3} .4420816
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2}  .320841{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6987346{col 67}{space 3} .6689783
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3228138{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7087306{col 67}{space 3} .6673921
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.6527391{col 26}{space 2} .4162443{col 37}{space 1}   -1.57{col 46}{space 3}0.138{col 54}{space 4}-1.539943{col 67}{space 3} .2344647
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.2365556{col 26}{space 2} .5492425{col 37}{space 1}   -0.43{col 46}{space 3}0.673{col 54}{space 4}-1.407238{col 67}{space 3} .9341272
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.2179704{col 26}{space 2} .3820989{col 37}{space 1}   -0.57{col 46}{space 3}0.577{col 54}{space 4}-1.032395{col 67}{space 3} .5964542
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.4407835{col 26}{space 2} .4368675{col 37}{space 1}   -1.01{col 46}{space 3}0.329{col 54}{space 4}-1.371944{col 67}{space 3} .4903774
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.3337608{col 26}{space 2} .4704496{col 37}{space 1}   -0.71{col 46}{space 3}0.489{col 54}{space 4}  -1.3365{col 67}{space 3} .6689788
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.5044332{col 26}{space 2} .4170173{col 37}{space 1}   -1.21{col 46}{space 3}0.245{col 54}{space 4}-1.393284{col 67}{space 3} .3844181
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .2225219{col 26}{space 2} .5036309{col 37}{space 1}    0.44{col 46}{space 3}0.665{col 54}{space 4}-.8509421{col 67}{space 3} 1.295986
{txt}{space 8}571  {c |}{col 14}{res}{space 2} -.218253{col 26}{space 2} .4991064{col 37}{space 1}   -0.44{col 46}{space 3}0.668{col 54}{space 4}-1.282073{col 67}{space 3} .8455672
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.4140167{col 26}{space 2} .5183789{col 37}{space 1}   -0.80{col 46}{space 3}0.437{col 54}{space 4}-1.518915{col 67}{space 3} .6908816
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.0572103{col 26}{space 2} .7253202{col 37}{space 1}   -0.08{col 46}{space 3}0.938{col 54}{space 4}-1.603194{col 67}{space 3} 1.488773
{txt}{space 8}574  {c |}{col 14}{res}{space 2} .0894294{col 26}{space 2} .6345889{col 37}{space 1}    0.14{col 46}{space 3}0.890{col 54}{space 4}-1.263165{col 67}{space 3} 1.442024
{txt}{space 8}575  {c |}{col 14}{res}{space 2}  .361596{col 26}{space 2} .7431343{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-1.222357{col 67}{space 3} 1.945549
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.3108329{col 26}{space 2} .7628021{col 37}{space 1}   -0.41{col 46}{space 3}0.689{col 54}{space 4}-1.936707{col 67}{space 3} 1.315041
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .2373263{col 26}{space 2} .8451786{col 37}{space 1}    0.28{col 46}{space 3}0.783{col 54}{space 4}-1.564129{col 67}{space 3} 2.038782
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.0518673{col 26}{space 2} .8152062{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-1.789438{col 67}{space 3} 1.685704
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .1011968{col 26}{space 2} .7867732{col 37}{space 1}    0.13{col 46}{space 3}0.899{col 54}{space 4}-1.575771{col 67}{space 3} 1.778164
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .5646331{col 26}{space 2} .6668136{col 37}{space 1}    0.85{col 46}{space 3}0.410{col 54}{space 4}-.8566464{col 67}{space 3} 1.985913
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .4103429{col 26}{space 2} .7060057{col 37}{space 1}    0.58{col 46}{space 3}0.570{col 54}{space 4}-1.094473{col 67}{space 3} 1.915159
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .4335622{col 26}{space 2}  .738358{col 37}{space 1}    0.59{col 46}{space 3}0.566{col 54}{space 4}-1.140211{col 67}{space 3} 2.007335
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .2962551{col 26}{space 2} .7833711{col 37}{space 1}    0.38{col 46}{space 3}0.711{col 54}{space 4}-1.373461{col 67}{space 3} 1.965971
{txt}{space 8}584  {c |}{col 14}{res}{space 2} .4624378{col 26}{space 2}   .77911{col 37}{space 1}    0.59{col 46}{space 3}0.562{col 54}{space 4}-1.198196{col 67}{space 3} 2.123071
{txt}{space 8}585  {c |}{col 14}{res}{space 2} .3880873{col 26}{space 2} .6725789{col 37}{space 1}    0.58{col 46}{space 3}0.572{col 54}{space 4}-1.045481{col 67}{space 3} 1.821655
{txt}{space 8}586  {c |}{col 14}{res}{space 2} .2867057{col 26}{space 2} .7518643{col 37}{space 1}    0.38{col 46}{space 3}0.708{col 54}{space 4}-1.315855{col 67}{space 3} 1.889266
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .0671451{col 26}{space 2} .7572955{col 37}{space 1}    0.09{col 46}{space 3}0.931{col 54}{space 4}-1.546992{col 67}{space 3} 1.681282
{txt}{space 8}588  {c |}{col 14}{res}{space 2}  .170138{col 26}{space 2} .8738983{col 37}{space 1}    0.19{col 46}{space 3}0.848{col 54}{space 4}-1.692532{col 67}{space 3} 2.032808
{txt}{space 8}589  {c |}{col 14}{res}{space 2} .3682605{col 26}{space 2} .8830668{col 37}{space 1}    0.42{col 46}{space 3}0.683{col 54}{space 4}-1.513952{col 67}{space 3} 2.250473
{txt}{space 8}590  {c |}{col 14}{res}{space 2}  .296739{col 26}{space 2} .9022278{col 37}{space 1}    0.33{col 46}{space 3}0.747{col 54}{space 4}-1.626314{col 67}{space 3} 2.219792
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-.2882305{col 26}{space 2} .9023181{col 37}{space 1}   -0.32{col 46}{space 3}0.754{col 54}{space 4}-2.211476{col 67}{space 3} 1.635015
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .2936531{col 26}{space 2} .7831265{col 37}{space 1}    0.37{col 46}{space 3}0.713{col 54}{space 4}-1.375542{col 67}{space 3} 1.962848
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .5946426{col 26}{space 2} .9175818{col 37}{space 1}    0.65{col 46}{space 3}0.527{col 54}{space 4}-1.361137{col 67}{space 3} 2.550422
{txt}{space 8}594  {c |}{col 14}{res}{space 2}  .604838{col 26}{space 2}    .9338{col 37}{space 1}    0.65{col 46}{space 3}0.527{col 54}{space 4} -1.38551{col 67}{space 3} 2.595186
{txt}{space 8}595  {c |}{col 14}{res}{space 2}  .599825{col 26}{space 2} .9615815{col 37}{space 1}    0.62{col 46}{space 3}0.542{col 54}{space 4}-1.449737{col 67}{space 3} 2.649387
{txt}{space 8}596  {c |}{col 14}{res}{space 2} .3040156{col 26}{space 2} .7864965{col 37}{space 1}    0.39{col 46}{space 3}0.705{col 54}{space 4}-1.372362{col 67}{space 3} 1.980393
{txt}{space 8}597  {c |}{col 14}{res}{space 2} .3049413{col 26}{space 2} .8429213{col 37}{space 1}    0.36{col 46}{space 3}0.723{col 54}{space 4}-1.491703{col 67}{space 3} 2.101585
{txt}{space 8}598  {c |}{col 14}{res}{space 2} .4181599{col 26}{space 2} .8432384{col 37}{space 1}    0.50{col 46}{space 3}0.627{col 54}{space 4} -1.37916{col 67}{space 3}  2.21548
{txt}{space 8}599  {c |}{col 14}{res}{space 2} .2124473{col 26}{space 2} .8493593{col 37}{space 1}    0.25{col 46}{space 3}0.806{col 54}{space 4}-1.597919{col 67}{space 3} 2.022814
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .2417687{col 26}{space 2}  1.07577{col 37}{space 1}    0.22{col 46}{space 3}0.825{col 54}{space 4}-2.051181{col 67}{space 3} 2.534719
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-.0012618{col 26}{space 2} 1.012372{col 37}{space 1}   -0.00{col 46}{space 3}0.999{col 54}{space 4}-2.159082{col 67}{space 3} 2.156558
{txt}{space 8}602  {c |}{col 14}{res}{space 2} .4356909{col 26}{space 2} 1.111058{col 37}{space 1}    0.39{col 46}{space 3}0.700{col 54}{space 4}-1.932474{col 67}{space 3} 2.803856
{txt}{space 8}603  {c |}{col 14}{res}{space 2}  .337212{col 26}{space 2} 1.089451{col 37}{space 1}    0.31{col 46}{space 3}0.761{col 54}{space 4}-1.984897{col 67}{space 3} 2.659321
{txt}{space 8}604  {c |}{col 14}{res}{space 2} .6134708{col 26}{space 2} 1.134493{col 37}{space 1}    0.54{col 46}{space 3}0.597{col 54}{space 4}-1.804645{col 67}{space 3} 3.031586
{txt}{space 8}605  {c |}{col 14}{res}{space 2} 1.001168{col 26}{space 2} 1.095577{col 37}{space 1}    0.91{col 46}{space 3}0.375{col 54}{space 4}-1.333999{col 67}{space 3} 3.336335
{txt}{space 8}606  {c |}{col 14}{res}{space 2} .6044669{col 26}{space 2} 1.099562{col 37}{space 1}    0.55{col 46}{space 3}0.591{col 54}{space 4}-1.739195{col 67}{space 3} 2.948129
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .9217541{col 26}{space 2} 1.197597{col 37}{space 1}    0.77{col 46}{space 3}0.453{col 54}{space 4}-1.630863{col 67}{space 3} 3.474371
{txt}{space 8}608  {c |}{col 14}{res}{space 2} .7434645{col 26}{space 2} 1.108385{col 37}{space 1}    0.67{col 46}{space 3}0.513{col 54}{space 4}-1.619003{col 67}{space 3} 3.105932
{txt}{space 8}609  {c |}{col 14}{res}{space 2} .7114444{col 26}{space 2} 1.329271{col 37}{space 1}    0.54{col 46}{space 3}0.600{col 54}{space 4} -2.12183{col 67}{space 3} 3.544719
{txt}{space 8}610  {c |}{col 14}{res}{space 2} 1.071389{col 26}{space 2} 1.371379{col 37}{space 1}    0.78{col 46}{space 3}0.447{col 54}{space 4}-1.851637{col 67}{space 3} 3.994415
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.325138{col 26}{space 2} 1.175697{col 37}{space 1}    1.13{col 46}{space 3}0.277{col 54}{space 4}-1.180801{col 67}{space 3} 3.831077
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .6682576{col 26}{space 2} 1.419255{col 37}{space 1}    0.47{col 46}{space 3}0.645{col 54}{space 4}-2.356812{col 67}{space 3} 3.693327
{txt}{space 8}613  {c |}{col 14}{res}{space 2} .7266047{col 26}{space 2} 1.528026{col 37}{space 1}    0.48{col 46}{space 3}0.641{col 54}{space 4}-2.530306{col 67}{space 3} 3.983515
{txt}{space 8}614  {c |}{col 14}{res}{space 2} .6443601{col 26}{space 2} 1.244842{col 37}{space 1}    0.52{col 46}{space 3}0.612{col 54}{space 4}-2.008958{col 67}{space 3} 3.297678
{txt}{space 8}615  {c |}{col 14}{res}{space 2} .8185134{col 26}{space 2} 1.434921{col 37}{space 1}    0.57{col 46}{space 3}0.577{col 54}{space 4}-2.239948{col 67}{space 3} 3.876975
{txt}{space 8}616  {c |}{col 14}{res}{space 2} .7123903{col 26}{space 2} 1.379683{col 37}{space 1}    0.52{col 46}{space 3}0.613{col 54}{space 4}-2.228335{col 67}{space 3} 3.653116
{txt}{space 8}617  {c |}{col 14}{res}{space 2} .2418998{col 26}{space 2} 1.662139{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}-3.300865{col 67}{space 3} 3.784665
{txt}{space 8}618  {c |}{col 14}{res}{space 2} .6022454{col 26}{space 2} 1.376606{col 37}{space 1}    0.44{col 46}{space 3}0.668{col 54}{space 4} -2.33192{col 67}{space 3} 3.536411
{txt}{space 8}619  {c |}{col 14}{res}{space 2} 1.075552{col 26}{space 2} 1.299804{col 37}{space 1}    0.83{col 46}{space 3}0.421{col 54}{space 4}-1.694915{col 67}{space 3}  3.84602
{txt}{space 8}620  {c |}{col 14}{res}{space 2} .8476943{col 26}{space 2} 1.604238{col 37}{space 1}    0.53{col 46}{space 3}0.605{col 54}{space 4}-2.571658{col 67}{space 3} 4.267047
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .9525442{col 26}{space 2} 1.282984{col 37}{space 1}    0.74{col 46}{space 3}0.469{col 54}{space 4}-1.782071{col 67}{space 3} 3.687159
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .7602707{col 26}{space 2} 1.348792{col 37}{space 1}    0.56{col 46}{space 3}0.581{col 54}{space 4} -2.11461{col 67}{space 3} 3.635152
{txt}{space 8}623  {c |}{col 14}{res}{space 2} .7575521{col 26}{space 2} 1.425764{col 37}{space 1}    0.53{col 46}{space 3}0.603{col 54}{space 4}-2.281391{col 67}{space 3} 3.796495
{txt}{space 8}624  {c |}{col 14}{res}{space 2} .4643621{col 26}{space 2} 1.536681{col 37}{space 1}    0.30{col 46}{space 3}0.767{col 54}{space 4}-2.810996{col 67}{space 3}  3.73972
{txt}{space 8}625  {c |}{col 14}{res}{space 2} .4664901{col 26}{space 2}  1.64134{col 37}{space 1}    0.28{col 46}{space 3}0.780{col 54}{space 4}-3.031943{col 67}{space 3} 3.964923
{txt}{space 8}626  {c |}{col 14}{res}{space 2} .7581086{col 26}{space 2} 1.559804{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-2.566536{col 67}{space 3} 4.082753
{txt}{space 8}627  {c |}{col 14}{res}{space 2} .3504781{col 26}{space 2} 1.574705{col 37}{space 1}    0.22{col 46}{space 3}0.827{col 54}{space 4}-3.005926{col 67}{space 3} 3.706882
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-.1045856{col 26}{space 2} 1.579328{col 37}{space 1}   -0.07{col 46}{space 3}0.948{col 54}{space 4}-3.470844{col 67}{space 3} 3.261673
{txt}{space 8}629  {c |}{col 14}{res}{space 2} .2805104{col 26}{space 2} 1.464559{col 37}{space 1}    0.19{col 46}{space 3}0.851{col 54}{space 4}-2.841123{col 67}{space 3} 3.402144
{txt}{space 8}630  {c |}{col 14}{res}{space 2} .7391904{col 26}{space 2} 1.502862{col 37}{space 1}    0.49{col 46}{space 3}0.630{col 54}{space 4}-2.464084{col 67}{space 3} 3.942465
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-.0748413{col 26}{space 2} 1.651201{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-3.594292{col 67}{space 3}  3.44461
{txt}{space 8}632  {c |}{col 14}{res}{space 2} .4362041{col 26}{space 2} 1.545871{col 37}{space 1}    0.28{col 46}{space 3}0.782{col 54}{space 4}-2.858742{col 67}{space 3}  3.73115
{txt}{space 8}633  {c |}{col 14}{res}{space 2} .8976798{col 26}{space 2} 1.399032{col 37}{space 1}    0.64{col 46}{space 3}0.531{col 54}{space 4}-2.084287{col 67}{space 3} 3.879646
{txt}{space 8}634  {c |}{col 14}{res}{space 2} .4087711{col 26}{space 2} 1.435049{col 37}{space 1}    0.28{col 46}{space 3}0.780{col 54}{space 4}-2.649963{col 67}{space 3} 3.467505
{txt}{space 8}635  {c |}{col 14}{res}{space 2} .6760916{col 26}{space 2} 1.573905{col 37}{space 1}    0.43{col 46}{space 3}0.674{col 54}{space 4}-2.678608{col 67}{space 3} 4.030791
{txt}{space 8}636  {c |}{col 14}{res}{space 2} .3503838{col 26}{space 2} 1.669845{col 37}{space 1}    0.21{col 46}{space 3}0.837{col 54}{space 4}-3.208806{col 67}{space 3} 3.909573
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-.0482774{col 26}{space 2}   1.6092{col 37}{space 1}   -0.03{col 46}{space 3}0.976{col 54}{space 4}-3.478206{col 67}{space 3} 3.381652
{txt}{space 8}638  {c |}{col 14}{res}{space 2} .9134206{col 26}{space 2} 1.601743{col 37}{space 1}    0.57{col 46}{space 3}0.577{col 54}{space 4}-2.500613{col 67}{space 3} 4.327454
{txt}{space 8}639  {c |}{col 14}{res}{space 2} .5522901{col 26}{space 2} 1.512009{col 37}{space 1}    0.37{col 46}{space 3}0.720{col 54}{space 4}-2.670481{col 67}{space 3} 3.775061
{txt}{space 8}640  {c |}{col 14}{res}{space 2} .7230255{col 26}{space 2} 1.588122{col 37}{space 1}    0.46{col 46}{space 3}0.655{col 54}{space 4}-2.661976{col 67}{space 3} 4.108027
{txt}{space 8}641  {c |}{col 14}{res}{space 2} .9378054{col 26}{space 2} 1.442937{col 37}{space 1}    0.65{col 46}{space 3}0.526{col 54}{space 4}-2.137742{col 67}{space 3} 4.013353
{txt}{space 8}642  {c |}{col 14}{res}{space 2} .8528401{col 26}{space 2}  1.40074{col 37}{space 1}    0.61{col 46}{space 3}0.552{col 54}{space 4}-2.132766{col 67}{space 3} 3.838446
{txt}{space 8}643  {c |}{col 14}{res}{space 2} .9917742{col 26}{space 2} 1.332341{col 37}{space 1}    0.74{col 46}{space 3}0.468{col 54}{space 4}-1.848044{col 67}{space 3} 3.831592
{txt}{space 8}644  {c |}{col 14}{res}{space 2} .6848921{col 26}{space 2} 1.481421{col 37}{space 1}    0.46{col 46}{space 3}0.650{col 54}{space 4}-2.472682{col 67}{space 3} 3.842466
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 1.503288{col 26}{space 2} 1.655356{col 37}{space 1}    0.91{col 46}{space 3}0.378{col 54}{space 4}-2.025021{col 67}{space 3} 5.031596
{txt}{space 8}646  {c |}{col 14}{res}{space 2}  1.13892{col 26}{space 2} 1.544063{col 37}{space 1}    0.74{col 46}{space 3}0.472{col 54}{space 4}-2.152171{col 67}{space 3} 4.430012
{txt}{space 8}647  {c |}{col 14}{res}{space 2} 1.278208{col 26}{space 2} 1.667625{col 37}{space 1}    0.77{col 46}{space 3}0.455{col 54}{space 4} -2.27625{col 67}{space 3} 4.832667
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 1.499112{col 26}{space 2} 1.680212{col 37}{space 1}    0.89{col 46}{space 3}0.386{col 54}{space 4}-2.082176{col 67}{space 3}   5.0804
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 1.743996{col 26}{space 2} 1.599315{col 37}{space 1}    1.09{col 46}{space 3}0.293{col 54}{space 4}-1.664864{col 67}{space 3} 5.152856
{txt}{space 8}650  {c |}{col 14}{res}{space 2} 1.168399{col 26}{space 2} 1.583349{col 37}{space 1}    0.74{col 46}{space 3}0.472{col 54}{space 4} -2.20643{col 67}{space 3} 4.543227
{txt}{space 8}651  {c |}{col 14}{res}{space 2} 1.021591{col 26}{space 2} 1.656502{col 37}{space 1}    0.62{col 46}{space 3}0.547{col 54}{space 4}-2.509159{col 67}{space 3} 4.552342
{txt}{space 8}652  {c |}{col 14}{res}{space 2} 1.180977{col 26}{space 2} 1.643441{col 37}{space 1}    0.72{col 46}{space 3}0.483{col 54}{space 4}-2.321936{col 67}{space 3}  4.68389
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 1.920048{col 26}{space 2} 1.650934{col 37}{space 1}    1.16{col 46}{space 3}0.263{col 54}{space 4}-1.598834{col 67}{space 3}  5.43893
{txt}{space 8}654  {c |}{col 14}{res}{space 2} 1.522971{col 26}{space 2} 1.618369{col 37}{space 1}    0.94{col 46}{space 3}0.362{col 54}{space 4}-1.926501{col 67}{space 3} 4.972444
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 1.527897{col 26}{space 2} 1.666701{col 37}{space 1}    0.92{col 46}{space 3}0.374{col 54}{space 4}-2.024592{col 67}{space 3} 5.080386
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 1.368018{col 26}{space 2}  1.60113{col 37}{space 1}    0.85{col 46}{space 3}0.406{col 54}{space 4} -2.04471{col 67}{space 3} 4.780747
{txt}{space 8}657  {c |}{col 14}{res}{space 2} 1.179327{col 26}{space 2} 1.653763{col 37}{space 1}    0.71{col 46}{space 3}0.487{col 54}{space 4}-2.345585{col 67}{space 3} 4.704239
{txt}{space 8}658  {c |}{col 14}{res}{space 2} .8573163{col 26}{space 2} 1.831392{col 37}{space 1}    0.47{col 46}{space 3}0.646{col 54}{space 4}-3.046204{col 67}{space 3} 4.760836
{txt}{space 8}659  {c |}{col 14}{res}{space 2} 1.399534{col 26}{space 2} 1.604566{col 37}{space 1}    0.87{col 46}{space 3}0.397{col 54}{space 4}-2.020518{col 67}{space 3} 4.819587
{txt}{space 8}660  {c |}{col 14}{res}{space 2} .9383362{col 26}{space 2} 1.745327{col 37}{space 1}    0.54{col 46}{space 3}0.599{col 54}{space 4}-2.781741{col 67}{space 3} 4.658413
{txt}{space 8}661  {c |}{col 14}{res}{space 2} .9738628{col 26}{space 2} 1.845095{col 37}{space 1}    0.53{col 46}{space 3}0.605{col 54}{space 4}-2.958864{col 67}{space 3}  4.90659
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 1.503302{col 26}{space 2} 1.722053{col 37}{space 1}    0.87{col 46}{space 3}0.396{col 54}{space 4}-2.167166{col 67}{space 3} 5.173771
{txt}{space 8}663  {c |}{col 14}{res}{space 2} .9619805{col 26}{space 2} 1.702562{col 37}{space 1}    0.57{col 46}{space 3}0.580{col 54}{space 4}-2.666944{col 67}{space 3} 4.590905
{txt}{space 8}664  {c |}{col 14}{res}{space 2} 1.184862{col 26}{space 2}  1.72287{col 37}{space 1}    0.69{col 46}{space 3}0.502{col 54}{space 4}-2.487348{col 67}{space 3} 4.857073
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 1.559181{col 26}{space 2} 1.755759{col 37}{space 1}    0.89{col 46}{space 3}0.389{col 54}{space 4} -2.18313{col 67}{space 3} 5.301493
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 1.515157{col 26}{space 2} 1.646895{col 37}{space 1}    0.92{col 46}{space 3}0.372{col 54}{space 4}-1.995115{col 67}{space 3}  5.02543
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 1.353765{col 26}{space 2} 1.648022{col 37}{space 1}    0.82{col 46}{space 3}0.424{col 54}{space 4} -2.15891{col 67}{space 3}  4.86644
{txt}{space 8}668  {c |}{col 14}{res}{space 2} 1.215515{col 26}{space 2} 1.680332{col 37}{space 1}    0.72{col 46}{space 3}0.481{col 54}{space 4}-2.366028{col 67}{space 3} 4.797058
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 1.331004{col 26}{space 2}  1.71921{col 37}{space 1}    0.77{col 46}{space 3}0.451{col 54}{space 4}-2.333406{col 67}{space 3} 4.995414
{txt}{space 8}670  {c |}{col 14}{res}{space 2} .8971878{col 26}{space 2} 1.672505{col 37}{space 1}    0.54{col 46}{space 3}0.600{col 54}{space 4}-2.667671{col 67}{space 3} 4.462047
{txt}{space 8}671  {c |}{col 14}{res}{space 2} 1.188474{col 26}{space 2}   1.6482{col 37}{space 1}    0.72{col 46}{space 3}0.482{col 54}{space 4}-2.324582{col 67}{space 3}  4.70153
{txt}{space 8}672  {c |}{col 14}{res}{space 2} 1.035172{col 26}{space 2} 1.693548{col 37}{space 1}    0.61{col 46}{space 3}0.550{col 54}{space 4}-2.574541{col 67}{space 3} 4.644885
{txt}{space 8}673  {c |}{col 14}{res}{space 2} 1.167027{col 26}{space 2} 1.704974{col 37}{space 1}    0.68{col 46}{space 3}0.504{col 54}{space 4}-2.467038{col 67}{space 3} 4.801092
{txt}{space 8}674  {c |}{col 14}{res}{space 2} 1.332241{col 26}{space 2} 1.777726{col 37}{space 1}    0.75{col 46}{space 3}0.465{col 54}{space 4}-2.456891{col 67}{space 3} 5.121373
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 1.693998{col 26}{space 2} 1.772294{col 37}{space 1}    0.96{col 46}{space 3}0.354{col 54}{space 4}-2.083558{col 67}{space 3} 5.471553
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 1.754174{col 26}{space 2} 1.814091{col 37}{space 1}    0.97{col 46}{space 3}0.349{col 54}{space 4}-2.112469{col 67}{space 3} 5.620817
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 1.439369{col 26}{space 2} 1.740941{col 37}{space 1}    0.83{col 46}{space 3}0.421{col 54}{space 4}-2.271358{col 67}{space 3} 5.150097
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 1.665515{col 26}{space 2}  1.75503{col 37}{space 1}    0.95{col 46}{space 3}0.358{col 54}{space 4}-2.075242{col 67}{space 3} 5.406272
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 1.762717{col 26}{space 2} 1.734075{col 37}{space 1}    1.02{col 46}{space 3}0.325{col 54}{space 4}-1.933376{col 67}{space 3} 5.458811
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 1.813848{col 26}{space 2} 1.720025{col 37}{space 1}    1.05{col 46}{space 3}0.308{col 54}{space 4}-1.852299{col 67}{space 3} 5.479995
{txt}{space 8}681  {c |}{col 14}{res}{space 2} 1.825471{col 26}{space 2} 1.731441{col 37}{space 1}    1.05{col 46}{space 3}0.308{col 54}{space 4}-1.865009{col 67}{space 3} 5.515951
{txt}{space 8}682  {c |}{col 14}{res}{space 2}  1.48562{col 26}{space 2} 1.765683{col 37}{space 1}    0.84{col 46}{space 3}0.413{col 54}{space 4}-2.277843{col 67}{space 3} 5.249084
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 1.327654{col 26}{space 2} 1.766161{col 37}{space 1}    0.75{col 46}{space 3}0.464{col 54}{space 4}-2.436829{col 67}{space 3} 5.092137
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 1.432661{col 26}{space 2}  1.95943{col 37}{space 1}    0.73{col 46}{space 3}0.476{col 54}{space 4}-2.743765{col 67}{space 3} 5.609087
{txt}{space 8}685  {c |}{col 14}{res}{space 2} 1.252411{col 26}{space 2}  1.84594{col 37}{space 1}    0.68{col 46}{space 3}0.508{col 54}{space 4}-2.682117{col 67}{space 3} 5.186939
{txt}{space 8}686  {c |}{col 14}{res}{space 2} 1.246085{col 26}{space 2} 1.904126{col 37}{space 1}    0.65{col 46}{space 3}0.523{col 54}{space 4}-2.812464{col 67}{space 3} 5.304634
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 1.584418{col 26}{space 2} 1.822354{col 37}{space 1}    0.87{col 46}{space 3}0.398{col 54}{space 4}-2.299837{col 67}{space 3} 5.468674
{txt}{space 8}688  {c |}{col 14}{res}{space 2}  1.29048{col 26}{space 2} 1.883123{col 37}{space 1}    0.69{col 46}{space 3}0.504{col 54}{space 4}-2.723301{col 67}{space 3} 5.304262
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 1.269508{col 26}{space 2} 1.900304{col 37}{space 1}    0.67{col 46}{space 3}0.514{col 54}{space 4}-2.780894{col 67}{space 3}  5.31991
{txt}{space 8}690  {c |}{col 14}{res}{space 2} .9861577{col 26}{space 2} 1.893762{col 37}{space 1}    0.52{col 46}{space 3}0.610{col 54}{space 4}  -3.0503{col 67}{space 3} 5.022616
{txt}{space 8}691  {c |}{col 14}{res}{space 2} 1.131988{col 26}{space 2} 1.907799{col 37}{space 1}    0.59{col 46}{space 3}0.562{col 54}{space 4} -2.93439{col 67}{space 3} 5.198365
{txt}{space 8}692  {c |}{col 14}{res}{space 2} 1.310739{col 26}{space 2}   1.8703{col 37}{space 1}    0.70{col 46}{space 3}0.494{col 54}{space 4}-2.675711{col 67}{space 3} 5.297189
{txt}{space 8}693  {c |}{col 14}{res}{space 2} 1.218496{col 26}{space 2} 1.865655{col 37}{space 1}    0.65{col 46}{space 3}0.524{col 54}{space 4}-2.758053{col 67}{space 3} 5.195045
{txt}{space 8}694  {c |}{col 14}{res}{space 2} 1.303472{col 26}{space 2} 1.924089{col 37}{space 1}    0.68{col 46}{space 3}0.508{col 54}{space 4}-2.797628{col 67}{space 3} 5.404571
{txt}{space 8}695  {c |}{col 14}{res}{space 2} 1.093084{col 26}{space 2} 1.872973{col 37}{space 1}    0.58{col 46}{space 3}0.568{col 54}{space 4}-2.899062{col 67}{space 3} 5.085231
{txt}{space 8}696  {c |}{col 14}{res}{space 2} 1.241025{col 26}{space 2} 1.946262{col 37}{space 1}    0.64{col 46}{space 3}0.533{col 54}{space 4}-2.907336{col 67}{space 3} 5.389385
{txt}{space 8}697  {c |}{col 14}{res}{space 2} 1.200798{col 26}{space 2} 1.920166{col 37}{space 1}    0.63{col 46}{space 3}0.541{col 54}{space 4}-2.891938{col 67}{space 3} 5.293535
{txt}{space 8}698  {c |}{col 14}{res}{space 2}  1.25889{col 26}{space 2}  1.91563{col 37}{space 1}    0.66{col 46}{space 3}0.521{col 54}{space 4} -2.82418{col 67}{space 3} 5.341959
{txt}{space 8}699  {c |}{col 14}{res}{space 2} 1.051934{col 26}{space 2} 1.967215{col 37}{space 1}    0.53{col 46}{space 3}0.601{col 54}{space 4}-3.141087{col 67}{space 3} 5.244954
{txt}{space 8}700  {c |}{col 14}{res}{space 2} 1.328027{col 26}{space 2} 1.970948{col 37}{space 1}    0.67{col 46}{space 3}0.511{col 54}{space 4}-2.872949{col 67}{space 3} 5.529003
{txt}{space 8}701  {c |}{col 14}{res}{space 2} .9635487{col 26}{space 2} 1.937374{col 37}{space 1}    0.50{col 46}{space 3}0.626{col 54}{space 4}-3.165866{col 67}{space 3} 5.092963
{txt}{space 8}702  {c |}{col 14}{res}{space 2} .7585876{col 26}{space 2} 2.030497{col 37}{space 1}    0.37{col 46}{space 3}0.714{col 54}{space 4}-3.569314{col 67}{space 3}  5.08649
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 1.269113{col 26}{space 2}  1.89887{col 37}{space 1}    0.67{col 46}{space 3}0.514{col 54}{space 4}-2.778234{col 67}{space 3} 5.316459
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 1.513809{col 26}{space 2} 1.890722{col 37}{space 1}    0.80{col 46}{space 3}0.436{col 54}{space 4} -2.51617{col 67}{space 3} 5.543787
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 1.576874{col 26}{space 2} 1.931079{col 37}{space 1}    0.82{col 46}{space 3}0.427{col 54}{space 4}-2.539122{col 67}{space 3} 5.692871
{txt}{space 8}706  {c |}{col 14}{res}{space 2} 1.491649{col 26}{space 2} 1.919235{col 37}{space 1}    0.78{col 46}{space 3}0.449{col 54}{space 4}-2.599104{col 67}{space 3} 5.582401
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 1.367441{col 26}{space 2} 2.033226{col 37}{space 1}    0.67{col 46}{space 3}0.511{col 54}{space 4}-2.966278{col 67}{space 3} 5.701161
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 1.756287{col 26}{space 2} 2.147079{col 37}{space 1}    0.82{col 46}{space 3}0.426{col 54}{space 4}-2.820103{col 67}{space 3} 6.332677
{txt}{space 8}709  {c |}{col 14}{res}{space 2} 1.167182{col 26}{space 2} 2.201863{col 37}{space 1}    0.53{col 46}{space 3}0.604{col 54}{space 4}-3.525979{col 67}{space 3} 5.860343
{txt}{space 8}710  {c |}{col 14}{res}{space 2} 1.480383{col 26}{space 2} 2.129807{col 37}{space 1}    0.70{col 46}{space 3}0.498{col 54}{space 4}-3.059192{col 67}{space 3} 6.019959
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 1.801867{col 26}{space 2} 2.081503{col 37}{space 1}    0.87{col 46}{space 3}0.400{col 54}{space 4}-2.634751{col 67}{space 3} 6.238484
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 1.388768{col 26}{space 2} 2.131322{col 37}{space 1}    0.65{col 46}{space 3}0.525{col 54}{space 4}-3.154036{col 67}{space 3} 5.931573
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 1.849997{col 26}{space 2} 2.074774{col 37}{space 1}    0.89{col 46}{space 3}0.387{col 54}{space 4}-2.572279{col 67}{space 3} 6.272272
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 1.505993{col 26}{space 2} 2.078207{col 37}{space 1}    0.72{col 46}{space 3}0.480{col 54}{space 4}-2.923601{col 67}{space 3} 5.935586
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 1.520865{col 26}{space 2} 2.106094{col 37}{space 1}    0.72{col 46}{space 3}0.481{col 54}{space 4}-2.968169{col 67}{space 3} 6.009899
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 1.423362{col 26}{space 2} 2.108875{col 37}{space 1}    0.67{col 46}{space 3}0.510{col 54}{space 4}-3.071598{col 67}{space 3} 5.918321
{txt}{space 8}717  {c |}{col 14}{res}{space 2}  1.27017{col 26}{space 2} 2.099201{col 37}{space 1}    0.61{col 46}{space 3}0.554{col 54}{space 4} -3.20417{col 67}{space 3}  5.74451
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 1.647081{col 26}{space 2} 2.081341{col 37}{space 1}    0.79{col 46}{space 3}0.441{col 54}{space 4}-2.789192{col 67}{space 3} 6.083354
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 1.506075{col 26}{space 2} 2.107446{col 37}{space 1}    0.71{col 46}{space 3}0.486{col 54}{space 4}-2.985841{col 67}{space 3} 5.997991
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.413455{col 26}{space 2} .2599379{col 37}{space 1}    5.44{col 46}{space 3}0.000{col 54}{space 4} .8594109{col 67}{space 3}   1.9675
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.615466{col 26}{space 2} .7947903{col 37}{space 1}   -2.03{col 46}{space 3}0.060{col 54}{space 4}-3.309521{col 67}{space 3} .0785899
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-1.012173{col 26}{space 2} 1.500021{col 37}{space 1}   -0.67{col 46}{space 3}0.510{col 54}{space 4}-4.209392{col 67}{space 3} 2.185046
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.7518229{col 26}{space 2} .3588793{col 37}{space 1}   -2.09{col 46}{space 3}0.054{col 54}{space 4}-1.516756{col 67}{space 3} .0131103
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.095151{col 26}{space 2} .1621089{col 37}{space 1}    6.76{col 46}{space 3}0.000{col 54}{space 4} .7496246{col 67}{space 3} 1.440678
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} .0145075{col 26}{space 2} 1.565861{col 37}{space 1}    0.01{col 46}{space 3}0.993{col 54}{space 4}-3.323046{col 67}{space 3} 3.352061
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 1.027718{col 26}{space 2} .6677543{col 37}{space 1}    1.54{col 46}{space 3}0.145{col 54}{space 4}-.3955664{col 67}{space 3} 2.451003
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.388901{col 26}{space 2} .5307431{col 37}{space 1}   -4.50{col 46}{space 3}0.000{col 54}{space 4}-3.520153{col 67}{space 3}-1.257649
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-2.229521{col 26}{space 2} .7519975{col 37}{space 1}   -2.96{col 46}{space 3}0.010{col 54}{space 4}-3.832366{col 67}{space 3} -.626676
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.825605{col 26}{space 2} .8744584{col 37}{space 1}   -2.09{col 46}{space 3}0.054{col 54}{space 4}-3.689469{col 67}{space 3} .0382592
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 1.859496{col 26}{space 2} .4386477{col 37}{space 1}    4.24{col 46}{space 3}0.001{col 54}{space 4} .9245404{col 67}{space 3} 2.794451
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} .3223054{col 26}{space 2} .9829058{col 37}{space 1}    0.33{col 46}{space 3}0.748{col 54}{space 4}-1.772709{col 67}{space 3}  2.41732
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.833359{col 26}{space 2}  1.14842{col 37}{space 1}    2.47{col 46}{space 3}0.026{col 54}{space 4} .3855591{col 67}{space 3}  5.28116
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} .8422627{col 26}{space 2} 4.360228{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-8.451344{col 67}{space 3} 10.13587
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} .6861198{col 26}{space 2} 1.274385{col 37}{space 1}    0.54{col 46}{space 3}0.598{col 54}{space 4}-2.030168{col 67}{space 3} 3.402408
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-15.29928{col 26}{space 2} 18.57681{col 37}{space 1}   -0.82{col 46}{space 3}0.423{col 54}{space 4}-54.89482{col 67}{space 3} 24.29627
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 151 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -6.4645
{col 25}{txt}Prob>|t| = {res}    0.0050

95%{txt} confidence set for null hypothesis expression: [{res}-4.351{txt}, {res}-1.859{txt}]
{res}
Warning: 32 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -2.4800
{col 25}{txt}Prob>|t| = {res}    0.0762

95%{txt} confidence set for null hypothesis expression: [{res}-7.062{txt}, {res}.5106{txt}]
{res}
Warning: 23 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -4.2558
{col 25}{txt}Prob>|t| = {res}    0.0051

95%{txt} confidence set for null hypothesis expression: [{res}-4.982{txt}, {res}-1.626{txt}]
{res}
Warning: 15 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -5.3370
{col 25}{txt}Prob>|t| = {res}    0.0032

95%{txt} confidence set for null hypothesis expression: [{res}-2.678{txt}, {res}-1.127{txt}]
{res}
Warning: 115 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -6.2862
{col 25}{txt}Prob>|t| = {res}    0.0345

95%{txt} confidence set for null hypothesis expression: [{res}-2.955{txt}, {res}-.4203{txt}]
{res}
Warning: 123 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_manu_s

{txt}{col 28}t(15) = {res}   -1.5527
{col 25}{txt}Prob>|t| = {res}    0.1993

95%{txt} confidence set for null hypothesis expression: [{res}-.05287{txt}, {res}.01311{txt}]
{res}
Warning: 50 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_manu_s

{txt}{col 28}t(15) = {res}   -0.3649
{col 25}{txt}Prob>|t| = {res}    0.7636

95%{txt} confidence set for null hypothesis expression: [{res}-.1324{txt}, {res}.1034{txt}]
{res}
Warning: 23 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_manu_s

{txt}{col 28}t(15) = {res}   -0.7308
{col 25}{txt}Prob>|t| = {res}    0.5061

95%{txt} confidence set for null hypothesis expression: [{res}-.06839{txt}, {res}.03411{txt}]
{res}
Warning: 8 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_manu_s

{txt}{col 28}t(15) = {res}    0.7308
{col 25}{txt}Prob>|t| = {res}    0.4852

95%{txt} confidence set for null hypothesis expression: [{res}-.02251{txt}, {res}.045{txt}]
{res}
Warning: 21 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_manu_s

{txt}{col 28}t(15) = {res}   -0.0310
{col 25}{txt}Prob>|t| = {res}    0.9739

95%{txt} confidence set for null hypothesis expression: [{res}-.01619{txt}, {res}.01571{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8131
                                                {txt}Root MSE          =    {res} 1.0721

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-3.238604{col 26}{space 2} .4996529{col 37}{space 1}   -6.48{col 46}{space 3}0.000{col 54}{space 4}-4.303589{col 67}{space 3}-2.173619
{txt}{space 9}two {c |}{col 14}{res}{space 2}-2.300138{col 26}{space 2} .6936252{col 37}{space 1}   -3.32{col 46}{space 3}0.005{col 54}{space 4}-3.778565{col 67}{space 3} -.821711
{txt}{space 7}three {c |}{col 14}{res}{space 2}-3.022889{col 26}{space 2} .6299253{col 37}{space 1}   -4.80{col 46}{space 3}0.000{col 54}{space 4}-4.365543{col 67}{space 3}-1.680235
{txt}{space 8}four {c |}{col 14}{res}{space 2}-2.615553{col 26}{space 2} .2374673{col 37}{space 1}  -11.01{col 46}{space 3}0.000{col 54}{space 4}-3.121703{col 67}{space 3}-2.109404
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.698212{col 26}{space 2} .2646204{col 37}{space 1}   -6.42{col 46}{space 3}0.000{col 54}{space 4}-2.262237{col 67}{space 3}-1.134187
{txt}{space 5}one_sim {c |}{col 14}{res}{space 2}-.9893716{col 26}{space 2} .2323663{col 37}{space 1}   -4.26{col 46}{space 3}0.001{col 54}{space 4}-1.484649{col 67}{space 3}-.4940944
{txt}{space 5}two_sim {c |}{col 14}{res}{space 2} .2123584{col 26}{space 2} .2587293{col 37}{space 1}    0.82{col 46}{space 3}0.425{col 54}{space 4}  -.33911{col 67}{space 3} .7638268
{txt}{space 3}three_sim {c |}{col 14}{res}{space 2} .3835204{col 26}{space 2} .2435351{col 37}{space 1}    1.57{col 46}{space 3}0.136{col 54}{space 4}-.1355623{col 67}{space 3} .9026032
{txt}{space 4}four_sim {c |}{col 14}{res}{space 2}-.2209153{col 26}{space 2} .4661706{col 37}{space 1}   -0.47{col 46}{space 3}0.642{col 54}{space 4}-1.214534{col 67}{space 3} .7727038
{txt}{space 4}five_sim {c |}{col 14}{res}{space 2}-.2763427{col 26}{space 2} .2245086{col 37}{space 1}   -1.23{col 46}{space 3}0.237{col 54}{space 4}-.7548714{col 67}{space 3}  .202186
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 1.843799{col 26}{space 2} 1.319305{col 37}{space 1}    1.40{col 46}{space 3}0.183{col 54}{space 4}-.9682336{col 67}{space 3} 4.655831
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.2663583{col 26}{space 2} .3301234{col 37}{space 1}   -0.81{col 46}{space 3}0.432{col 54}{space 4}-.9699997{col 67}{space 3} .4372831
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2726175{col 37}{space 1}   -0.19{col 46}{space 3}0.848{col 54}{space 4} -.634209{col 67}{space 3} .5279318
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2838562{col 37}{space 1}   -1.73{col 46}{space 3}0.104{col 54}{space 4}-1.096611{col 67}{space 3} .1134396
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3045491{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-.8502942{col 67}{space 3}  .447968
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2900432{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4} -.851283{col 67}{space 3} .3851418
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2876443{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4} -.571149{col 67}{space 3} .6550495
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3473569{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.3808525{col 67}{space 3} 1.099895
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3875732{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-.6374695{col 67}{space 3} 1.014716
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3760577{col 37}{space 1}    0.19{col 46}{space 3}0.850{col 54}{space 4}-.7289601{col 67}{space 3}  .874136
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2883515{col 37}{space 1}   -0.60{col 46}{space 3}0.559{col 54}{space 4}-.7871317{col 67}{space 3} .4420816
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2}  .320841{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6987346{col 67}{space 3} .6689783
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3228138{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7087306{col 67}{space 3} .6673921
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.6974278{col 26}{space 2} .4092392{col 37}{space 1}   -1.70{col 46}{space 3}0.109{col 54}{space 4}-1.569701{col 67}{space 3}  .174845
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.2812444{col 26}{space 2} .5513367{col 37}{space 1}   -0.51{col 46}{space 3}0.617{col 54}{space 4}-1.456391{col 67}{space 3}  .893902
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.2626592{col 26}{space 2} .3777341{col 37}{space 1}   -0.70{col 46}{space 3}0.497{col 54}{space 4} -1.06778{col 67}{space 3} .5424621
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.4854723{col 26}{space 2} .4369347{col 37}{space 1}   -1.11{col 46}{space 3}0.284{col 54}{space 4}-1.416777{col 67}{space 3} .4458319
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.3784495{col 26}{space 2} .4720347{col 37}{space 1}   -0.80{col 46}{space 3}0.435{col 54}{space 4}-1.384568{col 67}{space 3} .6276686
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.5491219{col 26}{space 2} .4049473{col 37}{space 1}   -1.36{col 46}{space 3}0.195{col 54}{space 4}-1.412247{col 67}{space 3} .3140028
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .1778331{col 26}{space 2} .5110052{col 37}{space 1}    0.35{col 46}{space 3}0.733{col 54}{space 4}-.9113486{col 67}{space 3} 1.267015
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.0820598{col 26}{space 2} .4550108{col 37}{space 1}   -0.18{col 46}{space 3}0.859{col 54}{space 4}-1.051892{col 67}{space 3} .8877729
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.2778235{col 26}{space 2} .3779515{col 37}{space 1}   -0.74{col 46}{space 3}0.474{col 54}{space 4}-1.083408{col 67}{space 3} .5277612
{txt}{space 8}573  {c |}{col 14}{res}{space 2}  .078983{col 26}{space 2} .5400253{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4}-1.072054{col 67}{space 3}  1.23002
{txt}{space 8}574  {c |}{col 14}{res}{space 2} .2256226{col 26}{space 2} .4409305{col 37}{space 1}    0.51{col 46}{space 3}0.616{col 54}{space 4}-.7141985{col 67}{space 3} 1.165444
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .4977892{col 26}{space 2} .5697844{col 37}{space 1}    0.87{col 46}{space 3}0.396{col 54}{space 4}-.7166774{col 67}{space 3} 1.712256
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.2134216{col 26}{space 2} .6352449{col 37}{space 1}   -0.34{col 46}{space 3}0.742{col 54}{space 4}-1.567414{col 67}{space 3} 1.140571
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .3347376{col 26}{space 2} .6513776{col 37}{space 1}    0.51{col 46}{space 3}0.615{col 54}{space 4}-1.053641{col 67}{space 3} 1.723116
{txt}{space 8}578  {c |}{col 14}{res}{space 2}  .045544{col 26}{space 2} .7057865{col 37}{space 1}    0.06{col 46}{space 3}0.949{col 54}{space 4}-1.458804{col 67}{space 3} 1.549892
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .1986081{col 26}{space 2} .6047889{col 37}{space 1}    0.33{col 46}{space 3}0.747{col 54}{space 4}-1.090469{col 67}{space 3} 1.487685
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .6620444{col 26}{space 2} .5828755{col 37}{space 1}    1.14{col 46}{space 3}0.274{col 54}{space 4}-.5803253{col 67}{space 3} 1.904414
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .5077543{col 26}{space 2} .5462214{col 37}{space 1}    0.93{col 46}{space 3}0.367{col 54}{space 4}-.6564892{col 67}{space 3} 1.671998
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .5309735{col 26}{space 2}  .594909{col 37}{space 1}    0.89{col 46}{space 3}0.386{col 54}{space 4}-.7370451{col 67}{space 3} 1.798992
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .3936664{col 26}{space 2} .6566993{col 37}{space 1}    0.60{col 46}{space 3}0.558{col 54}{space 4}-1.006055{col 67}{space 3} 1.793388
{txt}{space 8}584  {c |}{col 14}{res}{space 2} .5598491{col 26}{space 2} .6440974{col 37}{space 1}    0.87{col 46}{space 3}0.398{col 54}{space 4}-.8130121{col 67}{space 3}  1.93271
{txt}{space 8}585  {c |}{col 14}{res}{space 2} .4854986{col 26}{space 2} .5209817{col 37}{space 1}    0.93{col 46}{space 3}0.366{col 54}{space 4}-.6249476{col 67}{space 3} 1.595945
{txt}{space 8}586  {c |}{col 14}{res}{space 2}  .384117{col 26}{space 2} .6219655{col 37}{space 1}    0.62{col 46}{space 3}0.546{col 54}{space 4}-.9415711{col 67}{space 3} 1.709805
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .1645564{col 26}{space 2} .6280244{col 37}{space 1}    0.26{col 46}{space 3}0.797{col 54}{space 4}-1.174046{col 67}{space 3} 1.503159
{txt}{space 8}588  {c |}{col 14}{res}{space 2}  .224634{col 26}{space 2} .7194487{col 37}{space 1}    0.31{col 46}{space 3}0.759{col 54}{space 4}-1.308835{col 67}{space 3} 1.758103
{txt}{space 8}589  {c |}{col 14}{res}{space 2} .4227565{col 26}{space 2} .7854825{col 37}{space 1}    0.54{col 46}{space 3}0.598{col 54}{space 4} -1.25146{col 67}{space 3} 2.096973
{txt}{space 8}590  {c |}{col 14}{res}{space 2} .3512351{col 26}{space 2} .7682672{col 37}{space 1}    0.46{col 46}{space 3}0.654{col 54}{space 4}-1.286288{col 67}{space 3} 1.988758
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-.2337345{col 26}{space 2} .7675234{col 37}{space 1}   -0.30{col 46}{space 3}0.765{col 54}{space 4}-1.869672{col 67}{space 3} 1.402203
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .3481491{col 26}{space 2} .6978643{col 37}{space 1}    0.50{col 46}{space 3}0.625{col 54}{space 4}-1.139313{col 67}{space 3} 1.835612
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .6491386{col 26}{space 2} .7869237{col 37}{space 1}    0.82{col 46}{space 3}0.422{col 54}{space 4}-1.028149{col 67}{space 3} 2.326427
{txt}{space 8}594  {c |}{col 14}{res}{space 2}  .659334{col 26}{space 2} .7555104{col 37}{space 1}    0.87{col 46}{space 3}0.397{col 54}{space 4}-.9509983{col 67}{space 3} 2.269666
{txt}{space 8}595  {c |}{col 14}{res}{space 2}  .654321{col 26}{space 2}  .854519{col 37}{space 1}    0.77{col 46}{space 3}0.456{col 54}{space 4}-1.167043{col 67}{space 3} 2.475685
{txt}{space 8}596  {c |}{col 14}{res}{space 2} .3585116{col 26}{space 2} .6630643{col 37}{space 1}    0.54{col 46}{space 3}0.597{col 54}{space 4}-1.054776{col 67}{space 3}   1.7718
{txt}{space 8}597  {c |}{col 14}{res}{space 2} .3594373{col 26}{space 2}  .735086{col 37}{space 1}    0.49{col 46}{space 3}0.632{col 54}{space 4}-1.207361{col 67}{space 3} 1.926236
{txt}{space 8}598  {c |}{col 14}{res}{space 2} .4726559{col 26}{space 2} .7598049{col 37}{space 1}    0.62{col 46}{space 3}0.543{col 54}{space 4} -1.14683{col 67}{space 3} 2.092142
{txt}{space 8}599  {c |}{col 14}{res}{space 2} .2669434{col 26}{space 2} .7600787{col 37}{space 1}    0.35{col 46}{space 3}0.730{col 54}{space 4}-1.353126{col 67}{space 3} 1.887013
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .2575915{col 26}{space 2} .9442278{col 37}{space 1}    0.27{col 46}{space 3}0.789{col 54}{space 4}-1.754982{col 67}{space 3} 2.270165
{txt}{space 8}601  {c |}{col 14}{res}{space 2}  .014561{col 26}{space 2} .9265516{col 37}{space 1}    0.02{col 46}{space 3}0.988{col 54}{space 4}-1.960337{col 67}{space 3} 1.989459
{txt}{space 8}602  {c |}{col 14}{res}{space 2} .4515136{col 26}{space 2} 1.009522{col 37}{space 1}    0.45{col 46}{space 3}0.661{col 54}{space 4}-1.700231{col 67}{space 3} 2.603259
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.2472777{col 26}{space 2} .8594607{col 37}{space 1}   -0.29{col 46}{space 3}0.778{col 54}{space 4}-2.079175{col 67}{space 3} 1.584619
{txt}{space 8}604  {c |}{col 14}{res}{space 2} .0289811{col 26}{space 2} .8911406{col 37}{space 1}    0.03{col 46}{space 3}0.974{col 54}{space 4} -1.87044{col 67}{space 3} 1.928402
{txt}{space 8}605  {c |}{col 14}{res}{space 2} .4166783{col 26}{space 2} .8768586{col 37}{space 1}    0.48{col 46}{space 3}0.641{col 54}{space 4}-1.452302{col 67}{space 3} 2.285658
{txt}{space 8}606  {c |}{col 14}{res}{space 2} .0199772{col 26}{space 2} .9361585{col 37}{space 1}    0.02{col 46}{space 3}0.983{col 54}{space 4}-1.975397{col 67}{space 3} 2.015352
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .3372643{col 26}{space 2} .9174566{col 37}{space 1}    0.37{col 46}{space 3}0.718{col 54}{space 4}-1.618248{col 67}{space 3} 2.292777
{txt}{space 8}608  {c |}{col 14}{res}{space 2} .1589748{col 26}{space 2} .9234831{col 37}{space 1}    0.17{col 46}{space 3}0.866{col 54}{space 4}-1.809383{col 67}{space 3} 2.127332
{txt}{space 8}609  {c |}{col 14}{res}{space 2} .1269547{col 26}{space 2} 1.054636{col 37}{space 1}    0.12{col 46}{space 3}0.906{col 54}{space 4} -2.12095{col 67}{space 3} 2.374859
{txt}{space 8}610  {c |}{col 14}{res}{space 2} .4868993{col 26}{space 2} 1.073772{col 37}{space 1}    0.45{col 46}{space 3}0.657{col 54}{space 4}-1.801792{col 67}{space 3}  2.77559
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .7406483{col 26}{space 2} .8875402{col 37}{space 1}    0.83{col 46}{space 3}0.417{col 54}{space 4}-1.151099{col 67}{space 3} 2.632395
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .0362957{col 26}{space 2} 1.162918{col 37}{space 1}    0.03{col 46}{space 3}0.976{col 54}{space 4}-2.442406{col 67}{space 3} 2.514998
{txt}{space 8}613  {c |}{col 14}{res}{space 2} .0946428{col 26}{space 2} 1.289282{col 37}{space 1}    0.07{col 46}{space 3}0.942{col 54}{space 4}-2.653396{col 67}{space 3} 2.842681
{txt}{space 8}614  {c |}{col 14}{res}{space 2} .0123982{col 26}{space 2} 1.097325{col 37}{space 1}    0.01{col 46}{space 3}0.991{col 54}{space 4}-2.326494{col 67}{space 3} 2.351291
{txt}{space 8}615  {c |}{col 14}{res}{space 2} .1865514{col 26}{space 2} 1.208122{col 37}{space 1}    0.15{col 46}{space 3}0.879{col 54}{space 4}  -2.3885{col 67}{space 3} 2.761603
{txt}{space 8}616  {c |}{col 14}{res}{space 2} .0804283{col 26}{space 2}  1.15254{col 37}{space 1}    0.07{col 46}{space 3}0.945{col 54}{space 4}-2.376153{col 67}{space 3}  2.53701
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-.3900622{col 26}{space 2} 1.359674{col 37}{space 1}   -0.29{col 46}{space 3}0.778{col 54}{space 4}-3.288139{col 67}{space 3} 2.508014
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-.0297166{col 26}{space 2} 1.100887{col 37}{space 1}   -0.03{col 46}{space 3}0.979{col 54}{space 4}-2.376202{col 67}{space 3} 2.316769
{txt}{space 8}619  {c |}{col 14}{res}{space 2} .4435903{col 26}{space 2} 1.164177{col 37}{space 1}    0.38{col 46}{space 3}0.709{col 54}{space 4}-2.037795{col 67}{space 3} 2.924975
{txt}{space 8}620  {c |}{col 14}{res}{space 2} .2157324{col 26}{space 2} 1.333526{col 37}{space 1}    0.16{col 46}{space 3}0.874{col 54}{space 4}-2.626612{col 67}{space 3} 3.058076
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .3205822{col 26}{space 2} 1.097187{col 37}{space 1}    0.29{col 46}{space 3}0.774{col 54}{space 4}-2.018016{col 67}{space 3} 2.659181
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .1283087{col 26}{space 2} 1.104835{col 37}{space 1}    0.12{col 46}{space 3}0.909{col 54}{space 4}-2.226591{col 67}{space 3} 2.483208
{txt}{space 8}623  {c |}{col 14}{res}{space 2} .1255902{col 26}{space 2} 1.098726{col 37}{space 1}    0.11{col 46}{space 3}0.911{col 54}{space 4}-2.216289{col 67}{space 3}  2.46747
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-.1680357{col 26}{space 2} 1.306133{col 37}{space 1}   -0.13{col 46}{space 3}0.899{col 54}{space 4}-2.951992{col 67}{space 3}  2.61592
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-.1659077{col 26}{space 2} 1.353175{col 37}{space 1}   -0.12{col 46}{space 3}0.904{col 54}{space 4}-3.050133{col 67}{space 3} 2.718318
{txt}{space 8}626  {c |}{col 14}{res}{space 2} .1257108{col 26}{space 2} 1.396041{col 37}{space 1}    0.09{col 46}{space 3}0.929{col 54}{space 4} -2.84988{col 67}{space 3} 3.101302
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-.2819197{col 26}{space 2}  1.36737{col 37}{space 1}   -0.21{col 46}{space 3}0.839{col 54}{space 4}  -3.1964{col 67}{space 3}  2.63256
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-.7369834{col 26}{space 2} 1.361881{col 37}{space 1}   -0.54{col 46}{space 3}0.596{col 54}{space 4}-3.639764{col 67}{space 3} 2.165797
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-.3518874{col 26}{space 2} 1.300493{col 37}{space 1}   -0.27{col 46}{space 3}0.790{col 54}{space 4}-3.123822{col 67}{space 3} 2.420047
{txt}{space 8}630  {c |}{col 14}{res}{space 2} .1067926{col 26}{space 2} 1.306756{col 37}{space 1}    0.08{col 46}{space 3}0.936{col 54}{space 4}-2.678491{col 67}{space 3} 2.892076
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-.7072391{col 26}{space 2} 1.424431{col 37}{space 1}   -0.50{col 46}{space 3}0.627{col 54}{space 4}-3.743342{col 67}{space 3} 2.328863
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-.1961937{col 26}{space 2} 1.331638{col 37}{space 1}   -0.15{col 46}{space 3}0.885{col 54}{space 4}-3.034512{col 67}{space 3} 2.642125
{txt}{space 8}633  {c |}{col 14}{res}{space 2}  .265282{col 26}{space 2} 1.244773{col 37}{space 1}    0.21{col 46}{space 3}0.834{col 54}{space 4}-2.387889{col 67}{space 3} 2.918453
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-.2236267{col 26}{space 2} 1.273471{col 37}{space 1}   -0.18{col 46}{space 3}0.863{col 54}{space 4}-2.937966{col 67}{space 3} 2.490713
{txt}{space 8}635  {c |}{col 14}{res}{space 2} .0436938{col 26}{space 2}  1.32198{col 37}{space 1}    0.03{col 46}{space 3}0.974{col 54}{space 4} -2.77404{col 67}{space 3} 2.861427
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-.3142538{col 26}{space 2}   1.4689{col 37}{space 1}   -0.21{col 46}{space 3}0.833{col 54}{space 4}-3.445139{col 67}{space 3} 2.816632
{txt}{space 8}637  {c |}{col 14}{res}{space 2} -.712915{col 26}{space 2} 1.428097{col 37}{space 1}   -0.50{col 46}{space 3}0.625{col 54}{space 4}-3.756831{col 67}{space 3} 2.331001
{txt}{space 8}638  {c |}{col 14}{res}{space 2}  .248783{col 26}{space 2} 1.440523{col 37}{space 1}    0.17{col 46}{space 3}0.865{col 54}{space 4}-2.821619{col 67}{space 3} 3.319185
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-.1123475{col 26}{space 2} 1.399596{col 37}{space 1}   -0.08{col 46}{space 3}0.937{col 54}{space 4}-3.095515{col 67}{space 3}  2.87082
{txt}{space 8}640  {c |}{col 14}{res}{space 2} .0583879{col 26}{space 2} 1.412224{col 37}{space 1}    0.04{col 46}{space 3}0.968{col 54}{space 4}-2.951696{col 67}{space 3} 3.068472
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-.1726815{col 26}{space 2} 1.334632{col 37}{space 1}   -0.13{col 46}{space 3}0.899{col 54}{space 4}-3.017383{col 67}{space 3} 2.672019
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-.2576469{col 26}{space 2} 1.338919{col 37}{space 1}   -0.19{col 46}{space 3}0.850{col 54}{space 4}-3.111486{col 67}{space 3} 2.596192
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-.1187128{col 26}{space 2} 1.406699{col 37}{space 1}   -0.08{col 46}{space 3}0.934{col 54}{space 4}-3.117021{col 67}{space 3} 2.879596
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-.4255948{col 26}{space 2} 1.414251{col 37}{space 1}   -0.30{col 46}{space 3}0.768{col 54}{space 4}    -3.44{col 67}{space 3}  2.58881
{txt}{space 8}645  {c |}{col 14}{res}{space 2} .3928008{col 26}{space 2} 1.573748{col 37}{space 1}    0.25{col 46}{space 3}0.806{col 54}{space 4}-2.961563{col 67}{space 3} 3.747164
{txt}{space 8}646  {c |}{col 14}{res}{space 2} .0284332{col 26}{space 2}   1.4908{col 37}{space 1}    0.02{col 46}{space 3}0.985{col 54}{space 4}-3.149132{col 67}{space 3} 3.205998
{txt}{space 8}647  {c |}{col 14}{res}{space 2} .1677214{col 26}{space 2} 1.595492{col 37}{space 1}    0.11{col 46}{space 3}0.918{col 54}{space 4}-3.232988{col 67}{space 3} 3.568431
{txt}{space 8}648  {c |}{col 14}{res}{space 2} .3506512{col 26}{space 2} 1.714367{col 37}{space 1}    0.20{col 46}{space 3}0.841{col 54}{space 4}-3.303435{col 67}{space 3} 4.004738
{txt}{space 8}649  {c |}{col 14}{res}{space 2} .5955346{col 26}{space 2} 1.629782{col 37}{space 1}    0.37{col 46}{space 3}0.720{col 54}{space 4}-2.878264{col 67}{space 3} 4.069333
{txt}{space 8}650  {c |}{col 14}{res}{space 2} .0199373{col 26}{space 2} 1.598166{col 37}{space 1}    0.01{col 46}{space 3}0.990{col 54}{space 4}-3.386474{col 67}{space 3} 3.426348
{txt}{space 8}651  {c |}{col 14}{res}{space 2}  -.12687{col 26}{space 2} 1.649692{col 37}{space 1}   -0.08{col 46}{space 3}0.940{col 54}{space 4}-3.643106{col 67}{space 3} 3.389366
{txt}{space 8}652  {c |}{col 14}{res}{space 2} .0325158{col 26}{space 2} 1.559722{col 37}{space 1}    0.02{col 46}{space 3}0.984{col 54}{space 4}-3.291954{col 67}{space 3} 3.356986
{txt}{space 8}653  {c |}{col 14}{res}{space 2} .7715866{col 26}{space 2} 1.694905{col 37}{space 1}    0.46{col 46}{space 3}0.655{col 54}{space 4}-2.841018{col 67}{space 3} 4.384191
{txt}{space 8}654  {c |}{col 14}{res}{space 2} .3745099{col 26}{space 2} 1.655422{col 37}{space 1}    0.23{col 46}{space 3}0.824{col 54}{space 4}-3.153938{col 67}{space 3} 3.902958
{txt}{space 8}655  {c |}{col 14}{res}{space 2} .3794353{col 26}{space 2} 1.650786{col 37}{space 1}    0.23{col 46}{space 3}0.821{col 54}{space 4}-3.139132{col 67}{space 3} 3.898002
{txt}{space 8}656  {c |}{col 14}{res}{space 2} .2195568{col 26}{space 2} 1.588163{col 37}{space 1}    0.14{col 46}{space 3}0.892{col 54}{space 4}-3.165532{col 67}{space 3} 3.604646
{txt}{space 8}657  {c |}{col 14}{res}{space 2} .0308655{col 26}{space 2} 1.711869{col 37}{space 1}    0.02{col 46}{space 3}0.986{col 54}{space 4}-3.617897{col 67}{space 3} 3.679628
{txt}{space 8}658  {c |}{col 14}{res}{space 2} -.291145{col 26}{space 2} 2.037075{col 37}{space 1}   -0.14{col 46}{space 3}0.888{col 54}{space 4}-4.633067{col 67}{space 3} 4.050777
{txt}{space 8}659  {c |}{col 14}{res}{space 2} .2510731{col 26}{space 2}  1.61833{col 37}{space 1}    0.16{col 46}{space 3}0.879{col 54}{space 4}-3.198316{col 67}{space 3} 3.700462
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-.2313336{col 26}{space 2} 1.815794{col 37}{space 1}   -0.13{col 46}{space 3}0.900{col 54}{space 4}-4.101607{col 67}{space 3}  3.63894
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-.1958069{col 26}{space 2} 1.694433{col 37}{space 1}   -0.12{col 46}{space 3}0.910{col 54}{space 4}-3.807406{col 67}{space 3} 3.415792
{txt}{space 8}662  {c |}{col 14}{res}{space 2} .3336326{col 26}{space 2} 1.780342{col 37}{space 1}    0.19{col 46}{space 3}0.854{col 54}{space 4}-3.461076{col 67}{space 3} 4.128342
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-.2076892{col 26}{space 2} 1.640133{col 37}{space 1}   -0.13{col 46}{space 3}0.901{col 54}{space 4}-3.703549{col 67}{space 3} 3.288171
{txt}{space 8}664  {c |}{col 14}{res}{space 2} .0151925{col 26}{space 2} 1.684605{col 37}{space 1}    0.01{col 46}{space 3}0.993{col 54}{space 4}-3.575458{col 67}{space 3} 3.605843
{txt}{space 8}665  {c |}{col 14}{res}{space 2} .3895116{col 26}{space 2} 1.735118{col 37}{space 1}    0.22{col 46}{space 3}0.825{col 54}{space 4}-3.308805{col 67}{space 3} 4.087829
{txt}{space 8}666  {c |}{col 14}{res}{space 2} .3454873{col 26}{space 2} 1.669249{col 37}{space 1}    0.21{col 46}{space 3}0.839{col 54}{space 4}-3.212432{col 67}{space 3} 3.903407
{txt}{space 8}667  {c |}{col 14}{res}{space 2} .1840951{col 26}{space 2}  1.65615{col 37}{space 1}    0.11{col 46}{space 3}0.913{col 54}{space 4}-3.345905{col 67}{space 3} 3.714095
{txt}{space 8}668  {c |}{col 14}{res}{space 2} .0458454{col 26}{space 2} 1.711877{col 37}{space 1}    0.03{col 46}{space 3}0.979{col 54}{space 4}-3.602933{col 67}{space 3} 3.694624
{txt}{space 8}669  {c |}{col 14}{res}{space 2} .1613342{col 26}{space 2} 1.682323{col 37}{space 1}    0.10{col 46}{space 3}0.925{col 54}{space 4}-3.424452{col 67}{space 3} 3.747121
{txt}{space 8}670  {c |}{col 14}{res}{space 2} .0319931{col 26}{space 2} 1.656204{col 37}{space 1}    0.02{col 46}{space 3}0.985{col 54}{space 4}-3.498123{col 67}{space 3} 3.562109
{txt}{space 8}671  {c |}{col 14}{res}{space 2} .3232794{col 26}{space 2} 1.655521{col 37}{space 1}    0.20{col 46}{space 3}0.848{col 54}{space 4} -3.20538{col 67}{space 3} 3.851939
{txt}{space 8}672  {c |}{col 14}{res}{space 2} .1425917{col 26}{space 2} 1.719078{col 37}{space 1}    0.08{col 46}{space 3}0.935{col 54}{space 4}-3.521537{col 67}{space 3} 3.806721
{txt}{space 8}673  {c |}{col 14}{res}{space 2} .2744468{col 26}{space 2} 1.739118{col 37}{space 1}    0.16{col 46}{space 3}0.877{col 54}{space 4}-3.432396{col 67}{space 3} 3.981289
{txt}{space 8}674  {c |}{col 14}{res}{space 2} .4396611{col 26}{space 2} 1.794971{col 37}{space 1}    0.24{col 46}{space 3}0.810{col 54}{space 4} -3.38623{col 67}{space 3} 4.265552
{txt}{space 8}675  {c |}{col 14}{res}{space 2}  .801418{col 26}{space 2} 1.818712{col 37}{space 1}    0.44{col 46}{space 3}0.666{col 54}{space 4}-3.075075{col 67}{space 3} 4.677911
{txt}{space 8}676  {c |}{col 14}{res}{space 2} .8615937{col 26}{space 2}  1.84519{col 37}{space 1}    0.47{col 46}{space 3}0.647{col 54}{space 4}-3.071335{col 67}{space 3} 4.794522
{txt}{space 8}677  {c |}{col 14}{res}{space 2} .5467894{col 26}{space 2} 1.789813{col 37}{space 1}    0.31{col 46}{space 3}0.764{col 54}{space 4}-3.268107{col 67}{space 3} 4.361686
{txt}{space 8}678  {c |}{col 14}{res}{space 2} .7729349{col 26}{space 2} 1.815632{col 37}{space 1}    0.43{col 46}{space 3}0.676{col 54}{space 4}-3.096992{col 67}{space 3} 4.642862
{txt}{space 8}679  {c |}{col 14}{res}{space 2} .8701375{col 26}{space 2} 1.803127{col 37}{space 1}    0.48{col 46}{space 3}0.636{col 54}{space 4}-2.973136{col 67}{space 3} 4.713411
{txt}{space 8}680  {c |}{col 14}{res}{space 2} .9212681{col 26}{space 2} 1.791599{col 37}{space 1}    0.51{col 46}{space 3}0.615{col 54}{space 4}-2.897436{col 67}{space 3} 4.739972
{txt}{space 8}681  {c |}{col 14}{res}{space 2} .9328909{col 26}{space 2} 1.792461{col 37}{space 1}    0.52{col 46}{space 3}0.610{col 54}{space 4}-2.887649{col 67}{space 3}  4.75343
{txt}{space 8}682  {c |}{col 14}{res}{space 2} .5930405{col 26}{space 2} 1.802474{col 37}{space 1}    0.33{col 46}{space 3}0.747{col 54}{space 4}-3.248841{col 67}{space 3} 4.434922
{txt}{space 8}683  {c |}{col 14}{res}{space 2} .4350741{col 26}{space 2} 1.821134{col 37}{space 1}    0.24{col 46}{space 3}0.814{col 54}{space 4}-3.446581{col 67}{space 3} 4.316729
{txt}{space 8}684  {c |}{col 14}{res}{space 2} .5067885{col 26}{space 2} 1.997702{col 37}{space 1}    0.25{col 46}{space 3}0.803{col 54}{space 4}-3.751213{col 67}{space 3}  4.76479
{txt}{space 8}685  {c |}{col 14}{res}{space 2} .3265384{col 26}{space 2} 1.943936{col 37}{space 1}    0.17{col 46}{space 3}0.869{col 54}{space 4}-3.816862{col 67}{space 3} 4.469939
{txt}{space 8}686  {c |}{col 14}{res}{space 2} .3202126{col 26}{space 2} 2.007557{col 37}{space 1}    0.16{col 46}{space 3}0.875{col 54}{space 4}-3.958794{col 67}{space 3} 4.599219
{txt}{space 8}687  {c |}{col 14}{res}{space 2} .6601558{col 26}{space 2} 1.932824{col 37}{space 1}    0.34{col 46}{space 3}0.737{col 54}{space 4}-3.459561{col 67}{space 3} 4.779873
{txt}{space 8}688  {c |}{col 14}{res}{space 2} .3661094{col 26}{space 2} 1.989845{col 37}{space 1}    0.18{col 46}{space 3}0.856{col 54}{space 4}-3.875145{col 67}{space 3} 4.607364
{txt}{space 8}689  {c |}{col 14}{res}{space 2} .3450299{col 26}{space 2} 1.984887{col 37}{space 1}    0.17{col 46}{space 3}0.864{col 54}{space 4}-3.885656{col 67}{space 3} 4.575715
{txt}{space 8}690  {c |}{col 14}{res}{space 2} .0615722{col 26}{space 2} 1.985485{col 37}{space 1}    0.03{col 46}{space 3}0.976{col 54}{space 4}-4.170388{col 67}{space 3} 4.293532
{txt}{space 8}691  {c |}{col 14}{res}{space 2} .2072959{col 26}{space 2} 2.018084{col 37}{space 1}    0.10{col 46}{space 3}0.920{col 54}{space 4}-4.094149{col 67}{space 3} 4.508741
{txt}{space 8}692  {c |}{col 14}{res}{space 2} .3859415{col 26}{space 2} 1.995543{col 37}{space 1}    0.19{col 46}{space 3}0.849{col 54}{space 4}-3.867457{col 67}{space 3}  4.63934
{txt}{space 8}693  {c |}{col 14}{res}{space 2} .2935935{col 26}{space 2} 1.958096{col 37}{space 1}    0.15{col 46}{space 3}0.883{col 54}{space 4} -3.87999{col 67}{space 3} 4.467177
{txt}{space 8}694  {c |}{col 14}{res}{space 2} .3784645{col 26}{space 2} 2.005098{col 37}{space 1}    0.19{col 46}{space 3}0.853{col 54}{space 4}  -3.8953{col 67}{space 3} 4.652229
{txt}{space 8}695  {c |}{col 14}{res}{space 2} .1679734{col 26}{space 2} 1.985999{col 37}{space 1}    0.08{col 46}{space 3}0.934{col 54}{space 4}-4.065083{col 67}{space 3}  4.40103
{txt}{space 8}696  {c |}{col 14}{res}{space 2} .2978651{col 26}{space 2} 2.060608{col 37}{space 1}    0.14{col 46}{space 3}0.887{col 54}{space 4}-4.094216{col 67}{space 3} 4.689946
{txt}{space 8}697  {c |}{col 14}{res}{space 2} .2576386{col 26}{space 2} 2.046213{col 37}{space 1}    0.13{col 46}{space 3}0.901{col 54}{space 4}-4.103762{col 67}{space 3} 4.619039
{txt}{space 8}698  {c |}{col 14}{res}{space 2} .3157301{col 26}{space 2} 2.056762{col 37}{space 1}    0.15{col 46}{space 3}0.880{col 54}{space 4}-4.068153{col 67}{space 3} 4.699614
{txt}{space 8}699  {c |}{col 14}{res}{space 2} .1087741{col 26}{space 2} 2.059609{col 37}{space 1}    0.05{col 46}{space 3}0.959{col 54}{space 4}-4.281178{col 67}{space 3} 4.498726
{txt}{space 8}700  {c |}{col 14}{res}{space 2} .3848674{col 26}{space 2} 2.063693{col 37}{space 1}    0.19{col 46}{space 3}0.855{col 54}{space 4} -4.01379{col 67}{space 3} 4.783525
{txt}{space 8}701  {c |}{col 14}{res}{space 2} .0203891{col 26}{space 2} 2.051037{col 37}{space 1}    0.01{col 46}{space 3}0.992{col 54}{space 4}-4.351293{col 67}{space 3} 4.392071
{txt}{space 8}702  {c |}{col 14}{res}{space 2}-.1845721{col 26}{space 2} 2.125419{col 37}{space 1}   -0.09{col 46}{space 3}0.932{col 54}{space 4}-4.714796{col 67}{space 3} 4.345652
{txt}{space 8}703  {c |}{col 14}{res}{space 2} .4194719{col 26}{space 2} 2.072771{col 37}{space 1}    0.20{col 46}{space 3}0.842{col 54}{space 4}-3.998534{col 67}{space 3} 4.837478
{txt}{space 8}704  {c |}{col 14}{res}{space 2} .6641681{col 26}{space 2} 1.993085{col 37}{space 1}    0.33{col 46}{space 3}0.744{col 54}{space 4}-3.583993{col 67}{space 3} 4.912329
{txt}{space 8}705  {c |}{col 14}{res}{space 2} .7272337{col 26}{space 2}  2.03506{col 37}{space 1}    0.36{col 46}{space 3}0.726{col 54}{space 4}-3.610394{col 67}{space 3} 5.064861
{txt}{space 8}706  {c |}{col 14}{res}{space 2} .6420081{col 26}{space 2} 2.047816{col 37}{space 1}    0.31{col 46}{space 3}0.758{col 54}{space 4}-3.722809{col 67}{space 3} 5.006825
{txt}{space 8}707  {c |}{col 14}{res}{space 2} .5178006{col 26}{space 2} 2.120385{col 37}{space 1}    0.24{col 46}{space 3}0.810{col 54}{space 4}-4.001693{col 67}{space 3} 5.037294
{txt}{space 8}708  {c |}{col 14}{res}{space 2} .8753922{col 26}{space 2} 2.273781{col 37}{space 1}    0.38{col 46}{space 3}0.706{col 54}{space 4}-3.971057{col 67}{space 3} 5.721842
{txt}{space 8}709  {c |}{col 14}{res}{space 2} .2862871{col 26}{space 2}  2.29616{col 37}{space 1}    0.12{col 46}{space 3}0.902{col 54}{space 4}-4.607863{col 67}{space 3} 5.180437
{txt}{space 8}710  {c |}{col 14}{res}{space 2} .5994884{col 26}{space 2} 2.250029{col 37}{space 1}    0.27{col 46}{space 3}0.794{col 54}{space 4}-4.196334{col 67}{space 3} 5.395311
{txt}{space 8}711  {c |}{col 14}{res}{space 2} .9209719{col 26}{space 2} 2.187106{col 37}{space 1}    0.42{col 46}{space 3}0.680{col 54}{space 4}-3.740733{col 67}{space 3} 5.582677
{txt}{space 8}712  {c |}{col 14}{res}{space 2} .5078737{col 26}{space 2}  2.24226{col 37}{space 1}    0.23{col 46}{space 3}0.824{col 54}{space 4}-4.271391{col 67}{space 3} 5.287138
{txt}{space 8}713  {c |}{col 14}{res}{space 2} .9691017{col 26}{space 2} 2.238844{col 37}{space 1}    0.43{col 46}{space 3}0.671{col 54}{space 4} -3.80288{col 67}{space 3} 5.741084
{txt}{space 8}714  {c |}{col 14}{res}{space 2} .6250978{col 26}{space 2} 2.204752{col 37}{space 1}    0.28{col 46}{space 3}0.781{col 54}{space 4}-4.074221{col 67}{space 3} 5.324416
{txt}{space 8}715  {c |}{col 14}{res}{space 2} .6399704{col 26}{space 2} 2.242986{col 37}{space 1}    0.29{col 46}{space 3}0.779{col 54}{space 4} -4.14084{col 67}{space 3} 5.420781
{txt}{space 8}716  {c |}{col 14}{res}{space 2} .5424669{col 26}{space 2} 2.252758{col 37}{space 1}    0.24{col 46}{space 3}0.813{col 54}{space 4}-4.259173{col 67}{space 3} 5.344106
{txt}{space 8}717  {c |}{col 14}{res}{space 2} .3892751{col 26}{space 2} 2.231561{col 37}{space 1}    0.17{col 46}{space 3}0.864{col 54}{space 4}-4.367185{col 67}{space 3} 5.145735
{txt}{space 8}718  {c |}{col 14}{res}{space 2} .7661864{col 26}{space 2} 2.214984{col 37}{space 1}    0.35{col 46}{space 3}0.734{col 54}{space 4} -3.95494{col 67}{space 3} 5.487313
{txt}{space 8}719  {c |}{col 14}{res}{space 2} .6251803{col 26}{space 2} 2.256828{col 37}{space 1}    0.28{col 46}{space 3}0.786{col 54}{space 4}-4.185135{col 67}{space 3} 5.435496
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.497947{col 26}{space 2} .2889054{col 37}{space 1}    5.18{col 46}{space 3}0.000{col 54}{space 4} .8821598{col 67}{space 3} 2.113734
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.402574{col 26}{space 2} .9402065{col 37}{space 1}   -1.49{col 46}{space 3}0.156{col 54}{space 4}-3.406577{col 67}{space 3} .6014284
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-.7922694{col 26}{space 2} 1.372723{col 37}{space 1}   -0.58{col 46}{space 3}0.572{col 54}{space 4}-3.718159{col 67}{space 3}  2.13362
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.5478863{col 26}{space 2} .2789622{col 37}{space 1}   -1.96{col 46}{space 3}0.068{col 54}{space 4} -1.14248{col 67}{space 3} .0467076
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.215889{col 26}{space 2} .2396816{col 37}{space 1}    5.07{col 46}{space 3}0.000{col 54}{space 4} .7050197{col 67}{space 3} 1.726758
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}  .404417{col 26}{space 2} 1.446883{col 37}{space 1}    0.28{col 46}{space 3}0.784{col 54}{space 4}-2.679542{col 67}{space 3} 3.488376
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 1.673952{col 26}{space 2} .6986413{col 37}{space 1}    2.40{col 46}{space 3}0.030{col 54}{space 4} .1848334{col 67}{space 3} 3.163071
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.151213{col 26}{space 2}   .55354{col 37}{space 1}   -3.89{col 46}{space 3}0.001{col 54}{space 4}-3.331056{col 67}{space 3}-.9713708
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-1.997953{col 26}{space 2} .6329566{col 37}{space 1}   -3.16{col 46}{space 3}0.007{col 54}{space 4}-3.347069{col 67}{space 3}-.6488382
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.621232{col 26}{space 2} .8269784{col 37}{space 1}   -1.96{col 46}{space 3}0.069{col 54}{space 4}-3.383894{col 67}{space 3}  .141431
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 2.116121{col 26}{space 2} .4444822{col 37}{space 1}    4.76{col 46}{space 3}0.000{col 54}{space 4} 1.168729{col 67}{space 3} 3.063512
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}-.0205458{col 26}{space 2} .9519122{col 37}{space 1}   -0.02{col 46}{space 3}0.983{col 54}{space 4}-2.049499{col 67}{space 3} 2.008407
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.621873{col 26}{space 2} .9652225{col 37}{space 1}    2.72{col 46}{space 3}0.016{col 54}{space 4} .5645498{col 67}{space 3} 4.679196
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} .9025182{col 26}{space 2} 3.839827{col 37}{space 1}    0.24{col 46}{space 3}0.817{col 54}{space 4} -7.28188{col 67}{space 3} 9.086917
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} 1.218585{col 26}{space 2} 1.372846{col 37}{space 1}    0.89{col 46}{space 3}0.389{col 54}{space 4}-1.707568{col 67}{space 3} 4.144738
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-16.24033{col 26}{space 2} 16.52844{col 37}{space 1}   -0.98{col 46}{space 3}0.341{col 54}{space 4}-51.46986{col 67}{space 3} 18.98921
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 330 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -6.4754
{col 25}{txt}Prob>|t| = {res}    0.0089

95%{txt} confidence set for null hypothesis expression: [{res}-4.418{txt}, {res}-2.066{txt}]
{res}
Warning: 11 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -3.3131
{col 25}{txt}Prob>|t| = {res}    0.0133

95%{txt} confidence set for null hypothesis expression: [{res}-4.004{txt}, {res}-.6584{txt}]
{res}
Warning: 18 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -4.7904
{col 25}{txt}Prob>|t| = {res}    0.0038

95%{txt} confidence set for null hypothesis expression: [{res}-4.46{txt}, {res}-1.584{txt}]
{res}
Warning: 8 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}  -11.4133
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}-3.047{txt}, {res}-2.166{txt}]
{res}
Warning: 21 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -5.9725
{col 25}{txt}Prob>|t| = {res}    0.0471

95%{txt} confidence set for null hypothesis expression: [{res}-3.346{txt}, {res}-.09806{txt}]
{res}
Warning: 96 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_sim

{txt}{col 28}t(15) = {res}   -3.8079
{col 25}{txt}Prob>|t| = {res}    0.0170

95%{txt} confidence set for null hypothesis expression: [{res}-1.646{txt}, {res}-.321{txt}]
{res}
Warning: 32 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_sim

{txt}{col 28}t(15) = {res}    0.8117
{col 25}{txt}Prob>|t| = {res}    0.5714

95%{txt} confidence set for null hypothesis expression: [{res}-.8111{txt}, {res}1.144{txt}]
{res}
Warning: 33 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_sim

{txt}{col 28}t(15) = {res}    1.5784
{col 25}{txt}Prob>|t| = {res}    0.1930

95%{txt} confidence set for null hypothesis expression: [{res}-.308{txt}, {res}1.024{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_sim

{txt}{col 28}t(15) = {res}   -0.4778
{col 25}{txt}Prob>|t| = {res}    0.6646

95%{txt} confidence set for null hypothesis expression: [{res}-1.329{txt}, {res}.8909{txt}]
{res}
Warning: 72 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_sim

{txt}{col 28}t(15) = {res}   -1.2551
{col 25}{txt}Prob>|t| = {res}    0.3014

95%{txt} confidence set for null hypothesis expression: [{res}-.9378{txt}, {res}.4223{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     2,688
                                                {txt}{help j_robustsingular:F(14, 15) }        =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8120
                                                {txt}Root MSE          =    {res} 1.0753

{txt}{ralign 78:(Std. err. adjusted for {res:16} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-2.681821{col 26}{space 2} .4941541{col 37}{space 1}   -5.43{col 46}{space 3}0.000{col 54}{space 4}-3.735086{col 67}{space 3}-1.628557
{txt}{space 9}two {c |}{col 14}{res}{space 2}-2.341849{col 26}{space 2} .6406317{col 37}{space 1}   -3.66{col 46}{space 3}0.002{col 54}{space 4}-3.707323{col 67}{space 3}-.9763749
{txt}{space 7}three {c |}{col 14}{res}{space 2} -3.05514{col 26}{space 2} .6218786{col 37}{space 1}   -4.91{col 46}{space 3}0.000{col 54}{space 4}-4.380643{col 67}{space 3}-1.729638
{txt}{space 8}four {c |}{col 14}{res}{space 2}-2.306714{col 26}{space 2} .4367212{col 37}{space 1}   -5.28{col 46}{space 3}0.000{col 54}{space 4}-3.237563{col 67}{space 3}-1.375865
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.725791{col 26}{space 2} .2567359{col 37}{space 1}   -6.72{col 46}{space 3}0.000{col 54}{space 4}-2.273011{col 67}{space 3}-1.178572
{txt}{space 4}one_cont {c |}{col 14}{res}{space 2}-.3328921{col 26}{space 2} .3193112{col 37}{space 1}   -1.04{col 46}{space 3}0.314{col 54}{space 4}-1.013488{col 67}{space 3} .3477037
{txt}{space 4}two_cont {c |}{col 14}{res}{space 2} .1941801{col 26}{space 2} .3080212{col 37}{space 1}    0.63{col 46}{space 3}0.538{col 54}{space 4}-.4623516{col 67}{space 3} .8507118
{txt}{space 2}three_cont {c |}{col 14}{res}{space 2} .0404391{col 26}{space 2} .3666603{col 37}{space 1}    0.11{col 46}{space 3}0.914{col 54}{space 4}-.7410788{col 67}{space 3} .8219571
{txt}{space 3}four_cont {c |}{col 14}{res}{space 2}  .127684{col 26}{space 2} .3820676{col 37}{space 1}    0.33{col 46}{space 3}0.743{col 54}{space 4}-.6866738{col 67}{space 3} .9420418
{txt}{space 3}five_cont {c |}{col 14}{res}{space 2}-1.047286{col 26}{space 2} .4289887{col 37}{space 1}   -2.44{col 46}{space 3}0.028{col 54}{space 4}-1.961654{col 67}{space 3}-.1329184
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 1.844275{col 26}{space 2}  1.55024{col 37}{space 1}    1.19{col 46}{space 3}0.253{col 54}{space 4}-1.459984{col 67}{space 3} 5.148533
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.0427425{col 26}{space 2} .4040182{col 37}{space 1}   -0.11{col 46}{space 3}0.917{col 54}{space 4}-.9038869{col 67}{space 3} .8184019
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.0531386{col 26}{space 2} .2726175{col 37}{space 1}   -0.19{col 46}{space 3}0.848{col 54}{space 4} -.634209{col 67}{space 3} .5279318
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.4915856{col 26}{space 2} .2838562{col 37}{space 1}   -1.73{col 46}{space 3}0.104{col 54}{space 4}-1.096611{col 67}{space 3} .1134396
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.2011631{col 26}{space 2} .3045491{col 37}{space 1}   -0.66{col 46}{space 3}0.519{col 54}{space 4}-.8502942{col 67}{space 3}  .447968
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2330706{col 26}{space 2} .2900432{col 37}{space 1}   -0.80{col 46}{space 3}0.434{col 54}{space 4} -.851283{col 67}{space 3} .3851418
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0419503{col 26}{space 2} .2876443{col 37}{space 1}    0.15{col 46}{space 3}0.886{col 54}{space 4} -.571149{col 67}{space 3} .6550495
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .3595212{col 26}{space 2} .3473569{col 37}{space 1}    1.04{col 46}{space 3}0.317{col 54}{space 4}-.3808525{col 67}{space 3} 1.099895
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .1886232{col 26}{space 2} .3875732{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-.6374695{col 67}{space 3} 1.014716
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .0725879{col 26}{space 2} .3760577{col 37}{space 1}    0.19{col 46}{space 3}0.850{col 54}{space 4}-.7289601{col 67}{space 3}  .874136
{txt}{space 8}561  {c |}{col 14}{res}{space 2} -.172525{col 26}{space 2} .2883515{col 37}{space 1}   -0.60{col 46}{space 3}0.559{col 54}{space 4}-.7871317{col 67}{space 3} .4420816
{txt}{space 8}562  {c |}{col 14}{res}{space 2}-.0148782{col 26}{space 2}  .320841{col 37}{space 1}   -0.05{col 46}{space 3}0.964{col 54}{space 4}-.6987346{col 67}{space 3} .6689783
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0206692{col 26}{space 2} .3228138{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-.7087306{col 67}{space 3} .6673921
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.7000715{col 26}{space 2} .4404968{col 37}{space 1}   -1.59{col 46}{space 3}0.133{col 54}{space 4}-1.638968{col 67}{space 3} .2388251
{txt}{space 8}565  {c |}{col 14}{res}{space 2} -.283888{col 26}{space 2} .5600509{col 37}{space 1}   -0.51{col 46}{space 3}0.620{col 54}{space 4}-1.477608{col 67}{space 3} .9098321
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.2653028{col 26}{space 2}  .373529{col 37}{space 1}   -0.71{col 46}{space 3}0.488{col 54}{space 4}-1.061461{col 67}{space 3} .5308554
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.4881159{col 26}{space 2} .4480659{col 37}{space 1}   -1.09{col 46}{space 3}0.293{col 54}{space 4}-1.443146{col 67}{space 3} .4669138
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.3810932{col 26}{space 2} .4677261{col 37}{space 1}   -0.81{col 46}{space 3}0.428{col 54}{space 4}-1.378028{col 67}{space 3} .6158414
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.5517656{col 26}{space 2} .4174667{col 37}{space 1}   -1.32{col 46}{space 3}0.206{col 54}{space 4}-1.441575{col 67}{space 3} .3380437
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .1751895{col 26}{space 2} .5082759{col 37}{space 1}    0.34{col 46}{space 3}0.735{col 54}{space 4}-.9081749{col 67}{space 3} 1.258554
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.7102411{col 26}{space 2} .4204515{col 37}{space 1}   -1.69{col 46}{space 3}0.112{col 54}{space 4}-1.606412{col 67}{space 3} .1859299
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.9060049{col 26}{space 2}   .38076{col 37}{space 1}   -2.38{col 46}{space 3}0.031{col 54}{space 4}-1.717576{col 67}{space 3}-.0944342
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.5491984{col 26}{space 2}  .485303{col 37}{space 1}   -1.13{col 46}{space 3}0.276{col 54}{space 4}-1.583597{col 67}{space 3} .4852005
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.4025587{col 26}{space 2} .3971479{col 37}{space 1}   -1.01{col 46}{space 3}0.327{col 54}{space 4}-1.249059{col 67}{space 3} .4439419
{txt}{space 8}575  {c |}{col 14}{res}{space 2}-.1303921{col 26}{space 2} .5452408{col 37}{space 1}   -0.24{col 46}{space 3}0.814{col 54}{space 4}-1.292546{col 67}{space 3} 1.031761
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.8442239{col 26}{space 2} .6339687{col 37}{space 1}   -1.33{col 46}{space 3}0.203{col 54}{space 4}-2.195496{col 67}{space 3} .5070485
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.2960646{col 26}{space 2} .7011803{col 37}{space 1}   -0.42{col 46}{space 3}0.679{col 54}{space 4}-1.790595{col 67}{space 3} 1.198466
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.5852583{col 26}{space 2} .7551675{col 37}{space 1}   -0.78{col 46}{space 3}0.450{col 54}{space 4} -2.19486{col 67}{space 3} 1.024343
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.4321942{col 26}{space 2} .6381242{col 37}{space 1}   -0.68{col 46}{space 3}0.509{col 54}{space 4}-1.792324{col 67}{space 3} .9279353
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .0312421{col 26}{space 2} .5930268{col 37}{space 1}    0.05{col 46}{space 3}0.959{col 54}{space 4}-1.232765{col 67}{space 3} 1.295249
{txt}{space 8}581  {c |}{col 14}{res}{space 2} -.123048{col 26}{space 2}  .579497{col 37}{space 1}   -0.21{col 46}{space 3}0.835{col 54}{space 4}-1.358217{col 67}{space 3} 1.112121
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.0998288{col 26}{space 2} .6173069{col 37}{space 1}   -0.16{col 46}{space 3}0.874{col 54}{space 4}-1.415587{col 67}{space 3}  1.21593
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.2371359{col 26}{space 2} .6830104{col 37}{space 1}   -0.35{col 46}{space 3}0.733{col 54}{space 4}-1.692938{col 67}{space 3} 1.218666
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.0709532{col 26}{space 2} .6670648{col 37}{space 1}   -0.11{col 46}{space 3}0.917{col 54}{space 4}-1.492768{col 67}{space 3} 1.350862
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.1453037{col 26}{space 2} .5388956{col 37}{space 1}   -0.27{col 46}{space 3}0.791{col 54}{space 4}-1.293933{col 67}{space 3} 1.003325
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.2466852{col 26}{space 2} .6234708{col 37}{space 1}   -0.40{col 46}{space 3}0.698{col 54}{space 4}-1.575582{col 67}{space 3} 1.082211
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.4662458{col 26}{space 2} .6961764{col 37}{space 1}   -0.67{col 46}{space 3}0.513{col 54}{space 4}-1.950111{col 67}{space 3} 1.017619
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.4087725{col 26}{space 2} .8096497{col 37}{space 1}   -0.50{col 46}{space 3}0.621{col 54}{space 4}  -2.1345{col 67}{space 3} 1.316955
{txt}{space 8}589  {c |}{col 14}{res}{space 2}  -.21065{col 26}{space 2} .8450064{col 37}{space 1}   -0.25{col 46}{space 3}0.807{col 54}{space 4}-2.011738{col 67}{space 3} 1.590438
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.2821715{col 26}{space 2} .8411848{col 37}{space 1}   -0.34{col 46}{space 3}0.742{col 54}{space 4}-2.075114{col 67}{space 3} 1.510771
{txt}{space 8}591  {c |}{col 14}{res}{space 2} -.867141{col 26}{space 2} .8468725{col 37}{space 1}   -1.02{col 46}{space 3}0.322{col 54}{space 4}-2.672207{col 67}{space 3} .9379249
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.2852574{col 26}{space 2} .7540079{col 37}{space 1}   -0.38{col 46}{space 3}0.710{col 54}{space 4}-1.892387{col 67}{space 3} 1.321872
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .0157321{col 26}{space 2}  .854742{col 37}{space 1}    0.02{col 46}{space 3}0.986{col 54}{space 4}-1.806107{col 67}{space 3} 1.837571
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .0259275{col 26}{space 2} .8184447{col 37}{space 1}    0.03{col 46}{space 3}0.975{col 54}{space 4}-1.718546{col 67}{space 3} 1.770401
{txt}{space 8}595  {c |}{col 14}{res}{space 2} .0209144{col 26}{space 2} .9138583{col 37}{space 1}    0.02{col 46}{space 3}0.982{col 54}{space 4}-1.926928{col 67}{space 3} 1.968757
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.2748949{col 26}{space 2} .7356567{col 37}{space 1}   -0.37{col 46}{space 3}0.714{col 54}{space 4} -1.84291{col 67}{space 3}  1.29312
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.2739692{col 26}{space 2} .8199648{col 37}{space 1}   -0.33{col 46}{space 3}0.743{col 54}{space 4}-2.021683{col 67}{space 3} 1.473744
{txt}{space 8}598  {c |}{col 14}{res}{space 2}-.1607506{col 26}{space 2} .8230799{col 37}{space 1}   -0.20{col 46}{space 3}0.848{col 54}{space 4}-1.915104{col 67}{space 3} 1.593603
{txt}{space 8}599  {c |}{col 14}{res}{space 2}-.3664632{col 26}{space 2} .8246969{col 37}{space 1}   -0.44{col 46}{space 3}0.663{col 54}{space 4}-2.124263{col 67}{space 3} 1.391337
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.3781307{col 26}{space 2}  1.06781{col 37}{space 1}   -0.35{col 46}{space 3}0.728{col 54}{space 4}-2.654114{col 67}{space 3} 1.897852
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-.6211612{col 26}{space 2} 1.039286{col 37}{space 1}   -0.60{col 46}{space 3}0.559{col 54}{space 4}-2.836347{col 67}{space 3} 1.594025
{txt}{space 8}602  {c |}{col 14}{res}{space 2}-.1842086{col 26}{space 2} 1.108852{col 37}{space 1}   -0.17{col 46}{space 3}0.870{col 54}{space 4}-2.547671{col 67}{space 3} 2.179253
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.7762569{col 26}{space 2} 1.011967{col 37}{space 1}   -0.77{col 46}{space 3}0.455{col 54}{space 4}-2.933214{col 67}{space 3}   1.3807
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-.4999981{col 26}{space 2}  1.02189{col 37}{space 1}   -0.49{col 46}{space 3}0.632{col 54}{space 4}-2.678104{col 67}{space 3} 1.678108
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-.1123009{col 26}{space 2} 1.028727{col 37}{space 1}   -0.11{col 46}{space 3}0.915{col 54}{space 4}-2.304981{col 67}{space 3} 2.080379
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-.5090021{col 26}{space 2} 1.050727{col 37}{space 1}   -0.48{col 46}{space 3}0.635{col 54}{space 4}-2.748574{col 67}{space 3} 1.730569
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-.1917149{col 26}{space 2} 1.037436{col 37}{space 1}   -0.18{col 46}{space 3}0.856{col 54}{space 4}-2.402957{col 67}{space 3} 2.019527
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-.3700044{col 26}{space 2} 1.042635{col 37}{space 1}   -0.35{col 46}{space 3}0.728{col 54}{space 4}-2.592329{col 67}{space 3}  1.85232
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-.4020245{col 26}{space 2}  1.16668{col 37}{space 1}   -0.34{col 46}{space 3}0.735{col 54}{space 4}-2.888744{col 67}{space 3} 2.084695
{txt}{space 8}610  {c |}{col 14}{res}{space 2}-.0420799{col 26}{space 2} 1.207021{col 37}{space 1}   -0.03{col 46}{space 3}0.973{col 54}{space 4}-2.614784{col 67}{space 3} 2.530624
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .2116691{col 26}{space 2} 1.011284{col 37}{space 1}    0.21{col 46}{space 3}0.837{col 54}{space 4}-1.943833{col 67}{space 3} 2.367171
{txt}{space 8}612  {c |}{col 14}{res}{space 2} -.495345{col 26}{space 2}  1.35142{col 37}{space 1}   -0.37{col 46}{space 3}0.719{col 54}{space 4}-3.375828{col 67}{space 3} 2.385138
{txt}{space 8}613  {c |}{col 14}{res}{space 2}-.4369979{col 26}{space 2} 1.462944{col 37}{space 1}   -0.30{col 46}{space 3}0.769{col 54}{space 4}-3.555189{col 67}{space 3} 2.681193
{txt}{space 8}614  {c |}{col 14}{res}{space 2}-.5192425{col 26}{space 2} 1.248612{col 37}{space 1}   -0.42{col 46}{space 3}0.683{col 54}{space 4}-3.180595{col 67}{space 3}  2.14211
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-.3450892{col 26}{space 2} 1.365119{col 37}{space 1}   -0.25{col 46}{space 3}0.804{col 54}{space 4}-3.254772{col 67}{space 3} 2.564593
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-.4512123{col 26}{space 2} 1.312215{col 37}{space 1}   -0.34{col 46}{space 3}0.736{col 54}{space 4}-3.248133{col 67}{space 3} 2.345709
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-.9217028{col 26}{space 2}  1.50894{col 37}{space 1}   -0.61{col 46}{space 3}0.550{col 54}{space 4}-4.137933{col 67}{space 3} 2.294528
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-.5613572{col 26}{space 2}  1.27949{col 37}{space 1}   -0.44{col 46}{space 3}0.667{col 54}{space 4}-3.288525{col 67}{space 3} 2.165811
{txt}{space 8}619  {c |}{col 14}{res}{space 2}-.0880504{col 26}{space 2} 1.360589{col 37}{space 1}   -0.06{col 46}{space 3}0.949{col 54}{space 4}-2.988077{col 67}{space 3} 2.811976
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-.3159083{col 26}{space 2} 1.502822{col 37}{space 1}   -0.21{col 46}{space 3}0.836{col 54}{space 4}-3.519098{col 67}{space 3} 2.887281
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-.2110584{col 26}{space 2} 1.278446{col 37}{space 1}   -0.17{col 46}{space 3}0.871{col 54}{space 4}-2.936003{col 67}{space 3} 2.513886
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-.4033319{col 26}{space 2} 1.286791{col 37}{space 1}   -0.31{col 46}{space 3}0.758{col 54}{space 4}-3.146062{col 67}{space 3} 2.339399
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-.4060505{col 26}{space 2} 1.283304{col 37}{space 1}   -0.32{col 46}{space 3}0.756{col 54}{space 4}-3.141348{col 67}{space 3} 2.329248
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-.7363498{col 26}{space 2} 1.525644{col 37}{space 1}   -0.48{col 46}{space 3}0.636{col 54}{space 4}-3.988184{col 67}{space 3} 2.515484
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-.7342218{col 26}{space 2} 1.578147{col 37}{space 1}   -0.47{col 46}{space 3}0.648{col 54}{space 4}-4.097964{col 67}{space 3}  2.62952
{txt}{space 8}626  {c |}{col 14}{res}{space 2}-.4426033{col 26}{space 2}  1.60038{col 37}{space 1}   -0.28{col 46}{space 3}0.786{col 54}{space 4}-3.853732{col 67}{space 3} 2.968525
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-.8502338{col 26}{space 2} 1.575404{col 37}{space 1}   -0.54{col 46}{space 3}0.597{col 54}{space 4}-4.208128{col 67}{space 3}  2.50766
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-1.305298{col 26}{space 2} 1.572002{col 37}{space 1}   -0.83{col 46}{space 3}0.419{col 54}{space 4} -4.65594{col 67}{space 3} 2.045345
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-.9202015{col 26}{space 2} 1.494799{col 37}{space 1}   -0.62{col 46}{space 3}0.547{col 54}{space 4}-4.106291{col 67}{space 3} 2.265888
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-.4615215{col 26}{space 2} 1.532933{col 37}{space 1}   -0.30{col 46}{space 3}0.767{col 54}{space 4}-3.728891{col 67}{space 3} 2.805848
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-1.275553{col 26}{space 2} 1.626185{col 37}{space 1}   -0.78{col 46}{space 3}0.445{col 54}{space 4}-4.741686{col 67}{space 3} 2.190579
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-.7645078{col 26}{space 2} 1.558108{col 37}{space 1}   -0.49{col 46}{space 3}0.631{col 54}{space 4}-4.085536{col 67}{space 3}  2.55652
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-.3030321{col 26}{space 2} 1.461592{col 37}{space 1}   -0.21{col 46}{space 3}0.839{col 54}{space 4}-3.418343{col 67}{space 3} 2.812278
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-.7919408{col 26}{space 2} 1.474805{col 37}{space 1}   -0.54{col 46}{space 3}0.599{col 54}{space 4}-3.935414{col 67}{space 3} 2.351532
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-.5246203{col 26}{space 2} 1.537858{col 37}{space 1}   -0.34{col 46}{space 3}0.738{col 54}{space 4}-3.802486{col 67}{space 3} 2.753246
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-.8853375{col 26}{space 2} 1.734071{col 37}{space 1}   -0.51{col 46}{space 3}0.617{col 54}{space 4}-4.581422{col 67}{space 3} 2.810747
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-1.283999{col 26}{space 2} 1.642129{col 37}{space 1}   -0.78{col 46}{space 3}0.446{col 54}{space 4}-4.784114{col 67}{space 3} 2.216116
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-.3223007{col 26}{space 2} 1.690115{col 37}{space 1}   -0.19{col 46}{space 3}0.851{col 54}{space 4}-3.924697{col 67}{space 3} 3.280095
{txt}{space 8}639  {c |}{col 14}{res}{space 2}-.6834313{col 26}{space 2} 1.659104{col 37}{space 1}   -0.41{col 46}{space 3}0.686{col 54}{space 4}-4.219728{col 67}{space 3} 2.852866
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-.5126959{col 26}{space 2} 1.653644{col 37}{space 1}   -0.31{col 46}{space 3}0.761{col 54}{space 4}-4.037355{col 67}{space 3} 3.011963
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-.5916872{col 26}{space 2} 1.570438{col 37}{space 1}   -0.38{col 46}{space 3}0.712{col 54}{space 4}-3.938997{col 67}{space 3} 2.755622
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-.6766526{col 26}{space 2} 1.574107{col 37}{space 1}   -0.43{col 46}{space 3}0.673{col 54}{space 4}-4.031783{col 67}{space 3} 2.678477
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-.5377185{col 26}{space 2} 1.637159{col 37}{space 1}   -0.33{col 46}{space 3}0.747{col 54}{space 4}-4.027241{col 67}{space 3} 2.951804
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-.8446005{col 26}{space 2} 1.658219{col 37}{space 1}   -0.51{col 46}{space 3}0.618{col 54}{space 4}-4.379011{col 67}{space 3}  2.68981
{txt}{space 8}645  {c |}{col 14}{res}{space 2}-.0262049{col 26}{space 2} 1.783444{col 37}{space 1}   -0.01{col 46}{space 3}0.988{col 54}{space 4}-3.827526{col 67}{space 3} 3.775116
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-.3905725{col 26}{space 2} 1.728359{col 37}{space 1}   -0.23{col 46}{space 3}0.824{col 54}{space 4}-4.074482{col 67}{space 3} 3.293337
{txt}{space 8}647  {c |}{col 14}{res}{space 2}-.2512843{col 26}{space 2}  1.80761{col 37}{space 1}   -0.14{col 46}{space 3}0.891{col 54}{space 4}-4.104115{col 67}{space 3} 3.601546
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-.0701249{col 26}{space 2} 1.991614{col 37}{space 1}   -0.04{col 46}{space 3}0.972{col 54}{space 4} -4.31515{col 67}{space 3}   4.1749
{txt}{space 8}649  {c |}{col 14}{res}{space 2} .1747585{col 26}{space 2} 1.861909{col 37}{space 1}    0.09{col 46}{space 3}0.926{col 54}{space 4}-3.793806{col 67}{space 3} 4.143323
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-.4008388{col 26}{space 2} 1.866802{col 37}{space 1}   -0.21{col 46}{space 3}0.833{col 54}{space 4}-4.379833{col 67}{space 3} 3.578155
{txt}{space 8}651  {c |}{col 14}{res}{space 2} -.547646{col 26}{space 2}   1.8936{col 37}{space 1}   -0.29{col 46}{space 3}0.776{col 54}{space 4}-4.583759{col 67}{space 3} 3.488467
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-.3882602{col 26}{space 2} 1.823029{col 37}{space 1}   -0.21{col 46}{space 3}0.834{col 54}{space 4}-4.273955{col 67}{space 3} 3.497434
{txt}{space 8}653  {c |}{col 14}{res}{space 2} .3508106{col 26}{space 2} 1.934234{col 37}{space 1}    0.18{col 46}{space 3}0.859{col 54}{space 4}-3.771912{col 67}{space 3} 4.473533
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-.0462661{col 26}{space 2} 1.900607{col 37}{space 1}   -0.02{col 46}{space 3}0.981{col 54}{space 4}-4.097314{col 67}{space 3} 4.004782
{txt}{space 8}655  {c |}{col 14}{res}{space 2}-.0413408{col 26}{space 2} 1.879322{col 37}{space 1}   -0.02{col 46}{space 3}0.983{col 54}{space 4} -4.04702{col 67}{space 3} 3.964338
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-.2012193{col 26}{space 2} 1.863996{col 37}{space 1}   -0.11{col 46}{space 3}0.915{col 54}{space 4}-4.174232{col 67}{space 3} 3.771793
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-.3899105{col 26}{space 2} 1.984805{col 37}{space 1}   -0.20{col 46}{space 3}0.847{col 54}{space 4}-4.620422{col 67}{space 3} 3.840601
{txt}{space 8}658  {c |}{col 14}{res}{space 2}-.7119211{col 26}{space 2} 2.344661{col 37}{space 1}   -0.30{col 46}{space 3}0.766{col 54}{space 4}-5.709448{col 67}{space 3} 4.285605
{txt}{space 8}659  {c |}{col 14}{res}{space 2} -.169703{col 26}{space 2} 1.845309{col 37}{space 1}   -0.09{col 46}{space 3}0.928{col 54}{space 4}-4.102886{col 67}{space 3}  3.76348
{txt}{space 8}660  {c |}{col 14}{res}{space 2} -.655775{col 26}{space 2} 2.150139{col 37}{space 1}   -0.30{col 46}{space 3}0.765{col 54}{space 4}-5.238689{col 67}{space 3} 3.927139
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-.6202483{col 26}{space 2} 2.003601{col 37}{space 1}   -0.31{col 46}{space 3}0.761{col 54}{space 4}-4.890823{col 67}{space 3} 3.650326
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-.0908088{col 26}{space 2} 2.055174{col 37}{space 1}   -0.04{col 46}{space 3}0.965{col 54}{space 4}-4.471309{col 67}{space 3} 4.289692
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-.6321306{col 26}{space 2} 1.944429{col 37}{space 1}   -0.33{col 46}{space 3}0.750{col 54}{space 4}-4.776583{col 67}{space 3} 3.512322
{txt}{space 8}664  {c |}{col 14}{res}{space 2} -.409249{col 26}{space 2} 1.979152{col 37}{space 1}   -0.21{col 46}{space 3}0.839{col 54}{space 4}-4.627711{col 67}{space 3} 3.809213
{txt}{space 8}665  {c |}{col 14}{res}{space 2}-.0349298{col 26}{space 2} 2.013872{col 37}{space 1}   -0.02{col 46}{space 3}0.986{col 54}{space 4}-4.327397{col 67}{space 3} 4.257538
{txt}{space 8}666  {c |}{col 14}{res}{space 2}-.0789541{col 26}{space 2} 1.967175{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-4.271888{col 67}{space 3}  4.11398
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-.2403463{col 26}{space 2} 1.957514{col 37}{space 1}   -0.12{col 46}{space 3}0.904{col 54}{space 4}-4.412689{col 67}{space 3} 3.931997
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-.3785961{col 26}{space 2} 2.026196{col 37}{space 1}   -0.19{col 46}{space 3}0.854{col 54}{space 4}-4.697331{col 67}{space 3} 3.940139
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-.2631072{col 26}{space 2} 1.989667{col 37}{space 1}   -0.13{col 46}{space 3}0.897{col 54}{space 4}-4.503983{col 67}{space 3} 3.977768
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-.5321347{col 26}{space 2} 1.899624{col 37}{space 1}   -0.28{col 46}{space 3}0.783{col 54}{space 4}-4.581088{col 67}{space 3} 3.516819
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-.2408484{col 26}{space 2} 1.895358{col 37}{space 1}   -0.13{col 46}{space 3}0.901{col 54}{space 4}-4.280709{col 67}{space 3} 3.799012
{txt}{space 8}672  {c |}{col 14}{res}{space 2}-.4241873{col 26}{space 2} 1.994153{col 37}{space 1}   -0.21{col 46}{space 3}0.834{col 54}{space 4}-4.674625{col 67}{space 3}  3.82625
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-.2923322{col 26}{space 2}  2.00605{col 37}{space 1}   -0.15{col 46}{space 3}0.886{col 54}{space 4}-4.568126{col 67}{space 3} 3.983462
{txt}{space 8}674  {c |}{col 14}{res}{space 2}-.1271179{col 26}{space 2} 2.051196{col 37}{space 1}   -0.06{col 46}{space 3}0.951{col 54}{space 4}-4.499139{col 67}{space 3} 4.244903
{txt}{space 8}675  {c |}{col 14}{res}{space 2}  .234639{col 26}{space 2} 2.050427{col 37}{space 1}    0.11{col 46}{space 3}0.910{col 54}{space 4}-4.135743{col 67}{space 3} 4.605021
{txt}{space 8}676  {c |}{col 14}{res}{space 2} .2948147{col 26}{space 2} 2.093456{col 37}{space 1}    0.14{col 46}{space 3}0.890{col 54}{space 4}-4.167282{col 67}{space 3} 4.756911
{txt}{space 8}677  {c |}{col 14}{res}{space 2}-.0199896{col 26}{space 2} 2.038707{col 37}{space 1}   -0.01{col 46}{space 3}0.992{col 54}{space 4} -4.36539{col 67}{space 3} 4.325411
{txt}{space 8}678  {c |}{col 14}{res}{space 2} .2061559{col 26}{space 2} 2.062898{col 37}{space 1}    0.10{col 46}{space 3}0.922{col 54}{space 4}-4.190808{col 67}{space 3} 4.603119
{txt}{space 8}679  {c |}{col 14}{res}{space 2} .3033585{col 26}{space 2}   2.0514{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-4.069098{col 67}{space 3} 4.675815
{txt}{space 8}680  {c |}{col 14}{res}{space 2} .3544891{col 26}{space 2} 2.075292{col 37}{space 1}    0.17{col 46}{space 3}0.867{col 54}{space 4}-4.068891{col 67}{space 3} 4.777869
{txt}{space 8}681  {c |}{col 14}{res}{space 2} .3661119{col 26}{space 2} 2.035839{col 37}{space 1}    0.18{col 46}{space 3}0.860{col 54}{space 4}-3.973176{col 67}{space 3} 4.705399
{txt}{space 8}682  {c |}{col 14}{res}{space 2} .0262615{col 26}{space 2} 2.031074{col 37}{space 1}    0.01{col 46}{space 3}0.990{col 54}{space 4} -4.30287{col 67}{space 3} 4.355393
{txt}{space 8}683  {c |}{col 14}{res}{space 2}-.1317048{col 26}{space 2} 2.083374{col 37}{space 1}   -0.06{col 46}{space 3}0.950{col 54}{space 4}-4.572312{col 67}{space 3} 4.308902
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-.0626264{col 26}{space 2} 2.297774{col 37}{space 1}   -0.03{col 46}{space 3}0.979{col 54}{space 4}-4.960215{col 67}{space 3} 4.834962
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-.2428765{col 26}{space 2} 2.221698{col 37}{space 1}   -0.11{col 46}{space 3}0.914{col 54}{space 4}-4.978313{col 67}{space 3}  4.49256
{txt}{space 8}686  {c |}{col 14}{res}{space 2}-.2492023{col 26}{space 2} 2.276048{col 37}{space 1}   -0.11{col 46}{space 3}0.914{col 54}{space 4}-5.100484{col 67}{space 3}  4.60208
{txt}{space 8}687  {c |}{col 14}{res}{space 2} .0907434{col 26}{space 2} 2.180451{col 37}{space 1}    0.04{col 46}{space 3}0.967{col 54}{space 4}-4.556777{col 67}{space 3} 4.738264
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-.2033032{col 26}{space 2} 2.264057{col 37}{space 1}   -0.09{col 46}{space 3}0.930{col 54}{space 4}-5.029027{col 67}{space 3}  4.62242
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-.2243828{col 26}{space 2} 2.257621{col 37}{space 1}   -0.10{col 46}{space 3}0.922{col 54}{space 4}-5.036388{col 67}{space 3} 4.587623
{txt}{space 8}690  {c |}{col 14}{res}{space 2}-.5078406{col 26}{space 2} 2.262059{col 37}{space 1}   -0.22{col 46}{space 3}0.825{col 54}{space 4}-5.329306{col 67}{space 3} 4.313624
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-.3621172{col 26}{space 2} 2.253933{col 37}{space 1}   -0.16{col 46}{space 3}0.875{col 54}{space 4}-5.166262{col 67}{space 3} 4.442027
{txt}{space 8}692  {c |}{col 14}{res}{space 2}-.1834717{col 26}{space 2} 2.255385{col 37}{space 1}   -0.08{col 46}{space 3}0.936{col 54}{space 4}-4.990711{col 67}{space 3} 4.623768
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-.2758199{col 26}{space 2}  2.22871{col 37}{space 1}   -0.12{col 46}{space 3}0.903{col 54}{space 4}-5.026203{col 67}{space 3} 4.474563
{txt}{space 8}694  {c |}{col 14}{res}{space 2}-.1909491{col 26}{space 2} 2.286108{col 37}{space 1}   -0.08{col 46}{space 3}0.935{col 54}{space 4}-5.063673{col 67}{space 3} 4.681775
{txt}{space 8}695  {c |}{col 14}{res}{space 2}-.4014403{col 26}{space 2} 2.248111{col 37}{space 1}   -0.18{col 46}{space 3}0.861{col 54}{space 4}-5.193176{col 67}{space 3} 4.390296
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-.2738776{col 26}{space 2} 2.333162{col 37}{space 1}   -0.12{col 46}{space 3}0.908{col 54}{space 4}-5.246895{col 67}{space 3}  4.69914
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-.3141042{col 26}{space 2} 2.318454{col 37}{space 1}   -0.14{col 46}{space 3}0.894{col 54}{space 4}-5.255772{col 67}{space 3} 4.627564
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-.2560127{col 26}{space 2} 2.333545{col 37}{space 1}   -0.11{col 46}{space 3}0.914{col 54}{space 4}-5.229846{col 67}{space 3}  4.71782
{txt}{space 8}699  {c |}{col 14}{res}{space 2}-.4629687{col 26}{space 2} 2.344135{col 37}{space 1}   -0.20{col 46}{space 3}0.846{col 54}{space 4}-5.459374{col 67}{space 3} 4.533437
{txt}{space 8}700  {c |}{col 14}{res}{space 2}-.1868754{col 26}{space 2} 2.334678{col 37}{space 1}   -0.08{col 46}{space 3}0.937{col 54}{space 4}-5.163124{col 67}{space 3} 4.789374
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-.5513537{col 26}{space 2} 2.332389{col 37}{space 1}   -0.24{col 46}{space 3}0.816{col 54}{space 4}-5.522722{col 67}{space 3} 4.420015
{txt}{space 8}702  {c |}{col 14}{res}{space 2}-.7563148{col 26}{space 2} 2.395563{col 37}{space 1}   -0.32{col 46}{space 3}0.757{col 54}{space 4}-5.862337{col 67}{space 3} 4.349707
{txt}{space 8}703  {c |}{col 14}{res}{space 2}-.1788837{col 26}{space 2} 2.310717{col 37}{space 1}   -0.08{col 46}{space 3}0.939{col 54}{space 4}-5.104061{col 67}{space 3} 4.746293
{txt}{space 8}704  {c |}{col 14}{res}{space 2} .0658125{col 26}{space 2} 2.284772{col 37}{space 1}    0.03{col 46}{space 3}0.977{col 54}{space 4}-4.804064{col 67}{space 3} 4.935689
{txt}{space 8}705  {c |}{col 14}{res}{space 2} .1288781{col 26}{space 2} 2.321291{col 37}{space 1}    0.06{col 46}{space 3}0.956{col 54}{space 4}-4.818837{col 67}{space 3} 5.076593
{txt}{space 8}706  {c |}{col 14}{res}{space 2} .0436525{col 26}{space 2} 2.322631{col 37}{space 1}    0.02{col 46}{space 3}0.985{col 54}{space 4}-4.906918{col 67}{space 3} 4.994223
{txt}{space 8}707  {c |}{col 14}{res}{space 2} -.080555{col 26}{space 2} 2.408065{col 37}{space 1}   -0.03{col 46}{space 3}0.974{col 54}{space 4}-5.213225{col 67}{space 3} 5.052115
{txt}{space 8}708  {c |}{col 14}{res}{space 2} .2734987{col 26}{space 2} 2.587151{col 37}{space 1}    0.11{col 46}{space 3}0.917{col 54}{space 4}-5.240883{col 67}{space 3} 5.787881
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-.3156065{col 26}{space 2} 2.625858{col 37}{space 1}   -0.12{col 46}{space 3}0.906{col 54}{space 4}-5.912491{col 67}{space 3} 5.281278
{txt}{space 8}710  {c |}{col 14}{res}{space 2}-.0024052{col 26}{space 2} 2.545408{col 37}{space 1}   -0.00{col 46}{space 3}0.999{col 54}{space 4}-5.427813{col 67}{space 3} 5.423003
{txt}{space 8}711  {c |}{col 14}{res}{space 2} .3190783{col 26}{space 2} 2.525792{col 37}{space 1}    0.13{col 46}{space 3}0.901{col 54}{space 4} -5.06452{col 67}{space 3} 5.702677
{txt}{space 8}712  {c |}{col 14}{res}{space 2}-.0940199{col 26}{space 2} 2.574118{col 37}{space 1}   -0.04{col 46}{space 3}0.971{col 54}{space 4}-5.580622{col 67}{space 3} 5.392582
{txt}{space 8}713  {c |}{col 14}{res}{space 2} .3672082{col 26}{space 2} 2.535967{col 37}{space 1}    0.14{col 46}{space 3}0.887{col 54}{space 4}-5.038077{col 67}{space 3} 5.772493
{txt}{space 8}714  {c |}{col 14}{res}{space 2} .0232043{col 26}{space 2} 2.548356{col 37}{space 1}    0.01{col 46}{space 3}0.993{col 54}{space 4}-5.408488{col 67}{space 3} 5.454897
{txt}{space 8}715  {c |}{col 14}{res}{space 2} .0380769{col 26}{space 2} 2.542762{col 37}{space 1}    0.01{col 46}{space 3}0.988{col 54}{space 4}-5.381693{col 67}{space 3} 5.457846
{txt}{space 8}716  {c |}{col 14}{res}{space 2}-.0594267{col 26}{space 2} 2.560418{col 37}{space 1}   -0.02{col 46}{space 3}0.982{col 54}{space 4}-5.516829{col 67}{space 3} 5.397976
{txt}{space 8}717  {c |}{col 14}{res}{space 2}-.2126184{col 26}{space 2} 2.531939{col 37}{space 1}   -0.08{col 46}{space 3}0.934{col 54}{space 4}-5.609319{col 67}{space 3} 5.184082
{txt}{space 8}718  {c |}{col 14}{res}{space 2} .1642929{col 26}{space 2} 2.521045{col 37}{space 1}    0.07{col 46}{space 3}0.949{col 54}{space 4}-5.209187{col 67}{space 3} 5.537772
{txt}{space 8}719  {c |}{col 14}{res}{space 2} .0232867{col 26}{space 2} 2.572529{col 37}{space 1}    0.01{col 46}{space 3}0.993{col 54}{space 4}-5.459928{col 67}{space 3} 5.506501
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.637494{col 26}{space 2} .3705742{col 37}{space 1}    4.42{col 46}{space 3}0.000{col 54}{space 4} .8476333{col 67}{space 3} 2.427354
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.478254{col 26}{space 2} 1.168118{col 37}{space 1}   -1.27{col 46}{space 3}0.225{col 54}{space 4}-3.968039{col 67}{space 3} 1.011532
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-.4002249{col 26}{space 2} 1.652418{col 37}{space 1}   -0.24{col 46}{space 3}0.812{col 54}{space 4}-3.922271{col 67}{space 3} 3.121821
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.5828883{col 26}{space 2} .2954097{col 37}{space 1}   -1.97{col 46}{space 3}0.067{col 54}{space 4}-1.212539{col 67}{space 3} .0467625
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.026041{col 26}{space 2} .1539103{col 37}{space 1}    6.67{col 46}{space 3}0.000{col 54}{space 4} .6979893{col 67}{space 3} 1.354094
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} .8231296{col 26}{space 2} 1.744575{col 37}{space 1}    0.47{col 46}{space 3}0.644{col 54}{space 4}-2.895343{col 67}{space 3} 4.541602
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 1.113774{col 26}{space 2} .8604415{col 37}{space 1}    1.29{col 46}{space 3}0.215{col 54}{space 4} -.720214{col 67}{space 3} 2.947761
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.061524{col 26}{space 2} .7825487{col 37}{space 1}   -2.63{col 46}{space 3}0.019{col 54}{space 4}-3.729487{col 67}{space 3}-.3935606
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-2.237994{col 26}{space 2} .9055884{col 37}{space 1}   -2.47{col 46}{space 3}0.026{col 54}{space 4} -4.16821{col 67}{space 3}-.3077783
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.337388{col 26}{space 2} 1.060313{col 37}{space 1}   -1.26{col 46}{space 3}0.226{col 54}{space 4}-3.597391{col 67}{space 3} .9226153
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 2.083826{col 26}{space 2} .5475875{col 37}{space 1}    3.81{col 46}{space 3}0.002{col 54}{space 4} .9166709{col 67}{space 3} 3.250981
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} .1532614{col 26}{space 2} 1.034112{col 37}{space 1}    0.15{col 46}{space 3}0.884{col 54}{space 4}-2.050897{col 67}{space 3}  2.35742
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 3.275179{col 26}{space 2} 1.222456{col 37}{space 1}    2.68{col 46}{space 3}0.017{col 54}{space 4} .6695758{col 67}{space 3} 5.880783
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} 2.007152{col 26}{space 2} 4.758064{col 37}{space 1}    0.42{col 46}{space 3}0.679{col 54}{space 4}-8.134421{col 67}{space 3} 12.14872
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} 1.157609{col 26}{space 2} 1.652618{col 37}{space 1}    0.70{col 46}{space 3}0.494{col 54}{space 4}-2.364864{col 67}{space 3} 4.680081
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-18.74338{col 26}{space 2} 20.15111{col 37}{space 1}   -0.93{col 46}{space 3}0.367{col 54}{space 4}-61.69445{col 67}{space 3} 24.20769
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

Warning: 580 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 28}t(15) = {res}   -5.4589
{col 25}{txt}Prob>|t| = {res}    0.0222

95%{txt} confidence set for null hypothesis expression: [{res}-3.961{txt}, {res}-1.279{txt}]
{res}
Warning: 47 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 28}t(15) = {res}   -3.6587
{col 25}{txt}Prob>|t| = {res}    0.0085

95%{txt} confidence set for null hypothesis expression: [{res}-3.86{txt}, {res}-.9904{txt}]
{res}
Warning: 23 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 28}t(15) = {res}   -4.8920
{col 25}{txt}Prob>|t| = {res}    0.0057

95%{txt} confidence set for null hypothesis expression: [{res}-4.474{txt}, {res}-1.55{txt}]
{res}
Warning: 31 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 28}t(15) = {res}   -5.2859
{col 25}{txt}Prob>|t| = {res}    0.0055

95%{txt} confidence set for null hypothesis expression: [{res}-3.267{txt}, {res}-1.374{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 28}t(15) = {res}   -6.6428
{col 25}{txt}Prob>|t| = {res}    0.0171

95%{txt} confidence set for null hypothesis expression: [{res}-2.686{txt}, {res}-.7073{txt}]
{res}
Warning: 55 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one_cont

{txt}{col 28}t(15) = {res}   -1.0598
{col 25}{txt}Prob>|t| = {res}    0.3523

95%{txt} confidence set for null hypothesis expression: [{res}-1.25{txt}, {res}.5636{txt}]
{res}
Warning: 15 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two_cont

{txt}{col 28}t(15) = {res}    0.6171
{col 25}{txt}Prob>|t| = {res}    0.6002

95%{txt} confidence set for null hypothesis expression: [{res}-.6896{txt}, {res}1.097{txt}]
{res}
Warning: 62 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three_cont

{txt}{col 28}t(15) = {res}    0.1122
{col 25}{txt}Prob>|t| = {res}    0.9340

95%{txt} confidence set for null hypothesis expression: [{res}-1.184{txt}, {res}1.273{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four_cont

{txt}{col 28}t(15) = {res}    0.3354
{col 25}{txt}Prob>|t| = {res}    0.7412

95%{txt} confidence set for null hypothesis expression: [{res}-.7933{txt}, {res}.9614{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five_cont

{txt}{col 28}t(15) = {res}   -2.4651
{col 25}{txt}Prob>|t| = {res}    0.2727

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)
{txt}
{com}. 
. 
. mat list p_val4
{res}
{txt}p_val4[10,10]
       c1    c2    c3    c4    c5    c6    c7    c8    c9   c10
 r1 {res} .004  .018  .022  .012  .008  .021  .015  .005  .009  .022
{txt} r2 {res}  .06  .005  .012  .012  .003  .006  .006  .076  .013  .009
{txt} r3 {res} .006  .004  .002  .002  .002  .004  .002  .005  .004  .006
{txt} r4 {res} .002  .002  .005  .009   .01  .001  .011  .003     0  .006
{txt} r5 {res} .067  .165  .003  .028  .024  .011  .006  .035  .047  .017
{txt} r6 {res} .026  .048  .072  .076  .049  .718  .062  .199  .017  .352
{txt} r7 {res} .611  .464  .905  .857  .653  .732   .57  .764  .571    .6
{txt} r8 {res}  .84  .667  .291  .644  .614  .349    .6  .506  .193  .934
{txt} r9 {res} .522  .681  .002  .059  .089  .747  .018  .485  .665  .741
{txt}r10 {res}  .64  .864  .067  .488  .292  .496  .105  .974  .301  .273
{reset}
{com}. 
. outtable using _3results/tables/p_val4, mat(p_val4) replace format(%9.3f) norow nodots
{txt}
{com}. 
. 
. esttab _all using _3results/tables/table4.tex, rename(one_damages_cum_past20 one_spil two_damages_cum_past20 two_spil ///
>         three_damages_cum_past20 three_spil four_damages_cum_past20 four_spil five_damages_cum_past20 five_spil ///
>     one_number_major2_past20 one_spil two_number_major2_past20 two_spil three_number_major2_past20 three_spil ///
>         four_number_major2_past20 four_spil five_number_major2_past20 five_spil ///
>     one_cont one_spil one_distance one_spil one_density one_spil one_urban one_spil ///
>         one_water_s one_spil one_elec_s one_spil one_lat_s one_spil one_gq one_spil one_port one_spil ///
>         one_lit_s one_spil one_grad_s one_spil one_manu_s one_spil one_retail_s one_spil one_sim one_spil ///
>         two_cont two_spil two_distance two_spil two_density two_spil two_urban two_spil ///
>         two_water_s two_spil two_elec_s two_spil two_lat_s two_spil two_gq two_spil two_port two_spil ///
>         two_lit_s two_spil two_grad_s two_spil two_manu_s two_spil two_retail_s two_spil two_sim two_spil ///
>         three_cont three_spil three_distance three_spil three_density three_spil three_urban three_spil ///
>         three_water_s three_spil three_elec_s three_spil three_lat_s three_spil three_gq three_spil three_port three_spil ///
>         three_lit_s three_spil three_grad_s three_spil three_manu_s three_spil three_retail_s three_spil three_sim three_spil ///
>         four_cont four_spil four_distance four_spil four_density four_spil four_urban four_spil ///
>         four_water_s four_spil four_elec_s four_spil four_lat_s four_spil four_gq four_spil four_port four_spil ///
>         four_lit_s four_spil four_grad_s four_spil four_manu_s four_spil four_retail_s four_spil four_sim four_spil ///
>         five_cont five_spil five_distance five_spil five_density five_spil five_urban five_spil ///
>         five_water_s five_spil five_elec_s five_spil five_lat_s five_spil five_gq five_spil five_port five_spil ///
>         five_lit_s five_spil five_grad_s five_spil five_manu_s five_spil five_retail_s five_spil five_sim five_spil) ///
>         order(one two three four five one_spil two_spil three_spil four_spil five_spil) replace nostar r2 b(3) p(3)
{res}{txt}(output written to {browse  `"_3results/tables/table4.tex"'})

{com}.         
.         
. 
. 
. 
. 
. 
. 
. 
. 
{txt}end of do-file

{com}. do _2code/_2analysis/tableB1
{txt}
{com}. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. ** Regression of IHS FDI with Year and Month fixed effects
. * USING ONLY CENTROIDS OF FLOODS/STORMS AS TREATED REGION
. 
. ** Merge centroid regions:
. merge m:1 region using _1data/raw/disasters/centroid_regions.dta
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             344
{txt}{col 9}from master{col 30}{res}             342{txt}  (_merge==1)
{col 9}from using{col 30}{res}               2{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           2,394{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop _merge
{txt}
{com}. 
. ** redefine treatment variables:
. drop one two three four five
{txt}
{com}. 
. gen one = one_bin*one_centroid 
{txt}(344 missing values generated)

{com}. gen two = two_bin*two_centroid 
{txt}(344 missing values generated)

{com}. gen three = three_bin*three_centroid 
{txt}(344 missing values generated)

{com}. gen four = four_bin*four_centroid 
{txt}(344 missing values generated)

{com}. gen five = five_bin*five_centroid
{txt}(344 missing values generated)

{com}. 
. ** Set the control variables:
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. ** Identify regions partially affected:
. gen partial = 0
{txt}
{com}. foreach x in "one" "two" "three" "four" "five" {c -(}
{txt}  2{com}. replace partial=1 if `x'_affected==1 & `x'_centroid==0
{txt}  3{com}. {c )-}
{txt}(171 real changes made)
(0 real changes made)
(342 real changes made)
(171 real changes made)
(0 real changes made)

{com}. 
. ** Set up matrix:
. mat p_val=J(8,6,.)
{txt}
{com}. estimates clear
{res}{txt}
{com}. local j=1
{txt}
{com}. foreach x in "one" "two" "three" "four" "five" "one two three four five" {c -(}
{txt}  2{com}. reg fdi_ihs `x' $control i.date i.region1 if partial==0, cluster(region1)
{txt}  3{com}. 
. if "`x'"=="one" {c -(}
{txt}  4{com}. boottest {c -(}one{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt}  5{com}. mat p_val[1,1]=r(p_1)
{txt}  6{com}. mat p_val[6,1]=r(p_2)
{txt}  7{com}. mat p_val[7,1]=r(p_3)
{txt}  8{com}. mat p_val[8,1]=r(p_4)
{txt}  9{com}. {c )-}
{txt} 10{com}. 
. if "`x'"=="two" {c -(}
{txt} 11{com}. boottest {c -(}two{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 12{com}. mat p_val[2,2]=r(p_1)
{txt} 13{com}. mat p_val[6,2]=r(p_2)
{txt} 14{com}. mat p_val[7,2]=r(p_3)
{txt} 15{com}. mat p_val[8,2]=r(p_4)
{txt} 16{com}. {c )-}
{txt} 17{com}. if "`x'"=="three" {c -(}
{txt} 18{com}. boottest {c -(}three{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 19{com}. mat p_val[3,3]=r(p_1)
{txt} 20{com}. mat p_val[6,3]=r(p_2)
{txt} 21{com}. mat p_val[7,3]=r(p_3)
{txt} 22{com}. mat p_val[8,3]=r(p_4)
{txt} 23{com}. {c )-}
{txt} 24{com}. if "`x'"=="four" {c -(}
{txt} 25{com}. boottest {c -(}four{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-},  reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 26{com}. mat p_val[4,4]=r(p_1)
{txt} 27{com}. mat p_val[6,4]=r(p_2)
{txt} 28{com}. mat p_val[7,4]=r(p_3)
{txt} 29{com}. mat p_val[8,4]=r(p_4)
{txt} 30{com}. {c )-}
{txt} 31{com}. if "`x'"=="five" {c -(}
{txt} 32{com}. boottest {c -(}five{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 33{com}. mat p_val[5,5]=r(p_1)
{txt} 34{com}. mat p_val[6,5]=r(p_2)
{txt} 35{com}. mat p_val[7,5]=r(p_3)
{txt} 36{com}. mat p_val[8,5]=r(p_4)
{txt} 37{com}. {c )-}
{txt} 38{com}. if "`x'"=="one two three four five" {c -(}
{txt} 39{com}. boottest {c -(}one{c )-} {c -(}two{c )-} {c -(}three{c )-} {c -(}four{c )-} {c -(}five{c )-} {c -(}lag_lgdp{c )-} {c -(}lag_lpop{c )-} {c -(}_cons{c )-}, reps(9999) gridpoints(10) cluster(region1 date) bootcluster(region1 date) nograph seed(123)
{txt} 40{com}. mat p_val[1,6]=r(p_1)
{txt} 41{com}. mat p_val[2,6]=r(p_2)
{txt} 42{com}. mat p_val[3,6]=r(p_3)
{txt} 43{com}. mat p_val[4,6]=r(p_4)
{txt} 44{com}. mat p_val[5,6]=r(p_5)
{txt} 45{com}. mat p_val[6,6]=r(p_6)
{txt} 46{com}. mat p_val[7,6]=r(p_7)
{txt} 47{com}. mat p_val[8,6]=r(p_8)
{txt} 48{com}. {c )-}
{txt} 49{com}. 
. eststo tb1_`j'
{txt} 50{com}. local j=`j'+1
{txt} 51{com}. 
. {c )-}

{txt}Linear regression                               Number of obs     = {res}     1,680
                                                {txt}{help j_robustsingular:F(8, 9) }          =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8123
                                                {txt}Root MSE          =    {res} 1.1395

{txt}{ralign 78:(Std. err. adjusted for {res:10} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-4.560162{col 26}{space 2} .3075894{col 37}{space 1}  -14.83{col 46}{space 3}0.000{col 54}{space 4}-5.255978{col 67}{space 3}-3.864347
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} .5008141{col 26}{space 2} 1.610735{col 37}{space 1}    0.31{col 46}{space 3}0.763{col 54}{space 4}-3.142922{col 67}{space 3}  4.14455
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .0777345{col 26}{space 2} .5294182{col 37}{space 1}    0.15{col 46}{space 3}0.887{col 54}{space 4}-1.119893{col 67}{space 3} 1.275362
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}  .341176{col 26}{space 2} .3187671{col 37}{space 1}    1.07{col 46}{space 3}0.312{col 54}{space 4}-.3799252{col 67}{space 3} 1.062277
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.1628449{col 26}{space 2} .3295322{col 37}{space 1}   -0.49{col 46}{space 3}0.633{col 54}{space 4}-.9082986{col 67}{space 3} .5826088
{txt}{space 8}555  {c |}{col 14}{res}{space 2} .1900673{col 26}{space 2} .2630896{col 37}{space 1}    0.72{col 46}{space 3}0.488{col 54}{space 4}-.4050827{col 67}{space 3} .7852173
{txt}{space 8}556  {c |}{col 14}{res}{space 2} .0918941{col 26}{space 2} .3905814{col 37}{space 1}    0.24{col 46}{space 3}0.819{col 54}{space 4}-.7916624{col 67}{space 3} .9754506
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .2113414{col 26}{space 2} .4370946{col 37}{space 1}    0.48{col 46}{space 3}0.640{col 54}{space 4}-.7774354{col 67}{space 3} 1.200118
{txt}{space 8}558  {c |}{col 14}{res}{space 2}  .772518{col 26}{space 2} .4601662{col 37}{space 1}    1.68{col 46}{space 3}0.128{col 54}{space 4}-.2684503{col 67}{space 3} 1.813486
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .3085577{col 26}{space 2} .5618239{col 37}{space 1}    0.55{col 46}{space 3}0.596{col 54}{space 4}-.9623763{col 67}{space 3} 1.579492
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .4590527{col 26}{space 2}  .410937{col 37}{space 1}    1.12{col 46}{space 3}0.293{col 54}{space 4}-.4705514{col 67}{space 3} 1.388657
{txt}{space 8}561  {c |}{col 14}{res}{space 2}-.0292869{col 26}{space 2} .4052936{col 37}{space 1}   -0.07{col 46}{space 3}0.944{col 54}{space 4}-.9461247{col 67}{space 3} .8875508
{txt}{space 8}562  {c |}{col 14}{res}{space 2} .4496955{col 26}{space 2} .3896151{col 37}{space 1}    1.15{col 46}{space 3}0.278{col 54}{space 4}-.4316751{col 67}{space 3} 1.331066
{txt}{space 8}563  {c |}{col 14}{res}{space 2} .3459176{col 26}{space 2} .3895354{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4}-.5352727{col 67}{space 3} 1.227108
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.0332992{col 26}{space 2} .5001251{col 37}{space 1}   -0.07{col 46}{space 3}0.948{col 54}{space 4}-1.164661{col 67}{space 3} 1.098062
{txt}{space 8}565  {c |}{col 14}{res}{space 2} .3478673{col 26}{space 2} .6145033{col 37}{space 1}    0.57{col 46}{space 3}0.585{col 54}{space 4}-1.042236{col 67}{space 3}  1.73797
{txt}{space 8}566  {c |}{col 14}{res}{space 2} .1189077{col 26}{space 2} .4482332{col 37}{space 1}    0.27{col 46}{space 3}0.797{col 54}{space 4}-.8950662{col 67}{space 3} 1.132882
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.0257131{col 26}{space 2} .4862984{col 37}{space 1}   -0.05{col 46}{space 3}0.959{col 54}{space 4}-1.125796{col 67}{space 3}  1.07437
{txt}{space 8}568  {c |}{col 14}{res}{space 2} .0506418{col 26}{space 2} .4766238{col 37}{space 1}    0.11{col 46}{space 3}0.918{col 54}{space 4}-1.027556{col 67}{space 3}  1.12884
{txt}{space 8}569  {c |}{col 14}{res}{space 2}  .023844{col 26}{space 2} .3508543{col 37}{space 1}    0.07{col 46}{space 3}0.947{col 54}{space 4}-.7698435{col 67}{space 3} .8175314
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .8497483{col 26}{space 2} .5031688{col 37}{space 1}    1.69{col 46}{space 3}0.126{col 54}{space 4}-.2884987{col 67}{space 3} 1.987995
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.2155944{col 26}{space 2} .5176133{col 37}{space 1}   -0.42{col 46}{space 3}0.687{col 54}{space 4}-1.386517{col 67}{space 3} .9553281
{txt}{space 8}572  {c |}{col 14}{res}{space 2}  -.43417{col 26}{space 2} .5624663{col 37}{space 1}   -0.77{col 46}{space 3}0.460{col 54}{space 4}-1.706557{col 67}{space 3} .8382172
{txt}{space 8}573  {c |}{col 14}{res}{space 2} .0086591{col 26}{space 2} .5882059{col 37}{space 1}    0.01{col 46}{space 3}0.989{col 54}{space 4}-1.321955{col 67}{space 3} 1.339273
{txt}{space 8}574  {c |}{col 14}{res}{space 2} .1144551{col 26}{space 2} .5092172{col 37}{space 1}    0.22{col 46}{space 3}0.827{col 54}{space 4}-1.037474{col 67}{space 3} 1.266384
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .6701823{col 26}{space 2}   .62619{col 37}{space 1}    1.07{col 46}{space 3}0.312{col 54}{space 4}-.7463578{col 67}{space 3} 2.086722
{txt}{space 8}576  {c |}{col 14}{res}{space 2} .0784029{col 26}{space 2} .4941195{col 37}{space 1}    0.16{col 46}{space 3}0.877{col 54}{space 4}-1.039373{col 67}{space 3} 1.196179
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .5488171{col 26}{space 2}  .934459{col 37}{space 1}    0.59{col 46}{space 3}0.571{col 54}{space 4}-1.565076{col 67}{space 3}  2.66271
{txt}{space 8}578  {c |}{col 14}{res}{space 2}  .611315{col 26}{space 2} .6712841{col 37}{space 1}    0.91{col 46}{space 3}0.386{col 54}{space 4}-.9072351{col 67}{space 3} 2.129865
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .5689733{col 26}{space 2} .5639307{col 37}{space 1}    1.01{col 46}{space 3}0.339{col 54}{space 4}-.7067265{col 67}{space 3} 1.844673
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .7617458{col 26}{space 2} .5176179{col 37}{space 1}    1.47{col 46}{space 3}0.175{col 54}{space 4}-.4091873{col 67}{space 3} 1.932679
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .5675523{col 26}{space 2} .7496855{col 37}{space 1}    0.76{col 46}{space 3}0.468{col 54}{space 4}-1.128354{col 67}{space 3} 2.263459
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .8130395{col 26}{space 2} .6305604{col 37}{space 1}    1.29{col 46}{space 3}0.229{col 54}{space 4}-.6133872{col 67}{space 3} 2.239466
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .6163552{col 26}{space 2} .7357382{col 37}{space 1}    0.84{col 46}{space 3}0.424{col 54}{space 4}   -1.048{col 67}{space 3} 2.280711
{txt}{space 8}584  {c |}{col 14}{res}{space 2} 1.004537{col 26}{space 2}  .637963{col 37}{space 1}    1.57{col 46}{space 3}0.150{col 54}{space 4}-.4386352{col 67}{space 3}  2.44771
{txt}{space 8}585  {c |}{col 14}{res}{space 2} .5360204{col 26}{space 2} .5147823{col 37}{space 1}    1.04{col 46}{space 3}0.325{col 54}{space 4}-.6284981{col 67}{space 3} 1.700539
{txt}{space 8}586  {c |}{col 14}{res}{space 2} .7047217{col 26}{space 2} .5315887{col 37}{space 1}    1.33{col 46}{space 3}0.218{col 54}{space 4}-.4978155{col 67}{space 3} 1.907259
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .6279189{col 26}{space 2} .7373086{col 37}{space 1}    0.85{col 46}{space 3}0.417{col 54}{space 4}-1.039989{col 67}{space 3} 2.295827
{txt}{space 8}588  {c |}{col 14}{res}{space 2} .4479557{col 26}{space 2} .9967853{col 37}{space 1}    0.45{col 46}{space 3}0.664{col 54}{space 4}-1.806929{col 67}{space 3} 2.702841
{txt}{space 8}589  {c |}{col 14}{res}{space 2} 1.042614{col 26}{space 2} .7692424{col 37}{space 1}    1.36{col 46}{space 3}0.208{col 54}{space 4}-.6975337{col 67}{space 3} 2.782761
{txt}{space 8}590  {c |}{col 14}{res}{space 2} .7887502{col 26}{space 2} .8185314{col 37}{space 1}    0.96{col 46}{space 3}0.360{col 54}{space 4}-1.062896{col 67}{space 3} 2.640397
{txt}{space 8}591  {c |}{col 14}{res}{space 2}  .273833{col 26}{space 2} .8220463{col 37}{space 1}    0.33{col 46}{space 3}0.747{col 54}{space 4}-1.585765{col 67}{space 3} 2.133431
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .4228991{col 26}{space 2} .7460749{col 37}{space 1}    0.57{col 46}{space 3}0.585{col 54}{space 4} -1.26484{col 67}{space 3} 2.110638
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .9884911{col 26}{space 2} 1.005728{col 37}{space 1}    0.98{col 46}{space 3}0.351{col 54}{space 4}-1.286624{col 67}{space 3} 3.263606
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .7789849{col 26}{space 2} 1.020842{col 37}{space 1}    0.76{col 46}{space 3}0.465{col 54}{space 4}-1.530319{col 67}{space 3} 3.088289
{txt}{space 8}595  {c |}{col 14}{res}{space 2} 1.115698{col 26}{space 2} 1.058646{col 37}{space 1}    1.05{col 46}{space 3}0.319{col 54}{space 4}-1.279126{col 67}{space 3} 3.510521
{txt}{space 8}596  {c |}{col 14}{res}{space 2}  .280445{col 26}{space 2} .8326263{col 37}{space 1}    0.34{col 46}{space 3}0.744{col 54}{space 4}-1.603087{col 67}{space 3} 2.163977
{txt}{space 8}597  {c |}{col 14}{res}{space 2} .5024266{col 26}{space 2} 1.016793{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-1.797718{col 67}{space 3} 2.802571
{txt}{space 8}598  {c |}{col 14}{res}{space 2} .8322287{col 26}{space 2} .8351492{col 37}{space 1}    1.00{col 46}{space 3}0.345{col 54}{space 4} -1.05701{col 67}{space 3} 2.721467
{txt}{space 8}599  {c |}{col 14}{res}{space 2} .4000178{col 26}{space 2} .9496191{col 37}{space 1}    0.42{col 46}{space 3}0.683{col 54}{space 4} -1.74817{col 67}{space 3} 2.548205
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .5440735{col 26}{space 2} 1.192257{col 37}{space 1}    0.46{col 46}{space 3}0.659{col 54}{space 4}-2.152999{col 67}{space 3} 3.241146
{txt}{space 8}601  {c |}{col 14}{res}{space 2} .6002195{col 26}{space 2} .9685136{col 37}{space 1}    0.62{col 46}{space 3}0.551{col 54}{space 4}-1.590711{col 67}{space 3}  2.79115
{txt}{space 8}602  {c |}{col 14}{res}{space 2} 1.218004{col 26}{space 2} 1.128833{col 37}{space 1}    1.08{col 46}{space 3}0.309{col 54}{space 4}-1.335595{col 67}{space 3} 3.771602
{txt}{space 8}603  {c |}{col 14}{res}{space 2}  .110302{col 26}{space 2} 1.163681{col 37}{space 1}    0.09{col 46}{space 3}0.927{col 54}{space 4}-2.522127{col 67}{space 3} 2.742731
{txt}{space 8}604  {c |}{col 14}{res}{space 2} .4388478{col 26}{space 2} .9545355{col 37}{space 1}    0.46{col 46}{space 3}0.657{col 54}{space 4}-1.720461{col 67}{space 3} 2.598157
{txt}{space 8}605  {c |}{col 14}{res}{space 2} 1.049463{col 26}{space 2} 1.037366{col 37}{space 1}    1.01{col 46}{space 3}0.338{col 54}{space 4}-1.297221{col 67}{space 3} 3.396147
{txt}{space 8}606  {c |}{col 14}{res}{space 2} .6303636{col 26}{space 2} 1.157525{col 37}{space 1}    0.54{col 46}{space 3}0.599{col 54}{space 4}-1.988141{col 67}{space 3} 3.248868
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .7481163{col 26}{space 2} 1.058997{col 37}{space 1}    0.71{col 46}{space 3}0.498{col 54}{space 4}-1.647501{col 67}{space 3} 3.143734
{txt}{space 8}608  {c |}{col 14}{res}{space 2} .8427285{col 26}{space 2} .9560354{col 37}{space 1}    0.88{col 46}{space 3}0.401{col 54}{space 4}-1.319974{col 67}{space 3} 3.005431
{txt}{space 8}609  {c |}{col 14}{res}{space 2} .6763769{col 26}{space 2} 1.156111{col 37}{space 1}    0.59{col 46}{space 3}0.573{col 54}{space 4}-1.938927{col 67}{space 3} 3.291681
{txt}{space 8}610  {c |}{col 14}{res}{space 2} 1.553035{col 26}{space 2} 1.047823{col 37}{space 1}    1.48{col 46}{space 3}0.172{col 54}{space 4}-.8173057{col 67}{space 3} 3.923376
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.085821{col 26}{space 2} .9980122{col 37}{space 1}    1.09{col 46}{space 3}0.305{col 54}{space 4} -1.17184{col 67}{space 3} 3.343481
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .8726014{col 26}{space 2} 1.340729{col 37}{space 1}    0.65{col 46}{space 3}0.531{col 54}{space 4}-2.160339{col 67}{space 3} 3.905541
{txt}{space 8}613  {c |}{col 14}{res}{space 2} 1.077341{col 26}{space 2} 1.363092{col 37}{space 1}    0.79{col 46}{space 3}0.450{col 54}{space 4}-2.006188{col 67}{space 3}  4.16087
{txt}{space 8}614  {c |}{col 14}{res}{space 2} .7176386{col 26}{space 2} 1.225211{col 37}{space 1}    0.59{col 46}{space 3}0.572{col 54}{space 4}-2.053982{col 67}{space 3} 3.489259
{txt}{space 8}615  {c |}{col 14}{res}{space 2} 1.162099{col 26}{space 2} 1.195847{col 37}{space 1}    0.97{col 46}{space 3}0.357{col 54}{space 4}-1.543094{col 67}{space 3} 3.867293
{txt}{space 8}616  {c |}{col 14}{res}{space 2} .8260481{col 26}{space 2} 1.258004{col 37}{space 1}    0.66{col 46}{space 3}0.528{col 54}{space 4}-2.019755{col 67}{space 3} 3.671851
{txt}{space 8}617  {c |}{col 14}{res}{space 2} .7467236{col 26}{space 2} 1.522867{col 37}{space 1}    0.49{col 46}{space 3}0.636{col 54}{space 4} -2.69824{col 67}{space 3} 4.191688
{txt}{space 8}618  {c |}{col 14}{res}{space 2} .6778246{col 26}{space 2}  1.25397{col 37}{space 1}    0.54{col 46}{space 3}0.602{col 54}{space 4}-2.158853{col 67}{space 3} 3.514503
{txt}{space 8}619  {c |}{col 14}{res}{space 2} 1.492837{col 26}{space 2} 1.251907{col 37}{space 1}    1.19{col 46}{space 3}0.264{col 54}{space 4}-1.339174{col 67}{space 3} 4.324848
{txt}{space 8}620  {c |}{col 14}{res}{space 2} 1.273064{col 26}{space 2} 1.717606{col 37}{space 1}    0.74{col 46}{space 3}0.477{col 54}{space 4}-2.612432{col 67}{space 3} 5.158559
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 1.151856{col 26}{space 2} 1.295877{col 37}{space 1}    0.89{col 46}{space 3}0.397{col 54}{space 4}-1.779623{col 67}{space 3} 4.083334
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .8868651{col 26}{space 2}  1.17234{col 37}{space 1}    0.76{col 46}{space 3}0.469{col 54}{space 4}-1.765151{col 67}{space 3} 3.538882
{txt}{space 8}623  {c |}{col 14}{res}{space 2} .7555045{col 26}{space 2} 1.331691{col 37}{space 1}    0.57{col 46}{space 3}0.584{col 54}{space 4}-2.256989{col 67}{space 3} 3.767998
{txt}{space 8}624  {c |}{col 14}{res}{space 2}  .613146{col 26}{space 2} 1.702883{col 37}{space 1}    0.36{col 46}{space 3}0.727{col 54}{space 4}-3.239044{col 67}{space 3} 4.465336
{txt}{space 8}625  {c |}{col 14}{res}{space 2} .9036457{col 26}{space 2} 1.471267{col 37}{space 1}    0.61{col 46}{space 3}0.554{col 54}{space 4}-2.424593{col 67}{space 3} 4.231884
{txt}{space 8}626  {c |}{col 14}{res}{space 2} 1.132067{col 26}{space 2} 1.788732{col 37}{space 1}    0.63{col 46}{space 3}0.543{col 54}{space 4}-2.914325{col 67}{space 3}  5.17846
{txt}{space 8}627  {c |}{col 14}{res}{space 2} .7320408{col 26}{space 2} 1.616479{col 37}{space 1}    0.45{col 46}{space 3}0.661{col 54}{space 4}-2.924689{col 67}{space 3}  4.38877
{txt}{space 8}628  {c |}{col 14}{res}{space 2} .1651151{col 26}{space 2} 1.634895{col 37}{space 1}    0.10{col 46}{space 3}0.922{col 54}{space 4}-3.533274{col 67}{space 3} 3.863504
{txt}{space 8}629  {c |}{col 14}{res}{space 2} .4980678{col 26}{space 2} 1.509807{col 37}{space 1}    0.33{col 46}{space 3}0.749{col 54}{space 4}-2.917354{col 67}{space 3} 3.913489
{txt}{space 8}630  {c |}{col 14}{res}{space 2} 1.323636{col 26}{space 2} 1.472007{col 37}{space 1}    0.90{col 46}{space 3}0.392{col 54}{space 4}-2.006274{col 67}{space 3} 4.653546
{txt}{space 8}631  {c |}{col 14}{res}{space 2} .7105183{col 26}{space 2}  1.46439{col 37}{space 1}    0.49{col 46}{space 3}0.639{col 54}{space 4}-2.602162{col 67}{space 3} 4.023199
{txt}{space 8}632  {c |}{col 14}{res}{space 2} .9578639{col 26}{space 2} 1.507697{col 37}{space 1}    0.64{col 46}{space 3}0.541{col 54}{space 4}-2.452784{col 67}{space 3} 4.368511
{txt}{space 8}633  {c |}{col 14}{res}{space 2} 1.096871{col 26}{space 2}  1.42945{col 37}{space 1}    0.77{col 46}{space 3}0.463{col 54}{space 4}-2.136769{col 67}{space 3} 4.330511
{txt}{space 8}634  {c |}{col 14}{res}{space 2}  .526998{col 26}{space 2} 1.482391{col 37}{space 1}    0.36{col 46}{space 3}0.730{col 54}{space 4}-2.826403{col 67}{space 3} 3.880399
{txt}{space 8}635  {c |}{col 14}{res}{space 2} 1.143304{col 26}{space 2} 1.436727{col 37}{space 1}    0.80{col 46}{space 3}0.447{col 54}{space 4}-2.106799{col 67}{space 3} 4.393406
{txt}{space 8}636  {c |}{col 14}{res}{space 2} .9041421{col 26}{space 2} 1.624655{col 37}{space 1}    0.56{col 46}{space 3}0.591{col 54}{space 4}-2.771083{col 67}{space 3} 4.579367
{txt}{space 8}637  {c |}{col 14}{res}{space 2} .2436608{col 26}{space 2} 1.690903{col 37}{space 1}    0.14{col 46}{space 3}0.889{col 54}{space 4}-3.581428{col 67}{space 3}  4.06875
{txt}{space 8}638  {c |}{col 14}{res}{space 2} 1.481903{col 26}{space 2} 1.552342{col 37}{space 1}    0.95{col 46}{space 3}0.365{col 54}{space 4}-2.029739{col 67}{space 3} 4.993546
{txt}{space 8}639  {c |}{col 14}{res}{space 2} .7063515{col 26}{space 2} 1.794454{col 37}{space 1}    0.39{col 46}{space 3}0.703{col 54}{space 4}-3.352985{col 67}{space 3} 4.765688
{txt}{space 8}640  {c |}{col 14}{res}{space 2} 1.095213{col 26}{space 2} 1.660477{col 37}{space 1}    0.66{col 46}{space 3}0.526{col 54}{space 4}-2.661047{col 67}{space 3} 4.851474
{txt}{space 8}641  {c |}{col 14}{res}{space 2}  .386767{col 26}{space 2} 1.886652{col 37}{space 1}    0.21{col 46}{space 3}0.842{col 54}{space 4}-3.881137{col 67}{space 3} 4.654671
{txt}{space 8}642  {c |}{col 14}{res}{space 2}  .311756{col 26}{space 2} 2.181358{col 37}{space 1}    0.14{col 46}{space 3}0.890{col 54}{space 4}-4.622818{col 67}{space 3}  5.24633
{txt}{space 8}643  {c |}{col 14}{res}{space 2} .6233552{col 26}{space 2} 1.880956{col 37}{space 1}    0.33{col 46}{space 3}0.748{col 54}{space 4}-3.631663{col 67}{space 3} 4.878374
{txt}{space 8}644  {c |}{col 14}{res}{space 2} .2949224{col 26}{space 2} 1.906449{col 37}{space 1}    0.15{col 46}{space 3}0.880{col 54}{space 4}-4.017764{col 67}{space 3} 4.607609
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 1.347765{col 26}{space 2} 2.341883{col 37}{space 1}    0.58{col 46}{space 3}0.579{col 54}{space 4}-3.949942{col 67}{space 3} 6.645472
{txt}{space 8}646  {c |}{col 14}{res}{space 2} 1.031992{col 26}{space 2} 2.264057{col 37}{space 1}    0.46{col 46}{space 3}0.659{col 54}{space 4} -4.08966{col 67}{space 3} 6.153644
{txt}{space 8}647  {c |}{col 14}{res}{space 2}  1.39571{col 26}{space 2} 2.298993{col 37}{space 1}    0.61{col 46}{space 3}0.559{col 54}{space 4}-3.804973{col 67}{space 3} 6.596393
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 1.735298{col 26}{space 2} 2.129002{col 37}{space 1}    0.82{col 46}{space 3}0.436{col 54}{space 4} -3.08084{col 67}{space 3} 6.551437
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 1.331925{col 26}{space 2} 2.444788{col 37}{space 1}    0.54{col 46}{space 3}0.599{col 54}{space 4}-4.198569{col 67}{space 3}  6.86242
{txt}{space 8}650  {c |}{col 14}{res}{space 2} 1.034756{col 26}{space 2} 2.350024{col 37}{space 1}    0.44{col 46}{space 3}0.670{col 54}{space 4}-4.281367{col 67}{space 3}  6.35088
{txt}{space 8}651  {c |}{col 14}{res}{space 2} .8155976{col 26}{space 2} 2.643356{col 37}{space 1}    0.31{col 46}{space 3}0.765{col 54}{space 4} -5.16409{col 67}{space 3} 6.795285
{txt}{space 8}652  {c |}{col 14}{res}{space 2} .9938719{col 26}{space 2} 1.898003{col 37}{space 1}    0.52{col 46}{space 3}0.613{col 54}{space 4} -3.29971{col 67}{space 3} 5.287454
{txt}{space 8}653  {c |}{col 14}{res}{space 2}  2.22935{col 26}{space 2} 2.192828{col 37}{space 1}    1.02{col 46}{space 3}0.336{col 54}{space 4}-2.731171{col 67}{space 3} 7.189871
{txt}{space 8}654  {c |}{col 14}{res}{space 2} 1.501844{col 26}{space 2} 2.367749{col 37}{space 1}    0.63{col 46}{space 3}0.542{col 54}{space 4}-3.854377{col 67}{space 3} 6.858064
{txt}{space 8}655  {c |}{col 14}{res}{space 2}  1.28836{col 26}{space 2} 2.439783{col 37}{space 1}    0.53{col 46}{space 3}0.610{col 54}{space 4}-4.230813{col 67}{space 3} 6.807533
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 1.426127{col 26}{space 2} 2.387649{col 37}{space 1}    0.60{col 46}{space 3}0.565{col 54}{space 4}-3.975111{col 67}{space 3} 6.827364
{txt}{space 8}657  {c |}{col 14}{res}{space 2} 1.280863{col 26}{space 2} 2.216989{col 37}{space 1}    0.58{col 46}{space 3}0.578{col 54}{space 4}-3.734315{col 67}{space 3}  6.29604
{txt}{space 8}658  {c |}{col 14}{res}{space 2} 1.525187{col 26}{space 2} 2.257866{col 37}{space 1}    0.68{col 46}{space 3}0.516{col 54}{space 4}-3.582461{col 67}{space 3} 6.632835
{txt}{space 8}659  {c |}{col 14}{res}{space 2} 1.192245{col 26}{space 2} 2.353775{col 37}{space 1}    0.51{col 46}{space 3}0.625{col 54}{space 4}-4.132364{col 67}{space 3} 6.516855
{txt}{space 8}660  {c |}{col 14}{res}{space 2} 1.418302{col 26}{space 2} 2.212986{col 37}{space 1}    0.64{col 46}{space 3}0.538{col 54}{space 4} -3.58782{col 67}{space 3} 6.424424
{txt}{space 8}661  {c |}{col 14}{res}{space 2} .9923126{col 26}{space 2} 2.150897{col 37}{space 1}    0.46{col 46}{space 3}0.655{col 54}{space 4}-3.873355{col 67}{space 3}  5.85798
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 1.821455{col 26}{space 2} 2.431752{col 37}{space 1}    0.75{col 46}{space 3}0.473{col 54}{space 4} -3.67955{col 67}{space 3} 7.322461
{txt}{space 8}663  {c |}{col 14}{res}{space 2} .8243882{col 26}{space 2} 2.513619{col 37}{space 1}    0.33{col 46}{space 3}0.750{col 54}{space 4}-4.861812{col 67}{space 3} 6.510589
{txt}{space 8}664  {c |}{col 14}{res}{space 2} 1.261324{col 26}{space 2} 2.632073{col 37}{space 1}    0.48{col 46}{space 3}0.643{col 54}{space 4} -4.69284{col 67}{space 3} 7.215487
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 1.592704{col 26}{space 2} 2.602449{col 37}{space 1}    0.61{col 46}{space 3}0.556{col 54}{space 4}-4.294446{col 67}{space 3} 7.479853
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 1.547641{col 26}{space 2} 2.356627{col 37}{space 1}    0.66{col 46}{space 3}0.528{col 54}{space 4}-3.783419{col 67}{space 3} 6.878701
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 1.311532{col 26}{space 2} 2.387634{col 37}{space 1}    0.55{col 46}{space 3}0.596{col 54}{space 4}-4.089671{col 67}{space 3} 6.712735
{txt}{space 8}668  {c |}{col 14}{res}{space 2} 1.305708{col 26}{space 2} 2.427637{col 37}{space 1}    0.54{col 46}{space 3}0.604{col 54}{space 4}-4.185989{col 67}{space 3} 6.797404
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 1.403702{col 26}{space 2} 2.410425{col 37}{space 1}    0.58{col 46}{space 3}0.575{col 54}{space 4}-4.049057{col 67}{space 3} 6.856461
{txt}{space 8}670  {c |}{col 14}{res}{space 2} 1.051533{col 26}{space 2} 2.370681{col 37}{space 1}    0.44{col 46}{space 3}0.668{col 54}{space 4}-4.311319{col 67}{space 3} 6.414386
{txt}{space 8}671  {c |}{col 14}{res}{space 2} 1.228332{col 26}{space 2} 2.476485{col 37}{space 1}    0.50{col 46}{space 3}0.632{col 54}{space 4}-4.373867{col 67}{space 3} 6.830531
{txt}{space 8}672  {c |}{col 14}{res}{space 2} 1.054736{col 26}{space 2} 2.424397{col 37}{space 1}    0.44{col 46}{space 3}0.674{col 54}{space 4}-4.429631{col 67}{space 3} 6.539103
{txt}{space 8}673  {c |}{col 14}{res}{space 2} 1.205601{col 26}{space 2} 2.447148{col 37}{space 1}    0.49{col 46}{space 3}0.634{col 54}{space 4}-4.330231{col 67}{space 3} 6.741434
{txt}{space 8}674  {c |}{col 14}{res}{space 2} 1.483468{col 26}{space 2} 2.488026{col 37}{space 1}    0.60{col 46}{space 3}0.566{col 54}{space 4}-4.144837{col 67}{space 3} 7.111773
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 1.719168{col 26}{space 2} 2.596597{col 37}{space 1}    0.66{col 46}{space 3}0.525{col 54}{space 4}-4.154742{col 67}{space 3} 7.593078
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 1.816675{col 26}{space 2} 2.574965{col 37}{space 1}    0.71{col 46}{space 3}0.498{col 54}{space 4}-4.008301{col 67}{space 3} 7.641651
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 1.461882{col 26}{space 2} 2.624707{col 37}{space 1}    0.56{col 46}{space 3}0.591{col 54}{space 4}-4.475619{col 67}{space 3} 7.399382
{txt}{space 8}678  {c |}{col 14}{res}{space 2}  1.75801{col 26}{space 2} 2.578476{col 37}{space 1}    0.68{col 46}{space 3}0.513{col 54}{space 4}-4.074909{col 67}{space 3} 7.590928
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 1.968241{col 26}{space 2} 2.483716{col 37}{space 1}    0.79{col 46}{space 3}0.448{col 54}{space 4}-3.650314{col 67}{space 3} 7.586796
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 2.213397{col 26}{space 2} 2.496974{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4} -3.43515{col 67}{space 3} 7.861944
{txt}{space 8}681  {c |}{col 14}{res}{space 2} 1.585412{col 26}{space 2} 2.605639{col 37}{space 1}    0.61{col 46}{space 3}0.558{col 54}{space 4}-4.308952{col 67}{space 3} 7.479776
{txt}{space 8}682  {c |}{col 14}{res}{space 2} 1.655544{col 26}{space 2}  2.38023{col 37}{space 1}    0.70{col 46}{space 3}0.504{col 54}{space 4} -3.72891{col 67}{space 3} 7.039999
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 1.456596{col 26}{space 2} 2.673237{col 37}{space 1}    0.54{col 46}{space 3}0.599{col 54}{space 4}-4.590685{col 67}{space 3} 7.503877
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 1.803436{col 26}{space 2} 2.677243{col 37}{space 1}    0.67{col 46}{space 3}0.517{col 54}{space 4}-4.252909{col 67}{space 3} 7.859781
{txt}{space 8}685  {c |}{col 14}{res}{space 2} 1.381065{col 26}{space 2}  2.64254{col 37}{space 1}    0.52{col 46}{space 3}0.614{col 54}{space 4}-4.596775{col 67}{space 3} 7.358906
{txt}{space 8}686  {c |}{col 14}{res}{space 2} 1.520242{col 26}{space 2}  2.84791{col 37}{space 1}    0.53{col 46}{space 3}0.606{col 54}{space 4}-4.922178{col 67}{space 3} 7.962663
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 1.495491{col 26}{space 2} 2.676502{col 37}{space 1}    0.56{col 46}{space 3}0.590{col 54}{space 4}-4.559178{col 67}{space 3} 7.550159
{txt}{space 8}688  {c |}{col 14}{res}{space 2} 1.544738{col 26}{space 2} 2.724852{col 37}{space 1}    0.57{col 46}{space 3}0.585{col 54}{space 4}-4.619304{col 67}{space 3}  7.70878
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 1.615057{col 26}{space 2} 2.637589{col 37}{space 1}    0.61{col 46}{space 3}0.555{col 54}{space 4}-4.351583{col 67}{space 3} 7.581697
{txt}{space 8}690  {c |}{col 14}{res}{space 2} 1.280203{col 26}{space 2} 2.630156{col 37}{space 1}    0.49{col 46}{space 3}0.638{col 54}{space 4}-4.669624{col 67}{space 3} 7.230029
{txt}{space 8}691  {c |}{col 14}{res}{space 2} 1.219585{col 26}{space 2} 2.882539{col 37}{space 1}    0.42{col 46}{space 3}0.682{col 54}{space 4}-5.301171{col 67}{space 3}  7.74034
{txt}{space 8}692  {c |}{col 14}{res}{space 2}  1.56022{col 26}{space 2} 2.810741{col 37}{space 1}    0.56{col 46}{space 3}0.592{col 54}{space 4}-4.798119{col 67}{space 3} 7.918558
{txt}{space 8}693  {c |}{col 14}{res}{space 2} 1.332031{col 26}{space 2} 2.687051{col 37}{space 1}    0.50{col 46}{space 3}0.632{col 54}{space 4}-4.746501{col 67}{space 3} 7.410563
{txt}{space 8}694  {c |}{col 14}{res}{space 2} 1.583838{col 26}{space 2}  2.81131{col 37}{space 1}    0.56{col 46}{space 3}0.587{col 54}{space 4}-4.775788{col 67}{space 3} 7.943464
{txt}{space 8}695  {c |}{col 14}{res}{space 2} 1.347806{col 26}{space 2}  2.71655{col 37}{space 1}    0.50{col 46}{space 3}0.632{col 54}{space 4}-4.797456{col 67}{space 3} 7.493068
{txt}{space 8}696  {c |}{col 14}{res}{space 2} 1.501325{col 26}{space 2} 2.810584{col 37}{space 1}    0.53{col 46}{space 3}0.606{col 54}{space 4}-4.856658{col 67}{space 3} 7.859308
{txt}{space 8}697  {c |}{col 14}{res}{space 2} 1.233578{col 26}{space 2} 2.920345{col 37}{space 1}    0.42{col 46}{space 3}0.683{col 54}{space 4}  -5.3727{col 67}{space 3} 7.839857
{txt}{space 8}698  {c |}{col 14}{res}{space 2} 1.285477{col 26}{space 2} 2.842031{col 37}{space 1}    0.45{col 46}{space 3}0.662{col 54}{space 4}-5.143643{col 67}{space 3} 7.714597
{txt}{space 8}699  {c |}{col 14}{res}{space 2} 1.225438{col 26}{space 2} 2.924094{col 37}{space 1}    0.42{col 46}{space 3}0.685{col 54}{space 4}-5.389321{col 67}{space 3} 7.840197
{txt}{space 8}700  {c |}{col 14}{res}{space 2} 1.657992{col 26}{space 2} 2.739504{col 37}{space 1}    0.61{col 46}{space 3}0.560{col 54}{space 4}-4.539196{col 67}{space 3} 7.855181
{txt}{space 8}701  {c |}{col 14}{res}{space 2} 1.020094{col 26}{space 2} 2.901087{col 37}{space 1}    0.35{col 46}{space 3}0.733{col 54}{space 4}-5.542622{col 67}{space 3} 7.582809
{txt}{space 8}702  {c |}{col 14}{res}{space 2} 1.278519{col 26}{space 2} 2.926068{col 37}{space 1}    0.44{col 46}{space 3}0.672{col 54}{space 4}-5.340707{col 67}{space 3} 7.897745
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 1.095788{col 26}{space 2} 2.786901{col 37}{space 1}    0.39{col 46}{space 3}0.703{col 54}{space 4} -5.20862{col 67}{space 3} 7.400196
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 1.556482{col 26}{space 2} 2.680373{col 37}{space 1}    0.58{col 46}{space 3}0.576{col 54}{space 4}-4.506943{col 67}{space 3} 7.619906
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 1.555784{col 26}{space 2} 2.691704{col 37}{space 1}    0.58{col 46}{space 3}0.577{col 54}{space 4}-4.533273{col 67}{space 3} 7.644841
{txt}{space 8}706  {c |}{col 14}{res}{space 2}  1.53387{col 26}{space 2} 2.876228{col 37}{space 1}    0.53{col 46}{space 3}0.607{col 54}{space 4}-4.972611{col 67}{space 3}  8.04035
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 1.513722{col 26}{space 2} 2.914266{col 37}{space 1}    0.52{col 46}{space 3}0.616{col 54}{space 4}-5.078805{col 67}{space 3}  8.10625
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 1.825337{col 26}{space 2} 3.202459{col 37}{space 1}    0.57{col 46}{space 3}0.583{col 54}{space 4}-5.419129{col 67}{space 3} 9.069803
{txt}{space 8}709  {c |}{col 14}{res}{space 2} 1.600261{col 26}{space 2} 3.157222{col 37}{space 1}    0.51{col 46}{space 3}0.624{col 54}{space 4} -5.54187{col 67}{space 3} 8.742392
{txt}{space 8}710  {c |}{col 14}{res}{space 2} 1.658678{col 26}{space 2} 2.961764{col 37}{space 1}    0.56{col 46}{space 3}0.589{col 54}{space 4}-5.041298{col 67}{space 3} 8.358654
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 1.877888{col 26}{space 2}  2.93812{col 37}{space 1}    0.64{col 46}{space 3}0.539{col 54}{space 4}-4.768601{col 67}{space 3} 8.524377
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 1.877108{col 26}{space 2} 2.802416{col 37}{space 1}    0.67{col 46}{space 3}0.520{col 54}{space 4}-4.462397{col 67}{space 3} 8.216613
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 1.867038{col 26}{space 2} 2.985604{col 37}{space 1}    0.63{col 46}{space 3}0.547{col 54}{space 4}-4.886868{col 67}{space 3} 8.620943
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 1.817108{col 26}{space 2} 2.962576{col 37}{space 1}    0.61{col 46}{space 3}0.555{col 54}{space 4}-4.884704{col 67}{space 3}  8.51892
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 1.793302{col 26}{space 2} 2.897847{col 37}{space 1}    0.62{col 46}{space 3}0.551{col 54}{space 4}-4.762083{col 67}{space 3} 8.348687
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 1.634223{col 26}{space 2}  2.99825{col 37}{space 1}    0.55{col 46}{space 3}0.599{col 54}{space 4}-5.148289{col 67}{space 3} 8.416735
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 1.269973{col 26}{space 2} 3.106449{col 37}{space 1}    0.41{col 46}{space 3}0.692{col 54}{space 4}-5.757302{col 67}{space 3} 8.297247
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 1.797945{col 26}{space 2} 2.991458{col 37}{space 1}    0.60{col 46}{space 3}0.563{col 54}{space 4}-4.969203{col 67}{space 3} 8.565094
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 1.852626{col 26}{space 2} 2.935446{col 37}{space 1}    0.63{col 46}{space 3}0.544{col 54}{space 4}-4.787814{col 67}{space 3} 8.493066
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.440719{col 26}{space 2}  .340629{col 37}{space 1}    4.23{col 46}{space 3}0.002{col 54}{space 4} .6701623{col 67}{space 3} 2.211275
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-2.168242{col 26}{space 2} 1.020746{col 37}{space 1}   -2.12{col 46}{space 3}0.063{col 54}{space 4}-4.477329{col 67}{space 3} .1408449
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .4996242{col 26}{space 2} .1766408{col 37}{space 1}    2.83{col 46}{space 3}0.020{col 54}{space 4} .1000349{col 67}{space 3} .8992136
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.648752{col 26}{space 2} .7017553{col 37}{space 1}   -3.77{col 46}{space 3}0.004{col 54}{space 4}-4.236232{col 67}{space 3}-1.061271
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-3.632892{col 26}{space 2} .8348367{col 37}{space 1}   -4.35{col 46}{space 3}0.002{col 54}{space 4}-5.521424{col 67}{space 3} -1.74436
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-2.236879{col 26}{space 2} 1.089273{col 37}{space 1}   -2.05{col 46}{space 3}0.070{col 54}{space 4}-4.700987{col 67}{space 3} .2272285
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} 1.068094{col 26}{space 2} 1.122218{col 37}{space 1}    0.95{col 46}{space 3}0.366{col 54}{space 4} -1.47054{col 67}{space 3} 3.606728
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}-1.321287{col 26}{space 2} 5.197778{col 37}{space 1}   -0.25{col 46}{space 3}0.805{col 54}{space 4}-13.07948{col 67}{space 3}  10.4369
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-.1680553{col 26}{space 2} 1.624377{col 37}{space 1}   -0.10{col 46}{space 3}0.920{col 54}{space 4}-3.842651{col 67}{space 3}  3.50654
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-3.480724{col 26}{space 2} 21.42022{col 37}{space 1}   -0.16{col 46}{space 3}0.875{col 54}{space 4}-51.93663{col 67}{space 3} 44.97518
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 29}t(9) = {res}  -15.1422
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-4.826{txt}, {res}-4.294{txt}]
{res}
Warning: 1 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 29}t(9) = {res}    0.3113
{col 25}{txt}Prob>|t| = {res}    0.7659

95%{txt} confidence set for null hypothesis expression: [{res}-3.08{txt}, {res}4.621{txt}]
{res}
Warning: 5 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 29}t(9) = {res}    0.1471
{col 25}{txt}Prob>|t| = {res}    0.8906

95%{txt} confidence set for null hypothesis expression: [{res}-1.27{txt}, {res}1.356{txt}]
{res}
Warning: 4 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 29}t(9) = {res}   -0.1626
{col 25}{txt}Prob>|t| = {res}    0.8806

95%{txt} confidence set for null hypothesis expression: [{res}-64.13{txt}, {res}48.51{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     1,680
                                                {txt}{help j_robustsingular:F(8, 9) }          =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8006
                                                {txt}Root MSE          =    {res} 1.1747

{txt}{ralign 78:(Std. err. adjusted for {res:10} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}two {c |}{col 14}{res}{space 2}-2.472847{col 26}{space 2} .3809602{col 37}{space 1}   -6.49{col 46}{space 3}0.000{col 54}{space 4}-3.334639{col 67}{space 3}-1.611056
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} .5360951{col 26}{space 2} 1.543866{col 37}{space 1}    0.35{col 46}{space 3}0.736{col 54}{space 4}-2.956372{col 67}{space 3} 4.028562
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.0034829{col 26}{space 2} .5354364{col 37}{space 1}   -0.01{col 46}{space 3}0.995{col 54}{space 4}-1.214724{col 67}{space 3} 1.207758
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}  .341176{col 26}{space 2} .3187671{col 37}{space 1}    1.07{col 46}{space 3}0.312{col 54}{space 4}-.3799252{col 67}{space 3} 1.062277
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.1628449{col 26}{space 2} .3295322{col 37}{space 1}   -0.49{col 46}{space 3}0.633{col 54}{space 4}-.9082986{col 67}{space 3} .5826088
{txt}{space 8}555  {c |}{col 14}{res}{space 2} .1900673{col 26}{space 2} .2630896{col 37}{space 1}    0.72{col 46}{space 3}0.488{col 54}{space 4}-.4050827{col 67}{space 3} .7852173
{txt}{space 8}556  {c |}{col 14}{res}{space 2} .0918941{col 26}{space 2} .3905814{col 37}{space 1}    0.24{col 46}{space 3}0.819{col 54}{space 4}-.7916624{col 67}{space 3} .9754506
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .2113414{col 26}{space 2} .4370946{col 37}{space 1}    0.48{col 46}{space 3}0.640{col 54}{space 4}-.7774354{col 67}{space 3} 1.200118
{txt}{space 8}558  {c |}{col 14}{res}{space 2}  .772518{col 26}{space 2} .4601662{col 37}{space 1}    1.68{col 46}{space 3}0.128{col 54}{space 4}-.2684503{col 67}{space 3} 1.813486
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .3085577{col 26}{space 2} .5618239{col 37}{space 1}    0.55{col 46}{space 3}0.596{col 54}{space 4}-.9623763{col 67}{space 3} 1.579492
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .4590527{col 26}{space 2}  .410937{col 37}{space 1}    1.12{col 46}{space 3}0.293{col 54}{space 4}-.4705514{col 67}{space 3} 1.388657
{txt}{space 8}561  {c |}{col 14}{res}{space 2}-.0292869{col 26}{space 2} .4052936{col 37}{space 1}   -0.07{col 46}{space 3}0.944{col 54}{space 4}-.9461247{col 67}{space 3} .8875508
{txt}{space 8}562  {c |}{col 14}{res}{space 2} .4496955{col 26}{space 2} .3896151{col 37}{space 1}    1.15{col 46}{space 3}0.278{col 54}{space 4}-.4316751{col 67}{space 3} 1.331066
{txt}{space 8}563  {c |}{col 14}{res}{space 2} .3459176{col 26}{space 2} .3895354{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4}-.5352727{col 67}{space 3} 1.227108
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.0375389{col 26}{space 2} .4942318{col 37}{space 1}   -0.08{col 46}{space 3}0.941{col 54}{space 4}-1.155569{col 67}{space 3} 1.080491
{txt}{space 8}565  {c |}{col 14}{res}{space 2} .3436276{col 26}{space 2} .6075744{col 37}{space 1}    0.57{col 46}{space 3}0.586{col 54}{space 4}-1.030801{col 67}{space 3} 1.718057
{txt}{space 8}566  {c |}{col 14}{res}{space 2}  .114668{col 26}{space 2} .4419339{col 37}{space 1}    0.26{col 46}{space 3}0.801{col 54}{space 4} -.885056{col 67}{space 3} 1.114392
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.0299528{col 26}{space 2} .4805088{col 37}{space 1}   -0.06{col 46}{space 3}0.952{col 54}{space 4}-1.116939{col 67}{space 3} 1.057034
{txt}{space 8}568  {c |}{col 14}{res}{space 2} .0464021{col 26}{space 2} .4753314{col 37}{space 1}    0.10{col 46}{space 3}0.924{col 54}{space 4}-1.028872{col 67}{space 3} 1.121676
{txt}{space 8}569  {c |}{col 14}{res}{space 2} .0196043{col 26}{space 2} .3460356{col 37}{space 1}    0.06{col 46}{space 3}0.956{col 54}{space 4}-.7631827{col 67}{space 3} .8023913
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .8455086{col 26}{space 2} .4989633{col 37}{space 1}    1.69{col 46}{space 3}0.124{col 54}{space 4}-.2832249{col 67}{space 3} 1.974242
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.6758504{col 26}{space 2} .4509439{col 37}{space 1}   -1.50{col 46}{space 3}0.168{col 54}{space 4}-1.695956{col 67}{space 3} .3442557
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.8944259{col 26}{space 2} .4560145{col 37}{space 1}   -1.96{col 46}{space 3}0.081{col 54}{space 4}-1.926002{col 67}{space 3} .1371505
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.4515968{col 26}{space 2} .5316319{col 37}{space 1}   -0.85{col 46}{space 3}0.418{col 54}{space 4}-1.654232{col 67}{space 3} .7510381
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.3458008{col 26}{space 2} .4630013{col 37}{space 1}   -0.75{col 46}{space 3}0.474{col 54}{space 4}-1.393183{col 67}{space 3}  .701581
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .2099264{col 26}{space 2} .7584688{col 37}{space 1}    0.28{col 46}{space 3}0.788{col 54}{space 4}-1.505849{col 67}{space 3} 1.925702
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.3853948{col 26}{space 2} .7507802{col 37}{space 1}   -0.51{col 46}{space 3}0.620{col 54}{space 4}-2.083778{col 67}{space 3} 1.312988
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .0850195{col 26}{space 2} .9265621{col 37}{space 1}    0.09{col 46}{space 3}0.929{col 54}{space 4} -2.01101{col 67}{space 3} 2.181049
{txt}{space 8}578  {c |}{col 14}{res}{space 2} .1475173{col 26}{space 2} .8603727{col 37}{space 1}    0.17{col 46}{space 3}0.868{col 54}{space 4}-1.798781{col 67}{space 3} 2.093816
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .1051757{col 26}{space 2} .5723145{col 37}{space 1}    0.18{col 46}{space 3}0.858{col 54}{space 4} -1.18949{col 67}{space 3} 1.399841
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .2979481{col 26}{space 2} .5433396{col 37}{space 1}    0.55{col 46}{space 3}0.597{col 54}{space 4}-.9311714{col 67}{space 3} 1.527068
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .1037547{col 26}{space 2} .7431584{col 37}{space 1}    0.14{col 46}{space 3}0.892{col 54}{space 4}-1.577386{col 67}{space 3} 1.784896
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .3492418{col 26}{space 2} .6574357{col 37}{space 1}    0.53{col 46}{space 3}0.608{col 54}{space 4}-1.137981{col 67}{space 3} 1.836465
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .1525576{col 26}{space 2} .7457574{col 37}{space 1}    0.20{col 46}{space 3}0.842{col 54}{space 4}-1.534463{col 67}{space 3} 1.839578
{txt}{space 8}584  {c |}{col 14}{res}{space 2} .5407397{col 26}{space 2} .6644408{col 37}{space 1}    0.81{col 46}{space 3}0.437{col 54}{space 4}-.9623298{col 67}{space 3} 2.043809
{txt}{space 8}585  {c |}{col 14}{res}{space 2} .0722227{col 26}{space 2} .5286284{col 37}{space 1}    0.14{col 46}{space 3}0.894{col 54}{space 4}-1.123618{col 67}{space 3} 1.268063
{txt}{space 8}586  {c |}{col 14}{res}{space 2}  .240924{col 26}{space 2} .5480691{col 37}{space 1}    0.44{col 46}{space 3}0.671{col 54}{space 4}-.9988944{col 67}{space 3} 1.480742
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .1641213{col 26}{space 2} .7461334{col 37}{space 1}    0.22{col 46}{space 3}0.831{col 54}{space 4} -1.52375{col 67}{space 3} 1.851992
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.0202121{col 26}{space 2} .9806411{col 37}{space 1}   -0.02{col 46}{space 3}0.984{col 54}{space 4}-2.238576{col 67}{space 3} 2.198152
{txt}{space 8}589  {c |}{col 14}{res}{space 2} .5744457{col 26}{space 2}  .784249{col 37}{space 1}    0.73{col 46}{space 3}0.483{col 54}{space 4}-1.199649{col 67}{space 3}  2.34854
{txt}{space 8}590  {c |}{col 14}{res}{space 2} .3205824{col 26}{space 2} .8281399{col 37}{space 1}    0.39{col 46}{space 3}0.708{col 54}{space 4}  -1.5528{col 67}{space 3} 2.193965
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-.1943348{col 26}{space 2} .7954705{col 37}{space 1}   -0.24{col 46}{space 3}0.812{col 54}{space 4}-1.993814{col 67}{space 3} 1.605144
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.0452688{col 26}{space 2} .7180935{col 37}{space 1}   -0.06{col 46}{space 3}0.951{col 54}{space 4}-1.669709{col 67}{space 3} 1.579172
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .5203233{col 26}{space 2} 1.015287{col 37}{space 1}    0.51{col 46}{space 3}0.621{col 54}{space 4}-1.776415{col 67}{space 3} 2.817062
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .3108171{col 26}{space 2}  .940593{col 37}{space 1}    0.33{col 46}{space 3}0.749{col 54}{space 4}-1.816952{col 67}{space 3} 2.438586
{txt}{space 8}595  {c |}{col 14}{res}{space 2}   .64753{col 26}{space 2} 1.064715{col 37}{space 1}    0.61{col 46}{space 3}0.558{col 54}{space 4}-1.761022{col 67}{space 3} 3.056082
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.1877229{col 26}{space 2} .8072638{col 37}{space 1}   -0.23{col 46}{space 3}0.821{col 54}{space 4} -2.01388{col 67}{space 3} 1.638435
{txt}{space 8}597  {c |}{col 14}{res}{space 2} .0342588{col 26}{space 2} .9497092{col 37}{space 1}    0.04{col 46}{space 3}0.972{col 54}{space 4}-2.114133{col 67}{space 3}  2.18265
{txt}{space 8}598  {c |}{col 14}{res}{space 2} .3640609{col 26}{space 2} .8238733{col 37}{space 1}    0.44{col 46}{space 3}0.669{col 54}{space 4} -1.49967{col 67}{space 3} 2.227792
{txt}{space 8}599  {c |}{col 14}{res}{space 2}  -.06815{col 26}{space 2} .8710321{col 37}{space 1}   -0.08{col 46}{space 3}0.939{col 54}{space 4}-2.038562{col 67}{space 3} 1.902262
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .0723313{col 26}{space 2}  1.15826{col 37}{space 1}    0.06{col 46}{space 3}0.952{col 54}{space 4}-2.547834{col 67}{space 3} 2.692496
{txt}{space 8}601  {c |}{col 14}{res}{space 2} .1284773{col 26}{space 2} .9417566{col 37}{space 1}    0.14{col 46}{space 3}0.894{col 54}{space 4}-2.001924{col 67}{space 3} 2.258879
{txt}{space 8}602  {c |}{col 14}{res}{space 2} .7462614{col 26}{space 2} 1.132142{col 37}{space 1}    0.66{col 46}{space 3}0.526{col 54}{space 4}-1.814822{col 67}{space 3} 3.307345
{txt}{space 8}603  {c |}{col 14}{res}{space 2}-.1141555{col 26}{space 2} 1.092249{col 37}{space 1}   -0.10{col 46}{space 3}0.919{col 54}{space 4}-2.584994{col 67}{space 3} 2.356683
{txt}{space 8}604  {c |}{col 14}{res}{space 2} .2143903{col 26}{space 2} .8885038{col 37}{space 1}    0.24{col 46}{space 3}0.815{col 54}{space 4}-1.795545{col 67}{space 3} 2.224326
{txt}{space 8}605  {c |}{col 14}{res}{space 2} .8250052{col 26}{space 2}  .982797{col 37}{space 1}    0.84{col 46}{space 3}0.423{col 54}{space 4}-1.398236{col 67}{space 3} 3.048247
{txt}{space 8}606  {c |}{col 14}{res}{space 2} .4059061{col 26}{space 2} 1.092923{col 37}{space 1}    0.37{col 46}{space 3}0.719{col 54}{space 4}-2.066456{col 67}{space 3} 2.878269
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .5236588{col 26}{space 2} .9984794{col 37}{space 1}    0.52{col 46}{space 3}0.613{col 54}{space 4}-1.735058{col 67}{space 3} 2.782376
{txt}{space 8}608  {c |}{col 14}{res}{space 2}  .618271{col 26}{space 2} .9028842{col 37}{space 1}    0.68{col 46}{space 3}0.511{col 54}{space 4}-1.424195{col 67}{space 3} 2.660737
{txt}{space 8}609  {c |}{col 14}{res}{space 2} .4519194{col 26}{space 2} 1.111957{col 37}{space 1}    0.41{col 46}{space 3}0.694{col 54}{space 4}-2.063502{col 67}{space 3} 2.967341
{txt}{space 8}610  {c |}{col 14}{res}{space 2} 1.328578{col 26}{space 2} 1.010195{col 37}{space 1}    1.32{col 46}{space 3}0.221{col 54}{space 4}-.9566414{col 67}{space 3} 3.613797
{txt}{space 8}611  {c |}{col 14}{res}{space 2} .8613632{col 26}{space 2} .9545696{col 37}{space 1}    0.90{col 46}{space 3}0.390{col 54}{space 4}-1.298023{col 67}{space 3}  3.02075
{txt}{space 8}612  {c |}{col 14}{res}{space 2} .6431393{col 26}{space 2} 1.286711{col 37}{space 1}    0.50{col 46}{space 3}0.629{col 54}{space 4}-2.267603{col 67}{space 3} 3.553882
{txt}{space 8}613  {c |}{col 14}{res}{space 2}  .847879{col 26}{space 2}  1.31289{col 37}{space 1}    0.65{col 46}{space 3}0.535{col 54}{space 4}-2.122084{col 67}{space 3} 3.817842
{txt}{space 8}614  {c |}{col 14}{res}{space 2} .4881765{col 26}{space 2} 1.156255{col 37}{space 1}    0.42{col 46}{space 3}0.683{col 54}{space 4}-2.127454{col 67}{space 3} 3.103807
{txt}{space 8}615  {c |}{col 14}{res}{space 2} .9326372{col 26}{space 2} 1.149961{col 37}{space 1}    0.81{col 46}{space 3}0.438{col 54}{space 4}-1.668756{col 67}{space 3} 3.534031
{txt}{space 8}616  {c |}{col 14}{res}{space 2}  .596586{col 26}{space 2} 1.196083{col 37}{space 1}    0.50{col 46}{space 3}0.630{col 54}{space 4}-2.109141{col 67}{space 3} 3.302313
{txt}{space 8}617  {c |}{col 14}{res}{space 2} .5172615{col 26}{space 2} 1.471238{col 37}{space 1}    0.35{col 46}{space 3}0.733{col 54}{space 4} -2.81091{col 67}{space 3} 3.845433
{txt}{space 8}618  {c |}{col 14}{res}{space 2} .4483626{col 26}{space 2} 1.190977{col 37}{space 1}    0.38{col 46}{space 3}0.715{col 54}{space 4}-2.245814{col 67}{space 3} 3.142539
{txt}{space 8}619  {c |}{col 14}{res}{space 2} 1.263375{col 26}{space 2} 1.194188{col 37}{space 1}    1.06{col 46}{space 3}0.318{col 54}{space 4}-1.438066{col 67}{space 3} 3.964817
{txt}{space 8}620  {c |}{col 14}{res}{space 2} 1.043602{col 26}{space 2} 1.665958{col 37}{space 1}    0.63{col 46}{space 3}0.547{col 54}{space 4}-2.725057{col 67}{space 3}  4.81226
{txt}{space 8}621  {c |}{col 14}{res}{space 2} .9223935{col 26}{space 2}  1.24009{col 37}{space 1}    0.74{col 46}{space 3}0.476{col 54}{space 4}-1.882885{col 67}{space 3} 3.727672
{txt}{space 8}622  {c |}{col 14}{res}{space 2} .6574031{col 26}{space 2} 1.120819{col 37}{space 1}    0.59{col 46}{space 3}0.572{col 54}{space 4}-1.878066{col 67}{space 3} 3.192872
{txt}{space 8}623  {c |}{col 14}{res}{space 2} .5260424{col 26}{space 2} 1.267176{col 37}{space 1}    0.42{col 46}{space 3}0.688{col 54}{space 4}-2.340509{col 67}{space 3} 3.392593
{txt}{space 8}624  {c |}{col 14}{res}{space 2} .3995232{col 26}{space 2} 1.646933{col 37}{space 1}    0.24{col 46}{space 3}0.814{col 54}{space 4}-3.326097{col 67}{space 3} 4.125144
{txt}{space 8}625  {c |}{col 14}{res}{space 2} .6900229{col 26}{space 2} 1.406355{col 37}{space 1}    0.49{col 46}{space 3}0.635{col 54}{space 4}-2.491374{col 67}{space 3} 3.871419
{txt}{space 8}626  {c |}{col 14}{res}{space 2} .9184445{col 26}{space 2} 1.729696{col 37}{space 1}    0.53{col 46}{space 3}0.608{col 54}{space 4}  -2.9944{col 67}{space 3} 4.831289
{txt}{space 8}627  {c |}{col 14}{res}{space 2}  .518418{col 26}{space 2} 1.552605{col 37}{space 1}    0.33{col 46}{space 3}0.746{col 54}{space 4}-2.993819{col 67}{space 3} 4.030655
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-.0485077{col 26}{space 2} 1.560962{col 37}{space 1}   -0.03{col 46}{space 3}0.976{col 54}{space 4}-3.579649{col 67}{space 3} 3.482634
{txt}{space 8}629  {c |}{col 14}{res}{space 2}  .284445{col 26}{space 2} 1.450099{col 37}{space 1}    0.20{col 46}{space 3}0.849{col 54}{space 4}-2.995906{col 67}{space 3} 3.564796
{txt}{space 8}630  {c |}{col 14}{res}{space 2} 1.110013{col 26}{space 2} 1.410252{col 37}{space 1}    0.79{col 46}{space 3}0.451{col 54}{space 4}  -2.0802{col 67}{space 3} 4.300226
{txt}{space 8}631  {c |}{col 14}{res}{space 2} .4968954{col 26}{space 2} 1.395601{col 37}{space 1}    0.36{col 46}{space 3}0.730{col 54}{space 4}-2.660173{col 67}{space 3} 3.653964
{txt}{space 8}632  {c |}{col 14}{res}{space 2} .7442411{col 26}{space 2} 1.448232{col 37}{space 1}    0.51{col 46}{space 3}0.620{col 54}{space 4}-2.531888{col 67}{space 3}  4.02037
{txt}{space 8}633  {c |}{col 14}{res}{space 2} .8832478{col 26}{space 2} 1.370789{col 37}{space 1}    0.64{col 46}{space 3}0.535{col 54}{space 4}-2.217692{col 67}{space 3} 3.984188
{txt}{space 8}634  {c |}{col 14}{res}{space 2} .3133752{col 26}{space 2} 1.424572{col 37}{space 1}    0.22{col 46}{space 3}0.831{col 54}{space 4} -2.90923{col 67}{space 3}  3.53598
{txt}{space 8}635  {c |}{col 14}{res}{space 2} .9296808{col 26}{space 2}  1.37552{col 37}{space 1}    0.68{col 46}{space 3}0.516{col 54}{space 4}-2.181961{col 67}{space 3} 4.041323
{txt}{space 8}636  {c |}{col 14}{res}{space 2} .6874438{col 26}{space 2} 1.555135{col 37}{space 1}    0.44{col 46}{space 3}0.669{col 54}{space 4}-2.830516{col 67}{space 3} 4.205404
{txt}{space 8}637  {c |}{col 14}{res}{space 2} .0269626{col 26}{space 2} 1.620647{col 37}{space 1}    0.02{col 46}{space 3}0.987{col 54}{space 4}-3.639195{col 67}{space 3}  3.69312
{txt}{space 8}638  {c |}{col 14}{res}{space 2} 1.265205{col 26}{space 2} 1.489344{col 37}{space 1}    0.85{col 46}{space 3}0.418{col 54}{space 4}-2.103926{col 67}{space 3} 4.634336
{txt}{space 8}639  {c |}{col 14}{res}{space 2} .4896533{col 26}{space 2} 1.720134{col 37}{space 1}    0.28{col 46}{space 3}0.782{col 54}{space 4} -3.40156{col 67}{space 3} 4.380867
{txt}{space 8}640  {c |}{col 14}{res}{space 2} .8785152{col 26}{space 2} 1.591036{col 37}{space 1}    0.55{col 46}{space 3}0.594{col 54}{space 4}-2.720658{col 67}{space 3} 4.477688
{txt}{space 8}641  {c |}{col 14}{res}{space 2} .1700688{col 26}{space 2} 1.818468{col 37}{space 1}    0.09{col 46}{space 3}0.928{col 54}{space 4}-3.943591{col 67}{space 3} 4.283729
{txt}{space 8}642  {c |}{col 14}{res}{space 2} .0950577{col 26}{space 2} 2.105176{col 37}{space 1}    0.05{col 46}{space 3}0.965{col 54}{space 4}-4.667182{col 67}{space 3} 4.857297
{txt}{space 8}643  {c |}{col 14}{res}{space 2}  .406657{col 26}{space 2}  1.80286{col 37}{space 1}    0.23{col 46}{space 3}0.827{col 54}{space 4}-3.671696{col 67}{space 3}  4.48501
{txt}{space 8}644  {c |}{col 14}{res}{space 2} .0782242{col 26}{space 2} 1.839618{col 37}{space 1}    0.04{col 46}{space 3}0.967{col 54}{space 4} -4.08328{col 67}{space 3} 4.239729
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 1.131067{col 26}{space 2} 2.289307{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4}-4.047705{col 67}{space 3} 6.309838
{txt}{space 8}646  {c |}{col 14}{res}{space 2} .8152937{col 26}{space 2} 2.191557{col 37}{space 1}    0.37{col 46}{space 3}0.718{col 54}{space 4}-4.142353{col 67}{space 3} 5.772941
{txt}{space 8}647  {c |}{col 14}{res}{space 2} 1.179012{col 26}{space 2} 2.240702{col 37}{space 1}    0.53{col 46}{space 3}0.611{col 54}{space 4}-3.889809{col 67}{space 3} 6.247832
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 1.514685{col 26}{space 2} 2.062642{col 37}{space 1}    0.73{col 46}{space 3}0.481{col 54}{space 4}-3.151336{col 67}{space 3} 6.180706
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 1.111312{col 26}{space 2} 2.370742{col 37}{space 1}    0.47{col 46}{space 3}0.650{col 54}{space 4}-4.251679{col 67}{space 3} 6.474303
{txt}{space 8}650  {c |}{col 14}{res}{space 2}  .814143{col 26}{space 2} 2.273387{col 37}{space 1}    0.36{col 46}{space 3}0.729{col 54}{space 4}-4.328617{col 67}{space 3} 5.956903
{txt}{space 8}651  {c |}{col 14}{res}{space 2} .5949842{col 26}{space 2} 2.564147{col 37}{space 1}    0.23{col 46}{space 3}0.822{col 54}{space 4} -5.20552{col 67}{space 3} 6.395488
{txt}{space 8}652  {c |}{col 14}{res}{space 2} .7732585{col 26}{space 2} 1.829917{col 37}{space 1}    0.42{col 46}{space 3}0.683{col 54}{space 4}  -3.3663{col 67}{space 3} 4.912817
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 2.008736{col 26}{space 2} 2.133841{col 37}{space 1}    0.94{col 46}{space 3}0.371{col 54}{space 4}-2.818348{col 67}{space 3}  6.83582
{txt}{space 8}654  {c |}{col 14}{res}{space 2}  1.28123{col 26}{space 2} 2.295763{col 37}{space 1}    0.56{col 46}{space 3}0.590{col 54}{space 4}-3.912147{col 67}{space 3} 6.474607
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 1.067746{col 26}{space 2} 2.371266{col 37}{space 1}    0.45{col 46}{space 3}0.663{col 54}{space 4}-4.296431{col 67}{space 3} 6.431924
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 1.205513{col 26}{space 2} 2.312806{col 37}{space 1}    0.52{col 46}{space 3}0.615{col 54}{space 4}-4.026417{col 67}{space 3} 6.437443
{txt}{space 8}657  {c |}{col 14}{res}{space 2} 1.060249{col 26}{space 2} 2.138287{col 37}{space 1}    0.50{col 46}{space 3}0.632{col 54}{space 4}-3.776891{col 67}{space 3}  5.89739
{txt}{space 8}658  {c |}{col 14}{res}{space 2} 1.304574{col 26}{space 2} 2.183226{col 37}{space 1}    0.60{col 46}{space 3}0.565{col 54}{space 4}-3.634226{col 67}{space 3} 6.243373
{txt}{space 8}659  {c |}{col 14}{res}{space 2}  .971632{col 26}{space 2} 2.279871{col 37}{space 1}    0.43{col 46}{space 3}0.680{col 54}{space 4}-4.185794{col 67}{space 3} 6.129058
{txt}{space 8}660  {c |}{col 14}{res}{space 2} 1.195161{col 26}{space 2} 2.129341{col 37}{space 1}    0.56{col 46}{space 3}0.588{col 54}{space 4}-3.621742{col 67}{space 3} 6.012064
{txt}{space 8}661  {c |}{col 14}{res}{space 2} .7691718{col 26}{space 2} 2.090347{col 37}{space 1}    0.37{col 46}{space 3}0.721{col 54}{space 4}-3.959522{col 67}{space 3} 5.497865
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 1.598314{col 26}{space 2} 2.356874{col 37}{space 1}    0.68{col 46}{space 3}0.515{col 54}{space 4}-3.733305{col 67}{space 3} 6.929934
{txt}{space 8}663  {c |}{col 14}{res}{space 2} .6012475{col 26}{space 2} 2.431535{col 37}{space 1}    0.25{col 46}{space 3}0.810{col 54}{space 4}-4.899267{col 67}{space 3} 6.101762
{txt}{space 8}664  {c |}{col 14}{res}{space 2} 1.038183{col 26}{space 2} 2.554529{col 37}{space 1}    0.41{col 46}{space 3}0.694{col 54}{space 4}-4.740564{col 67}{space 3}  6.81693
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 1.369563{col 26}{space 2} 2.541056{col 37}{space 1}    0.54{col 46}{space 3}0.603{col 54}{space 4}-4.378706{col 67}{space 3} 7.117832
{txt}{space 8}666  {c |}{col 14}{res}{space 2}   1.3245{col 26}{space 2} 2.273449{col 37}{space 1}    0.58{col 46}{space 3}0.574{col 54}{space 4}-3.818398{col 67}{space 3} 6.467399
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 1.088391{col 26}{space 2} 2.304745{col 37}{space 1}    0.47{col 46}{space 3}0.648{col 54}{space 4}-4.125304{col 67}{space 3} 6.302086
{txt}{space 8}668  {c |}{col 14}{res}{space 2} 1.082567{col 26}{space 2} 2.341128{col 37}{space 1}    0.46{col 46}{space 3}0.655{col 54}{space 4}-4.213433{col 67}{space 3} 6.378567
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 1.180561{col 26}{space 2} 2.331812{col 37}{space 1}    0.51{col 46}{space 3}0.625{col 54}{space 4}-4.094365{col 67}{space 3} 6.455486
{txt}{space 8}670  {c |}{col 14}{res}{space 2} .8283926{col 26}{space 2} 2.283051{col 37}{space 1}    0.36{col 46}{space 3}0.725{col 54}{space 4}-4.336228{col 67}{space 3} 5.993014
{txt}{space 8}671  {c |}{col 14}{res}{space 2} 1.005191{col 26}{space 2} 2.387652{col 37}{space 1}    0.42{col 46}{space 3}0.684{col 54}{space 4}-4.396054{col 67}{space 3} 6.406436
{txt}{space 8}672  {c |}{col 14}{res}{space 2} .8290056{col 26}{space 2} 2.326608{col 37}{space 1}    0.36{col 46}{space 3}0.730{col 54}{space 4}-4.434148{col 67}{space 3} 6.092159
{txt}{space 8}673  {c |}{col 14}{res}{space 2} .9798709{col 26}{space 2} 2.351912{col 37}{space 1}    0.42{col 46}{space 3}0.687{col 54}{space 4}-4.340523{col 67}{space 3} 6.300265
{txt}{space 8}674  {c |}{col 14}{res}{space 2} 1.257737{col 26}{space 2} 2.397443{col 37}{space 1}    0.52{col 46}{space 3}0.613{col 54}{space 4}-4.165656{col 67}{space 3} 6.681131
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 1.493438{col 26}{space 2} 2.506344{col 37}{space 1}    0.60{col 46}{space 3}0.566{col 54}{space 4}-4.176307{col 67}{space 3} 7.163183
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 1.590945{col 26}{space 2} 2.484917{col 37}{space 1}    0.64{col 46}{space 3}0.538{col 54}{space 4}-4.030328{col 67}{space 3} 7.212217
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 1.236151{col 26}{space 2} 2.535227{col 37}{space 1}    0.49{col 46}{space 3}0.637{col 54}{space 4}-4.498931{col 67}{space 3} 6.971234
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 1.532279{col 26}{space 2}  2.49258{col 37}{space 1}    0.61{col 46}{space 3}0.554{col 54}{space 4}-4.106328{col 67}{space 3} 7.170887
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 1.742511{col 26}{space 2}  2.39553{col 37}{space 1}    0.73{col 46}{space 3}0.485{col 54}{space 4}-3.676554{col 67}{space 3} 7.161575
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 1.987667{col 26}{space 2}  2.37467{col 37}{space 1}    0.84{col 46}{space 3}0.424{col 54}{space 4}-3.384209{col 67}{space 3} 7.359543
{txt}{space 8}681  {c |}{col 14}{res}{space 2} 1.359682{col 26}{space 2} 2.515297{col 37}{space 1}    0.54{col 46}{space 3}0.602{col 54}{space 4}-4.330316{col 67}{space 3}  7.04968
{txt}{space 8}682  {c |}{col 14}{res}{space 2} 1.429814{col 26}{space 2} 2.295989{col 37}{space 1}    0.62{col 46}{space 3}0.549{col 54}{space 4}-3.764074{col 67}{space 3} 6.623703
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 1.230866{col 26}{space 2} 2.573839{col 37}{space 1}    0.48{col 46}{space 3}0.644{col 54}{space 4}-4.591562{col 67}{space 3} 7.053293
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 1.574294{col 26}{space 2} 2.581246{col 37}{space 1}    0.61{col 46}{space 3}0.557{col 54}{space 4} -4.26489{col 67}{space 3} 7.413478
{txt}{space 8}685  {c |}{col 14}{res}{space 2} 1.151924{col 26}{space 2} 2.539028{col 37}{space 1}    0.45{col 46}{space 3}0.661{col 54}{space 4}-4.591757{col 67}{space 3} 6.895604
{txt}{space 8}686  {c |}{col 14}{res}{space 2}   1.2911{col 26}{space 2} 2.744381{col 37}{space 1}    0.47{col 46}{space 3}0.649{col 54}{space 4}-4.917121{col 67}{space 3} 7.499321
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 1.266349{col 26}{space 2} 2.577487{col 37}{space 1}    0.49{col 46}{space 3}0.635{col 54}{space 4}-4.564331{col 67}{space 3} 7.097029
{txt}{space 8}688  {c |}{col 14}{res}{space 2} 1.315596{col 26}{space 2}    2.626{col 37}{space 1}    0.50{col 46}{space 3}0.628{col 54}{space 4}-4.624828{col 67}{space 3}  7.25602
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 1.385915{col 26}{space 2} 2.541636{col 37}{space 1}    0.55{col 46}{space 3}0.599{col 54}{space 4}-4.363664{col 67}{space 3} 7.135495
{txt}{space 8}690  {c |}{col 14}{res}{space 2} 1.051061{col 26}{space 2} 2.525824{col 37}{space 1}    0.42{col 46}{space 3}0.687{col 54}{space 4}-4.662751{col 67}{space 3} 6.764872
{txt}{space 8}691  {c |}{col 14}{res}{space 2} .9904427{col 26}{space 2}  2.77979{col 37}{space 1}    0.36{col 46}{space 3}0.730{col 54}{space 4}-5.297878{col 67}{space 3} 7.278764
{txt}{space 8}692  {c |}{col 14}{res}{space 2} 1.331078{col 26}{space 2} 2.709428{col 37}{space 1}    0.49{col 46}{space 3}0.635{col 54}{space 4}-4.798075{col 67}{space 3} 7.460231
{txt}{space 8}693  {c |}{col 14}{res}{space 2} 1.102889{col 26}{space 2} 2.585879{col 37}{space 1}    0.43{col 46}{space 3}0.680{col 54}{space 4}-4.746776{col 67}{space 3} 6.952554
{txt}{space 8}694  {c |}{col 14}{res}{space 2} 1.354696{col 26}{space 2} 2.711476{col 37}{space 1}    0.50{col 46}{space 3}0.629{col 54}{space 4}-4.779089{col 67}{space 3} 7.488481
{txt}{space 8}695  {c |}{col 14}{res}{space 2} 1.118664{col 26}{space 2} 2.612287{col 37}{space 1}    0.43{col 46}{space 3}0.679{col 54}{space 4}-4.790739{col 67}{space 3} 7.028066
{txt}{space 8}696  {c |}{col 14}{res}{space 2} 1.270729{col 26}{space 2} 2.704123{col 37}{space 1}    0.47{col 46}{space 3}0.650{col 54}{space 4}-4.846423{col 67}{space 3} 7.387881
{txt}{space 8}697  {c |}{col 14}{res}{space 2} 1.002982{col 26}{space 2} 2.812788{col 37}{space 1}    0.36{col 46}{space 3}0.730{col 54}{space 4}-5.359988{col 67}{space 3} 7.365952
{txt}{space 8}698  {c |}{col 14}{res}{space 2}  1.05488{col 26}{space 2} 2.734603{col 37}{space 1}    0.39{col 46}{space 3}0.709{col 54}{space 4} -5.13122{col 67}{space 3} 7.240981
{txt}{space 8}699  {c |}{col 14}{res}{space 2} .9948414{col 26}{space 2} 2.817526{col 37}{space 1}    0.35{col 46}{space 3}0.732{col 54}{space 4}-5.378846{col 67}{space 3} 7.368529
{txt}{space 8}700  {c |}{col 14}{res}{space 2} 1.427396{col 26}{space 2} 2.640888{col 37}{space 1}    0.54{col 46}{space 3}0.602{col 54}{space 4}-4.546708{col 67}{space 3} 7.401499
{txt}{space 8}701  {c |}{col 14}{res}{space 2} .7894975{col 26}{space 2}  2.79127{col 37}{space 1}    0.28{col 46}{space 3}0.784{col 54}{space 4}-5.524794{col 67}{space 3}  7.10379
{txt}{space 8}702  {c |}{col 14}{res}{space 2} 1.047922{col 26}{space 2} 2.823641{col 37}{space 1}    0.37{col 46}{space 3}0.719{col 54}{space 4}-5.339598{col 67}{space 3} 7.435443
{txt}{space 8}703  {c |}{col 14}{res}{space 2} .8651918{col 26}{space 2} 2.681884{col 37}{space 1}    0.32{col 46}{space 3}0.754{col 54}{space 4} -5.20165{col 67}{space 3} 6.932034
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 1.325885{col 26}{space 2} 2.576794{col 37}{space 1}    0.51{col 46}{space 3}0.619{col 54}{space 4}-4.503227{col 67}{space 3} 7.154998
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 1.325188{col 26}{space 2} 2.589705{col 37}{space 1}    0.51{col 46}{space 3}0.621{col 54}{space 4}-4.533132{col 67}{space 3} 7.183508
{txt}{space 8}706  {c |}{col 14}{res}{space 2} 1.303273{col 26}{space 2} 2.770578{col 37}{space 1}    0.47{col 46}{space 3}0.649{col 54}{space 4} -4.96421{col 67}{space 3} 7.570756
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 1.283126{col 26}{space 2} 2.811904{col 37}{space 1}    0.46{col 46}{space 3}0.659{col 54}{space 4}-5.077843{col 67}{space 3} 7.644095
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 1.591416{col 26}{space 2} 3.087407{col 37}{space 1}    0.52{col 46}{space 3}0.619{col 54}{space 4}-5.392784{col 67}{space 3} 8.575615
{txt}{space 8}709  {c |}{col 14}{res}{space 2}  1.36634{col 26}{space 2} 3.047983{col 37}{space 1}    0.45{col 46}{space 3}0.665{col 54}{space 4}-5.528677{col 67}{space 3} 8.261356
{txt}{space 8}710  {c |}{col 14}{res}{space 2} 1.424757{col 26}{space 2} 2.850595{col 37}{space 1}    0.50{col 46}{space 3}0.629{col 54}{space 4}-5.023736{col 67}{space 3}  7.87325
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 1.643967{col 26}{space 2} 2.818743{col 37}{space 1}    0.58{col 46}{space 3}0.574{col 54}{space 4}-4.732472{col 67}{space 3} 8.020406
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 1.643187{col 26}{space 2}   2.6937{col 37}{space 1}    0.61{col 46}{space 3}0.557{col 54}{space 4}-4.450385{col 67}{space 3} 7.736759
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 1.633116{col 26}{space 2} 2.877205{col 37}{space 1}    0.57{col 46}{space 3}0.584{col 54}{space 4}-4.875574{col 67}{space 3} 8.141807
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 1.583187{col 26}{space 2} 2.846118{col 37}{space 1}    0.56{col 46}{space 3}0.592{col 54}{space 4}-4.855179{col 67}{space 3} 8.021553
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 1.559381{col 26}{space 2} 2.788347{col 37}{space 1}    0.56{col 46}{space 3}0.590{col 54}{space 4}-4.748298{col 67}{space 3} 7.867059
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 1.400302{col 26}{space 2} 2.890252{col 37}{space 1}    0.48{col 46}{space 3}0.640{col 54}{space 4}-5.137903{col 67}{space 3} 7.938506
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 1.036051{col 26}{space 2} 2.995778{col 37}{space 1}    0.35{col 46}{space 3}0.737{col 54}{space 4}-5.740869{col 67}{space 3} 7.812972
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 1.564024{col 26}{space 2} 2.883222{col 37}{space 1}    0.54{col 46}{space 3}0.601{col 54}{space 4}-4.958278{col 67}{space 3} 8.086326
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 1.618705{col 26}{space 2} 2.826201{col 37}{space 1}    0.57{col 46}{space 3}0.581{col 54}{space 4}-4.774606{col 67}{space 3} 8.012016
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.409955{col 26}{space 2} .3350627{col 37}{space 1}    4.21{col 46}{space 3}0.002{col 54}{space 4} .6519905{col 67}{space 3}  2.16792
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-2.130504{col 26}{space 2} .9788013{col 37}{space 1}   -2.18{col 46}{space 3}0.057{col 54}{space 4}-4.344707{col 67}{space 3} .0836981
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .4843277{col 26}{space 2} .1709764{col 37}{space 1}    2.83{col 46}{space 3}0.020{col 54}{space 4} .0975522{col 67}{space 3} .8711032
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2} -2.62297{col 26}{space 2} .6729088{col 37}{space 1}   -3.90{col 46}{space 3}0.004{col 54}{space 4}-4.145196{col 67}{space 3}-1.100745
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-3.540865{col 26}{space 2} .8283425{col 37}{space 1}   -4.27{col 46}{space 3}0.002{col 54}{space 4}-5.414706{col 67}{space 3}-1.667024
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-2.262512{col 26}{space 2} 1.049077{col 37}{space 1}   -2.16{col 46}{space 3}0.059{col 54}{space 4}-4.635689{col 67}{space 3} .1106638
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} 1.066597{col 26}{space 2} 1.076786{col 37}{space 1}    0.99{col 46}{space 3}0.348{col 54}{space 4}-1.369263{col 67}{space 3} 3.502456
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}-1.523797{col 26}{space 2} 5.023753{col 37}{space 1}   -0.30{col 46}{space 3}0.769{col 54}{space 4}-12.88832{col 67}{space 3} 9.840722
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-2.412496{col 26}{space 2} 1.556087{col 37}{space 1}   -1.55{col 46}{space 3}0.155{col 54}{space 4} -5.93261{col 67}{space 3} 1.107617
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-2.810311{col 26}{space 2} 20.61017{col 37}{space 1}   -0.14{col 46}{space 3}0.895{col 54}{space 4}-49.43375{col 67}{space 3} 43.81313
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 29}t(9) = {res}   -6.2049
{col 25}{txt}Prob>|t| = {res}    0.0051

95%{txt} confidence set for null hypothesis expression: [{res}-3.905{txt}, {res}-1.059{txt}]
{res}
Warning: 5 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 29}t(9) = {res}    0.3477
{col 25}{txt}Prob>|t| = {res}    0.7303

95%{txt} confidence set for null hypothesis expression: [{res}-2.87{txt}, {res}4.41{txt}]
{res}
Warning: 6 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 29}t(9) = {res}   -0.0065
{col 25}{txt}Prob>|t| = {res}    0.9957

95%{txt} confidence set for null hypothesis expression: [{res}-1.411{txt}, {res}1.327{txt}]
{res}
Warning: 2 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 29}t(9) = {res}   -0.1365
{col 25}{txt}Prob>|t| = {res}    0.9025

95%{txt} confidence set for null hypothesis expression: [{res}-60.61{txt}, {res}47.16{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     1,680
                                                {txt}{help j_robustsingular:F(8, 9) }          =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8139
                                                {txt}Root MSE          =    {res} 1.1347

{txt}{ralign 78:(Std. err. adjusted for {res:10} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}three {c |}{col 14}{res}{space 2}-3.002886{col 26}{space 2} .3660149{col 37}{space 1}   -8.20{col 46}{space 3}0.000{col 54}{space 4} -3.83087{col 67}{space 3}-2.174903
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} -1.69693{col 26}{space 2} 1.236687{col 37}{space 1}   -1.37{col 46}{space 3}0.203{col 54}{space 4}-4.494511{col 67}{space 3} 1.100651
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.0447276{col 26}{space 2} .4845587{col 37}{space 1}   -0.09{col 46}{space 3}0.928{col 54}{space 4}-1.140875{col 67}{space 3}  1.05142
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}  .341176{col 26}{space 2} .3187671{col 37}{space 1}    1.07{col 46}{space 3}0.312{col 54}{space 4}-.3799252{col 67}{space 3} 1.062277
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.1628449{col 26}{space 2} .3295322{col 37}{space 1}   -0.49{col 46}{space 3}0.633{col 54}{space 4}-.9082986{col 67}{space 3} .5826088
{txt}{space 8}555  {c |}{col 14}{res}{space 2} .1900673{col 26}{space 2} .2630896{col 37}{space 1}    0.72{col 46}{space 3}0.488{col 54}{space 4}-.4050827{col 67}{space 3} .7852173
{txt}{space 8}556  {c |}{col 14}{res}{space 2} .0918941{col 26}{space 2} .3905814{col 37}{space 1}    0.24{col 46}{space 3}0.819{col 54}{space 4}-.7916624{col 67}{space 3} .9754506
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .2113414{col 26}{space 2} .4370946{col 37}{space 1}    0.48{col 46}{space 3}0.640{col 54}{space 4}-.7774354{col 67}{space 3} 1.200118
{txt}{space 8}558  {c |}{col 14}{res}{space 2}  .772518{col 26}{space 2} .4601662{col 37}{space 1}    1.68{col 46}{space 3}0.128{col 54}{space 4}-.2684503{col 67}{space 3} 1.813486
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .3085577{col 26}{space 2} .5618239{col 37}{space 1}    0.55{col 46}{space 3}0.596{col 54}{space 4}-.9623763{col 67}{space 3} 1.579492
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .4590527{col 26}{space 2}  .410937{col 37}{space 1}    1.12{col 46}{space 3}0.293{col 54}{space 4}-.4705514{col 67}{space 3} 1.388657
{txt}{space 8}561  {c |}{col 14}{res}{space 2}-.0292869{col 26}{space 2} .4052936{col 37}{space 1}   -0.07{col 46}{space 3}0.944{col 54}{space 4}-.9461247{col 67}{space 3} .8875508
{txt}{space 8}562  {c |}{col 14}{res}{space 2} .4496955{col 26}{space 2} .3896151{col 37}{space 1}    1.15{col 46}{space 3}0.278{col 54}{space 4}-.4316751{col 67}{space 3} 1.331066
{txt}{space 8}563  {c |}{col 14}{res}{space 2} .3459176{col 26}{space 2} .3895354{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4}-.5352727{col 67}{space 3} 1.227108
{txt}{space 8}564  {c |}{col 14}{res}{space 2} .3212928{col 26}{space 2}  .425763{col 37}{space 1}    0.75{col 46}{space 3}0.470{col 54}{space 4}-.6418501{col 67}{space 3} 1.284436
{txt}{space 8}565  {c |}{col 14}{res}{space 2} .7024593{col 26}{space 2} .5863816{col 37}{space 1}    1.20{col 46}{space 3}0.262{col 54}{space 4} -.624028{col 67}{space 3} 2.028947
{txt}{space 8}566  {c |}{col 14}{res}{space 2} .4734996{col 26}{space 2}  .498706{col 37}{space 1}    0.95{col 46}{space 3}0.367{col 54}{space 4}-.6546518{col 67}{space 3} 1.601651
{txt}{space 8}567  {c |}{col 14}{res}{space 2} .3288789{col 26}{space 2} .4654232{col 37}{space 1}    0.71{col 46}{space 3}0.498{col 54}{space 4}-.7239817{col 67}{space 3} 1.381739
{txt}{space 8}568  {c |}{col 14}{res}{space 2} .4052338{col 26}{space 2}  .487808{col 37}{space 1}    0.83{col 46}{space 3}0.428{col 54}{space 4}-.6982645{col 67}{space 3} 1.508732
{txt}{space 8}569  {c |}{col 14}{res}{space 2}  .378436{col 26}{space 2} .3430345{col 37}{space 1}    1.10{col 46}{space 3}0.299{col 54}{space 4} -.397562{col 67}{space 3} 1.154434
{txt}{space 8}570  {c |}{col 14}{res}{space 2}  1.20434{col 26}{space 2} .5574589{col 37}{space 1}    2.16{col 46}{space 3}0.059{col 54}{space 4}-.0567193{col 67}{space 3}   2.4654
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.3170187{col 26}{space 2} .4232171{col 37}{space 1}   -0.75{col 46}{space 3}0.473{col 54}{space 4}-1.274402{col 67}{space 3} .6403649
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.5355942{col 26}{space 2} .2812205{col 37}{space 1}   -1.90{col 46}{space 3}0.089{col 54}{space 4}-1.171759{col 67}{space 3} .1005707
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.0927651{col 26}{space 2} .3826412{col 37}{space 1}   -0.24{col 46}{space 3}0.814{col 54}{space 4}-.9583597{col 67}{space 3} .7728294
{txt}{space 8}574  {c |}{col 14}{res}{space 2} .0130309{col 26}{space 2} .2924623{col 37}{space 1}    0.04{col 46}{space 3}0.965{col 54}{space 4}-.6485649{col 67}{space 3} .6746266
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .5687581{col 26}{space 2} .5436049{col 37}{space 1}    1.05{col 46}{space 3}0.323{col 54}{space 4}-.6609617{col 67}{space 3} 1.798478
{txt}{space 8}576  {c |}{col 14}{res}{space 2} .2876984{col 26}{space 2} .4208886{col 37}{space 1}    0.68{col 46}{space 3}0.511{col 54}{space 4}-.6644178{col 67}{space 3} 1.239815
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .7581127{col 26}{space 2} .5467098{col 37}{space 1}    1.39{col 46}{space 3}0.199{col 54}{space 4}-.4786308{col 67}{space 3} 1.994856
{txt}{space 8}578  {c |}{col 14}{res}{space 2} .8206106{col 26}{space 2} .5144636{col 37}{space 1}    1.60{col 46}{space 3}0.145{col 54}{space 4}-.3431869{col 67}{space 3} 1.984408
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .7782689{col 26}{space 2} .2676062{col 37}{space 1}    2.91{col 46}{space 3}0.017{col 54}{space 4} .1729016{col 67}{space 3} 1.383636
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .9710413{col 26}{space 2} .3658915{col 37}{space 1}    2.65{col 46}{space 3}0.026{col 54}{space 4} .1433373{col 67}{space 3} 1.798745
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .7768479{col 26}{space 2} .3918287{col 37}{space 1}    1.98{col 46}{space 3}0.079{col 54}{space 4}-.1095303{col 67}{space 3} 1.663226
{txt}{space 8}582  {c |}{col 14}{res}{space 2} 1.022335{col 26}{space 2} .4227966{col 37}{space 1}    2.42{col 46}{space 3}0.039{col 54}{space 4} .0659026{col 67}{space 3} 1.978768
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .8256508{col 26}{space 2} .4310391{col 37}{space 1}    1.92{col 46}{space 3}0.088{col 54}{space 4}-.1494274{col 67}{space 3} 1.800729
{txt}{space 8}584  {c |}{col 14}{res}{space 2} 1.213833{col 26}{space 2} .3292522{col 37}{space 1}    3.69{col 46}{space 3}0.005{col 54}{space 4} .4690127{col 67}{space 3} 1.958653
{txt}{space 8}585  {c |}{col 14}{res}{space 2}  .745316{col 26}{space 2} .3641036{col 37}{space 1}    2.05{col 46}{space 3}0.071{col 54}{space 4}-.0783436{col 67}{space 3} 1.568976
{txt}{space 8}586  {c |}{col 14}{res}{space 2} .9140172{col 26}{space 2}   .34312{col 37}{space 1}    2.66{col 46}{space 3}0.026{col 54}{space 4} .1378258{col 67}{space 3} 1.690209
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .8372145{col 26}{space 2}   .47027{col 37}{space 1}    1.78{col 46}{space 3}0.109{col 54}{space 4}-.2266101{col 67}{space 3} 1.901039
{txt}{space 8}588  {c |}{col 14}{res}{space 2} 1.018954{col 26}{space 2} .4744352{col 37}{space 1}    2.15{col 46}{space 3}0.060{col 54}{space 4}-.0542932{col 67}{space 3} 2.092201
{txt}{space 8}589  {c |}{col 14}{res}{space 2} 1.613612{col 26}{space 2} .3852364{col 37}{space 1}    4.19{col 46}{space 3}0.002{col 54}{space 4} .7421463{col 67}{space 3} 2.485077
{txt}{space 8}590  {c |}{col 14}{res}{space 2} 1.359748{col 26}{space 2} .4743298{col 37}{space 1}    2.87{col 46}{space 3}0.019{col 54}{space 4} .2867398{col 67}{space 3} 2.432757
{txt}{space 8}591  {c |}{col 14}{res}{space 2} .8448311{col 26}{space 2} .3954059{col 37}{space 1}    2.14{col 46}{space 3}0.061{col 54}{space 4}-.0496392{col 67}{space 3} 1.739301
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .9938971{col 26}{space 2}  .363628{col 37}{space 1}    2.73{col 46}{space 3}0.023{col 54}{space 4} .1713135{col 67}{space 3} 1.816481
{txt}{space 8}593  {c |}{col 14}{res}{space 2} 1.559489{col 26}{space 2} .6618933{col 37}{space 1}    2.36{col 46}{space 3}0.043{col 54}{space 4} .0621826{col 67}{space 3} 3.056796
{txt}{space 8}594  {c |}{col 14}{res}{space 2} 1.349983{col 26}{space 2} .5397837{col 37}{space 1}    2.50{col 46}{space 3}0.034{col 54}{space 4} .1289075{col 67}{space 3} 2.571058
{txt}{space 8}595  {c |}{col 14}{res}{space 2} 1.686696{col 26}{space 2} .5994792{col 37}{space 1}    2.81{col 46}{space 3}0.020{col 54}{space 4} .3305797{col 67}{space 3} 3.042812
{txt}{space 8}596  {c |}{col 14}{res}{space 2} .8514431{col 26}{space 2} .3758965{col 37}{space 1}    2.27{col 46}{space 3}0.050{col 54}{space 4} .0011061{col 67}{space 3}  1.70178
{txt}{space 8}597  {c |}{col 14}{res}{space 2} 1.073425{col 26}{space 2} .5439078{col 37}{space 1}    1.97{col 46}{space 3}0.080{col 54}{space 4}-.1569802{col 67}{space 3}  2.30383
{txt}{space 8}598  {c |}{col 14}{res}{space 2} 1.403227{col 26}{space 2} .5796247{col 37}{space 1}    2.42{col 46}{space 3}0.039{col 54}{space 4} .0920247{col 67}{space 3} 2.714429
{txt}{space 8}599  {c |}{col 14}{res}{space 2} .9710159{col 26}{space 2} .6001716{col 37}{space 1}    1.62{col 46}{space 3}0.140{col 54}{space 4}-.3866667{col 67}{space 3} 2.328698
{txt}{space 8}600  {c |}{col 14}{res}{space 2} 1.426842{col 26}{space 2}  .539473{col 37}{space 1}    2.64{col 46}{space 3}0.027{col 54}{space 4} .2064689{col 67}{space 3} 2.647214
{txt}{space 8}601  {c |}{col 14}{res}{space 2} 1.482988{col 26}{space 2} .4891394{col 37}{space 1}    3.03{col 46}{space 3}0.014{col 54}{space 4} .3764775{col 67}{space 3} 2.589498
{txt}{space 8}602  {c |}{col 14}{res}{space 2} 2.100772{col 26}{space 2} .6935505{col 37}{space 1}    3.03{col 46}{space 3}0.014{col 54}{space 4} .5318517{col 67}{space 3} 3.669692
{txt}{space 8}603  {c |}{col 14}{res}{space 2} .9930702{col 26}{space 2} .5854552{col 37}{space 1}    1.70{col 46}{space 3}0.124{col 54}{space 4}-.3313216{col 67}{space 3} 2.317462
{txt}{space 8}604  {c |}{col 14}{res}{space 2} 1.321616{col 26}{space 2}  .576088{col 37}{space 1}    2.29{col 46}{space 3}0.047{col 54}{space 4} .0184143{col 67}{space 3} 2.624818
{txt}{space 8}605  {c |}{col 14}{res}{space 2} 1.932231{col 26}{space 2} .6429109{col 37}{space 1}    3.01{col 46}{space 3}0.015{col 54}{space 4} .4778654{col 67}{space 3} 3.386596
{txt}{space 8}606  {c |}{col 14}{res}{space 2} 1.513132{col 26}{space 2} .6581629{col 37}{space 1}    2.30{col 46}{space 3}0.047{col 54}{space 4} .0242639{col 67}{space 3}    3.002
{txt}{space 8}607  {c |}{col 14}{res}{space 2} 1.630885{col 26}{space 2} .6063049{col 37}{space 1}    2.69{col 46}{space 3}0.025{col 54}{space 4} .2593276{col 67}{space 3} 3.002441
{txt}{space 8}608  {c |}{col 14}{res}{space 2} 1.725497{col 26}{space 2} .6977093{col 37}{space 1}    2.47{col 46}{space 3}0.035{col 54}{space 4} .1471687{col 67}{space 3} 3.303825
{txt}{space 8}609  {c |}{col 14}{res}{space 2} 1.559145{col 26}{space 2} .6055425{col 37}{space 1}    2.57{col 46}{space 3}0.030{col 54}{space 4} .1893129{col 67}{space 3} 2.928977
{txt}{space 8}610  {c |}{col 14}{res}{space 2} 2.435803{col 26}{space 2} .6143191{col 37}{space 1}    3.97{col 46}{space 3}0.003{col 54}{space 4} 1.046117{col 67}{space 3}  3.82549
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.968589{col 26}{space 2} .5305055{col 37}{space 1}    3.71{col 46}{space 3}0.005{col 54}{space 4} .7685021{col 67}{space 3} 3.168676
{txt}{space 8}612  {c |}{col 14}{res}{space 2}  2.15545{col 26}{space 2} .6549431{col 37}{space 1}    3.29{col 46}{space 3}0.009{col 54}{space 4} .6738657{col 67}{space 3} 3.637034
{txt}{space 8}613  {c |}{col 14}{res}{space 2}  2.36019{col 26}{space 2} .7601801{col 37}{space 1}    3.10{col 46}{space 3}0.013{col 54}{space 4} .6405427{col 67}{space 3} 4.079837
{txt}{space 8}614  {c |}{col 14}{res}{space 2} 2.000487{col 26}{space 2} .6348163{col 37}{space 1}    3.15{col 46}{space 3}0.012{col 54}{space 4}  .564433{col 67}{space 3} 3.436541
{txt}{space 8}615  {c |}{col 14}{res}{space 2} 2.444948{col 26}{space 2} .9428542{col 37}{space 1}    2.59{col 46}{space 3}0.029{col 54}{space 4} .3120634{col 67}{space 3} 4.577832
{txt}{space 8}616  {c |}{col 14}{res}{space 2} 2.108897{col 26}{space 2} .7921269{col 37}{space 1}    2.66{col 46}{space 3}0.026{col 54}{space 4} .3169811{col 67}{space 3} 3.900812
{txt}{space 8}617  {c |}{col 14}{res}{space 2} 2.029572{col 26}{space 2} .8977468{col 37}{space 1}    2.26{col 46}{space 3}0.050{col 54}{space 4}-.0012722{col 67}{space 3} 4.060416
{txt}{space 8}618  {c |}{col 14}{res}{space 2} 1.960673{col 26}{space 2} .7794246{col 37}{space 1}    2.52{col 46}{space 3}0.033{col 54}{space 4} .1974922{col 67}{space 3} 3.723854
{txt}{space 8}619  {c |}{col 14}{res}{space 2} 2.775686{col 26}{space 2} .7960644{col 37}{space 1}    3.49{col 46}{space 3}0.007{col 54}{space 4}  .974863{col 67}{space 3} 4.576508
{txt}{space 8}620  {c |}{col 14}{res}{space 2} 2.555912{col 26}{space 2} .9371712{col 37}{space 1}    2.73{col 46}{space 3}0.023{col 54}{space 4} .4358836{col 67}{space 3} 4.675941
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 2.434704{col 26}{space 2}  .686166{col 37}{space 1}    3.55{col 46}{space 3}0.006{col 54}{space 4} .8824887{col 67}{space 3}  3.98692
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 2.169714{col 26}{space 2} .7256275{col 37}{space 1}    2.99{col 46}{space 3}0.015{col 54}{space 4} .5282302{col 67}{space 3} 3.811197
{txt}{space 8}623  {c |}{col 14}{res}{space 2} 2.038353{col 26}{space 2} .8686484{col 37}{space 1}    2.35{col 46}{space 3}0.044{col 54}{space 4} .0733338{col 67}{space 3} 4.003372
{txt}{space 8}624  {c |}{col 14}{res}{space 2} 2.272653{col 26}{space 2} .8563455{col 37}{space 1}    2.65{col 46}{space 3}0.026{col 54}{space 4} .3354652{col 67}{space 3} 4.209841
{txt}{space 8}625  {c |}{col 14}{res}{space 2} 2.563153{col 26}{space 2} .9606579{col 37}{space 1}    2.67{col 46}{space 3}0.026{col 54}{space 4} .3899938{col 67}{space 3} 4.736312
{txt}{space 8}626  {c |}{col 14}{res}{space 2} 2.791575{col 26}{space 2}  1.10209{col 37}{space 1}    2.53{col 46}{space 3}0.032{col 54}{space 4} .2984737{col 67}{space 3} 5.284676
{txt}{space 8}627  {c |}{col 14}{res}{space 2} 2.391548{col 26}{space 2} 1.023238{col 37}{space 1}    2.34{col 46}{space 3}0.044{col 54}{space 4} .0768221{col 67}{space 3} 4.706274
{txt}{space 8}628  {c |}{col 14}{res}{space 2} 1.824622{col 26}{space 2} .9241451{col 37}{space 1}    1.97{col 46}{space 3}0.080{col 54}{space 4} -.265939{col 67}{space 3} 3.915184
{txt}{space 8}629  {c |}{col 14}{res}{space 2} 2.157575{col 26}{space 2} .9274559{col 37}{space 1}    2.33{col 46}{space 3}0.045{col 54}{space 4} .0595241{col 67}{space 3} 4.255626
{txt}{space 8}630  {c |}{col 14}{res}{space 2} 2.983143{col 26}{space 2} .9176164{col 37}{space 1}    3.25{col 46}{space 3}0.010{col 54}{space 4} .9073505{col 67}{space 3} 5.058936
{txt}{space 8}631  {c |}{col 14}{res}{space 2} 2.370026{col 26}{space 2} .8205017{col 37}{space 1}    2.89{col 46}{space 3}0.018{col 54}{space 4} .5139218{col 67}{space 3} 4.226129
{txt}{space 8}632  {c |}{col 14}{res}{space 2} 2.617371{col 26}{space 2} .7736952{col 37}{space 1}    3.38{col 46}{space 3}0.008{col 54}{space 4} .8671511{col 67}{space 3} 4.367591
{txt}{space 8}633  {c |}{col 14}{res}{space 2} 2.756378{col 26}{space 2} .8294339{col 37}{space 1}    3.32{col 46}{space 3}0.009{col 54}{space 4} .8800681{col 67}{space 3} 4.632688
{txt}{space 8}634  {c |}{col 14}{res}{space 2} 2.186505{col 26}{space 2} .9298626{col 37}{space 1}    2.35{col 46}{space 3}0.043{col 54}{space 4} .0830099{col 67}{space 3} 4.290001
{txt}{space 8}635  {c |}{col 14}{res}{space 2} 2.802811{col 26}{space 2} .9176433{col 37}{space 1}    3.05{col 46}{space 3}0.014{col 54}{space 4} .7269575{col 67}{space 3} 4.878664
{txt}{space 8}636  {c |}{col 14}{res}{space 2} 2.820622{col 26}{space 2} .8753642{col 37}{space 1}    3.22{col 46}{space 3}0.010{col 54}{space 4} .8404111{col 67}{space 3} 4.800834
{txt}{space 8}637  {c |}{col 14}{res}{space 2} 2.160141{col 26}{space 2}  1.10937{col 37}{space 1}    1.95{col 46}{space 3}0.083{col 54}{space 4} -.349429{col 67}{space 3} 4.669711
{txt}{space 8}638  {c |}{col 14}{res}{space 2} 3.398384{col 26}{space 2}  .953927{col 37}{space 1}    3.56{col 46}{space 3}0.006{col 54}{space 4} 1.240451{col 67}{space 3} 5.556316
{txt}{space 8}639  {c |}{col 14}{res}{space 2} 2.622832{col 26}{space 2} .9442861{col 37}{space 1}    2.78{col 46}{space 3}0.021{col 54}{space 4} .4867082{col 67}{space 3} 4.758956
{txt}{space 8}640  {c |}{col 14}{res}{space 2} 3.011694{col 26}{space 2} 1.008215{col 37}{space 1}    2.99{col 46}{space 3}0.015{col 54}{space 4} .7309528{col 67}{space 3} 5.292435
{txt}{space 8}641  {c |}{col 14}{res}{space 2} 2.603536{col 26}{space 2} .9826128{col 37}{space 1}    2.65{col 46}{space 3}0.026{col 54}{space 4} .3807115{col 67}{space 3} 4.826361
{txt}{space 8}642  {c |}{col 14}{res}{space 2} 2.528525{col 26}{space 2} 1.092463{col 37}{space 1}    2.31{col 46}{space 3}0.046{col 54}{space 4} .0572022{col 67}{space 3} 4.999848
{txt}{space 8}643  {c |}{col 14}{res}{space 2} 2.840124{col 26}{space 2} 1.062203{col 37}{space 1}    2.67{col 46}{space 3}0.025{col 54}{space 4} .4372546{col 67}{space 3} 5.242994
{txt}{space 8}644  {c |}{col 14}{res}{space 2} 2.511691{col 26}{space 2} .9152317{col 37}{space 1}    2.74{col 46}{space 3}0.023{col 54}{space 4} .4412934{col 67}{space 3} 4.582089
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 3.564534{col 26}{space 2} 1.153673{col 37}{space 1}    3.09{col 46}{space 3}0.013{col 54}{space 4} .9547435{col 67}{space 3} 6.174325
{txt}{space 8}646  {c |}{col 14}{res}{space 2} 3.248761{col 26}{space 2} 1.174325{col 37}{space 1}    2.77{col 46}{space 3}0.022{col 54}{space 4} .5922525{col 67}{space 3} 5.905269
{txt}{space 8}647  {c |}{col 14}{res}{space 2} 3.612479{col 26}{space 2} 1.194346{col 37}{space 1}    3.02{col 46}{space 3}0.014{col 54}{space 4} .9106803{col 67}{space 3} 6.314277
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 4.260754{col 26}{space 2} 1.235098{col 37}{space 1}    3.45{col 46}{space 3}0.007{col 54}{space 4} 1.466769{col 67}{space 3}  7.05474
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 3.857381{col 26}{space 2} 1.212158{col 37}{space 1}    3.18{col 46}{space 3}0.011{col 54}{space 4}  1.11529{col 67}{space 3} 6.599472
{txt}{space 8}650  {c |}{col 14}{res}{space 2} 3.560212{col 26}{space 2} 1.136971{col 37}{space 1}    3.13{col 46}{space 3}0.012{col 54}{space 4} .9882058{col 67}{space 3} 6.132219
{txt}{space 8}651  {c |}{col 14}{res}{space 2} 3.341054{col 26}{space 2} 1.362459{col 37}{space 1}    2.45{col 46}{space 3}0.037{col 54}{space 4} .2589581{col 67}{space 3} 6.423149
{txt}{space 8}652  {c |}{col 14}{res}{space 2} 3.519328{col 26}{space 2} 1.243679{col 37}{space 1}    2.83{col 46}{space 3}0.020{col 54}{space 4} .7059314{col 67}{space 3} 6.332724
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 4.754806{col 26}{space 2} 1.322309{col 37}{space 1}    3.60{col 46}{space 3}0.006{col 54}{space 4} 1.763536{col 67}{space 3} 7.746076
{txt}{space 8}654  {c |}{col 14}{res}{space 2}   4.0273{col 26}{space 2} 1.204024{col 37}{space 1}    3.34{col 46}{space 3}0.009{col 54}{space 4} 1.303607{col 67}{space 3} 6.750992
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 3.813816{col 26}{space 2} 1.208556{col 37}{space 1}    3.16{col 46}{space 3}0.012{col 54}{space 4} 1.079873{col 67}{space 3} 6.547759
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 3.951582{col 26}{space 2} 1.240266{col 37}{space 1}    3.19{col 46}{space 3}0.011{col 54}{space 4} 1.145906{col 67}{space 3} 6.757259
{txt}{space 8}657  {c |}{col 14}{res}{space 2} 3.806319{col 26}{space 2} 1.254924{col 37}{space 1}    3.03{col 46}{space 3}0.014{col 54}{space 4} .9674839{col 67}{space 3} 6.645154
{txt}{space 8}658  {c |}{col 14}{res}{space 2} 4.050643{col 26}{space 2} 1.290251{col 37}{space 1}    3.14{col 46}{space 3}0.012{col 54}{space 4} 1.131891{col 67}{space 3} 6.969394
{txt}{space 8}659  {c |}{col 14}{res}{space 2} 3.717701{col 26}{space 2} 1.335167{col 37}{space 1}    2.78{col 46}{space 3}0.021{col 54}{space 4} .6973428{col 67}{space 3}  6.73806
{txt}{space 8}660  {c |}{col 14}{res}{space 2} 4.165102{col 26}{space 2} 1.202549{col 37}{space 1}    3.46{col 46}{space 3}0.007{col 54}{space 4} 1.444747{col 67}{space 3} 6.885457
{txt}{space 8}661  {c |}{col 14}{res}{space 2} 3.739112{col 26}{space 2} 1.491492{col 37}{space 1}    2.51{col 46}{space 3}0.033{col 54}{space 4}  .365123{col 67}{space 3} 7.113102
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 4.568255{col 26}{space 2} 1.280189{col 37}{space 1}    3.57{col 46}{space 3}0.006{col 54}{space 4} 1.672267{col 67}{space 3} 7.464243
{txt}{space 8}663  {c |}{col 14}{res}{space 2} 3.571188{col 26}{space 2} 1.289598{col 37}{space 1}    2.77{col 46}{space 3}0.022{col 54}{space 4} .6539144{col 67}{space 3} 6.488462
{txt}{space 8}664  {c |}{col 14}{res}{space 2} 4.008123{col 26}{space 2} 1.269805{col 37}{space 1}    3.16{col 46}{space 3}0.012{col 54}{space 4} 1.135624{col 67}{space 3} 6.880622
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 4.339503{col 26}{space 2}   1.3606{col 37}{space 1}    3.19{col 46}{space 3}0.011{col 54}{space 4} 1.261612{col 67}{space 3} 7.417394
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 4.294441{col 26}{space 2} 1.335685{col 37}{space 1}    3.22{col 46}{space 3}0.011{col 54}{space 4} 1.272912{col 67}{space 3}  7.31597
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 4.058332{col 26}{space 2} 1.307704{col 37}{space 1}    3.10{col 46}{space 3}0.013{col 54}{space 4}   1.1001{col 67}{space 3} 7.016564
{txt}{space 8}668  {c |}{col 14}{res}{space 2} 4.052507{col 26}{space 2} 1.287248{col 37}{space 1}    3.15{col 46}{space 3}0.012{col 54}{space 4}  1.14055{col 67}{space 3} 6.964464
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 4.150501{col 26}{space 2} 1.216217{col 37}{space 1}    3.41{col 46}{space 3}0.008{col 54}{space 4} 1.399227{col 67}{space 3} 6.901776
{txt}{space 8}670  {c |}{col 14}{res}{space 2} 3.798333{col 26}{space 2} 1.202492{col 37}{space 1}    3.16{col 46}{space 3}0.012{col 54}{space 4} 1.078107{col 67}{space 3} 6.518559
{txt}{space 8}671  {c |}{col 14}{res}{space 2} 3.975132{col 26}{space 2} 1.203114{col 37}{space 1}    3.30{col 46}{space 3}0.009{col 54}{space 4} 1.253499{col 67}{space 3} 6.696765
{txt}{space 8}672  {c |}{col 14}{res}{space 2} 4.025564{col 26}{space 2} 1.276879{col 37}{space 1}    3.15{col 46}{space 3}0.012{col 54}{space 4} 1.137063{col 67}{space 3} 6.914064
{txt}{space 8}673  {c |}{col 14}{res}{space 2} 4.176429{col 26}{space 2} 1.267538{col 37}{space 1}    3.29{col 46}{space 3}0.009{col 54}{space 4}  1.30906{col 67}{space 3} 7.043798
{txt}{space 8}674  {c |}{col 14}{res}{space 2} 4.454296{col 26}{space 2}  1.26123{col 37}{space 1}    3.53{col 46}{space 3}0.006{col 54}{space 4} 1.601196{col 67}{space 3} 7.307396
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 4.689996{col 26}{space 2} 1.338766{col 37}{space 1}    3.50{col 46}{space 3}0.007{col 54}{space 4} 1.661497{col 67}{space 3} 7.718494
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 4.787503{col 26}{space 2} 1.338438{col 37}{space 1}    3.58{col 46}{space 3}0.006{col 54}{space 4} 1.759745{col 67}{space 3} 7.815261
{txt}{space 8}677  {c |}{col 14}{res}{space 2}  4.43271{col 26}{space 2} 1.254083{col 37}{space 1}    3.53{col 46}{space 3}0.006{col 54}{space 4} 1.595776{col 67}{space 3} 7.269643
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 4.728837{col 26}{space 2} 1.305836{col 37}{space 1}    3.62{col 46}{space 3}0.006{col 54}{space 4} 1.774831{col 67}{space 3} 7.682843
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 4.939069{col 26}{space 2} 1.218624{col 37}{space 1}    4.05{col 46}{space 3}0.003{col 54}{space 4} 2.182351{col 67}{space 3} 7.695787
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 5.184225{col 26}{space 2} 1.472018{col 37}{space 1}    3.52{col 46}{space 3}0.006{col 54}{space 4} 1.854289{col 67}{space 3} 8.514161
{txt}{space 8}681  {c |}{col 14}{res}{space 2}  4.55624{col 26}{space 2} 1.288018{col 37}{space 1}    3.54{col 46}{space 3}0.006{col 54}{space 4}  1.64254{col 67}{space 3}  7.46994
{txt}{space 8}682  {c |}{col 14}{res}{space 2} 4.626372{col 26}{space 2} 1.281438{col 37}{space 1}    3.61{col 46}{space 3}0.006{col 54}{space 4} 1.727557{col 67}{space 3} 7.525188
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 4.427424{col 26}{space 2} 1.322876{col 37}{space 1}    3.35{col 46}{space 3}0.009{col 54}{space 4} 1.434871{col 67}{space 3} 7.419976
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 5.048991{col 26}{space 2} 1.439829{col 37}{space 1}    3.51{col 46}{space 3}0.007{col 54}{space 4} 1.791872{col 67}{space 3} 8.306111
{txt}{space 8}685  {c |}{col 14}{res}{space 2} 4.626621{col 26}{space 2} 1.430163{col 37}{space 1}    3.24{col 46}{space 3}0.010{col 54}{space 4} 1.391367{col 67}{space 3} 7.861874
{txt}{space 8}686  {c |}{col 14}{res}{space 2} 4.765798{col 26}{space 2} 1.522391{col 37}{space 1}    3.13{col 46}{space 3}0.012{col 54}{space 4}  1.32191{col 67}{space 3} 8.209685
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 4.741046{col 26}{space 2} 1.513872{col 37}{space 1}    3.13{col 46}{space 3}0.012{col 54}{space 4} 1.316429{col 67}{space 3} 8.165663
{txt}{space 8}688  {c |}{col 14}{res}{space 2} 4.790293{col 26}{space 2} 1.472407{col 37}{space 1}    3.25{col 46}{space 3}0.010{col 54}{space 4} 1.459477{col 67}{space 3} 8.121109
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 4.860613{col 26}{space 2} 1.537902{col 37}{space 1}    3.16{col 46}{space 3}0.012{col 54}{space 4} 1.381637{col 67}{space 3} 8.339589
{txt}{space 8}690  {c |}{col 14}{res}{space 2} 4.525758{col 26}{space 2} 1.477692{col 37}{space 1}    3.06{col 46}{space 3}0.014{col 54}{space 4} 1.182986{col 67}{space 3}  7.86853
{txt}{space 8}691  {c |}{col 14}{res}{space 2}  4.46514{col 26}{space 2} 1.602347{col 37}{space 1}    2.79{col 46}{space 3}0.021{col 54}{space 4} .8403782{col 67}{space 3} 8.089902
{txt}{space 8}692  {c |}{col 14}{res}{space 2} 4.805775{col 26}{space 2}  1.50447{col 37}{space 1}    3.19{col 46}{space 3}0.011{col 54}{space 4} 1.402427{col 67}{space 3} 8.209123
{txt}{space 8}693  {c |}{col 14}{res}{space 2} 4.577587{col 26}{space 2} 1.485114{col 37}{space 1}    3.08{col 46}{space 3}0.013{col 54}{space 4} 1.218024{col 67}{space 3} 7.937149
{txt}{space 8}694  {c |}{col 14}{res}{space 2} 4.829393{col 26}{space 2} 1.428263{col 37}{space 1}    3.38{col 46}{space 3}0.008{col 54}{space 4} 1.598438{col 67}{space 3} 8.060349
{txt}{space 8}695  {c |}{col 14}{res}{space 2} 4.593361{col 26}{space 2} 1.540728{col 37}{space 1}    2.98{col 46}{space 3}0.015{col 54}{space 4} 1.107991{col 67}{space 3} 8.078731
{txt}{space 8}696  {c |}{col 14}{res}{space 2} 4.891706{col 26}{space 2}  1.53539{col 37}{space 1}    3.19{col 46}{space 3}0.011{col 54}{space 4} 1.418413{col 67}{space 3} 8.364999
{txt}{space 8}697  {c |}{col 14}{res}{space 2} 4.623959{col 26}{space 2} 1.564824{col 37}{space 1}    2.95{col 46}{space 3}0.016{col 54}{space 4} 1.084082{col 67}{space 3} 8.163837
{txt}{space 8}698  {c |}{col 14}{res}{space 2} 4.675858{col 26}{space 2} 1.557289{col 37}{space 1}    3.00{col 46}{space 3}0.015{col 54}{space 4} 1.153025{col 67}{space 3}  8.19869
{txt}{space 8}699  {c |}{col 14}{res}{space 2} 4.615819{col 26}{space 2} 1.511195{col 37}{space 1}    3.05{col 46}{space 3}0.014{col 54}{space 4} 1.197257{col 67}{space 3}  8.03438
{txt}{space 8}700  {c |}{col 14}{res}{space 2} 5.048373{col 26}{space 2} 1.522275{col 37}{space 1}    3.32{col 46}{space 3}0.009{col 54}{space 4} 1.604747{col 67}{space 3} 8.491998
{txt}{space 8}701  {c |}{col 14}{res}{space 2} 4.410475{col 26}{space 2} 1.486768{col 37}{space 1}    2.97{col 46}{space 3}0.016{col 54}{space 4} 1.047172{col 67}{space 3} 7.773777
{txt}{space 8}702  {c |}{col 14}{res}{space 2} 4.668899{col 26}{space 2}  1.59389{col 37}{space 1}    2.93{col 46}{space 3}0.017{col 54}{space 4} 1.063271{col 67}{space 3} 8.274528
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 4.486169{col 26}{space 2} 1.497455{col 37}{space 1}    3.00{col 46}{space 3}0.015{col 54}{space 4}  1.09869{col 67}{space 3} 7.873648
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 4.946863{col 26}{space 2} 1.509008{col 37}{space 1}    3.28{col 46}{space 3}0.010{col 54}{space 4} 1.533249{col 67}{space 3} 8.360476
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 4.946165{col 26}{space 2} 1.413777{col 37}{space 1}    3.50{col 46}{space 3}0.007{col 54}{space 4}  1.74798{col 67}{space 3}  8.14435
{txt}{space 8}706  {c |}{col 14}{res}{space 2}  4.92425{col 26}{space 2} 1.500083{col 37}{space 1}    3.28{col 46}{space 3}0.009{col 54}{space 4} 1.530827{col 67}{space 3} 8.317673
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 4.904103{col 26}{space 2} 1.347687{col 37}{space 1}    3.64{col 46}{space 3}0.005{col 54}{space 4} 1.855423{col 67}{space 3} 7.952783
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 5.476729{col 26}{space 2} 1.565397{col 37}{space 1}    3.50{col 46}{space 3}0.007{col 54}{space 4} 1.935555{col 67}{space 3} 9.017903
{txt}{space 8}709  {c |}{col 14}{res}{space 2} 5.251653{col 26}{space 2} 1.531994{col 37}{space 1}    3.43{col 46}{space 3}0.008{col 54}{space 4} 1.786043{col 67}{space 3} 8.717264
{txt}{space 8}710  {c |}{col 14}{res}{space 2}  5.31007{col 26}{space 2} 1.516045{col 37}{space 1}    3.50{col 46}{space 3}0.007{col 54}{space 4} 1.880537{col 67}{space 3} 8.739603
{txt}{space 8}711  {c |}{col 14}{res}{space 2}  5.52928{col 26}{space 2} 1.590584{col 37}{space 1}    3.48{col 46}{space 3}0.007{col 54}{space 4} 1.931129{col 67}{space 3} 9.127432
{txt}{space 8}712  {c |}{col 14}{res}{space 2}   5.5285{col 26}{space 2} 1.592426{col 37}{space 1}    3.47{col 46}{space 3}0.007{col 54}{space 4} 1.926182{col 67}{space 3} 9.130818
{txt}{space 8}713  {c |}{col 14}{res}{space 2}  5.51843{col 26}{space 2} 1.504883{col 37}{space 1}    3.67{col 46}{space 3}0.005{col 54}{space 4} 2.114149{col 67}{space 3} 8.922711
{txt}{space 8}714  {c |}{col 14}{res}{space 2}   5.4685{col 26}{space 2} 1.614282{col 37}{space 1}    3.39{col 46}{space 3}0.008{col 54}{space 4} 1.816742{col 67}{space 3} 9.120259
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 5.444694{col 26}{space 2} 1.591879{col 37}{space 1}    3.42{col 46}{space 3}0.008{col 54}{space 4} 1.843613{col 67}{space 3} 9.045775
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 5.285615{col 26}{space 2} 1.507369{col 37}{space 1}    3.51{col 46}{space 3}0.007{col 54}{space 4}  1.87571{col 67}{space 3}  8.69552
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 4.921365{col 26}{space 2} 1.525503{col 37}{space 1}    3.23{col 46}{space 3}0.010{col 54}{space 4} 1.470436{col 67}{space 3} 8.372293
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 5.449338{col 26}{space 2} 1.539241{col 37}{space 1}    3.54{col 46}{space 3}0.006{col 54}{space 4} 1.967332{col 67}{space 3} 8.931343
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 5.504018{col 26}{space 2} 1.551555{col 37}{space 1}    3.55{col 46}{space 3}0.006{col 54}{space 4} 1.994158{col 67}{space 3} 9.013878
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.090223{col 26}{space 2} .1923997{col 37}{space 1}    5.67{col 46}{space 3}0.000{col 54}{space 4} .6549849{col 67}{space 3} 1.525462
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-3.551835{col 26}{space 2} .8408012{col 37}{space 1}   -4.22{col 46}{space 3}0.002{col 54}{space 4}-5.453859{col 67}{space 3}-1.649811
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .7161269{col 26}{space 2} .1767348{col 37}{space 1}    4.05{col 46}{space 3}0.003{col 54}{space 4} .3163251{col 67}{space 3} 1.115929
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-3.600127{col 26}{space 2} .5774379{col 37}{space 1}   -6.23{col 46}{space 3}0.000{col 54}{space 4}-4.906383{col 67}{space 3}-2.293872
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-1.492323{col 26}{space 2} .6652232{col 37}{space 1}   -2.24{col 46}{space 3}0.052{col 54}{space 4}-2.997163{col 67}{space 3} .0125163
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-3.671785{col 26}{space 2} .6699309{col 37}{space 1}   -5.48{col 46}{space 3}0.000{col 54}{space 4}-5.187274{col 67}{space 3}-2.156297
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} 2.590627{col 26}{space 2}  .778704{col 37}{space 1}    3.33{col 46}{space 3}0.009{col 54}{space 4} .8290763{col 67}{space 3} 4.352178
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}-7.953139{col 26}{space 2} 2.998577{col 37}{space 1}   -2.65{col 46}{space 3}0.026{col 54}{space 4}-14.73639{col 67}{space 3}-1.169886
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-6.266002{col 26}{space 2} 1.343931{col 37}{space 1}   -4.66{col 46}{space 3}0.001{col 54}{space 4}-9.306185{col 67}{space 3}-3.225819
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}    25.29{col 26}{space 2} 13.70774{col 37}{space 1}    1.84{col 46}{space 3}0.098{col 54}{space 4}-5.719072{col 67}{space 3} 56.29906
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 29}t(9) = {res}   -8.0858
{col 25}{txt}Prob>|t| = {res}    0.0005

95%{txt} confidence set for null hypothesis expression: [{res}-4.077{txt}, {res}-1.92{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 29}t(9) = {res}   -1.3731
{col 25}{txt}Prob>|t| = {res}    0.1849

95%{txt} confidence set for null hypothesis expression: [{res}-4.464{txt}, {res}.9378{txt}]
{res}
Warning: 14 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 29}t(9) = {res}   -0.0926
{col 25}{txt}Prob>|t| = {res}    0.9274

95%{txt} confidence set for null hypothesis expression: [{res}-1.297{txt}, {res}1.16{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 29}t(9) = {res}    1.8449
{col 25}{txt}Prob>|t| = {res}    0.0981

95%{txt} confidence set for null hypothesis expression: [{res}-5.64{txt}, {res}59.01{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     1,680
                                                {txt}{help j_robustsingular:F(8, 9) }          =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.7888
                                                {txt}Root MSE          =    {res} 1.2088

{txt}{ralign 78:(Std. err. adjusted for {res:10} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 8}four {c |}{col 14}{res}{space 2}-1.443299{col 26}{space 2} .2405776{col 37}{space 1}   -6.00{col 46}{space 3}0.000{col 54}{space 4}-1.987523{col 67}{space 3}-.8990746
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2}-.5328373{col 26}{space 2} 1.673103{col 37}{space 1}   -0.32{col 46}{space 3}0.757{col 54}{space 4} -4.31766{col 67}{space 3} 3.251985
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .4647159{col 26}{space 2} .5849367{col 37}{space 1}    0.79{col 46}{space 3}0.447{col 54}{space 4}-.8585028{col 67}{space 3} 1.787934
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}  .341176{col 26}{space 2} .3187671{col 37}{space 1}    1.07{col 46}{space 3}0.312{col 54}{space 4}-.3799252{col 67}{space 3} 1.062277
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.1628449{col 26}{space 2} .3295322{col 37}{space 1}   -0.49{col 46}{space 3}0.633{col 54}{space 4}-.9082986{col 67}{space 3} .5826088
{txt}{space 8}555  {c |}{col 14}{res}{space 2} .1900673{col 26}{space 2} .2630896{col 37}{space 1}    0.72{col 46}{space 3}0.488{col 54}{space 4}-.4050827{col 67}{space 3} .7852173
{txt}{space 8}556  {c |}{col 14}{res}{space 2} .0918941{col 26}{space 2} .3905814{col 37}{space 1}    0.24{col 46}{space 3}0.819{col 54}{space 4}-.7916624{col 67}{space 3} .9754506
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .2113414{col 26}{space 2} .4370946{col 37}{space 1}    0.48{col 46}{space 3}0.640{col 54}{space 4}-.7774354{col 67}{space 3} 1.200118
{txt}{space 8}558  {c |}{col 14}{res}{space 2}  .772518{col 26}{space 2} .4601662{col 37}{space 1}    1.68{col 46}{space 3}0.128{col 54}{space 4}-.2684503{col 67}{space 3} 1.813486
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .3085577{col 26}{space 2} .5618239{col 37}{space 1}    0.55{col 46}{space 3}0.596{col 54}{space 4}-.9623763{col 67}{space 3} 1.579492
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .4590527{col 26}{space 2}  .410937{col 37}{space 1}    1.12{col 46}{space 3}0.293{col 54}{space 4}-.4705514{col 67}{space 3} 1.388657
{txt}{space 8}561  {c |}{col 14}{res}{space 2}-.0292869{col 26}{space 2} .4052936{col 37}{space 1}   -0.07{col 46}{space 3}0.944{col 54}{space 4}-.9461247{col 67}{space 3} .8875508
{txt}{space 8}562  {c |}{col 14}{res}{space 2} .4496955{col 26}{space 2} .3896151{col 37}{space 1}    1.15{col 46}{space 3}0.278{col 54}{space 4}-.4316751{col 67}{space 3} 1.331066
{txt}{space 8}563  {c |}{col 14}{res}{space 2} .3459176{col 26}{space 2} .3895354{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4}-.5352727{col 67}{space 3} 1.227108
{txt}{space 8}564  {c |}{col 14}{res}{space 2}   .12571{col 26}{space 2} .5453668{col 37}{space 1}    0.23{col 46}{space 3}0.823{col 54}{space 4}-1.107995{col 67}{space 3} 1.359415
{txt}{space 8}565  {c |}{col 14}{res}{space 2} .5068765{col 26}{space 2} .6312736{col 37}{space 1}    0.80{col 46}{space 3}0.443{col 54}{space 4}-.9211637{col 67}{space 3} 1.934917
{txt}{space 8}566  {c |}{col 14}{res}{space 2} .2779168{col 26}{space 2} .4971485{col 37}{space 1}    0.56{col 46}{space 3}0.590{col 54}{space 4}-.8467112{col 67}{space 3} 1.402545
{txt}{space 8}567  {c |}{col 14}{res}{space 2} .1332961{col 26}{space 2} .5309653{col 37}{space 1}    0.25{col 46}{space 3}0.807{col 54}{space 4}-1.067831{col 67}{space 3} 1.334423
{txt}{space 8}568  {c |}{col 14}{res}{space 2}  .209651{col 26}{space 2}   .49659{col 37}{space 1}    0.42{col 46}{space 3}0.683{col 54}{space 4}-.9137137{col 67}{space 3} 1.333016
{txt}{space 8}569  {c |}{col 14}{res}{space 2} .1828532{col 26}{space 2} .3931164{col 37}{space 1}    0.47{col 46}{space 3}0.653{col 54}{space 4} -.706438{col 67}{space 3} 1.072144
{txt}{space 8}570  {c |}{col 14}{res}{space 2} 1.008757{col 26}{space 2} .5266037{col 37}{space 1}    1.92{col 46}{space 3}0.088{col 54}{space 4} -.182503{col 67}{space 3} 2.200018
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.5126015{col 26}{space 2} .4072345{col 37}{space 1}   -1.26{col 46}{space 3}0.240{col 54}{space 4} -1.43383{col 67}{space 3} .4086271
{txt}{space 8}572  {c |}{col 14}{res}{space 2} -.731177{col 26}{space 2} .4082661{col 37}{space 1}   -1.79{col 46}{space 3}0.107{col 54}{space 4}-1.654739{col 67}{space 3} .1923851
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.2883479{col 26}{space 2} .4929634{col 37}{space 1}   -0.58{col 46}{space 3}0.573{col 54}{space 4}-1.403509{col 67}{space 3} .8268126
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.1825519{col 26}{space 2} .4188532{col 37}{space 1}   -0.44{col 46}{space 3}0.673{col 54}{space 4}-1.130064{col 67}{space 3} .7649598
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .3731753{col 26}{space 2} .6446863{col 37}{space 1}    0.58{col 46}{space 3}0.577{col 54}{space 4}-1.085206{col 67}{space 3} 1.831557
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.0801951{col 26}{space 2} .5244059{col 37}{space 1}   -0.15{col 46}{space 3}0.882{col 54}{space 4}-1.266484{col 67}{space 3} 1.106093
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .3902191{col 26}{space 2}  .810046{col 37}{space 1}    0.48{col 46}{space 3}0.641{col 54}{space 4}-1.442232{col 67}{space 3}  2.22267
{txt}{space 8}578  {c |}{col 14}{res}{space 2}  .452717{col 26}{space 2} .6518085{col 37}{space 1}    0.69{col 46}{space 3}0.505{col 54}{space 4}-1.021776{col 67}{space 3}  1.92721
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .4103753{col 26}{space 2} .4402212{col 37}{space 1}    0.93{col 46}{space 3}0.376{col 54}{space 4}-.5854743{col 67}{space 3} 1.406225
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .6031477{col 26}{space 2} .4023209{col 37}{space 1}    1.50{col 46}{space 3}0.168{col 54}{space 4}-.3069653{col 67}{space 3} 1.513261
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .4089543{col 26}{space 2} .6516936{col 37}{space 1}    0.63{col 46}{space 3}0.546{col 54}{space 4}-1.065279{col 67}{space 3} 1.883188
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .6544415{col 26}{space 2} .5251872{col 37}{space 1}    1.25{col 46}{space 3}0.244{col 54}{space 4}-.5336146{col 67}{space 3} 1.842498
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .4577572{col 26}{space 2} .6357228{col 37}{space 1}    0.72{col 46}{space 3}0.490{col 54}{space 4}-.9803477{col 67}{space 3} 1.895862
{txt}{space 8}584  {c |}{col 14}{res}{space 2} .8459393{col 26}{space 2} .5444987{col 37}{space 1}    1.55{col 46}{space 3}0.155{col 54}{space 4}-.3858024{col 67}{space 3} 2.077681
{txt}{space 8}585  {c |}{col 14}{res}{space 2} .3774224{col 26}{space 2} .4143693{col 37}{space 1}    0.91{col 46}{space 3}0.386{col 54}{space 4}-.5599461{col 67}{space 3} 1.314791
{txt}{space 8}586  {c |}{col 14}{res}{space 2} .5461237{col 26}{space 2} .4087559{col 37}{space 1}    1.34{col 46}{space 3}0.214{col 54}{space 4}-.3785465{col 67}{space 3} 1.470794
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .4693209{col 26}{space 2} .6137194{col 37}{space 1}    0.76{col 46}{space 3}0.464{col 54}{space 4}-.9190087{col 67}{space 3} 1.857651
{txt}{space 8}588  {c |}{col 14}{res}{space 2} .4517983{col 26}{space 2} .8705245{col 37}{space 1}    0.52{col 46}{space 3}0.616{col 54}{space 4}-1.517465{col 67}{space 3} 2.421062
{txt}{space 8}589  {c |}{col 14}{res}{space 2} 1.046456{col 26}{space 2} .6425045{col 37}{space 1}    1.63{col 46}{space 3}0.138{col 54}{space 4}  -.40699{col 67}{space 3} 2.499902
{txt}{space 8}590  {c |}{col 14}{res}{space 2} .7925928{col 26}{space 2} .6986885{col 37}{space 1}    1.13{col 46}{space 3}0.286{col 54}{space 4}-.7879503{col 67}{space 3} 2.373136
{txt}{space 8}591  {c |}{col 14}{res}{space 2} .2776756{col 26}{space 2} .7154491{col 37}{space 1}    0.39{col 46}{space 3}0.707{col 54}{space 4}-1.340783{col 67}{space 3} 1.896134
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .4267417{col 26}{space 2} .6188417{col 37}{space 1}    0.69{col 46}{space 3}0.508{col 54}{space 4}-.9731755{col 67}{space 3} 1.826659
{txt}{space 8}593  {c |}{col 14}{res}{space 2} .9923337{col 26}{space 2} .8820141{col 37}{space 1}    1.13{col 46}{space 3}0.290{col 54}{space 4}-1.002921{col 67}{space 3} 2.987588
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .7828275{col 26}{space 2} .8740432{col 37}{space 1}    0.90{col 46}{space 3}0.394{col 54}{space 4}-1.194396{col 67}{space 3} 2.760051
{txt}{space 8}595  {c |}{col 14}{res}{space 2}  1.11954{col 26}{space 2} .9155215{col 37}{space 1}    1.22{col 46}{space 3}0.252{col 54}{space 4} -.951513{col 67}{space 3} 3.190594
{txt}{space 8}596  {c |}{col 14}{res}{space 2} .2842876{col 26}{space 2} .6971966{col 37}{space 1}    0.41{col 46}{space 3}0.693{col 54}{space 4}-1.292881{col 67}{space 3} 1.861456
{txt}{space 8}597  {c |}{col 14}{res}{space 2} .5062692{col 26}{space 2} .8791634{col 37}{space 1}    0.58{col 46}{space 3}0.579{col 54}{space 4}-1.482537{col 67}{space 3} 2.495075
{txt}{space 8}598  {c |}{col 14}{res}{space 2} .8360713{col 26}{space 2} .7499834{col 37}{space 1}    1.11{col 46}{space 3}0.294{col 54}{space 4}-.8605089{col 67}{space 3} 2.532652
{txt}{space 8}599  {c |}{col 14}{res}{space 2} .4038604{col 26}{space 2} .8392875{col 37}{space 1}    0.48{col 46}{space 3}0.642{col 54}{space 4} -1.49474{col 67}{space 3} 2.302461
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .6869035{col 26}{space 2} 1.054319{col 37}{space 1}    0.65{col 46}{space 3}0.531{col 54}{space 4}-1.698132{col 67}{space 3} 3.071939
{txt}{space 8}601  {c |}{col 14}{res}{space 2} .7430495{col 26}{space 2}  .840143{col 37}{space 1}    0.88{col 46}{space 3}0.399{col 54}{space 4}-1.157486{col 67}{space 3} 2.643585
{txt}{space 8}602  {c |}{col 14}{res}{space 2} 1.360834{col 26}{space 2} .9836641{col 37}{space 1}    1.38{col 46}{space 3}0.200{col 54}{space 4}-.8643691{col 67}{space 3} 3.586036
{txt}{space 8}603  {c |}{col 14}{res}{space 2}  .253132{col 26}{space 2} 1.029763{col 37}{space 1}    0.25{col 46}{space 3}0.811{col 54}{space 4}-2.076354{col 67}{space 3} 2.582618
{txt}{space 8}604  {c |}{col 14}{res}{space 2} .5816778{col 26}{space 2} .8276828{col 37}{space 1}    0.70{col 46}{space 3}0.500{col 54}{space 4}-1.290671{col 67}{space 3} 2.454026
{txt}{space 8}605  {c |}{col 14}{res}{space 2} 1.192293{col 26}{space 2} .8963149{col 37}{space 1}    1.33{col 46}{space 3}0.216{col 54}{space 4}-.8353123{col 67}{space 3} 3.219898
{txt}{space 8}606  {c |}{col 14}{res}{space 2} .7731936{col 26}{space 2}  1.00656{col 37}{space 1}    0.77{col 46}{space 3}0.462{col 54}{space 4}-1.503804{col 67}{space 3} 3.050192
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .8909463{col 26}{space 2} .9554593{col 37}{space 1}    0.93{col 46}{space 3}0.375{col 54}{space 4}-1.270453{col 67}{space 3} 3.052346
{txt}{space 8}608  {c |}{col 14}{res}{space 2} .9855586{col 26}{space 2} .7877112{col 37}{space 1}    1.25{col 46}{space 3}0.242{col 54}{space 4}-.7963679{col 67}{space 3} 2.767485
{txt}{space 8}609  {c |}{col 14}{res}{space 2} .8192069{col 26}{space 2}  1.00806{col 37}{space 1}    0.81{col 46}{space 3}0.437{col 54}{space 4}-1.461184{col 67}{space 3} 3.099598
{txt}{space 8}610  {c |}{col 14}{res}{space 2} 1.695865{col 26}{space 2}  .909427{col 37}{space 1}    1.86{col 46}{space 3}0.095{col 54}{space 4}-.3614016{col 67}{space 3} 3.753132
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.228651{col 26}{space 2} .8670761{col 37}{space 1}    1.42{col 46}{space 3}0.190{col 54}{space 4}-.7328117{col 67}{space 3} 3.190113
{txt}{space 8}612  {c |}{col 14}{res}{space 2}  1.19602{col 26}{space 2} 1.183028{col 37}{space 1}    1.01{col 46}{space 3}0.338{col 54}{space 4}-1.480175{col 67}{space 3} 3.872215
{txt}{space 8}613  {c |}{col 14}{res}{space 2}  1.40076{col 26}{space 2} 1.225816{col 37}{space 1}    1.14{col 46}{space 3}0.283{col 54}{space 4} -1.37223{col 67}{space 3} 4.173749
{txt}{space 8}614  {c |}{col 14}{res}{space 2} 1.041057{col 26}{space 2} 1.102364{col 37}{space 1}    0.94{col 46}{space 3}0.370{col 54}{space 4}-1.452664{col 67}{space 3} 3.534778
{txt}{space 8}615  {c |}{col 14}{res}{space 2} 1.485518{col 26}{space 2} 1.116438{col 37}{space 1}    1.33{col 46}{space 3}0.216{col 54}{space 4}-1.040041{col 67}{space 3} 4.011077
{txt}{space 8}616  {c |}{col 14}{res}{space 2} 1.149467{col 26}{space 2} 1.136564{col 37}{space 1}    1.01{col 46}{space 3}0.338{col 54}{space 4}-1.421621{col 67}{space 3} 3.720554
{txt}{space 8}617  {c |}{col 14}{res}{space 2} 1.070142{col 26}{space 2} 1.420562{col 37}{space 1}    0.75{col 46}{space 3}0.471{col 54}{space 4}-2.143392{col 67}{space 3} 4.283676
{txt}{space 8}618  {c |}{col 14}{res}{space 2} 1.001243{col 26}{space 2}  1.16807{col 37}{space 1}    0.86{col 46}{space 3}0.414{col 54}{space 4}-1.641115{col 67}{space 3} 3.643602
{txt}{space 8}619  {c |}{col 14}{res}{space 2} 1.816256{col 26}{space 2} 1.122499{col 37}{space 1}    1.62{col 46}{space 3}0.140{col 54}{space 4}-.7230144{col 67}{space 3} 4.355526
{txt}{space 8}620  {c |}{col 14}{res}{space 2} 1.596482{col 26}{space 2} 1.611968{col 37}{space 1}    0.99{col 46}{space 3}0.348{col 54}{space 4}-2.050044{col 67}{space 3} 5.243008
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 1.475274{col 26}{space 2} 1.135672{col 37}{space 1}    1.30{col 46}{space 3}0.226{col 54}{space 4}-1.093794{col 67}{space 3} 4.044342
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 1.210284{col 26}{space 2} 1.042937{col 37}{space 1}    1.16{col 46}{space 3}0.276{col 54}{space 4}-1.149005{col 67}{space 3} 3.569572
{txt}{space 8}623  {c |}{col 14}{res}{space 2} 1.078923{col 26}{space 2} 1.282423{col 37}{space 1}    0.84{col 46}{space 3}0.422{col 54}{space 4}-1.822119{col 67}{space 3} 3.979965
{txt}{space 8}624  {c |}{col 14}{res}{space 2} .9967461{col 26}{space 2}  1.57552{col 37}{space 1}    0.63{col 46}{space 3}0.543{col 54}{space 4}-2.567328{col 67}{space 3}  4.56082
{txt}{space 8}625  {c |}{col 14}{res}{space 2} 1.287246{col 26}{space 2} 1.392232{col 37}{space 1}    0.92{col 46}{space 3}0.379{col 54}{space 4}-1.862202{col 67}{space 3} 4.436693
{txt}{space 8}626  {c |}{col 14}{res}{space 2} 1.515667{col 26}{space 2} 1.662026{col 37}{space 1}    0.91{col 46}{space 3}0.386{col 54}{space 4}-2.244097{col 67}{space 3} 5.275432
{txt}{space 8}627  {c |}{col 14}{res}{space 2} 1.115641{col 26}{space 2} 1.498507{col 37}{space 1}    0.74{col 46}{space 3}0.476{col 54}{space 4}-2.274218{col 67}{space 3} 4.505499
{txt}{space 8}628  {c |}{col 14}{res}{space 2} .5487151{col 26}{space 2} 1.483682{col 37}{space 1}    0.37{col 46}{space 3}0.720{col 54}{space 4}-2.807607{col 67}{space 3} 3.905038
{txt}{space 8}629  {c |}{col 14}{res}{space 2} .8816678{col 26}{space 2}  1.35872{col 37}{space 1}    0.65{col 46}{space 3}0.533{col 54}{space 4} -2.19197{col 67}{space 3} 3.955306
{txt}{space 8}630  {c |}{col 14}{res}{space 2} 1.707236{col 26}{space 2} 1.365762{col 37}{space 1}    1.25{col 46}{space 3}0.243{col 54}{space 4}-1.382332{col 67}{space 3} 4.796804
{txt}{space 8}631  {c |}{col 14}{res}{space 2} 1.094118{col 26}{space 2} 1.333823{col 37}{space 1}    0.82{col 46}{space 3}0.433{col 54}{space 4}  -1.9232{col 67}{space 3} 4.111437
{txt}{space 8}632  {c |}{col 14}{res}{space 2} 1.341464{col 26}{space 2} 1.362686{col 37}{space 1}    0.98{col 46}{space 3}0.351{col 54}{space 4}-1.741145{col 67}{space 3} 4.424073
{txt}{space 8}633  {c |}{col 14}{res}{space 2} 1.480471{col 26}{space 2}  1.29164{col 37}{space 1}    1.15{col 46}{space 3}0.281{col 54}{space 4}-1.441422{col 67}{space 3} 4.402363
{txt}{space 8}634  {c |}{col 14}{res}{space 2}  .910598{col 26}{space 2}  1.34518{col 37}{space 1}    0.68{col 46}{space 3}0.515{col 54}{space 4} -2.13241{col 67}{space 3} 3.953606
{txt}{space 8}635  {c |}{col 14}{res}{space 2} 1.526904{col 26}{space 2}  1.33555{col 37}{space 1}    1.14{col 46}{space 3}0.282{col 54}{space 4}-1.494321{col 67}{space 3} 4.548128
{txt}{space 8}636  {c |}{col 14}{res}{space 2} 1.402992{col 26}{space 2} 1.479118{col 37}{space 1}    0.95{col 46}{space 3}0.368{col 54}{space 4}-1.943005{col 67}{space 3} 4.748988
{txt}{space 8}637  {c |}{col 14}{res}{space 2} .7425103{col 26}{space 2} 1.546459{col 37}{space 1}    0.48{col 46}{space 3}0.643{col 54}{space 4}-2.755824{col 67}{space 3} 4.240844
{txt}{space 8}638  {c |}{col 14}{res}{space 2} 1.980753{col 26}{space 2} 1.409005{col 37}{space 1}    1.41{col 46}{space 3}0.193{col 54}{space 4}-1.206638{col 67}{space 3} 5.168144
{txt}{space 8}639  {c |}{col 14}{res}{space 2} 1.205201{col 26}{space 2} 1.624071{col 37}{space 1}    0.74{col 46}{space 3}0.477{col 54}{space 4}-2.468703{col 67}{space 3} 4.879105
{txt}{space 8}640  {c |}{col 14}{res}{space 2} 1.594063{col 26}{space 2} 1.529136{col 37}{space 1}    1.04{col 46}{space 3}0.324{col 54}{space 4}-1.865082{col 67}{space 3} 5.053208
{txt}{space 8}641  {c |}{col 14}{res}{space 2} .8856165{col 26}{space 2} 1.760444{col 37}{space 1}    0.50{col 46}{space 3}0.627{col 54}{space 4}-3.096784{col 67}{space 3} 4.868017
{txt}{space 8}642  {c |}{col 14}{res}{space 2} .8106055{col 26}{space 2} 2.058709{col 37}{space 1}    0.39{col 46}{space 3}0.703{col 54}{space 4}-3.846518{col 67}{space 3} 5.467729
{txt}{space 8}643  {c |}{col 14}{res}{space 2} 1.122205{col 26}{space 2} 1.721931{col 37}{space 1}    0.65{col 46}{space 3}0.531{col 54}{space 4}-2.773073{col 67}{space 3} 5.017482
{txt}{space 8}644  {c |}{col 14}{res}{space 2} .7937719{col 26}{space 2} 1.762124{col 37}{space 1}    0.45{col 46}{space 3}0.663{col 54}{space 4} -3.19243{col 67}{space 3} 4.779974
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 1.846615{col 26}{space 2} 2.159017{col 37}{space 1}    0.86{col 46}{space 3}0.415{col 54}{space 4}-3.037421{col 67}{space 3}  6.73065
{txt}{space 8}646  {c |}{col 14}{res}{space 2} 1.530841{col 26}{space 2} 2.112077{col 37}{space 1}    0.72{col 46}{space 3}0.487{col 54}{space 4}-3.247008{col 67}{space 3} 6.308691
{txt}{space 8}647  {c |}{col 14}{res}{space 2} 1.894559{col 26}{space 2} 2.112662{col 37}{space 1}    0.90{col 46}{space 3}0.393{col 54}{space 4}-2.884614{col 67}{space 3} 6.673732
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 2.373771{col 26}{space 2} 1.943813{col 37}{space 1}    1.22{col 46}{space 3}0.253{col 54}{space 4}-2.023439{col 67}{space 3} 6.770981
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 1.970398{col 26}{space 2} 2.266425{col 37}{space 1}    0.87{col 46}{space 3}0.407{col 54}{space 4}-3.156611{col 67}{space 3} 7.097407
{txt}{space 8}650  {c |}{col 14}{res}{space 2} 1.673229{col 26}{space 2} 2.182511{col 37}{space 1}    0.77{col 46}{space 3}0.463{col 54}{space 4}-3.263955{col 67}{space 3} 6.610413
{txt}{space 8}651  {c |}{col 14}{res}{space 2}  1.45407{col 26}{space 2} 2.490096{col 37}{space 1}    0.58{col 46}{space 3}0.574{col 54}{space 4}-4.178919{col 67}{space 3} 7.087059
{txt}{space 8}652  {c |}{col 14}{res}{space 2} 1.632344{col 26}{space 2} 1.804807{col 37}{space 1}    0.90{col 46}{space 3}0.389{col 54}{space 4}-2.450412{col 67}{space 3} 5.715101
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 2.867822{col 26}{space 2} 1.971645{col 37}{space 1}    1.45{col 46}{space 3}0.180{col 54}{space 4} -1.59235{col 67}{space 3} 7.327994
{txt}{space 8}654  {c |}{col 14}{res}{space 2} 2.140316{col 26}{space 2} 2.192039{col 37}{space 1}    0.98{col 46}{space 3}0.354{col 54}{space 4} -2.81842{col 67}{space 3} 7.099053
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 1.926832{col 26}{space 2} 2.274423{col 37}{space 1}    0.85{col 46}{space 3}0.419{col 54}{space 4}-3.218269{col 67}{space 3} 7.071934
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 2.064599{col 26}{space 2} 2.219949{col 37}{space 1}    0.93{col 46}{space 3}0.377{col 54}{space 4}-2.957274{col 67}{space 3} 7.086472
{txt}{space 8}657  {c |}{col 14}{res}{space 2} 1.919335{col 26}{space 2} 2.067387{col 37}{space 1}    0.93{col 46}{space 3}0.377{col 54}{space 4} -2.75742{col 67}{space 3} 6.596091
{txt}{space 8}658  {c |}{col 14}{res}{space 2} 2.163659{col 26}{space 2} 2.075362{col 37}{space 1}    1.04{col 46}{space 3}0.324{col 54}{space 4}-2.531135{col 67}{space 3} 6.858454
{txt}{space 8}659  {c |}{col 14}{res}{space 2} 1.830718{col 26}{space 2} 2.192786{col 37}{space 1}    0.83{col 46}{space 3}0.425{col 54}{space 4}-3.129709{col 67}{space 3} 6.791145
{txt}{space 8}660  {c |}{col 14}{res}{space 2} 2.155395{col 26}{space 2} 2.072245{col 37}{space 1}    1.04{col 46}{space 3}0.325{col 54}{space 4} -2.53235{col 67}{space 3}  6.84314
{txt}{space 8}661  {c |}{col 14}{res}{space 2} 1.729405{col 26}{space 2} 2.090784{col 37}{space 1}    0.83{col 46}{space 3}0.430{col 54}{space 4}-3.000276{col 67}{space 3} 6.459086
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 2.558548{col 26}{space 2} 2.215859{col 37}{space 1}    1.15{col 46}{space 3}0.278{col 54}{space 4}-2.454073{col 67}{space 3}  7.57117
{txt}{space 8}663  {c |}{col 14}{res}{space 2} 1.561481{col 26}{space 2} 2.382156{col 37}{space 1}    0.66{col 46}{space 3}0.529{col 54}{space 4} -3.82733{col 67}{space 3} 6.950292
{txt}{space 8}664  {c |}{col 14}{res}{space 2} 1.998416{col 26}{space 2}  2.44828{col 37}{space 1}    0.82{col 46}{space 3}0.435{col 54}{space 4}-3.539978{col 67}{space 3} 7.536811
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 2.329796{col 26}{space 2} 2.406069{col 37}{space 1}    0.97{col 46}{space 3}0.358{col 54}{space 4} -3.11311{col 67}{space 3} 7.772703
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 2.284734{col 26}{space 2} 2.180696{col 37}{space 1}    1.05{col 46}{space 3}0.322{col 54}{space 4}-2.648343{col 67}{space 3} 7.217811
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 2.048625{col 26}{space 2} 2.232968{col 37}{space 1}    0.92{col 46}{space 3}0.383{col 54}{space 4}  -3.0027{col 67}{space 3} 7.099949
{txt}{space 8}668  {c |}{col 14}{res}{space 2}   2.0428{col 26}{space 2} 2.264881{col 37}{space 1}    0.90{col 46}{space 3}0.391{col 54}{space 4}-3.080717{col 67}{space 3} 7.166318
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 2.140794{col 26}{space 2} 2.254168{col 37}{space 1}    0.95{col 46}{space 3}0.367{col 54}{space 4}-2.958488{col 67}{space 3} 7.240077
{txt}{space 8}670  {c |}{col 14}{res}{space 2} 1.932956{col 26}{space 2} 2.242569{col 37}{space 1}    0.86{col 46}{space 3}0.411{col 54}{space 4}-3.140086{col 67}{space 3} 7.005999
{txt}{space 8}671  {c |}{col 14}{res}{space 2} 2.109755{col 26}{space 2} 2.323008{col 37}{space 1}    0.91{col 46}{space 3}0.387{col 54}{space 4}-3.145254{col 67}{space 3} 7.364764
{txt}{space 8}672  {c |}{col 14}{res}{space 2} 2.036144{col 26}{space 2} 2.292258{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4}-3.149304{col 67}{space 3} 7.221591
{txt}{space 8}673  {c |}{col 14}{res}{space 2} 2.187009{col 26}{space 2} 2.305685{col 37}{space 1}    0.95{col 46}{space 3}0.368{col 54}{space 4}-3.028812{col 67}{space 3}  7.40283
{txt}{space 8}674  {c |}{col 14}{res}{space 2} 2.464875{col 26}{space 2} 2.339726{col 37}{space 1}    1.05{col 46}{space 3}0.320{col 54}{space 4}-2.827953{col 67}{space 3} 7.757704
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 2.700576{col 26}{space 2} 2.414727{col 37}{space 1}    1.12{col 46}{space 3}0.292{col 54}{space 4}-2.761917{col 67}{space 3} 8.163068
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 2.798083{col 26}{space 2} 2.398296{col 37}{space 1}    1.17{col 46}{space 3}0.273{col 54}{space 4}-2.627241{col 67}{space 3} 8.223406
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 2.443289{col 26}{space 2} 2.445207{col 37}{space 1}    1.00{col 46}{space 3}0.344{col 54}{space 4}-3.088154{col 67}{space 3} 7.974732
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 2.739417{col 26}{space 2} 2.389628{col 37}{space 1}    1.15{col 46}{space 3}0.281{col 54}{space 4}-2.666296{col 67}{space 3}  8.14513
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 2.949648{col 26}{space 2}  2.28539{col 37}{space 1}    1.29{col 46}{space 3}0.229{col 54}{space 4}-2.220262{col 67}{space 3} 8.119559
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 3.194805{col 26}{space 2} 2.408716{col 37}{space 1}    1.33{col 46}{space 3}0.217{col 54}{space 4} -2.25409{col 67}{space 3}   8.6437
{txt}{space 8}681  {c |}{col 14}{res}{space 2}  2.56682{col 26}{space 2} 2.426997{col 37}{space 1}    1.06{col 46}{space 3}0.318{col 54}{space 4}-2.923428{col 67}{space 3} 8.057067
{txt}{space 8}682  {c |}{col 14}{res}{space 2} 2.636952{col 26}{space 2} 2.223169{col 37}{space 1}    1.19{col 46}{space 3}0.266{col 54}{space 4}-2.392205{col 67}{space 3} 7.666109
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 2.438004{col 26}{space 2} 2.517471{col 37}{space 1}    0.97{col 46}{space 3}0.358{col 54}{space 4}-3.256911{col 67}{space 3} 8.132918
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 2.908716{col 26}{space 2} 2.513188{col 37}{space 1}    1.16{col 46}{space 3}0.277{col 54}{space 4} -2.77651{col 67}{space 3} 8.593942
{txt}{space 8}685  {c |}{col 14}{res}{space 2} 2.486346{col 26}{space 2} 2.482574{col 37}{space 1}    1.00{col 46}{space 3}0.343{col 54}{space 4}-3.129626{col 67}{space 3} 8.102318
{txt}{space 8}686  {c |}{col 14}{res}{space 2} 2.625523{col 26}{space 2} 2.677273{col 37}{space 1}    0.98{col 46}{space 3}0.352{col 54}{space 4}-3.430889{col 67}{space 3} 8.681935
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 2.600771{col 26}{space 2} 2.489805{col 37}{space 1}    1.04{col 46}{space 3}0.323{col 54}{space 4}-3.031559{col 67}{space 3} 8.233102
{txt}{space 8}688  {c |}{col 14}{res}{space 2} 2.650019{col 26}{space 2} 2.534957{col 37}{space 1}    1.05{col 46}{space 3}0.323{col 54}{space 4}-3.084453{col 67}{space 3}  8.38449
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 2.720338{col 26}{space 2} 2.456933{col 37}{space 1}    1.11{col 46}{space 3}0.297{col 54}{space 4}-2.837631{col 67}{space 3} 8.278307
{txt}{space 8}690  {c |}{col 14}{res}{space 2} 2.385483{col 26}{space 2} 2.460583{col 37}{space 1}    0.97{col 46}{space 3}0.358{col 54}{space 4}-3.180743{col 67}{space 3}  7.95171
{txt}{space 8}691  {c |}{col 14}{res}{space 2} 2.324865{col 26}{space 2} 2.730261{col 37}{space 1}    0.85{col 46}{space 3}0.417{col 54}{space 4}-3.851413{col 67}{space 3} 8.501144
{txt}{space 8}692  {c |}{col 14}{res}{space 2}   2.6655{col 26}{space 2} 2.618233{col 37}{space 1}    1.02{col 46}{space 3}0.335{col 54}{space 4}-3.257355{col 67}{space 3} 8.588356
{txt}{space 8}693  {c |}{col 14}{res}{space 2} 2.437312{col 26}{space 2} 2.527571{col 37}{space 1}    0.96{col 46}{space 3}0.360{col 54}{space 4}-3.280452{col 67}{space 3} 8.155075
{txt}{space 8}694  {c |}{col 14}{res}{space 2} 2.689118{col 26}{space 2} 2.630762{col 37}{space 1}    1.02{col 46}{space 3}0.333{col 54}{space 4}-3.262078{col 67}{space 3} 8.640315
{txt}{space 8}695  {c |}{col 14}{res}{space 2} 2.453086{col 26}{space 2} 2.540495{col 37}{space 1}    0.97{col 46}{space 3}0.359{col 54}{space 4}-3.293913{col 67}{space 3} 8.200086
{txt}{space 8}696  {c |}{col 14}{res}{space 2} 2.670069{col 26}{space 2} 2.626623{col 37}{space 1}    1.02{col 46}{space 3}0.336{col 54}{space 4}-3.271766{col 67}{space 3} 8.611903
{txt}{space 8}697  {c |}{col 14}{res}{space 2} 2.402322{col 26}{space 2} 2.747336{col 37}{space 1}    0.87{col 46}{space 3}0.405{col 54}{space 4}-3.812583{col 67}{space 3} 8.617227
{txt}{space 8}698  {c |}{col 14}{res}{space 2}  2.45422{col 26}{space 2} 2.653539{col 37}{space 1}    0.92{col 46}{space 3}0.379{col 54}{space 4}-3.548502{col 67}{space 3} 8.456943
{txt}{space 8}699  {c |}{col 14}{res}{space 2} 2.394181{col 26}{space 2} 2.764669{col 37}{space 1}    0.87{col 46}{space 3}0.409{col 54}{space 4}-3.859935{col 67}{space 3} 8.648298
{txt}{space 8}700  {c |}{col 14}{res}{space 2} 2.826736{col 26}{space 2} 2.566173{col 37}{space 1}    1.10{col 46}{space 3}0.299{col 54}{space 4}-2.978351{col 67}{space 3} 8.631822
{txt}{space 8}701  {c |}{col 14}{res}{space 2} 2.188838{col 26}{space 2} 2.743172{col 37}{space 1}    0.80{col 46}{space 3}0.445{col 54}{space 4}-4.016649{col 67}{space 3} 8.394325
{txt}{space 8}702  {c |}{col 14}{res}{space 2} 2.447262{col 26}{space 2} 2.742515{col 37}{space 1}    0.89{col 46}{space 3}0.395{col 54}{space 4}-3.756739{col 67}{space 3} 8.651263
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 2.264532{col 26}{space 2}  2.56688{col 37}{space 1}    0.88{col 46}{space 3}0.401{col 54}{space 4}-3.542154{col 67}{space 3} 8.071217
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 2.725225{col 26}{space 2} 2.504795{col 37}{space 1}    1.09{col 46}{space 3}0.305{col 54}{space 4}-2.941014{col 67}{space 3} 8.391464
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 2.724528{col 26}{space 2} 2.502823{col 37}{space 1}    1.09{col 46}{space 3}0.305{col 54}{space 4}-2.937251{col 67}{space 3} 8.386307
{txt}{space 8}706  {c |}{col 14}{res}{space 2} 2.702613{col 26}{space 2} 2.687634{col 37}{space 1}    1.01{col 46}{space 3}0.341{col 54}{space 4}-3.377237{col 67}{space 3} 8.782463
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 2.682466{col 26}{space 2} 2.721244{col 37}{space 1}    0.99{col 46}{space 3}0.350{col 54}{space 4}-3.473415{col 67}{space 3} 8.838347
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 3.112216{col 26}{space 2} 3.014222{col 37}{space 1}    1.03{col 46}{space 3}0.329{col 54}{space 4}-3.706429{col 67}{space 3} 9.930861
{txt}{space 8}709  {c |}{col 14}{res}{space 2}  2.88714{col 26}{space 2} 2.946756{col 37}{space 1}    0.98{col 46}{space 3}0.353{col 54}{space 4}-3.778885{col 67}{space 3} 9.553165
{txt}{space 8}710  {c |}{col 14}{res}{space 2} 2.945557{col 26}{space 2} 2.754721{col 37}{space 1}    1.07{col 46}{space 3}0.313{col 54}{space 4}-3.286054{col 67}{space 3} 9.177168
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 3.164767{col 26}{space 2} 2.809241{col 37}{space 1}    1.13{col 46}{space 3}0.289{col 54}{space 4}-3.190177{col 67}{space 3} 9.519711
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 3.163987{col 26}{space 2} 2.609382{col 37}{space 1}    1.21{col 46}{space 3}0.256{col 54}{space 4}-2.738845{col 67}{space 3} 9.066819
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 3.153917{col 26}{space 2} 2.754258{col 37}{space 1}    1.15{col 46}{space 3}0.282{col 54}{space 4}-3.076648{col 67}{space 3} 9.384481
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 3.103987{col 26}{space 2} 2.793873{col 37}{space 1}    1.11{col 46}{space 3}0.295{col 54}{space 4}-3.216192{col 67}{space 3} 9.424166
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 3.080181{col 26}{space 2} 2.702064{col 37}{space 1}    1.14{col 46}{space 3}0.284{col 54}{space 4}-3.032313{col 67}{space 3} 9.192675
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 2.921102{col 26}{space 2} 2.795738{col 37}{space 1}    1.04{col 46}{space 3}0.323{col 54}{space 4}-3.403298{col 67}{space 3} 9.245502
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 2.556852{col 26}{space 2} 2.913666{col 37}{space 1}    0.88{col 46}{space 3}0.403{col 54}{space 4}-4.034319{col 67}{space 3} 9.148023
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 3.084824{col 26}{space 2} 2.780829{col 37}{space 1}    1.11{col 46}{space 3}0.296{col 54}{space 4}-3.205849{col 67}{space 3} 9.375498
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 3.139505{col 26}{space 2} 2.725586{col 37}{space 1}    1.15{col 46}{space 3}0.279{col 54}{space 4}  -3.0262{col 67}{space 3}  9.30521
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.470361{col 26}{space 2} .3296746{col 37}{space 1}    4.46{col 46}{space 3}0.002{col 54}{space 4} .7245856{col 67}{space 3} 2.216137
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-2.901961{col 26}{space 2} 1.083641{col 37}{space 1}   -2.68{col 46}{space 3}0.025{col 54}{space 4}-5.353326{col 67}{space 3} -.450595
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.094182{col 26}{space 2} .1924742{col 37}{space 1}    5.68{col 46}{space 3}0.000{col 54}{space 4} .6587747{col 67}{space 3} 1.529588
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2} -3.15237{col 26}{space 2} .7447406{col 37}{space 1}   -4.23{col 46}{space 3}0.002{col 54}{space 4}-4.837091{col 67}{space 3} -1.46765
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-3.844612{col 26}{space 2} .8249289{col 37}{space 1}   -4.66{col 46}{space 3}0.001{col 54}{space 4}-5.710731{col 67}{space 3}-1.978493
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-2.651639{col 26}{space 2} 1.070398{col 37}{space 1}   -2.48{col 46}{space 3}0.035{col 54}{space 4}-5.073048{col 67}{space 3}-.2302306
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} 1.661551{col 26}{space 2} 1.133843{col 37}{space 1}    1.47{col 46}{space 3}0.177{col 54}{space 4}-.9033794{col 67}{space 3} 4.226481
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}-2.789083{col 26}{space 2} 5.043778{col 37}{space 1}   -0.55{col 46}{space 3}0.594{col 54}{space 4} -14.1989{col 67}{space 3} 8.620735
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-5.418067{col 26}{space 2} 1.665113{col 37}{space 1}   -3.25{col 46}{space 3}0.010{col 54}{space 4}-9.184816{col 67}{space 3}-1.651319
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 5.500726{col 26}{space 2}  21.2765{col 37}{space 1}    0.26{col 46}{space 3}0.802{col 54}{space 4}-42.63007{col 67}{space 3} 53.63152
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 29}t(9) = {res}   -6.0823
{col 25}{txt}Prob>|t| = {res}    0.0115

95%{txt} confidence set for null hypothesis expression: [{res}-2.245{txt}, {res}-.6019{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 29}t(9) = {res}   -0.3197
{col 25}{txt}Prob>|t| = {res}    0.7590

95%{txt} confidence set for null hypothesis expression: [{res}-4.096{txt}, {res}3.42{txt}]
{res}
Warning: 8 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 29}t(9) = {res}    0.7975
{col 25}{txt}Prob>|t| = {res}    0.4598

95%{txt} confidence set for null hypothesis expression: [{res}-1.072{txt}, {res}2.013{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 29}t(9) = {res}    0.2593
{col 25}{txt}Prob>|t| = {res}    0.8108

95%{txt} confidence set for null hypothesis expression: [{res}-49.52{txt}, {res}54.57{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     1,680
                                                {txt}{help j_robustsingular:F(8, 9) }          =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.7838
                                                {txt}Root MSE          =    {res} 1.2231

{txt}{ralign 78:(Std. err. adjusted for {res:10} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 8}five {c |}{col 14}{res}{space 2}-.8926192{col 26}{space 2}  .415019{col 37}{space 1}   -2.15{col 46}{space 3}0.060{col 54}{space 4}-1.831457{col 67}{space 3}  .046219
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2}-.5566919{col 26}{space 2} 1.775532{col 37}{space 1}   -0.31{col 46}{space 3}0.761{col 54}{space 4}-4.573225{col 67}{space 3} 3.459841
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .2247272{col 26}{space 2} .6306704{col 37}{space 1}    0.36{col 46}{space 3}0.730{col 54}{space 4}-1.201948{col 67}{space 3} 1.651403
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}  .341176{col 26}{space 2} .3187671{col 37}{space 1}    1.07{col 46}{space 3}0.312{col 54}{space 4}-.3799252{col 67}{space 3} 1.062277
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.1628449{col 26}{space 2} .3295322{col 37}{space 1}   -0.49{col 46}{space 3}0.633{col 54}{space 4}-.9082986{col 67}{space 3} .5826088
{txt}{space 8}555  {c |}{col 14}{res}{space 2} .1900673{col 26}{space 2} .2630896{col 37}{space 1}    0.72{col 46}{space 3}0.488{col 54}{space 4}-.4050827{col 67}{space 3} .7852173
{txt}{space 8}556  {c |}{col 14}{res}{space 2} .0918941{col 26}{space 2} .3905814{col 37}{space 1}    0.24{col 46}{space 3}0.819{col 54}{space 4}-.7916624{col 67}{space 3} .9754506
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .2113414{col 26}{space 2} .4370946{col 37}{space 1}    0.48{col 46}{space 3}0.640{col 54}{space 4}-.7774354{col 67}{space 3} 1.200118
{txt}{space 8}558  {c |}{col 14}{res}{space 2}  .772518{col 26}{space 2} .4601662{col 37}{space 1}    1.68{col 46}{space 3}0.128{col 54}{space 4}-.2684503{col 67}{space 3} 1.813486
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .3085577{col 26}{space 2} .5618239{col 37}{space 1}    0.55{col 46}{space 3}0.596{col 54}{space 4}-.9623763{col 67}{space 3} 1.579492
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .4590527{col 26}{space 2}  .410937{col 37}{space 1}    1.12{col 46}{space 3}0.293{col 54}{space 4}-.4705514{col 67}{space 3} 1.388657
{txt}{space 8}561  {c |}{col 14}{res}{space 2}-.0292869{col 26}{space 2} .4052936{col 37}{space 1}   -0.07{col 46}{space 3}0.944{col 54}{space 4}-.9461247{col 67}{space 3} .8875508
{txt}{space 8}562  {c |}{col 14}{res}{space 2} .4496955{col 26}{space 2} .3896151{col 37}{space 1}    1.15{col 46}{space 3}0.278{col 54}{space 4}-.4316751{col 67}{space 3} 1.331066
{txt}{space 8}563  {c |}{col 14}{res}{space 2} .3459176{col 26}{space 2} .3895354{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4}-.5352727{col 67}{space 3} 1.227108
{txt}{space 8}564  {c |}{col 14}{res}{space 2} .1337266{col 26}{space 2} .5452852{col 37}{space 1}    0.25{col 46}{space 3}0.812{col 54}{space 4}-1.099794{col 67}{space 3} 1.367247
{txt}{space 8}565  {c |}{col 14}{res}{space 2} .5148931{col 26}{space 2} .6261359{col 37}{space 1}    0.82{col 46}{space 3}0.432{col 54}{space 4}-.9015247{col 67}{space 3} 1.931311
{txt}{space 8}566  {c |}{col 14}{res}{space 2} .2859335{col 26}{space 2} .5087782{col 37}{space 1}    0.56{col 46}{space 3}0.588{col 54}{space 4}-.8650027{col 67}{space 3}  1.43687
{txt}{space 8}567  {c |}{col 14}{res}{space 2} .1413127{col 26}{space 2} .5315688{col 37}{space 1}    0.27{col 46}{space 3}0.796{col 54}{space 4} -1.06118{col 67}{space 3} 1.343805
{txt}{space 8}568  {c |}{col 14}{res}{space 2} .2176676{col 26}{space 2} .4939433{col 37}{space 1}    0.44{col 46}{space 3}0.670{col 54}{space 4}-.8997097{col 67}{space 3} 1.335045
{txt}{space 8}569  {c |}{col 14}{res}{space 2} .1908698{col 26}{space 2} .3893245{col 37}{space 1}    0.49{col 46}{space 3}0.636{col 54}{space 4}-.6898435{col 67}{space 3} 1.071583
{txt}{space 8}570  {c |}{col 14}{res}{space 2} 1.016774{col 26}{space 2} .5399801{col 37}{space 1}    1.88{col 46}{space 3}0.092{col 54}{space 4}-.2047457{col 67}{space 3} 2.238294
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.5045849{col 26}{space 2} .3939336{col 37}{space 1}   -1.28{col 46}{space 3}0.232{col 54}{space 4}-1.395724{col 67}{space 3} .3865548
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.7231604{col 26}{space 2} .3982275{col 37}{space 1}   -1.82{col 46}{space 3}0.103{col 54}{space 4}-1.624014{col 67}{space 3} .1776927
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.2803313{col 26}{space 2} .4800213{col 37}{space 1}   -0.58{col 46}{space 3}0.574{col 54}{space 4}-1.366215{col 67}{space 3} .8055524
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.1745353{col 26}{space 2} .4124532{col 37}{space 1}   -0.42{col 46}{space 3}0.682{col 54}{space 4}-1.107569{col 67}{space 3} .7584985
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .3811919{col 26}{space 2} .6415302{col 37}{space 1}    0.59{col 46}{space 3}0.567{col 54}{space 4} -1.07005{col 67}{space 3} 1.832434
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.0646563{col 26}{space 2} .5136844{col 37}{space 1}   -0.13{col 46}{space 3}0.903{col 54}{space 4}-1.226691{col 67}{space 3} 1.097379
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .4057579{col 26}{space 2} .8147089{col 37}{space 1}    0.50{col 46}{space 3}0.630{col 54}{space 4}-1.437242{col 67}{space 3} 2.248758
{txt}{space 8}578  {c |}{col 14}{res}{space 2} .4682558{col 26}{space 2}  .637976{col 37}{space 1}    0.73{col 46}{space 3}0.482{col 54}{space 4}-.9749462{col 67}{space 3} 1.911458
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .4259141{col 26}{space 2} .4438218{col 37}{space 1}    0.96{col 46}{space 3}0.362{col 54}{space 4}-.5780805{col 67}{space 3} 1.429909
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .6186865{col 26}{space 2}  .389236{col 37}{space 1}    1.59{col 46}{space 3}0.146{col 54}{space 4}-.2618265{col 67}{space 3}   1.4992
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .4244931{col 26}{space 2} .6518059{col 37}{space 1}    0.65{col 46}{space 3}0.531{col 54}{space 4}-1.049994{col 67}{space 3} 1.898981
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .6699803{col 26}{space 2} .5223368{col 37}{space 1}    1.28{col 46}{space 3}0.232{col 54}{space 4}-.5116276{col 67}{space 3} 1.851588
{txt}{space 8}583  {c |}{col 14}{res}{space 2}  .473296{col 26}{space 2} .6122706{col 37}{space 1}    0.77{col 46}{space 3}0.459{col 54}{space 4}-.9117563{col 67}{space 3} 1.858348
{txt}{space 8}584  {c |}{col 14}{res}{space 2} .8614781{col 26}{space 2} .5396978{col 37}{space 1}    1.60{col 46}{space 3}0.145{col 54}{space 4}-.3594031{col 67}{space 3} 2.082359
{txt}{space 8}585  {c |}{col 14}{res}{space 2} .3929612{col 26}{space 2} .4161693{col 37}{space 1}    0.94{col 46}{space 3}0.370{col 54}{space 4}-.5484791{col 67}{space 3} 1.334402
{txt}{space 8}586  {c |}{col 14}{res}{space 2} .5616625{col 26}{space 2} .3965412{col 37}{space 1}    1.42{col 46}{space 3}0.190{col 54}{space 4}-.3353759{col 67}{space 3} 1.458701
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .4848597{col 26}{space 2} .6252865{col 37}{space 1}    0.78{col 46}{space 3}0.458{col 54}{space 4}-.9296366{col 67}{space 3} 1.899356
{txt}{space 8}588  {c |}{col 14}{res}{space 2} .4753841{col 26}{space 2} .8823595{col 37}{space 1}    0.54{col 46}{space 3}0.603{col 54}{space 4}-1.520652{col 67}{space 3}  2.47142
{txt}{space 8}589  {c |}{col 14}{res}{space 2} 1.070042{col 26}{space 2} .6543738{col 37}{space 1}    1.64{col 46}{space 3}0.136{col 54}{space 4}-.4102544{col 67}{space 3} 2.550338
{txt}{space 8}590  {c |}{col 14}{res}{space 2} .8161786{col 26}{space 2} .6984313{col 37}{space 1}    1.17{col 46}{space 3}0.273{col 54}{space 4}-.7637827{col 67}{space 3}  2.39614
{txt}{space 8}591  {c |}{col 14}{res}{space 2} .3012614{col 26}{space 2} .7168685{col 37}{space 1}    0.42{col 46}{space 3}0.684{col 54}{space 4}-1.320408{col 67}{space 3} 1.922931
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .4503275{col 26}{space 2} .6272005{col 37}{space 1}    0.72{col 46}{space 3}0.491{col 54}{space 4}-.9684986{col 67}{space 3} 1.869154
{txt}{space 8}593  {c |}{col 14}{res}{space 2}  1.01592{col 26}{space 2} .8935331{col 37}{space 1}    1.14{col 46}{space 3}0.285{col 54}{space 4}-1.005393{col 67}{space 3} 3.037232
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .8064133{col 26}{space 2} .8969413{col 37}{space 1}    0.90{col 46}{space 3}0.392{col 54}{space 4}-1.222609{col 67}{space 3} 2.835436
{txt}{space 8}595  {c |}{col 14}{res}{space 2} 1.143126{col 26}{space 2} .9256667{col 37}{space 1}    1.23{col 46}{space 3}0.248{col 54}{space 4}-.9508772{col 67}{space 3}  3.23713
{txt}{space 8}596  {c |}{col 14}{res}{space 2} .3078734{col 26}{space 2} .7100411{col 37}{space 1}    0.43{col 46}{space 3}0.675{col 54}{space 4}-1.298351{col 67}{space 3} 1.914098
{txt}{space 8}597  {c |}{col 14}{res}{space 2}  .529855{col 26}{space 2} .8877908{col 37}{space 1}    0.60{col 46}{space 3}0.565{col 54}{space 4}-1.478467{col 67}{space 3} 2.538177
{txt}{space 8}598  {c |}{col 14}{res}{space 2} .8596571{col 26}{space 2}  .746185{col 37}{space 1}    1.15{col 46}{space 3}0.279{col 54}{space 4}-.8283307{col 67}{space 3} 2.547645
{txt}{space 8}599  {c |}{col 14}{res}{space 2} .4274462{col 26}{space 2} .8293728{col 37}{space 1}    0.52{col 46}{space 3}0.619{col 54}{space 4}-1.448725{col 67}{space 3} 2.303618
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .7179776{col 26}{space 2} 1.062347{col 37}{space 1}    0.68{col 46}{space 3}0.516{col 54}{space 4}-1.685218{col 67}{space 3} 3.121173
{txt}{space 8}601  {c |}{col 14}{res}{space 2} .7741236{col 26}{space 2} .8616061{col 37}{space 1}    0.90{col 46}{space 3}0.392{col 54}{space 4}-1.174965{col 67}{space 3} 2.723212
{txt}{space 8}602  {c |}{col 14}{res}{space 2} 1.391908{col 26}{space 2} 1.009236{col 37}{space 1}    1.38{col 46}{space 3}0.201{col 54}{space 4}-.8911433{col 67}{space 3} 3.674959
{txt}{space 8}603  {c |}{col 14}{res}{space 2} .2842061{col 26}{space 2} 1.067416{col 37}{space 1}    0.27{col 46}{space 3}0.796{col 54}{space 4}-2.130456{col 67}{space 3} 2.698868
{txt}{space 8}604  {c |}{col 14}{res}{space 2} .6127519{col 26}{space 2} .8464478{col 37}{space 1}    0.72{col 46}{space 3}0.488{col 54}{space 4}-1.302046{col 67}{space 3}  2.52755
{txt}{space 8}605  {c |}{col 14}{res}{space 2} 1.223367{col 26}{space 2} .9485767{col 37}{space 1}    1.29{col 46}{space 3}0.229{col 54}{space 4}-.9224629{col 67}{space 3} 3.369196
{txt}{space 8}606  {c |}{col 14}{res}{space 2} .8042677{col 26}{space 2} 1.044493{col 37}{space 1}    0.77{col 46}{space 3}0.461{col 54}{space 4}-1.558541{col 67}{space 3} 3.167076
{txt}{space 8}607  {c |}{col 14}{res}{space 2} .9220204{col 26}{space 2} .9647936{col 37}{space 1}    0.96{col 46}{space 3}0.364{col 54}{space 4}-1.260494{col 67}{space 3} 3.104535
{txt}{space 8}608  {c |}{col 14}{res}{space 2} 1.016633{col 26}{space 2} .8348262{col 37}{space 1}    1.22{col 46}{space 3}0.254{col 54}{space 4}-.8718755{col 67}{space 3} 2.905141
{txt}{space 8}609  {c |}{col 14}{res}{space 2}  .850281{col 26}{space 2} .9998211{col 37}{space 1}    0.85{col 46}{space 3}0.417{col 54}{space 4}-1.411471{col 67}{space 3} 3.112033
{txt}{space 8}610  {c |}{col 14}{res}{space 2} 1.726939{col 26}{space 2} .9240155{col 37}{space 1}    1.87{col 46}{space 3}0.094{col 54}{space 4}-.3633291{col 67}{space 3} 3.817208
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.259725{col 26}{space 2} .8874876{col 37}{space 1}    1.42{col 46}{space 3}0.189{col 54}{space 4}-.7479117{col 67}{space 3} 3.267361
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 1.235505{col 26}{space 2} 1.226725{col 37}{space 1}    1.01{col 46}{space 3}0.340{col 54}{space 4} -1.53954{col 67}{space 3}  4.01055
{txt}{space 8}613  {c |}{col 14}{res}{space 2} 1.440245{col 26}{space 2} 1.221251{col 37}{space 1}    1.18{col 46}{space 3}0.269{col 54}{space 4}-1.322417{col 67}{space 3} 4.202906
{txt}{space 8}614  {c |}{col 14}{res}{space 2} 1.080542{col 26}{space 2} 1.144121{col 37}{space 1}    0.94{col 46}{space 3}0.370{col 54}{space 4}-1.507639{col 67}{space 3} 3.668723
{txt}{space 8}615  {c |}{col 14}{res}{space 2} 1.525003{col 26}{space 2} 1.134813{col 37}{space 1}    1.34{col 46}{space 3}0.212{col 54}{space 4}-1.042123{col 67}{space 3} 4.092129
{txt}{space 8}616  {c |}{col 14}{res}{space 2} 1.188952{col 26}{space 2} 1.162515{col 37}{space 1}    1.02{col 46}{space 3}0.333{col 54}{space 4}-1.440839{col 67}{space 3} 3.818743
{txt}{space 8}617  {c |}{col 14}{res}{space 2} 1.109627{col 26}{space 2} 1.414573{col 37}{space 1}    0.78{col 46}{space 3}0.453{col 54}{space 4} -2.09036{col 67}{space 3} 4.309614
{txt}{space 8}618  {c |}{col 14}{res}{space 2} 1.040728{col 26}{space 2} 1.196958{col 37}{space 1}    0.87{col 46}{space 3}0.407{col 54}{space 4} -1.66698{col 67}{space 3} 3.748436
{txt}{space 8}619  {c |}{col 14}{res}{space 2} 1.855741{col 26}{space 2} 1.159837{col 37}{space 1}    1.60{col 46}{space 3}0.144{col 54}{space 4}-.7679929{col 67}{space 3} 4.479475
{txt}{space 8}620  {c |}{col 14}{res}{space 2} 1.635967{col 26}{space 2} 1.599908{col 37}{space 1}    1.02{col 46}{space 3}0.333{col 54}{space 4}-1.983276{col 67}{space 3}  5.25521
{txt}{space 8}621  {c |}{col 14}{res}{space 2} 1.514759{col 26}{space 2} 1.188999{col 37}{space 1}    1.27{col 46}{space 3}0.235{col 54}{space 4}-1.174942{col 67}{space 3} 4.204461
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 1.249769{col 26}{space 2} 1.085869{col 37}{space 1}    1.15{col 46}{space 3}0.279{col 54}{space 4}-1.206638{col 67}{space 3} 3.706175
{txt}{space 8}623  {c |}{col 14}{res}{space 2} 1.118408{col 26}{space 2}  1.29673{col 37}{space 1}    0.86{col 46}{space 3}0.411{col 54}{space 4}-1.814998{col 67}{space 3} 4.051814
{txt}{space 8}624  {c |}{col 14}{res}{space 2} 1.103112{col 26}{space 2} 1.615372{col 37}{space 1}    0.68{col 46}{space 3}0.512{col 54}{space 4}-2.551114{col 67}{space 3} 4.757338
{txt}{space 8}625  {c |}{col 14}{res}{space 2} 1.393611{col 26}{space 2} 1.435833{col 37}{space 1}    0.97{col 46}{space 3}0.357{col 54}{space 4}-1.854469{col 67}{space 3} 4.641692
{txt}{space 8}626  {c |}{col 14}{res}{space 2} 1.622033{col 26}{space 2} 1.695715{col 37}{space 1}    0.96{col 46}{space 3}0.364{col 54}{space 4} -2.21394{col 67}{space 3} 5.458006
{txt}{space 8}627  {c |}{col 14}{res}{space 2} 1.222006{col 26}{space 2} 1.539081{col 37}{space 1}    0.79{col 46}{space 3}0.448{col 54}{space 4}-2.259637{col 67}{space 3} 4.703649
{txt}{space 8}628  {c |}{col 14}{res}{space 2} .6550807{col 26}{space 2} 1.553482{col 37}{space 1}    0.42{col 46}{space 3}0.683{col 54}{space 4}-2.859139{col 67}{space 3} 4.169301
{txt}{space 8}629  {c |}{col 14}{res}{space 2} .9880334{col 26}{space 2} 1.428506{col 37}{space 1}    0.69{col 46}{space 3}0.507{col 54}{space 4}-2.243472{col 67}{space 3} 4.219539
{txt}{space 8}630  {c |}{col 14}{res}{space 2} 1.813601{col 26}{space 2} 1.427004{col 37}{space 1}    1.27{col 46}{space 3}0.236{col 54}{space 4}-1.414505{col 67}{space 3} 5.041708
{txt}{space 8}631  {c |}{col 14}{res}{space 2} 1.200484{col 26}{space 2} 1.396359{col 37}{space 1}    0.86{col 46}{space 3}0.412{col 54}{space 4}  -1.9583{col 67}{space 3} 4.359267
{txt}{space 8}632  {c |}{col 14}{res}{space 2} 1.447829{col 26}{space 2} 1.424516{col 37}{space 1}    1.02{col 46}{space 3}0.336{col 54}{space 4} -1.77465{col 67}{space 3} 4.670309
{txt}{space 8}633  {c |}{col 14}{res}{space 2} 1.586836{col 26}{space 2} 1.357667{col 37}{space 1}    1.17{col 46}{space 3}0.273{col 54}{space 4}-1.484419{col 67}{space 3} 4.658091
{txt}{space 8}634  {c |}{col 14}{res}{space 2} 1.016964{col 26}{space 2} 1.415179{col 37}{space 1}    0.72{col 46}{space 3}0.491{col 54}{space 4}-2.184394{col 67}{space 3} 4.218322
{txt}{space 8}635  {c |}{col 14}{res}{space 2} 1.633269{col 26}{space 2} 1.389409{col 37}{space 1}    1.18{col 46}{space 3}0.270{col 54}{space 4}-1.509792{col 67}{space 3}  4.77633
{txt}{space 8}636  {c |}{col 14}{res}{space 2} 1.515158{col 26}{space 2} 1.541516{col 37}{space 1}    0.98{col 46}{space 3}0.351{col 54}{space 4}-1.971992{col 67}{space 3} 5.002309
{txt}{space 8}637  {c |}{col 14}{res}{space 2} .8546772{col 26}{space 2} 1.621919{col 37}{space 1}    0.53{col 46}{space 3}0.611{col 54}{space 4}-2.814359{col 67}{space 3} 4.523714
{txt}{space 8}638  {c |}{col 14}{res}{space 2}  2.09292{col 26}{space 2} 1.478993{col 37}{space 1}    1.42{col 46}{space 3}0.191{col 54}{space 4}-1.252795{col 67}{space 3} 5.438635
{txt}{space 8}639  {c |}{col 14}{res}{space 2} 1.317368{col 26}{space 2} 1.706775{col 37}{space 1}    0.77{col 46}{space 3}0.460{col 54}{space 4}-2.543626{col 67}{space 3} 5.178361
{txt}{space 8}640  {c |}{col 14}{res}{space 2}  1.70623{col 26}{space 2} 1.596247{col 37}{space 1}    1.07{col 46}{space 3}0.313{col 54}{space 4}-1.904732{col 67}{space 3} 5.317191
{txt}{space 8}641  {c |}{col 14}{res}{space 2} .9977834{col 26}{space 2} 1.827659{col 37}{space 1}    0.55{col 46}{space 3}0.598{col 54}{space 4}-3.136668{col 67}{space 3} 5.132234
{txt}{space 8}642  {c |}{col 14}{res}{space 2} .9227724{col 26}{space 2}  2.12622{col 37}{space 1}    0.43{col 46}{space 3}0.675{col 54}{space 4}-3.887071{col 67}{space 3} 5.732616
{txt}{space 8}643  {c |}{col 14}{res}{space 2} 1.234372{col 26}{space 2} 1.806268{col 37}{space 1}    0.68{col 46}{space 3}0.512{col 54}{space 4}-2.851691{col 67}{space 3} 5.320434
{txt}{space 8}644  {c |}{col 14}{res}{space 2} .9059388{col 26}{space 2} 1.835844{col 37}{space 1}    0.49{col 46}{space 3}0.633{col 54}{space 4} -3.24703{col 67}{space 3} 5.058907
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 1.958782{col 26}{space 2} 2.209885{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4}-3.040325{col 67}{space 3} 6.957888
{txt}{space 8}646  {c |}{col 14}{res}{space 2} 1.643008{col 26}{space 2} 2.181033{col 37}{space 1}    0.75{col 46}{space 3}0.471{col 54}{space 4}-3.290832{col 67}{space 3} 6.576848
{txt}{space 8}647  {c |}{col 14}{res}{space 2} 2.006726{col 26}{space 2} 2.174205{col 37}{space 1}    0.92{col 46}{space 3}0.380{col 54}{space 4}-2.911667{col 67}{space 3}  6.92512
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 2.492273{col 26}{space 2} 2.026623{col 37}{space 1}    1.23{col 46}{space 3}0.250{col 54}{space 4}-2.092266{col 67}{space 3} 7.076812
{txt}{space 8}649  {c |}{col 14}{res}{space 2}   2.0889{col 26}{space 2} 2.336691{col 37}{space 1}    0.89{col 46}{space 3}0.395{col 54}{space 4}-3.197061{col 67}{space 3} 7.374861
{txt}{space 8}650  {c |}{col 14}{res}{space 2} 1.791731{col 26}{space 2} 2.260545{col 37}{space 1}    0.79{col 46}{space 3}0.448{col 54}{space 4}-3.321976{col 67}{space 3} 6.905438
{txt}{space 8}651  {c |}{col 14}{res}{space 2} 1.572572{col 26}{space 2} 2.565914{col 37}{space 1}    0.61{col 46}{space 3}0.555{col 54}{space 4}-4.231929{col 67}{space 3} 7.377074
{txt}{space 8}652  {c |}{col 14}{res}{space 2} 1.750846{col 26}{space 2} 1.876496{col 37}{space 1}    0.93{col 46}{space 3}0.375{col 54}{space 4}-2.494083{col 67}{space 3} 5.995776
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 2.986324{col 26}{space 2} 2.073338{col 37}{space 1}    1.44{col 46}{space 3}0.184{col 54}{space 4}-1.703893{col 67}{space 3} 7.676542
{txt}{space 8}654  {c |}{col 14}{res}{space 2} 2.258818{col 26}{space 2} 2.270724{col 37}{space 1}    0.99{col 46}{space 3}0.346{col 54}{space 4}-2.877916{col 67}{space 3} 7.395552
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 2.045334{col 26}{space 2} 2.338554{col 37}{space 1}    0.87{col 46}{space 3}0.405{col 54}{space 4}-3.244843{col 67}{space 3} 7.335512
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 2.183101{col 26}{space 2} 2.306136{col 37}{space 1}    0.95{col 46}{space 3}0.369{col 54}{space 4} -3.03374{col 67}{space 3} 7.399942
{txt}{space 8}657  {c |}{col 14}{res}{space 2} 2.037837{col 26}{space 2} 2.131913{col 37}{space 1}    0.96{col 46}{space 3}0.364{col 54}{space 4}-2.784884{col 67}{space 3} 6.860559
{txt}{space 8}658  {c |}{col 14}{res}{space 2} 2.282162{col 26}{space 2} 2.149433{col 37}{space 1}    1.06{col 46}{space 3}0.316{col 54}{space 4}-2.580193{col 67}{space 3} 7.144516
{txt}{space 8}659  {c |}{col 14}{res}{space 2}  1.94922{col 26}{space 2} 2.274317{col 37}{space 1}    0.86{col 46}{space 3}0.414{col 54}{space 4}-3.195642{col 67}{space 3} 7.094082
{txt}{space 8}660  {c |}{col 14}{res}{space 2} 2.279243{col 26}{space 2}   2.1416{col 37}{space 1}    1.06{col 46}{space 3}0.315{col 54}{space 4}-2.565392{col 67}{space 3} 7.123878
{txt}{space 8}661  {c |}{col 14}{res}{space 2} 1.853253{col 26}{space 2} 2.146643{col 37}{space 1}    0.86{col 46}{space 3}0.410{col 54}{space 4}-3.002791{col 67}{space 3} 6.709298
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 2.682396{col 26}{space 2} 2.300891{col 37}{space 1}    1.17{col 46}{space 3}0.274{col 54}{space 4}-2.522582{col 67}{space 3} 7.887374
{txt}{space 8}663  {c |}{col 14}{res}{space 2} 1.685329{col 26}{space 2} 2.459772{col 37}{space 1}    0.69{col 46}{space 3}0.511{col 54}{space 4}-3.879062{col 67}{space 3}  7.24972
{txt}{space 8}664  {c |}{col 14}{res}{space 2} 2.122264{col 26}{space 2} 2.533441{col 37}{space 1}    0.84{col 46}{space 3}0.424{col 54}{space 4}-3.608777{col 67}{space 3} 7.853305
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 2.453644{col 26}{space 2} 2.494917{col 37}{space 1}    0.98{col 46}{space 3}0.351{col 54}{space 4}-3.190249{col 67}{space 3} 8.097538
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 2.408582{col 26}{space 2} 2.275594{col 37}{space 1}    1.06{col 46}{space 3}0.317{col 54}{space 4} -2.73917{col 67}{space 3} 7.556333
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 2.172473{col 26}{space 2} 2.320344{col 37}{space 1}    0.94{col 46}{space 3}0.374{col 54}{space 4} -3.07651{col 67}{space 3} 7.421455
{txt}{space 8}668  {c |}{col 14}{res}{space 2} 2.166648{col 26}{space 2} 2.345385{col 37}{space 1}    0.92{col 46}{space 3}0.380{col 54}{space 4}-3.138981{col 67}{space 3} 7.472278
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 2.264642{col 26}{space 2} 2.327483{col 37}{space 1}    0.97{col 46}{space 3}0.356{col 54}{space 4}-3.000491{col 67}{space 3} 7.529775
{txt}{space 8}670  {c |}{col 14}{res}{space 2} 1.912474{col 26}{space 2} 2.300382{col 37}{space 1}    0.83{col 46}{space 3}0.427{col 54}{space 4}-3.291352{col 67}{space 3}   7.1163
{txt}{space 8}671  {c |}{col 14}{res}{space 2} 2.089273{col 26}{space 2} 2.376284{col 37}{space 1}    0.88{col 46}{space 3}0.402{col 54}{space 4}-3.286255{col 67}{space 3}   7.4648
{txt}{space 8}672  {c |}{col 14}{res}{space 2} 2.020982{col 26}{space 2} 2.365327{col 37}{space 1}    0.85{col 46}{space 3}0.415{col 54}{space 4}-3.329759{col 67}{space 3} 7.371723
{txt}{space 8}673  {c |}{col 14}{res}{space 2} 2.171847{col 26}{space 2} 2.378042{col 37}{space 1}    0.91{col 46}{space 3}0.385{col 54}{space 4}-3.207657{col 67}{space 3} 7.551351
{txt}{space 8}674  {c |}{col 14}{res}{space 2} 2.449714{col 26}{space 2} 2.401987{col 37}{space 1}    1.02{col 46}{space 3}0.334{col 54}{space 4}-2.983958{col 67}{space 3} 7.883385
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 2.685414{col 26}{space 2} 2.470903{col 37}{space 1}    1.09{col 46}{space 3}0.305{col 54}{space 4}-2.904158{col 67}{space 3} 8.274986
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 2.782921{col 26}{space 2} 2.459258{col 37}{space 1}    1.13{col 46}{space 3}0.287{col 54}{space 4}-2.780308{col 67}{space 3} 8.346149
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 2.428128{col 26}{space 2} 2.515377{col 37}{space 1}    0.97{col 46}{space 3}0.360{col 54}{space 4}-3.262051{col 67}{space 3} 8.118306
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 2.724255{col 26}{space 2} 2.472861{col 37}{space 1}    1.10{col 46}{space 3}0.299{col 54}{space 4}-2.869746{col 67}{space 3} 8.318257
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 2.934487{col 26}{space 2} 2.362111{col 37}{space 1}    1.24{col 46}{space 3}0.246{col 54}{space 4} -2.40898{col 67}{space 3} 8.277954
{txt}{space 8}680  {c |}{col 14}{res}{space 2} 3.179643{col 26}{space 2} 2.496222{col 37}{space 1}    1.27{col 46}{space 3}0.235{col 54}{space 4}-2.467204{col 67}{space 3}  8.82649
{txt}{space 8}681  {c |}{col 14}{res}{space 2} 2.551658{col 26}{space 2} 2.495163{col 37}{space 1}    1.02{col 46}{space 3}0.333{col 54}{space 4}-3.092792{col 67}{space 3} 8.196108
{txt}{space 8}682  {c |}{col 14}{res}{space 2}  2.62179{col 26}{space 2} 2.289834{col 37}{space 1}    1.14{col 46}{space 3}0.282{col 54}{space 4}-2.558174{col 67}{space 3} 7.801755
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 2.422842{col 26}{space 2} 2.583297{col 37}{space 1}    0.94{col 46}{space 3}0.373{col 54}{space 4}-3.420981{col 67}{space 3} 8.266665
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 2.899402{col 26}{space 2} 2.585766{col 37}{space 1}    1.12{col 46}{space 3}0.291{col 54}{space 4}-2.950006{col 67}{space 3} 8.748811
{txt}{space 8}685  {c |}{col 14}{res}{space 2} 2.477032{col 26}{space 2} 2.562934{col 37}{space 1}    0.97{col 46}{space 3}0.359{col 54}{space 4}-3.320727{col 67}{space 3} 8.274791
{txt}{space 8}686  {c |}{col 14}{res}{space 2} 2.616209{col 26}{space 2} 2.750221{col 37}{space 1}    0.95{col 46}{space 3}0.366{col 54}{space 4}-3.605224{col 67}{space 3} 8.837641
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 2.591457{col 26}{space 2} 2.583638{col 37}{space 1}    1.00{col 46}{space 3}0.342{col 54}{space 4}-3.253139{col 67}{space 3} 8.436053
{txt}{space 8}688  {c |}{col 14}{res}{space 2} 2.640704{col 26}{space 2} 2.616693{col 37}{space 1}    1.01{col 46}{space 3}0.339{col 54}{space 4}-3.278668{col 67}{space 3} 8.560076
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 2.711024{col 26}{space 2} 2.550412{col 37}{space 1}    1.06{col 46}{space 3}0.315{col 54}{space 4} -3.05841{col 67}{space 3} 8.480457
{txt}{space 8}690  {c |}{col 14}{res}{space 2} 2.376169{col 26}{space 2} 2.543756{col 37}{space 1}    0.93{col 46}{space 3}0.375{col 54}{space 4}-3.378207{col 67}{space 3} 8.130545
{txt}{space 8}691  {c |}{col 14}{res}{space 2} 2.315551{col 26}{space 2} 2.797636{col 37}{space 1}    0.83{col 46}{space 3}0.429{col 54}{space 4}-4.013141{col 67}{space 3} 8.644243
{txt}{space 8}692  {c |}{col 14}{res}{space 2} 2.656186{col 26}{space 2} 2.706217{col 37}{space 1}    0.98{col 46}{space 3}0.352{col 54}{space 4}-3.465702{col 67}{space 3} 8.778074
{txt}{space 8}693  {c |}{col 14}{res}{space 2} 2.427997{col 26}{space 2} 2.608489{col 37}{space 1}    0.93{col 46}{space 3}0.376{col 54}{space 4}-3.472815{col 67}{space 3}  8.32881
{txt}{space 8}694  {c |}{col 14}{res}{space 2} 2.679804{col 26}{space 2} 2.702926{col 37}{space 1}    0.99{col 46}{space 3}0.347{col 54}{space 4} -3.43464{col 67}{space 3} 8.794248
{txt}{space 8}695  {c |}{col 14}{res}{space 2} 2.443772{col 26}{space 2} 2.629077{col 37}{space 1}    0.93{col 46}{space 3}0.377{col 54}{space 4}-3.503614{col 67}{space 3} 8.391158
{txt}{space 8}696  {c |}{col 14}{res}{space 2} 2.664824{col 26}{space 2} 2.710088{col 37}{space 1}    0.98{col 46}{space 3}0.351{col 54}{space 4}-3.465821{col 67}{space 3} 8.795468
{txt}{space 8}697  {c |}{col 14}{res}{space 2} 2.397077{col 26}{space 2} 2.828334{col 37}{space 1}    0.85{col 46}{space 3}0.419{col 54}{space 4} -4.00106{col 67}{space 3} 8.795214
{txt}{space 8}698  {c |}{col 14}{res}{space 2} 2.448975{col 26}{space 2} 2.746447{col 37}{space 1}    0.89{col 46}{space 3}0.396{col 54}{space 4}-3.763918{col 67}{space 3} 8.661869
{txt}{space 8}699  {c |}{col 14}{res}{space 2} 2.388936{col 26}{space 2}   2.8386{col 37}{space 1}    0.84{col 46}{space 3}0.422{col 54}{space 4}-4.032423{col 67}{space 3} 8.810296
{txt}{space 8}700  {c |}{col 14}{res}{space 2} 2.821491{col 26}{space 2} 2.658955{col 37}{space 1}    1.06{col 46}{space 3}0.316{col 54}{space 4}-3.193484{col 67}{space 3} 8.836465
{txt}{space 8}701  {c |}{col 14}{res}{space 2} 2.183592{col 26}{space 2} 2.816385{col 37}{space 1}    0.78{col 46}{space 3}0.458{col 54}{space 4}-4.187513{col 67}{space 3} 8.554698
{txt}{space 8}702  {c |}{col 14}{res}{space 2} 2.442017{col 26}{space 2}  2.83263{col 37}{space 1}    0.86{col 46}{space 3}0.411{col 54}{space 4}-3.965838{col 67}{space 3} 8.849872
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 2.348549{col 26}{space 2} 2.685405{col 37}{space 1}    0.87{col 46}{space 3}0.405{col 54}{space 4}-3.726259{col 67}{space 3} 8.423356
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 2.809242{col 26}{space 2} 2.650011{col 37}{space 1}    1.06{col 46}{space 3}0.317{col 54}{space 4}-3.185499{col 67}{space 3} 8.803984
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 2.808545{col 26}{space 2} 2.629433{col 37}{space 1}    1.07{col 46}{space 3}0.313{col 54}{space 4}-3.139646{col 67}{space 3} 8.756735
{txt}{space 8}706  {c |}{col 14}{res}{space 2}  2.78663{col 26}{space 2} 2.817645{col 37}{space 1}    0.99{col 46}{space 3}0.349{col 54}{space 4}-3.587326{col 67}{space 3} 9.160586
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 2.766483{col 26}{space 2}  2.82168{col 37}{space 1}    0.98{col 46}{space 3}0.352{col 54}{space 4}  -3.6166{col 67}{space 3} 9.149566
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 3.201548{col 26}{space 2} 3.131365{col 37}{space 1}    1.02{col 46}{space 3}0.333{col 54}{space 4}-3.882091{col 67}{space 3} 10.28519
{txt}{space 8}709  {c |}{col 14}{res}{space 2} 2.976472{col 26}{space 2} 3.073628{col 37}{space 1}    0.97{col 46}{space 3}0.358{col 54}{space 4}-3.976557{col 67}{space 3} 9.929502
{txt}{space 8}710  {c |}{col 14}{res}{space 2}  3.03489{col 26}{space 2} 2.870536{col 37}{space 1}    1.06{col 46}{space 3}0.318{col 54}{space 4}-3.458713{col 67}{space 3} 9.528492
{txt}{space 8}711  {c |}{col 14}{res}{space 2}   3.2541{col 26}{space 2} 2.934672{col 37}{space 1}    1.11{col 46}{space 3}0.296{col 54}{space 4}-3.384589{col 67}{space 3} 9.892788
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 3.253319{col 26}{space 2} 2.749716{col 37}{space 1}    1.18{col 46}{space 3}0.267{col 54}{space 4} -2.96697{col 67}{space 3} 9.473608
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 3.243249{col 26}{space 2} 2.883253{col 37}{space 1}    1.12{col 46}{space 3}0.290{col 54}{space 4}-3.279123{col 67}{space 3} 9.765621
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 3.193319{col 26}{space 2} 2.945604{col 37}{space 1}    1.08{col 46}{space 3}0.307{col 54}{space 4}-3.470099{col 67}{space 3} 9.856738
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 3.169513{col 26}{space 2} 2.838179{col 37}{space 1}    1.12{col 46}{space 3}0.293{col 54}{space 4}-3.250893{col 67}{space 3} 9.589919
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 3.010434{col 26}{space 2} 2.919891{col 37}{space 1}    1.03{col 46}{space 3}0.329{col 54}{space 4}-3.594817{col 67}{space 3} 9.615686
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 2.646184{col 26}{space 2} 3.036088{col 37}{space 1}    0.87{col 46}{space 3}0.406{col 54}{space 4}-4.221925{col 67}{space 3} 9.514293
{txt}{space 8}718  {c |}{col 14}{res}{space 2} 3.174157{col 26}{space 2} 2.916822{col 37}{space 1}    1.09{col 46}{space 3}0.305{col 54}{space 4}-3.424153{col 67}{space 3} 9.772467
{txt}{space 8}719  {c |}{col 14}{res}{space 2} 3.228837{col 26}{space 2} 2.861637{col 37}{space 1}    1.13{col 46}{space 3}0.288{col 54}{space 4}-3.244635{col 67}{space 3} 9.702309
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.362151{col 26}{space 2} .3398624{col 37}{space 1}    4.01{col 46}{space 3}0.003{col 54}{space 4} .5933287{col 67}{space 3} 2.130973
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-2.872432{col 26}{space 2} 1.158286{col 37}{space 1}   -2.48{col 46}{space 3}0.035{col 54}{space 4}-5.492658{col 67}{space 3}-.2522058
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .6330631{col 26}{space 2} .2199721{col 37}{space 1}    2.88{col 46}{space 3}0.018{col 54}{space 4} .1354515{col 67}{space 3} 1.130675
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-3.132547{col 26}{space 2} .7959546{col 37}{space 1}   -3.94{col 46}{space 3}0.003{col 54}{space 4}-4.933121{col 67}{space 3}-1.331972
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-3.539117{col 26}{space 2} .8569993{col 37}{space 1}   -4.13{col 46}{space 3}0.003{col 54}{space 4}-5.477785{col 67}{space 3} -1.60045
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-2.716523{col 26}{space 2} 1.109415{col 37}{space 1}   -2.45{col 46}{space 3}0.037{col 54}{space 4}-5.226194{col 67}{space 3}-.2068512
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} 1.743905{col 26}{space 2} 1.191414{col 37}{space 1}    1.46{col 46}{space 3}0.177{col 54}{space 4}-.9512597{col 67}{space 3} 4.439071
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}-3.747533{col 26}{space 2} 5.213808{col 37}{space 1}   -0.72{col 46}{space 3}0.491{col 54}{space 4}-15.54199{col 67}{space 3} 8.046921
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-5.311646{col 26}{space 2} 1.790997{col 37}{space 1}   -2.97{col 46}{space 3}0.016{col 54}{space 4}-9.363163{col 67}{space 3}-1.260129
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 8.414264{col 26}{space 2} 22.16331{col 37}{space 1}    0.38{col 46}{space 3}0.713{col 54}{space 4}-41.72262{col 67}{space 3} 58.55115
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 29}t(9) = {res}   -2.1419
{col 25}{txt}Prob>|t| = {res}    0.3263

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

Warning: 2 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 29}t(9) = {res}   -0.3144
{col 25}{txt}Prob>|t| = {res}    0.7591

95%{txt} confidence set for null hypothesis expression: [{res}-4.404{txt}, {res}3.599{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 29}t(9) = {res}    0.3576
{col 25}{txt}Prob>|t| = {res}    0.7375

95%{txt} confidence set for null hypothesis expression: [{res}-1.499{txt}, {res}1.848{txt}]
{res}
Warning: 2 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 29}t(9) = {res}    0.3806
{col 25}{txt}Prob>|t| = {res}    0.7170

95%{txt} confidence set for null hypothesis expression: [{res}-46.53{txt}, {res}62.22{txt}]
{res}
{txt}Linear regression                               Number of obs     = {res}     1,680
                                                {txt}{help j_robustsingular:F(8, 9) }          =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8598
                                                {txt}Root MSE          =    {res} .98627

{txt}{ralign 78:(Std. err. adjusted for {res:10} clusters in {res:region1})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}one {c |}{col 14}{res}{space 2}-3.688731{col 26}{space 2} .1031713{col 37}{space 1}  -35.75{col 46}{space 3}0.000{col 54}{space 4}-3.922121{col 67}{space 3}-3.455341
{txt}{space 9}two {c |}{col 14}{res}{space 2}-1.428908{col 26}{space 2} .3038047{col 37}{space 1}   -4.70{col 46}{space 3}0.001{col 54}{space 4}-2.116162{col 67}{space 3}-.7416537
{txt}{space 7}three {c |}{col 14}{res}{space 2}-3.258243{col 26}{space 2} .3110093{col 37}{space 1}  -10.48{col 46}{space 3}0.000{col 54}{space 4}-3.961795{col 67}{space 3}-2.554691
{txt}{space 8}four {c |}{col 14}{res}{space 2} -1.72688{col 26}{space 2} .1891029{col 37}{space 1}   -9.13{col 46}{space 3}0.000{col 54}{space 4} -2.15466{col 67}{space 3}  -1.2991
{txt}{space 8}five {c |}{col 14}{res}{space 2}-1.444225{col 26}{space 2} .2408007{col 37}{space 1}   -6.00{col 46}{space 3}0.000{col 54}{space 4}-1.988954{col 67}{space 3} -.899496
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2}-.1248412{col 26}{space 2} .8159117{col 37}{space 1}   -0.15{col 46}{space 3}0.882{col 54}{space 4}-1.970562{col 67}{space 3} 1.720879
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-.1964152{col 26}{space 2} .3829791{col 37}{space 1}   -0.51{col 46}{space 3}0.620{col 54}{space 4}-1.062774{col 67}{space 3} .6699437
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}  .341176{col 26}{space 2} .3191929{col 37}{space 1}    1.07{col 46}{space 3}0.313{col 54}{space 4}-.3808886{col 67}{space 3} 1.063241
{txt}{space 8}554  {c |}{col 14}{res}{space 2}-.1628449{col 26}{space 2} .3299725{col 37}{space 1}   -0.49{col 46}{space 3}0.633{col 54}{space 4}-.9092945{col 67}{space 3} .5836047
{txt}{space 8}555  {c |}{col 14}{res}{space 2} .1900673{col 26}{space 2} .2634411{col 37}{space 1}    0.72{col 46}{space 3}0.489{col 54}{space 4}-.4058779{col 67}{space 3} .7860124
{txt}{space 8}556  {c |}{col 14}{res}{space 2} .0918941{col 26}{space 2} .3911032{col 37}{space 1}    0.23{col 46}{space 3}0.819{col 54}{space 4}-.7928428{col 67}{space 3} .9766311
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .2113414{col 26}{space 2} .4376786{col 37}{space 1}    0.48{col 46}{space 3}0.641{col 54}{space 4}-.7787564{col 67}{space 3} 1.201439
{txt}{space 8}558  {c |}{col 14}{res}{space 2}  .772518{col 26}{space 2}  .460781{col 37}{space 1}    1.68{col 46}{space 3}0.128{col 54}{space 4}-.2698411{col 67}{space 3} 1.814877
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .3085577{col 26}{space 2} .5625745{col 37}{space 1}    0.55{col 46}{space 3}0.597{col 54}{space 4}-.9640742{col 67}{space 3}  1.58119
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .4590527{col 26}{space 2}  .411486{col 37}{space 1}    1.12{col 46}{space 3}0.293{col 54}{space 4}-.4717933{col 67}{space 3} 1.389899
{txt}{space 8}561  {c |}{col 14}{res}{space 2}-.0292869{col 26}{space 2} .4058351{col 37}{space 1}   -0.07{col 46}{space 3}0.944{col 54}{space 4}-.9473496{col 67}{space 3} .8887757
{txt}{space 8}562  {c |}{col 14}{res}{space 2} .4496955{col 26}{space 2} .3901357{col 37}{space 1}    1.15{col 46}{space 3}0.279{col 54}{space 4}-.4328526{col 67}{space 3} 1.332244
{txt}{space 8}563  {c |}{col 14}{res}{space 2} .3459176{col 26}{space 2} .3900558{col 37}{space 1}    0.89{col 46}{space 3}0.398{col 54}{space 4}  -.53645{col 67}{space 3} 1.228285
{txt}{space 8}564  {c |}{col 14}{res}{space 2} .0718251{col 26}{space 2} .3869645{col 37}{space 1}    0.19{col 46}{space 3}0.857{col 54}{space 4}-.8035494{col 67}{space 3} .9471996
{txt}{space 8}565  {c |}{col 14}{res}{space 2} .4529916{col 26}{space 2} .6101421{col 37}{space 1}    0.74{col 46}{space 3}0.477{col 54}{space 4}-.9272457{col 67}{space 3} 1.833229
{txt}{space 8}566  {c |}{col 14}{res}{space 2} .2240319{col 26}{space 2} .4164365{col 37}{space 1}    0.54{col 46}{space 3}0.604{col 54}{space 4}-.7180128{col 67}{space 3} 1.166077
{txt}{space 8}567  {c |}{col 14}{res}{space 2} .0794112{col 26}{space 2} .4214434{col 37}{space 1}    0.19{col 46}{space 3}0.855{col 54}{space 4}-.8739601{col 67}{space 3} 1.032782
{txt}{space 8}568  {c |}{col 14}{res}{space 2} .1557661{col 26}{space 2} .5073799{col 37}{space 1}    0.31{col 46}{space 3}0.766{col 54}{space 4}-.9920071{col 67}{space 3} 1.303539
{txt}{space 8}569  {c |}{col 14}{res}{space 2} .1289683{col 26}{space 2} .3360038{col 37}{space 1}    0.38{col 46}{space 3}0.710{col 54}{space 4}-.6311252{col 67}{space 3} .8890617
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .9548725{col 26}{space 2} .5214779{col 37}{space 1}    1.83{col 46}{space 3}0.100{col 54}{space 4}-.2247923{col 67}{space 3} 2.134537
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.1976133{col 26}{space 2}   .50052{col 37}{space 1}   -0.39{col 46}{space 3}0.702{col 54}{space 4}-1.329868{col 67}{space 3} .9346415
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.4161888{col 26}{space 2} .4003011{col 37}{space 1}   -1.04{col 46}{space 3}0.326{col 54}{space 4}-1.321733{col 67}{space 3} .4893552
{txt}{space 8}573  {c |}{col 14}{res}{space 2} .0266403{col 26}{space 2} .4310401{col 37}{space 1}    0.06{col 46}{space 3}0.952{col 54}{space 4}-.9484402{col 67}{space 3} 1.001721
{txt}{space 8}574  {c |}{col 14}{res}{space 2} .1324363{col 26}{space 2} .2993971{col 37}{space 1}    0.44{col 46}{space 3}0.669{col 54}{space 4}-.5448471{col 67}{space 3} .8097196
{txt}{space 8}575  {c |}{col 14}{res}{space 2} .6881635{col 26}{space 2} .5356378{col 37}{space 1}    1.28{col 46}{space 3}0.231{col 54}{space 4}-.5235334{col 67}{space 3}  1.89986
{txt}{space 8}576  {c |}{col 14}{res}{space 2} .1890005{col 26}{space 2} .4942836{col 37}{space 1}    0.38{col 46}{space 3}0.711{col 54}{space 4}-.9291466{col 67}{space 3} 1.307148
{txt}{space 8}577  {c |}{col 14}{res}{space 2} .6594147{col 26}{space 2} .6707228{col 37}{space 1}    0.98{col 46}{space 3}0.351{col 54}{space 4}-.8578658{col 67}{space 3} 2.176695
{txt}{space 8}578  {c |}{col 14}{res}{space 2} .7219126{col 26}{space 2} .6276455{col 37}{space 1}    1.15{col 46}{space 3}0.280{col 54}{space 4}-.6979201{col 67}{space 3} 2.141745
{txt}{space 8}579  {c |}{col 14}{res}{space 2} .6795709{col 26}{space 2} .3746303{col 37}{space 1}    1.81{col 46}{space 3}0.103{col 54}{space 4}-.1679018{col 67}{space 3} 1.527044
{txt}{space 8}580  {c |}{col 14}{res}{space 2} .8723434{col 26}{space 2} .4841757{col 37}{space 1}    1.80{col 46}{space 3}0.105{col 54}{space 4}-.2229381{col 67}{space 3} 1.967625
{txt}{space 8}581  {c |}{col 14}{res}{space 2} .6781499{col 26}{space 2} .4807282{col 37}{space 1}    1.41{col 46}{space 3}0.192{col 54}{space 4}-.4093328{col 67}{space 3} 1.765633
{txt}{space 8}582  {c |}{col 14}{res}{space 2} .9236371{col 26}{space 2} .5146292{col 37}{space 1}    1.79{col 46}{space 3}0.106{col 54}{space 4} -.240535{col 67}{space 3} 2.087809
{txt}{space 8}583  {c |}{col 14}{res}{space 2} .7269528{col 26}{space 2} .6258736{col 37}{space 1}    1.16{col 46}{space 3}0.275{col 54}{space 4}-.6888716{col 67}{space 3} 2.142777
{txt}{space 8}584  {c |}{col 14}{res}{space 2} 1.115135{col 26}{space 2} .4334361{col 37}{space 1}    2.57{col 46}{space 3}0.030{col 54}{space 4} .1346343{col 67}{space 3} 2.095636
{txt}{space 8}585  {c |}{col 14}{res}{space 2}  .646618{col 26}{space 2} .4097446{col 37}{space 1}    1.58{col 46}{space 3}0.149{col 54}{space 4}-.2802887{col 67}{space 3} 1.573525
{txt}{space 8}586  {c |}{col 14}{res}{space 2} .8153193{col 26}{space 2} .4607975{col 37}{space 1}    1.77{col 46}{space 3}0.111{col 54}{space 4}-.2270771{col 67}{space 3} 1.857716
{txt}{space 8}587  {c |}{col 14}{res}{space 2} .7385165{col 26}{space 2}  .553192{col 37}{space 1}    1.34{col 46}{space 3}0.215{col 54}{space 4}-.5128907{col 67}{space 3} 1.989924
{txt}{space 8}588  {c |}{col 14}{res}{space 2} .6656549{col 26}{space 2} .6184266{col 37}{space 1}    1.08{col 46}{space 3}0.310{col 54}{space 4}-.7333232{col 67}{space 3} 2.064633
{txt}{space 8}589  {c |}{col 14}{res}{space 2} 1.260313{col 26}{space 2} .5284182{col 37}{space 1}    2.39{col 46}{space 3}0.041{col 54}{space 4} .0649476{col 67}{space 3} 2.455678
{txt}{space 8}590  {c |}{col 14}{res}{space 2} 1.006449{col 26}{space 2}  .623338{col 37}{space 1}    1.61{col 46}{space 3}0.141{col 54}{space 4}-.4036391{col 67}{space 3} 2.416538
{txt}{space 8}591  {c |}{col 14}{res}{space 2} .4915322{col 26}{space 2} .5203908{col 37}{space 1}    0.94{col 46}{space 3}0.370{col 54}{space 4}-.6856736{col 67}{space 3} 1.668738
{txt}{space 8}592  {c |}{col 14}{res}{space 2} .6405982{col 26}{space 2} .5064306{col 37}{space 1}    1.26{col 46}{space 3}0.238{col 54}{space 4}-.5050273{col 67}{space 3} 1.786224
{txt}{space 8}593  {c |}{col 14}{res}{space 2}  1.20619{col 26}{space 2} .7496584{col 37}{space 1}    1.61{col 46}{space 3}0.142{col 54}{space 4}-.4896548{col 67}{space 3} 2.902035
{txt}{space 8}594  {c |}{col 14}{res}{space 2} .9966841{col 26}{space 2} .6272969{col 37}{space 1}    1.59{col 46}{space 3}0.147{col 54}{space 4}-.4223601{col 67}{space 3} 2.415728
{txt}{space 8}595  {c |}{col 14}{res}{space 2} 1.333397{col 26}{space 2} .7557821{col 37}{space 1}    1.76{col 46}{space 3}0.112{col 54}{space 4}-.3763009{col 67}{space 3} 3.043095
{txt}{space 8}596  {c |}{col 14}{res}{space 2} .4981442{col 26}{space 2}  .523031{col 37}{space 1}    0.95{col 46}{space 3}0.366{col 54}{space 4}-.6850341{col 67}{space 3} 1.681322
{txt}{space 8}597  {c |}{col 14}{res}{space 2} .7201258{col 26}{space 2} .6559773{col 37}{space 1}    1.10{col 46}{space 3}0.301{col 54}{space 4}-.7637979{col 67}{space 3}  2.20405
{txt}{space 8}598  {c |}{col 14}{res}{space 2} 1.049928{col 26}{space 2} .6325753{col 37}{space 1}    1.66{col 46}{space 3}0.131{col 54}{space 4}-.3810568{col 67}{space 3} 2.480913
{txt}{space 8}599  {c |}{col 14}{res}{space 2}  .617717{col 26}{space 2} .7171795{col 37}{space 1}    0.86{col 46}{space 3}0.411{col 54}{space 4}-1.004656{col 67}{space 3}  2.24009
{txt}{space 8}600  {c |}{col 14}{res}{space 2} .8546427{col 26}{space 2} .7123364{col 37}{space 1}    1.20{col 46}{space 3}0.261{col 54}{space 4}-.7567741{col 67}{space 3} 2.466059
{txt}{space 8}601  {c |}{col 14}{res}{space 2} .9107887{col 26}{space 2} .6139655{col 37}{space 1}    1.48{col 46}{space 3}0.172{col 54}{space 4}-.4780978{col 67}{space 3} 2.299675
{txt}{space 8}602  {c |}{col 14}{res}{space 2} 1.528573{col 26}{space 2}  .775692{col 37}{space 1}    1.97{col 46}{space 3}0.080{col 54}{space 4}-.2261643{col 67}{space 3}  3.28331
{txt}{space 8}603  {c |}{col 14}{res}{space 2}  .563762{col 26}{space 2} .5795977{col 37}{space 1}    0.97{col 46}{space 3}0.356{col 54}{space 4}-.7473791{col 67}{space 3} 1.874903
{txt}{space 8}604  {c |}{col 14}{res}{space 2} .8923078{col 26}{space 2} .6341481{col 37}{space 1}    1.41{col 46}{space 3}0.193{col 54}{space 4} -.542235{col 67}{space 3} 2.326851
{txt}{space 8}605  {c |}{col 14}{res}{space 2} 1.502923{col 26}{space 2} .5725527{col 37}{space 1}    2.62{col 46}{space 3}0.028{col 54}{space 4} .2077184{col 67}{space 3} 2.798127
{txt}{space 8}606  {c |}{col 14}{res}{space 2} 1.083824{col 26}{space 2}  .693149{col 37}{space 1}    1.56{col 46}{space 3}0.152{col 54}{space 4}-.4841883{col 67}{space 3} 2.651836
{txt}{space 8}607  {c |}{col 14}{res}{space 2} 1.201576{col 26}{space 2} .6566182{col 37}{space 1}    1.83{col 46}{space 3}0.101{col 54}{space 4}-.2837973{col 67}{space 3}  2.68695
{txt}{space 8}608  {c |}{col 14}{res}{space 2} 1.296188{col 26}{space 2} .7584464{col 37}{space 1}    1.71{col 46}{space 3}0.122{col 54}{space 4}-.4195366{col 67}{space 3} 3.011914
{txt}{space 8}609  {c |}{col 14}{res}{space 2} 1.129837{col 26}{space 2} .8842335{col 37}{space 1}    1.28{col 46}{space 3}0.233{col 54}{space 4}-.8704384{col 67}{space 3} 3.130112
{txt}{space 8}610  {c |}{col 14}{res}{space 2} 2.006495{col 26}{space 2} .6935789{col 37}{space 1}    2.89{col 46}{space 3}0.018{col 54}{space 4} .4375107{col 67}{space 3}  3.57548
{txt}{space 8}611  {c |}{col 14}{res}{space 2} 1.539281{col 26}{space 2} .6164389{col 37}{space 1}    2.50{col 46}{space 3}0.034{col 54}{space 4}  .144799{col 67}{space 3} 2.933762
{txt}{space 8}612  {c |}{col 14}{res}{space 2} 1.444036{col 26}{space 2} .7973705{col 37}{space 1}    1.81{col 46}{space 3}0.104{col 54}{space 4}-.3597417{col 67}{space 3} 3.247813
{txt}{space 8}613  {c |}{col 14}{res}{space 2} 1.648775{col 26}{space 2} .9876023{col 37}{space 1}    1.67{col 46}{space 3}0.129{col 54}{space 4}-.5853364{col 67}{space 3} 3.882887
{txt}{space 8}614  {c |}{col 14}{res}{space 2} 1.289073{col 26}{space 2}  .642564{col 37}{space 1}    2.01{col 46}{space 3}0.076{col 54}{space 4}-.1645078{col 67}{space 3} 2.742654
{txt}{space 8}615  {c |}{col 14}{res}{space 2} 1.733534{col 26}{space 2} .9190802{col 37}{space 1}    1.89{col 46}{space 3}0.092{col 54}{space 4}-.3455703{col 67}{space 3} 3.812637
{txt}{space 8}616  {c |}{col 14}{res}{space 2} 1.397482{col 26}{space 2} .8727231{col 37}{space 1}    1.60{col 46}{space 3}0.144{col 54}{space 4}-.5767544{col 67}{space 3} 3.371719
{txt}{space 8}617  {c |}{col 14}{res}{space 2} 1.318158{col 26}{space 2} 1.064186{col 37}{space 1}    1.24{col 46}{space 3}0.247{col 54}{space 4}-1.089198{col 67}{space 3} 3.725513
{txt}{space 8}618  {c |}{col 14}{res}{space 2} 1.249259{col 26}{space 2}   .73275{col 37}{space 1}    1.70{col 46}{space 3}0.122{col 54}{space 4}-.4083368{col 67}{space 3} 2.906855
{txt}{space 8}619  {c |}{col 14}{res}{space 2} 2.064271{col 26}{space 2} .7560725{col 37}{space 1}    2.73{col 46}{space 3}0.023{col 54}{space 4} .3539166{col 67}{space 3} 3.774626
{txt}{space 8}620  {c |}{col 14}{res}{space 2} 1.844498{col 26}{space 2} 1.086919{col 37}{space 1}    1.70{col 46}{space 3}0.124{col 54}{space 4}-.6142834{col 67}{space 3} 4.303279
{txt}{space 8}621  {c |}{col 14}{res}{space 2}  1.72329{col 26}{space 2} .7468783{col 37}{space 1}    2.31{col 46}{space 3}0.046{col 54}{space 4} .0337338{col 67}{space 3} 3.412846
{txt}{space 8}622  {c |}{col 14}{res}{space 2} 1.458299{col 26}{space 2}  .766859{col 37}{space 1}    1.90{col 46}{space 3}0.090{col 54}{space 4}-.2764561{col 67}{space 3} 3.193055
{txt}{space 8}623  {c |}{col 14}{res}{space 2} 1.326939{col 26}{space 2} .7742169{col 37}{space 1}    1.71{col 46}{space 3}0.121{col 54}{space 4}-.4244616{col 67}{space 3} 3.078339
{txt}{space 8}624  {c |}{col 14}{res}{space 2} 1.354765{col 26}{space 2} .9288583{col 37}{space 1}    1.46{col 46}{space 3}0.179{col 54}{space 4}-.7464583{col 67}{space 3} 3.455989
{txt}{space 8}625  {c |}{col 14}{res}{space 2} 1.645265{col 26}{space 2} .8695969{col 37}{space 1}    1.89{col 46}{space 3}0.091{col 54}{space 4}-.3219001{col 67}{space 3}  3.61243
{txt}{space 8}626  {c |}{col 14}{res}{space 2} 1.873686{col 26}{space 2} 1.104859{col 37}{space 1}    1.70{col 46}{space 3}0.124{col 54}{space 4}-.6256774{col 67}{space 3}  4.37305
{txt}{space 8}627  {c |}{col 14}{res}{space 2}  1.47366{col 26}{space 2}  1.00615{col 37}{space 1}    1.46{col 46}{space 3}0.177{col 54}{space 4}-.8024098{col 67}{space 3}  3.74973
{txt}{space 8}628  {c |}{col 14}{res}{space 2} .9067342{col 26}{space 2} .9136321{col 37}{space 1}    0.99{col 46}{space 3}0.347{col 54}{space 4}-1.160045{col 67}{space 3} 2.973513
{txt}{space 8}629  {c |}{col 14}{res}{space 2} 1.239687{col 26}{space 2} .9422532{col 37}{space 1}    1.32{col 46}{space 3}0.221{col 54}{space 4}-.8918379{col 67}{space 3} 3.371212
{txt}{space 8}630  {c |}{col 14}{res}{space 2} 2.065255{col 26}{space 2} .8126414{col 37}{space 1}    2.54{col 46}{space 3}0.032{col 54}{space 4} .2269321{col 67}{space 3} 3.903577
{txt}{space 8}631  {c |}{col 14}{res}{space 2} 1.452137{col 26}{space 2} .7919365{col 37}{space 1}    1.83{col 46}{space 3}0.100{col 54}{space 4}-.3393476{col 67}{space 3} 3.243622
{txt}{space 8}632  {c |}{col 14}{res}{space 2} 1.699483{col 26}{space 2} .7983951{col 37}{space 1}    2.13{col 46}{space 3}0.062{col 54}{space 4}-.1066123{col 67}{space 3} 3.505578
{txt}{space 8}633  {c |}{col 14}{res}{space 2}  1.83849{col 26}{space 2} .8024288{col 37}{space 1}    2.29{col 46}{space 3}0.048{col 54}{space 4} .0232697{col 67}{space 3}  3.65371
{txt}{space 8}634  {c |}{col 14}{res}{space 2} 1.268617{col 26}{space 2} .9085148{col 37}{space 1}    1.40{col 46}{space 3}0.196{col 54}{space 4}-.7865862{col 67}{space 3}  3.32382
{txt}{space 8}635  {c |}{col 14}{res}{space 2} 1.884923{col 26}{space 2} .8611463{col 37}{space 1}    2.19{col 46}{space 3}0.056{col 54}{space 4}-.0631255{col 67}{space 3} 3.832971
{txt}{space 8}636  {c |}{col 14}{res}{space 2} 1.721936{col 26}{space 2} .8847057{col 37}{space 1}    1.95{col 46}{space 3}0.083{col 54}{space 4}-.2794068{col 67}{space 3}  3.72328
{txt}{space 8}637  {c |}{col 14}{res}{space 2} 1.061455{col 26}{space 2} 1.068391{col 37}{space 1}    0.99{col 46}{space 3}0.346{col 54}{space 4}-1.355413{col 67}{space 3} 3.478323
{txt}{space 8}638  {c |}{col 14}{res}{space 2} 2.299698{col 26}{space 2} .9277687{col 37}{space 1}    2.48{col 46}{space 3}0.035{col 54}{space 4} .2009392{col 67}{space 3} 4.398456
{txt}{space 8}639  {c |}{col 14}{res}{space 2} 1.524146{col 26}{space 2} .9015922{col 37}{space 1}    1.69{col 46}{space 3}0.125{col 54}{space 4}-.5153973{col 67}{space 3} 3.563689
{txt}{space 8}640  {c |}{col 14}{res}{space 2} 1.913008{col 26}{space 2} .9427682{col 37}{space 1}    2.03{col 46}{space 3}0.073{col 54}{space 4} -.219682{col 67}{space 3} 4.045698
{txt}{space 8}641  {c |}{col 14}{res}{space 2} 1.530386{col 26}{space 2} .9272895{col 37}{space 1}    1.65{col 46}{space 3}0.133{col 54}{space 4}-.5672888{col 67}{space 3}  3.62806
{txt}{space 8}642  {c |}{col 14}{res}{space 2} 1.455375{col 26}{space 2} .9377551{col 37}{space 1}    1.55{col 46}{space 3}0.155{col 54}{space 4}-.6659747{col 67}{space 3} 3.576724
{txt}{space 8}643  {c |}{col 14}{res}{space 2} 1.766974{col 26}{space 2} .9595858{col 37}{space 1}    1.84{col 46}{space 3}0.099{col 54}{space 4}-.4037599{col 67}{space 3} 3.937708
{txt}{space 8}644  {c |}{col 14}{res}{space 2} 1.438541{col 26}{space 2}  .897333{col 37}{space 1}    1.60{col 46}{space 3}0.143{col 54}{space 4}-.5913671{col 67}{space 3} 3.468449
{txt}{space 8}645  {c |}{col 14}{res}{space 2} 2.491384{col 26}{space 2} 1.294346{col 37}{space 1}    1.92{col 46}{space 3}0.086{col 54}{space 4}-.4366293{col 67}{space 3} 5.419397
{txt}{space 8}646  {c |}{col 14}{res}{space 2} 2.175611{col 26}{space 2} 1.099693{col 37}{space 1}    1.98{col 46}{space 3}0.079{col 54}{space 4}-.3120669{col 67}{space 3} 4.663288
{txt}{space 8}647  {c |}{col 14}{res}{space 2} 2.539328{col 26}{space 2} 1.271026{col 37}{space 1}    2.00{col 46}{space 3}0.077{col 54}{space 4}-.3359332{col 67}{space 3}  5.41459
{txt}{space 8}648  {c |}{col 14}{res}{space 2} 2.969787{col 26}{space 2} 1.225853{col 37}{space 1}    2.42{col 46}{space 3}0.038{col 54}{space 4} .1967151{col 67}{space 3} 5.742859
{txt}{space 8}649  {c |}{col 14}{res}{space 2} 2.566414{col 26}{space 2} 1.225785{col 37}{space 1}    2.09{col 46}{space 3}0.066{col 54}{space 4}-.2065037{col 67}{space 3} 5.339331
{txt}{space 8}650  {c |}{col 14}{res}{space 2} 2.269245{col 26}{space 2} 1.092291{col 37}{space 1}    2.08{col 46}{space 3}0.068{col 54}{space 4}-.2016893{col 67}{space 3} 4.740179
{txt}{space 8}651  {c |}{col 14}{res}{space 2} 2.050086{col 26}{space 2} 1.286635{col 37}{space 1}    1.59{col 46}{space 3}0.146{col 54}{space 4}-.8604851{col 67}{space 3} 4.960657
{txt}{space 8}652  {c |}{col 14}{res}{space 2}  2.22836{col 26}{space 2}   1.1642{col 37}{space 1}    1.91{col 46}{space 3}0.088{col 54}{space 4}-.4052427{col 67}{space 3} 4.861963
{txt}{space 8}653  {c |}{col 14}{res}{space 2} 3.463838{col 26}{space 2}  1.31741{col 37}{space 1}    2.63{col 46}{space 3}0.027{col 54}{space 4}   .48365{col 67}{space 3} 6.444027
{txt}{space 8}654  {c |}{col 14}{res}{space 2} 2.736332{col 26}{space 2}  1.19298{col 37}{space 1}    2.29{col 46}{space 3}0.047{col 54}{space 4} .0376237{col 67}{space 3}  5.43504
{txt}{space 8}655  {c |}{col 14}{res}{space 2} 2.522848{col 26}{space 2} 1.263706{col 37}{space 1}    2.00{col 46}{space 3}0.077{col 54}{space 4}-.3358522{col 67}{space 3} 5.381549
{txt}{space 8}656  {c |}{col 14}{res}{space 2} 2.660615{col 26}{space 2} 1.121442{col 37}{space 1}    2.37{col 46}{space 3}0.042{col 54}{space 4} .1237368{col 67}{space 3} 5.197493
{txt}{space 8}657  {c |}{col 14}{res}{space 2} 2.515351{col 26}{space 2} 1.229021{col 37}{space 1}    2.05{col 46}{space 3}0.071{col 54}{space 4}-.2648884{col 67}{space 3} 5.295591
{txt}{space 8}658  {c |}{col 14}{res}{space 2} 2.759675{col 26}{space 2} 1.287292{col 37}{space 1}    2.14{col 46}{space 3}0.061{col 54}{space 4}-.1523807{col 67}{space 3} 5.671731
{txt}{space 8}659  {c |}{col 14}{res}{space 2} 2.426734{col 26}{space 2} 1.272105{col 37}{space 1}    1.91{col 46}{space 3}0.089{col 54}{space 4}-.4509675{col 67}{space 3} 5.304435
{txt}{space 8}660  {c |}{col 14}{res}{space 2} 2.718754{col 26}{space 2} 1.160951{col 37}{space 1}    2.34{col 46}{space 3}0.044{col 54}{space 4}    .0925{col 67}{space 3} 5.345008
{txt}{space 8}661  {c |}{col 14}{res}{space 2} 2.292764{col 26}{space 2} 1.412219{col 37}{space 1}    1.62{col 46}{space 3}0.139{col 54}{space 4}-.9018972{col 67}{space 3} 5.487426
{txt}{space 8}662  {c |}{col 14}{res}{space 2} 3.121907{col 26}{space 2} 1.335093{col 37}{space 1}    2.34{col 46}{space 3}0.044{col 54}{space 4}  .101716{col 67}{space 3} 6.142098
{txt}{space 8}663  {c |}{col 14}{res}{space 2}  2.12484{col 26}{space 2} 1.175254{col 37}{space 1}    1.81{col 46}{space 3}0.104{col 54}{space 4}-.5337698{col 67}{space 3}  4.78345
{txt}{space 8}664  {c |}{col 14}{res}{space 2} 2.561775{col 26}{space 2} 1.226506{col 37}{space 1}    2.09{col 46}{space 3}0.066{col 54}{space 4}-.2127733{col 67}{space 3} 5.336324
{txt}{space 8}665  {c |}{col 14}{res}{space 2} 2.893155{col 26}{space 2} 1.387294{col 37}{space 1}    2.09{col 46}{space 3}0.067{col 54}{space 4}-.2451209{col 67}{space 3} 6.031432
{txt}{space 8}666  {c |}{col 14}{res}{space 2} 2.848093{col 26}{space 2} 1.220965{col 37}{space 1}    2.33{col 46}{space 3}0.045{col 54}{space 4} .0860781{col 67}{space 3} 5.610108
{txt}{space 8}667  {c |}{col 14}{res}{space 2} 2.611984{col 26}{space 2} 1.190966{col 37}{space 1}    2.19{col 46}{space 3}0.056{col 54}{space 4}-.0821678{col 67}{space 3} 5.306135
{txt}{space 8}668  {c |}{col 14}{res}{space 2} 2.606159{col 26}{space 2}  1.19862{col 37}{space 1}    2.17{col 46}{space 3}0.058{col 54}{space 4}-.1053084{col 67}{space 3} 5.317627
{txt}{space 8}669  {c |}{col 14}{res}{space 2} 2.704153{col 26}{space 2} 1.193755{col 37}{space 1}    2.27{col 46}{space 3}0.050{col 54}{space 4} .0036928{col 67}{space 3} 5.404614
{txt}{space 8}670  {c |}{col 14}{res}{space 2} 2.524673{col 26}{space 2} 1.134171{col 37}{space 1}    2.23{col 46}{space 3}0.053{col 54}{space 4}-.0410006{col 67}{space 3} 5.090347
{txt}{space 8}671  {c |}{col 14}{res}{space 2} 2.701472{col 26}{space 2} 1.201802{col 37}{space 1}    2.25{col 46}{space 3}0.051{col 54}{space 4}-.0171935{col 67}{space 3} 5.420137
{txt}{space 8}672  {c |}{col 14}{res}{space 2} 2.594549{col 26}{space 2} 1.168356{col 37}{space 1}    2.22{col 46}{space 3}0.054{col 54}{space 4}-.0484562{col 67}{space 3} 5.237553
{txt}{space 8}673  {c |}{col 14}{res}{space 2} 2.745414{col 26}{space 2}  1.19424{col 37}{space 1}    2.30{col 46}{space 3}0.047{col 54}{space 4} .0438545{col 67}{space 3} 5.446973
{txt}{space 8}674  {c |}{col 14}{res}{space 2}  3.02328{col 26}{space 2} 1.270422{col 37}{space 1}    2.38{col 46}{space 3}0.041{col 54}{space 4}  .149386{col 67}{space 3} 5.897175
{txt}{space 8}675  {c |}{col 14}{res}{space 2} 3.258981{col 26}{space 2} 1.428182{col 37}{space 1}    2.28{col 46}{space 3}0.048{col 54}{space 4}  .028208{col 67}{space 3} 6.489753
{txt}{space 8}676  {c |}{col 14}{res}{space 2} 3.356488{col 26}{space 2} 1.392595{col 37}{space 1}    2.41{col 46}{space 3}0.039{col 54}{space 4} .2062197{col 67}{space 3} 6.506756
{txt}{space 8}677  {c |}{col 14}{res}{space 2} 3.001694{col 26}{space 2} 1.297165{col 37}{space 1}    2.31{col 46}{space 3}0.046{col 54}{space 4} .0673021{col 67}{space 3} 5.936086
{txt}{space 8}678  {c |}{col 14}{res}{space 2} 3.297822{col 26}{space 2} 1.310427{col 37}{space 1}    2.52{col 46}{space 3}0.033{col 54}{space 4} .3334298{col 67}{space 3} 6.262215
{txt}{space 8}679  {c |}{col 14}{res}{space 2} 3.508053{col 26}{space 2} 1.277433{col 37}{space 1}    2.75{col 46}{space 3}0.023{col 54}{space 4} .6182999{col 67}{space 3} 6.397807
{txt}{space 8}680  {c |}{col 14}{res}{space 2}  3.75321{col 26}{space 2} 1.166811{col 37}{space 1}    3.22{col 46}{space 3}0.011{col 54}{space 4} 1.113701{col 67}{space 3} 6.392719
{txt}{space 8}681  {c |}{col 14}{res}{space 2} 3.125225{col 26}{space 2} 1.318962{col 37}{space 1}    2.37{col 46}{space 3}0.042{col 54}{space 4} .1415249{col 67}{space 3} 6.108924
{txt}{space 8}682  {c |}{col 14}{res}{space 2} 3.195357{col 26}{space 2} 1.325416{col 37}{space 1}    2.41{col 46}{space 3}0.039{col 54}{space 4} .1970577{col 67}{space 3} 6.193656
{txt}{space 8}683  {c |}{col 14}{res}{space 2} 2.996409{col 26}{space 2} 1.310022{col 37}{space 1}    2.29{col 46}{space 3}0.048{col 54}{space 4} .0329324{col 67}{space 3} 5.959885
{txt}{space 8}684  {c |}{col 14}{res}{space 2} 3.424331{col 26}{space 2} 1.444217{col 37}{space 1}    2.37{col 46}{space 3}0.042{col 54}{space 4} .1572844{col 67}{space 3} 6.691378
{txt}{space 8}685  {c |}{col 14}{res}{space 2} 3.001961{col 26}{space 2} 1.404063{col 37}{space 1}    2.14{col 46}{space 3}0.061{col 54}{space 4}-.1742514{col 67}{space 3} 6.178173
{txt}{space 8}686  {c |}{col 14}{res}{space 2} 3.141137{col 26}{space 2} 1.514479{col 37}{space 1}    2.07{col 46}{space 3}0.068{col 54}{space 4}-.2848511{col 67}{space 3} 6.567126
{txt}{space 8}687  {c |}{col 14}{res}{space 2} 3.116386{col 26}{space 2} 1.499437{col 37}{space 1}    2.08{col 46}{space 3}0.067{col 54}{space 4}-.2755759{col 67}{space 3} 6.508348
{txt}{space 8}688  {c |}{col 14}{res}{space 2} 3.165633{col 26}{space 2} 1.506341{col 37}{space 1}    2.10{col 46}{space 3}0.065{col 54}{space 4}-.2419476{col 67}{space 3} 6.573214
{txt}{space 8}689  {c |}{col 14}{res}{space 2} 3.235953{col 26}{space 2} 1.518759{col 37}{space 1}    2.13{col 46}{space 3}0.062{col 54}{space 4}-.1997199{col 67}{space 3} 6.671625
{txt}{space 8}690  {c |}{col 14}{res}{space 2} 2.901098{col 26}{space 2} 1.472075{col 37}{space 1}    1.97{col 46}{space 3}0.080{col 54}{space 4}-.4289676{col 67}{space 3} 6.231163
{txt}{space 8}691  {c |}{col 14}{res}{space 2}  2.84048{col 26}{space 2} 1.600753{col 37}{space 1}    1.77{col 46}{space 3}0.110{col 54}{space 4}-.7806746{col 67}{space 3} 6.461634
{txt}{space 8}692  {c |}{col 14}{res}{space 2} 3.181115{col 26}{space 2} 1.499544{col 37}{space 1}    2.12{col 46}{space 3}0.063{col 54}{space 4}-.2110883{col 67}{space 3} 6.573318
{txt}{space 8}693  {c |}{col 14}{res}{space 2} 2.952926{col 26}{space 2} 1.457784{col 37}{space 1}    2.03{col 46}{space 3}0.073{col 54}{space 4} -.344811{col 67}{space 3} 6.250664
{txt}{space 8}694  {c |}{col 14}{res}{space 2} 3.204733{col 26}{space 2} 1.488432{col 37}{space 1}    2.15{col 46}{space 3}0.060{col 54}{space 4}-.1623332{col 67}{space 3} 6.571799
{txt}{space 8}695  {c |}{col 14}{res}{space 2} 2.968701{col 26}{space 2} 1.513409{col 37}{space 1}    1.96{col 46}{space 3}0.081{col 54}{space 4} -.454868{col 67}{space 3}  6.39227
{txt}{space 8}696  {c |}{col 14}{res}{space 2} 3.165953{col 26}{space 2} 1.563454{col 37}{space 1}    2.02{col 46}{space 3}0.074{col 54}{space 4}-.3708248{col 67}{space 3} 6.702731
{txt}{space 8}697  {c |}{col 14}{res}{space 2} 2.898206{col 26}{space 2}   1.5661{col 37}{space 1}    1.85{col 46}{space 3}0.097{col 54}{space 4}-.6445586{col 67}{space 3} 6.440971
{txt}{space 8}698  {c |}{col 14}{res}{space 2} 2.950105{col 26}{space 2} 1.557692{col 37}{space 1}    1.89{col 46}{space 3}0.091{col 54}{space 4}-.5736404{col 67}{space 3}  6.47385
{txt}{space 8}699  {c |}{col 14}{res}{space 2} 2.890066{col 26}{space 2} 1.534417{col 37}{space 1}    1.88{col 46}{space 3}0.092{col 54}{space 4}-.5810274{col 67}{space 3} 6.361159
{txt}{space 8}700  {c |}{col 14}{res}{space 2}  3.32262{col 26}{space 2} 1.499717{col 37}{space 1}    2.22{col 46}{space 3}0.054{col 54}{space 4}-.0699758{col 67}{space 3} 6.715216
{txt}{space 8}701  {c |}{col 14}{res}{space 2} 2.684722{col 26}{space 2} 1.514486{col 37}{space 1}    1.77{col 46}{space 3}0.110{col 54}{space 4}-.7412825{col 67}{space 3} 6.110726
{txt}{space 8}702  {c |}{col 14}{res}{space 2} 2.943147{col 26}{space 2} 1.611935{col 37}{space 1}    1.83{col 46}{space 3}0.101{col 54}{space 4} -.703303{col 67}{space 3} 6.589596
{txt}{space 8}703  {c |}{col 14}{res}{space 2} 2.904839{col 26}{space 2} 1.576312{col 37}{space 1}    1.84{col 46}{space 3}0.098{col 54}{space 4} -.661027{col 67}{space 3} 6.470704
{txt}{space 8}704  {c |}{col 14}{res}{space 2} 3.365532{col 26}{space 2} 1.360401{col 37}{space 1}    2.47{col 46}{space 3}0.035{col 54}{space 4} .2880909{col 67}{space 3} 6.442974
{txt}{space 8}705  {c |}{col 14}{res}{space 2} 3.364835{col 26}{space 2} 1.404564{col 37}{space 1}    2.40{col 46}{space 3}0.040{col 54}{space 4}   .18749{col 67}{space 3} 6.542179
{txt}{space 8}706  {c |}{col 14}{res}{space 2}  3.34292{col 26}{space 2}  1.44978{col 37}{space 1}    2.31{col 46}{space 3}0.047{col 54}{space 4} .0632907{col 67}{space 3} 6.622549
{txt}{space 8}707  {c |}{col 14}{res}{space 2} 3.322773{col 26}{space 2}  1.50036{col 37}{space 1}    2.21{col 46}{space 3}0.054{col 54}{space 4} -.071278{col 67}{space 3} 6.716823
{txt}{space 8}708  {c |}{col 14}{res}{space 2} 3.711181{col 26}{space 2} 1.585033{col 37}{space 1}    2.34{col 46}{space 3}0.044{col 54}{space 4}  .125588{col 67}{space 3} 7.296775
{txt}{space 8}709  {c |}{col 14}{res}{space 2} 3.486105{col 26}{space 2} 1.570981{col 37}{space 1}    2.22{col 46}{space 3}0.054{col 54}{space 4}-.0677002{col 67}{space 3} 7.039911
{txt}{space 8}710  {c |}{col 14}{res}{space 2} 3.544523{col 26}{space 2} 1.620126{col 37}{space 1}    2.19{col 46}{space 3}0.056{col 54}{space 4}-.1204572{col 67}{space 3} 7.209502
{txt}{space 8}711  {c |}{col 14}{res}{space 2} 3.763733{col 26}{space 2} 1.425571{col 37}{space 1}    2.64{col 46}{space 3}0.027{col 54}{space 4} .5388679{col 67}{space 3} 6.988597
{txt}{space 8}712  {c |}{col 14}{res}{space 2} 3.762952{col 26}{space 2} 1.553528{col 37}{space 1}    2.42{col 46}{space 3}0.038{col 54}{space 4}  .248628{col 67}{space 3} 7.277277
{txt}{space 8}713  {c |}{col 14}{res}{space 2} 3.752882{col 26}{space 2} 1.582574{col 37}{space 1}    2.37{col 46}{space 3}0.042{col 54}{space 4}  .172852{col 67}{space 3} 7.332912
{txt}{space 8}714  {c |}{col 14}{res}{space 2} 3.702952{col 26}{space 2} 1.403417{col 37}{space 1}    2.64{col 46}{space 3}0.027{col 54}{space 4} .5282035{col 67}{space 3} 6.877701
{txt}{space 8}715  {c |}{col 14}{res}{space 2} 3.679146{col 26}{space 2} 1.584655{col 37}{space 1}    2.32{col 46}{space 3}0.045{col 54}{space 4} .0944073{col 67}{space 3} 7.263885
{txt}{space 8}716  {c |}{col 14}{res}{space 2} 3.520067{col 26}{space 2} 1.564147{col 37}{space 1}    2.25{col 46}{space 3}0.051{col 54}{space 4}-.0182789{col 67}{space 3} 7.058413
{txt}{space 8}717  {c |}{col 14}{res}{space 2} 3.155817{col 26}{space 2} 1.562514{col 37}{space 1}    2.02{col 46}{space 3}0.074{col 54}{space 4}-.3788346{col 67}{space 3} 6.690469
{txt}{space 8}718  {c |}{col 14}{res}{space 2}  3.68379{col 26}{space 2} 1.543498{col 37}{space 1}    2.39{col 46}{space 3}0.041{col 54}{space 4} .1921557{col 67}{space 3} 7.175424
{txt}{space 8}719  {c |}{col 14}{res}{space 2}  3.73847{col 26}{space 2} 1.558479{col 37}{space 1}    2.40{col 46}{space 3}0.040{col 54}{space 4} .2129458{col 67}{space 3} 7.263995
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.236259{col 26}{space 2} .2069769{col 37}{space 1}    5.97{col 46}{space 3}0.000{col 54}{space 4} .7680445{col 67}{space 3} 1.704473
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-2.517461{col 26}{space 2} .5219707{col 37}{space 1}   -4.82{col 46}{space 3}0.001{col 54}{space 4} -3.69824{col 67}{space 3}-1.336681
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.041206{col 26}{space 2} .1181287{col 37}{space 1}    8.81{col 46}{space 3}0.000{col 54}{space 4} .7739807{col 67}{space 3} 1.308432
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.889361{col 26}{space 2} .3587726{col 37}{space 1}   -8.05{col 46}{space 3}0.000{col 54}{space 4}-3.700961{col 67}{space 3}-2.077761
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-1.594983{col 26}{space 2} .6573776{col 37}{space 1}   -2.43{col 46}{space 3}0.038{col 54}{space 4}-3.082075{col 67}{space 3} -.107892
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-2.639228{col 26}{space 2} .5606555{col 37}{space 1}   -4.71{col 46}{space 3}0.001{col 54}{space 4}-3.907519{col 67}{space 3}-1.370937
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} 1.567532{col 26}{space 2} .5700114{col 37}{space 1}    2.75{col 46}{space 3}0.022{col 54}{space 4} .2780762{col 67}{space 3} 2.856987
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}-4.098045{col 26}{space 2} 2.782949{col 37}{space 1}   -1.47{col 46}{space 3}0.175{col 54}{space 4}-10.39351{col 67}{space 3} 2.197424
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-.4013471{col 26}{space 2} .9066292{col 37}{space 1}   -0.44{col 46}{space 3}0.668{col 54}{space 4}-2.452285{col 67}{space 3} 1.649591
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 6.970306{col 26}{space 2} 11.10259{col 37}{space 1}    0.63{col 46}{space 3}0.546{col 54}{space 4} -18.1455{col 67}{space 3} 32.08611
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{txt}Overriding estimator's cluster/robust settings with {res}cluster(region1 date)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}one

{txt}{col 29}t(9) = {res}  -36.0234
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.853{txt}, {res}-3.523{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}two

{txt}{col 29}t(9) = {res}   -4.5904
{col 25}{txt}Prob>|t| = {res}    0.0392

95%{txt} confidence set for null hypothesis expression: [{res}-2.567{txt}, {res}-.1433{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}three

{txt}{col 29}t(9) = {res}  -10.2517
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-4.111{txt}, {res}-2.41{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}four

{txt}{col 29}t(9) = {res}   -9.1302
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-2.207{txt}, {res}-1.235{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}five

{txt}{col 29}t(9) = {res}   -5.7722
{col 25}{txt}Prob>|t| = {res}    0.0160

95%{txt} confidence set for null hypothesis expression: [{res}-2.181{txt}, {res}-.6399{txt}]
{res}
Warning: 5 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lgdp

{txt}{col 29}t(9) = {res}   -0.1520
{col 25}{txt}Prob>|t| = {res}    0.8892

95%{txt} confidence set for null hypothesis expression: [{res}-1.973{txt}, {res}1.858{txt}]
{res}
Warning: 3 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}lag_lpop

{txt}{col 29}t(9) = {res}   -0.5124
{col 25}{txt}Prob>|t| = {res}    0.6271

95%{txt} confidence set for null hypothesis expression: [{res}-1.15{txt}, {res}.7613{txt}]
{res}
Warning: 5 replications returned an infeasible test statistic and were deleted from the bootstrap distribution.

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, clustering by {res}region1 date{txt}, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}_cons

{txt}{col 29}t(9) = {res}    0.6250
{col 25}{txt}Prob>|t| = {res}    0.5773

95%{txt} confidence set for null hypothesis expression: [{res}-22.07{txt}, {res}33.55{txt}]
{res}{txt}
{com}. 
. 
. 
. mat list p_val
{res}
{txt}p_val[8,6]
           c1         c2         c3         c4         c5         c6
r1 {res}         0          .          .          .          .          0
{txt}r2 {res}         .  .00510051          .          .          .  .03920392
{txt}r3 {res}         .          .  .00050005          .          .          0
{txt}r4 {res}         .          .          .  .01150115          .  .00010001
{txt}r5 {res}         .          .          .          .  .32633263   .0160016
{txt}r6 {res} .76585317   .7303382  .18491849   .7590036  .75912774  .88923354
{txt}r7 {res} .89063438  .99569699  .92739109  .45981383    .737495  .62705082
{txt}r8 {res} .88064032  .90247074  .09813926  .81082433   .7170151  .57734641
{reset}
{com}. outtable using _3results/tables/p_val_b1, mat(p_val) replace format(%9.3f) norow nodots
{txt}
{com}. 
. esttab _all using _3results/tables/tableb2.tex, order(one two three four five lag_lgdp lag_lpop _cons) keep(one two three four five lag_lgdp lag_lpop _cons)  ///
>         nostar b(3) p(3) coeflabel(lag_lgdp "Lagged ln(GDP)" lag_lpop "Lagged ln(Pop.)" _cons "Constant") replace r2    
{res}{txt}(output written to {browse  `"_3results/tables/tableb2.tex"'})

{com}. 
.         
. 
.         
. 
{txt}end of do-file

{com}. 
. *figures
. 
. do _2code/_2analysis/figure2
{txt}
{com}. ********************************************************************************
. * Figure 2: Raw FDI inflows by disaster-affected regions
. 
. ********************************************************************************
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. set scheme plotplain
{txt}
{com}. 
. 
. gen log_fdi = asinh(fdi)
{txt}
{com}. * Graph of the raw data differentiating between unaffected and each of the five disasters:
. keep if date >= ym(2006,2)
{txt}(64 observations deleted)

{com}. gen affected=0
{txt}
{com}. replace affected=1 if one_affected==1 
{txt}(334 real changes made)

{com}. replace affected=2 if two_affected==1 
{txt}(668 real changes made)

{com}. replace affected=3 if three_affected==1 
{txt}(501 real changes made)

{com}. replace affected=4 if four_affected==1 
{txt}(334 real changes made)

{com}. replace affected=5 if five_affected==1
{txt}(167 real changes made)

{com}. *replace affected = 77 if one_affected==1 & two_affected==1
. bysort affected date (region): egen avg_fdi_each=mean(fdi)
{txt}
{com}. 
. tssmooth ma avg_fdi=avg_fdi_each, window(2 1 0)
{txt}The smoother applied was
{res}{p 5 5 5} by region1 : (1/3)*[x(t-2) + x(t-1) + 1*x(t)]; x(t)= avg_fdi_each{p_end}
{txt}
{com}. 
. * FIGURE 2A:
. graph twoway (line avg_fdi date if affected==2, lp(solid) lw(medthick) lcolor(gold)) ///
>         (line avg_fdi date if affected==3, lw(medthick) lcolor(maroon) lp(solid) ) ///
>         (line avg_fdi date if affected==4, lw(medthick) lcolor(ltblue) lp(solid) ) ///
>         (line avg_fdi date if affected==5, lw(medthick) lcolor(dkgreen) lp(solid) ) ///
>         (line avg_fdi date if affected==0, lw(medthick) lcolor(navy) lp(solid)  xaxis(1 2) xla(569 "ND 1" 601 "ND 2" ///
>         639 "ND 3" 668 "ND 4" 701 "ND 5", axis(1) grid glcolor(black) glpattern(dash) glwidth(medthin) tlength(0)) xtitle("", axis(2))), ///
>         legend(position(6) label(1 "Affected ND 1 & 2") label(2 "Affected ND 3") ///
>         label(3 "Affected ND 4") label(4 "Affected ND 5") ///
>         label(5 "Unaffected")) ylabel(,labsize(medium)) xtitle("", axis(2)) xtitle("", axis(1)) xlabel(552 "2006" 576 "2008" 600  "2010" 624 "2012" 648 "2014" 672 "2016" 696 "2018" 720 "2020",axis(2) labsize(medium)) ///
>         ytitle(Monthly FDI Inflows ($ mil.)) legend(on region(lwidth(none)) size(med) symysize(*1) col(3) ) xscale(noline)
{p 0 4 2}
{txt}(note:  named style
med not found in class
gsize,  default attributes used)
{p_end}
{res}{txt}
{com}. 
. 
. graph export _3results/figures/figure2a.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure2a.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
.         
. ** Change and focus on regions only affected by disaster 2:
. drop affected avg_fdi_each avg_fdi
{txt}
{com}. gen affected=0
{txt}
{com}. replace affected=1 if one_affected==1 
{txt}(334 real changes made)

{com}. replace affected=2 if two_affected==1 & one_affected==0
{txt}(334 real changes made)

{com}. replace affected=3 if three_affected==1 
{txt}(501 real changes made)

{com}. replace affected=4 if four_affected==1 
{txt}(334 real changes made)

{com}. replace affected=5 if five_affected==1
{txt}(167 real changes made)

{com}. bysort affected date (region): egen avg_fdi_each=mean(fdi)
{txt}
{com}. 
. tssmooth ma avg_fdi=avg_fdi_each, window(2 1 0)
{txt}The smoother applied was
{res}{p 5 5 5} by region1 : (1/3)*[x(t-2) + x(t-1) + 1*x(t)]; x(t)= avg_fdi_each{p_end}
{txt}
{com}. 
. 
. * FIGURE 2b:
. graph twoway (line avg_fdi date if affected==1, lp(solid) lw(medthick) lc(edkblue) ///
>         xaxis(1 2) xla(569 "ND 1" 601 "ND 2" 639 "ND 3" 668 "ND 4" 701 "ND 5", axis(2) grid glcolor(black) glpattern(dash) glwidth(medthin) tlength(0)) ///
>         xtitle("", axis(2)) xtitle("", axis(1)) xlabel(552 "2006" 576 "2008" 600  "2010" 624 "2012" 648 "2014" 672 "2016" 696 "2018" 720 "2020", axis(1) nogrid labsize(medium)) ytitle(Monthly FDI Inflows ($ mil.)) ylabel(,labsize(medium)) xscale(noline axis(2))) 
{res}{txt}
{com}. 
. 
. graph export _3results/figures/figure2b.pdf, replace    
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure2b.pdf{rm}
saved as
PDF
format
{p_end}

{com}.         
. 
. * FIGURE 2c:
. graph twoway (line avg_fdi date if affected==2, lp(solid) lw(medthick) lc(edkblue) ///
>         xaxis(1 2) xla(569 "ND 1" 601 "ND 2" 639 "ND 3" 668 "ND 4" 701 "ND 5", axis(2) grid glcolor(black) glpattern(dash) glwidth(medthin) tlength(0)) ///
>         xtitle("", axis(2)) xtitle("", axis(1)) xlabel(552 "2006" 576 "2008" 600  "2010" 624 "2012" 648 "2014" 672 "2016" 696 "2018" 720 "2020", axis(1) nogrid labsize(medium)) ytitle(Monthly FDI Inflows ($ mil.)) ylabel(,labsize(medium)) xscale(noline axis(2))) 
{res}{txt}
{com}. 
. 
. graph export _3results/figures/figure2c.pdf, replace            
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure2c.pdf{rm}
saved as
PDF
format
{p_end}

{com}.         
. * FIGURE 2d:
. graph twoway (line avg_fdi date if affected==3, lp(solid) lw(medthick) lc(edkblue) ///
>         xaxis(1 2) xla(569 "ND 1" 601 "ND 2" 639 "ND 3" 668 "ND 4" 701 "ND 5", axis(2) grid glcolor(black) glpattern(dash) glwidth(medthin) tlength(0)) ///
>         xtitle("", axis(2)) xtitle("", axis(1)) xlabel(552 "2006" 576 "2008" 600  "2010" 624 "2012" 648 "2014" 672 "2016" 696 "2018" 720 "2020", axis(1) nogrid labsize(medium)) ytitle(Monthly FDI Inflows ($ mil.)) ylabel(,labsize(medium)) xscale(noline axis(2)) ) 
{res}{txt}
{com}. 
. 
. graph export _3results/figures/figure2d.pdf, replace    
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure2d.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. * FIGURE 2e:
. graph twoway (line avg_fdi date if affected==4, lp(solid) lw(medthick) lc(edkblue) ///
>         xaxis(1 2) xla(569 "ND 1" 601 "ND 2" 639 "ND 3" 668 "ND 4" 701 "ND 5", axis(2) grid glcolor(black) glpattern(dash) glwidth(medthin) tlength(0)) ///
>         xtitle("", axis(2)) xtitle("", axis(1)) xlabel(552 "2006" 576 "2008" 600  "2010" 624 "2012" 648 "2014" 672 "2016" 696 "2018" 720 "2020", axis(1) nogrid labsize(medium)) ytitle(Monthly FDI Inflows ($ mil.)) ylabel(,labsize(medium)) xscale(noline axis(2)) ) 
{res}{txt}
{com}. 
. 
. graph export _3results/figures/figure2e.pdf, replace    
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure2e.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. * FIGURE 2f:
. graph twoway (line avg_fdi date if affected==5, lp(solid) lw(medthick) lc(edkblue) ///
>         xaxis(1 2) xla(569 "ND 1" 601 "ND 2" 639 "ND 3" 668 "ND 4" 701 "ND 5", axis(2) grid glcolor(black) glpattern(dash) glwidth(medthin) tlength(0)) ///
>         xtitle("", axis(2)) xtitle("", axis(1)) xlabel(552 "2006" 576 "2008" 600  "2010" 624 "2012" 648 "2014" 672 "2016" 696 "2018" 720 "2020", axis(1) nogrid labsize(medium)) ytitle(Monthly FDI Inflows ($ mil.)) ylabel(,labsize(medium)) xscale(noline axis(2)) ) 
{res}{txt}
{com}. 
. 
. graph export _3results/figures/figure2f.pdf, replace    
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure2f.pdf{rm}
saved as
PDF
format
{p_end}

{com}.         
. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
{txt}end of do-file

{com}. do _2code/_2analysis/figure4
{txt}
{com}. ********************************************************************************
. * Figure 4: Dynamic difference-in-differences
. 
. ********************************************************************************
. 
. ** To do this we can only include regions that were treated one time or those that were never treated
. ** This implies we exclude Patna and Kolkata and focus only on disasters 2 through 5. 
. ** We also test the robustness of this assumption if we only include those regions that appear to be
. ** on similar trends and therefore exclude all regions affect by disasters 1, 2, and 5:
. 
. 
. use _1data/clean/clean_data, clear 
{txt}
{com}. 
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. ** 2.1 Full Sample (only excluding Patna and Kolkata):
. drop if inlist(region, "patna", "kolkata")
{txt}(342 observations deleted)

{com}. 
. 
. * We evaluate these treatment effects against a refence month (i.e. the month before the disaster),
. * which changes for every disaster
. 
. * Here we put the timing of every disaster on the same footing:
. * For example, for each region t=0 the month before the disaster struck:
. 
. gen t=Count-171
{txt}
{com}. tab Count if two_bin==1

      {txt}Count {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
         55 {c |}{res}         14        0.85        0.85
{txt}         56 {c |}{res}         14        0.85        1.71
{txt}         57 {c |}{res}         14        0.85        2.56
{txt}         58 {c |}{res}         14        0.85        3.42
{txt}         59 {c |}{res}         14        0.85        4.27
{txt}         60 {c |}{res}         14        0.85        5.13
{txt}         61 {c |}{res}         14        0.85        5.98
{txt}         62 {c |}{res}         14        0.85        6.84
{txt}         63 {c |}{res}         14        0.85        7.69
{txt}         64 {c |}{res}         14        0.85        8.55
{txt}         65 {c |}{res}         14        0.85        9.40
{txt}         66 {c |}{res}         14        0.85       10.26
{txt}         67 {c |}{res}         14        0.85       11.11
{txt}         68 {c |}{res}         14        0.85       11.97
{txt}         69 {c |}{res}         14        0.85       12.82
{txt}         70 {c |}{res}         14        0.85       13.68
{txt}         71 {c |}{res}         14        0.85       14.53
{txt}         72 {c |}{res}         14        0.85       15.38
{txt}         73 {c |}{res}         14        0.85       16.24
{txt}         74 {c |}{res}         14        0.85       17.09
{txt}         75 {c |}{res}         14        0.85       17.95
{txt}         76 {c |}{res}         14        0.85       18.80
{txt}         77 {c |}{res}         14        0.85       19.66
{txt}         78 {c |}{res}         14        0.85       20.51
{txt}         79 {c |}{res}         14        0.85       21.37
{txt}         80 {c |}{res}         14        0.85       22.22
{txt}         81 {c |}{res}         14        0.85       23.08
{txt}         82 {c |}{res}         14        0.85       23.93
{txt}         83 {c |}{res}         14        0.85       24.79
{txt}         84 {c |}{res}         14        0.85       25.64
{txt}         85 {c |}{res}         14        0.85       26.50
{txt}         86 {c |}{res}         14        0.85       27.35
{txt}         87 {c |}{res}         14        0.85       28.21
{txt}         88 {c |}{res}         14        0.85       29.06
{txt}         89 {c |}{res}         14        0.85       29.91
{txt}         90 {c |}{res}         14        0.85       30.77
{txt}         91 {c |}{res}         14        0.85       31.62
{txt}         92 {c |}{res}         14        0.85       32.48
{txt}         93 {c |}{res}         14        0.85       33.33
{txt}         94 {c |}{res}         14        0.85       34.19
{txt}         95 {c |}{res}         14        0.85       35.04
{txt}         96 {c |}{res}         14        0.85       35.90
{txt}         97 {c |}{res}         14        0.85       36.75
{txt}         98 {c |}{res}         14        0.85       37.61
{txt}         99 {c |}{res}         14        0.85       38.46
{txt}        100 {c |}{res}         14        0.85       39.32
{txt}        101 {c |}{res}         14        0.85       40.17
{txt}        102 {c |}{res}         14        0.85       41.03
{txt}        103 {c |}{res}         14        0.85       41.88
{txt}        104 {c |}{res}         14        0.85       42.74
{txt}        105 {c |}{res}         14        0.85       43.59
{txt}        106 {c |}{res}         14        0.85       44.44
{txt}        107 {c |}{res}         14        0.85       45.30
{txt}        108 {c |}{res}         14        0.85       46.15
{txt}        109 {c |}{res}         14        0.85       47.01
{txt}        110 {c |}{res}         14        0.85       47.86
{txt}        111 {c |}{res}         14        0.85       48.72
{txt}        112 {c |}{res}         14        0.85       49.57
{txt}        113 {c |}{res}         14        0.85       50.43
{txt}        114 {c |}{res}         14        0.85       51.28
{txt}        115 {c |}{res}         14        0.85       52.14
{txt}        116 {c |}{res}         14        0.85       52.99
{txt}        117 {c |}{res}         14        0.85       53.85
{txt}        118 {c |}{res}         14        0.85       54.70
{txt}        119 {c |}{res}         14        0.85       55.56
{txt}        120 {c |}{res}         14        0.85       56.41
{txt}        121 {c |}{res}         14        0.85       57.26
{txt}        122 {c |}{res}         14        0.85       58.12
{txt}        123 {c |}{res}         14        0.85       58.97
{txt}        124 {c |}{res}         14        0.85       59.83
{txt}        125 {c |}{res}         14        0.85       60.68
{txt}        126 {c |}{res}         14        0.85       61.54
{txt}        127 {c |}{res}         14        0.85       62.39
{txt}        128 {c |}{res}         14        0.85       63.25
{txt}        129 {c |}{res}         14        0.85       64.10
{txt}        130 {c |}{res}         14        0.85       64.96
{txt}        131 {c |}{res}         14        0.85       65.81
{txt}        132 {c |}{res}         14        0.85       66.67
{txt}        133 {c |}{res}         14        0.85       67.52
{txt}        134 {c |}{res}         14        0.85       68.38
{txt}        135 {c |}{res}         14        0.85       69.23
{txt}        136 {c |}{res}         14        0.85       70.09
{txt}        137 {c |}{res}         14        0.85       70.94
{txt}        138 {c |}{res}         14        0.85       71.79
{txt}        139 {c |}{res}         14        0.85       72.65
{txt}        140 {c |}{res}         14        0.85       73.50
{txt}        141 {c |}{res}         14        0.85       74.36
{txt}        142 {c |}{res}         14        0.85       75.21
{txt}        143 {c |}{res}         14        0.85       76.07
{txt}        144 {c |}{res}         14        0.85       76.92
{txt}        145 {c |}{res}         14        0.85       77.78
{txt}        146 {c |}{res}         14        0.85       78.63
{txt}        147 {c |}{res}         14        0.85       79.49
{txt}        148 {c |}{res}         14        0.85       80.34
{txt}        149 {c |}{res}         14        0.85       81.20
{txt}        150 {c |}{res}         14        0.85       82.05
{txt}        151 {c |}{res}         14        0.85       82.91
{txt}        152 {c |}{res}         14        0.85       83.76
{txt}        153 {c |}{res}         14        0.85       84.62
{txt}        154 {c |}{res}         14        0.85       85.47
{txt}        155 {c |}{res}         14        0.85       86.32
{txt}        156 {c |}{res}         14        0.85       87.18
{txt}        157 {c |}{res}         14        0.85       88.03
{txt}        158 {c |}{res}         14        0.85       88.89
{txt}        159 {c |}{res}         14        0.85       89.74
{txt}        160 {c |}{res}         14        0.85       90.60
{txt}        161 {c |}{res}         14        0.85       91.45
{txt}        162 {c |}{res}         14        0.85       92.31
{txt}        163 {c |}{res}         14        0.85       93.16
{txt}        164 {c |}{res}         14        0.85       94.02
{txt}        165 {c |}{res}         14        0.85       94.87
{txt}        166 {c |}{res}         14        0.85       95.73
{txt}        167 {c |}{res}         14        0.85       96.58
{txt}        168 {c |}{res}         14        0.85       97.44
{txt}        169 {c |}{res}         14        0.85       98.29
{txt}        170 {c |}{res}         14        0.85       99.15
{txt}        171 {c |}{res}         14        0.85      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,638      100.00
{txt}
{com}. replace t=t+(171-54) if region=="bubaneshwar" | region=="guwahati"
{txt}(342 real changes made)

{com}. 
. tab Count if three_bin==1

      {txt}Count {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
         93 {c |}{res}         14        1.27        1.27
{txt}         94 {c |}{res}         14        1.27        2.53
{txt}         95 {c |}{res}         14        1.27        3.80
{txt}         96 {c |}{res}         14        1.27        5.06
{txt}         97 {c |}{res}         14        1.27        6.33
{txt}         98 {c |}{res}         14        1.27        7.59
{txt}         99 {c |}{res}         14        1.27        8.86
{txt}        100 {c |}{res}         14        1.27       10.13
{txt}        101 {c |}{res}         14        1.27       11.39
{txt}        102 {c |}{res}         14        1.27       12.66
{txt}        103 {c |}{res}         14        1.27       13.92
{txt}        104 {c |}{res}         14        1.27       15.19
{txt}        105 {c |}{res}         14        1.27       16.46
{txt}        106 {c |}{res}         14        1.27       17.72
{txt}        107 {c |}{res}         14        1.27       18.99
{txt}        108 {c |}{res}         14        1.27       20.25
{txt}        109 {c |}{res}         14        1.27       21.52
{txt}        110 {c |}{res}         14        1.27       22.78
{txt}        111 {c |}{res}         14        1.27       24.05
{txt}        112 {c |}{res}         14        1.27       25.32
{txt}        113 {c |}{res}         14        1.27       26.58
{txt}        114 {c |}{res}         14        1.27       27.85
{txt}        115 {c |}{res}         14        1.27       29.11
{txt}        116 {c |}{res}         14        1.27       30.38
{txt}        117 {c |}{res}         14        1.27       31.65
{txt}        118 {c |}{res}         14        1.27       32.91
{txt}        119 {c |}{res}         14        1.27       34.18
{txt}        120 {c |}{res}         14        1.27       35.44
{txt}        121 {c |}{res}         14        1.27       36.71
{txt}        122 {c |}{res}         14        1.27       37.97
{txt}        123 {c |}{res}         14        1.27       39.24
{txt}        124 {c |}{res}         14        1.27       40.51
{txt}        125 {c |}{res}         14        1.27       41.77
{txt}        126 {c |}{res}         14        1.27       43.04
{txt}        127 {c |}{res}         14        1.27       44.30
{txt}        128 {c |}{res}         14        1.27       45.57
{txt}        129 {c |}{res}         14        1.27       46.84
{txt}        130 {c |}{res}         14        1.27       48.10
{txt}        131 {c |}{res}         14        1.27       49.37
{txt}        132 {c |}{res}         14        1.27       50.63
{txt}        133 {c |}{res}         14        1.27       51.90
{txt}        134 {c |}{res}         14        1.27       53.16
{txt}        135 {c |}{res}         14        1.27       54.43
{txt}        136 {c |}{res}         14        1.27       55.70
{txt}        137 {c |}{res}         14        1.27       56.96
{txt}        138 {c |}{res}         14        1.27       58.23
{txt}        139 {c |}{res}         14        1.27       59.49
{txt}        140 {c |}{res}         14        1.27       60.76
{txt}        141 {c |}{res}         14        1.27       62.03
{txt}        142 {c |}{res}         14        1.27       63.29
{txt}        143 {c |}{res}         14        1.27       64.56
{txt}        144 {c |}{res}         14        1.27       65.82
{txt}        145 {c |}{res}         14        1.27       67.09
{txt}        146 {c |}{res}         14        1.27       68.35
{txt}        147 {c |}{res}         14        1.27       69.62
{txt}        148 {c |}{res}         14        1.27       70.89
{txt}        149 {c |}{res}         14        1.27       72.15
{txt}        150 {c |}{res}         14        1.27       73.42
{txt}        151 {c |}{res}         14        1.27       74.68
{txt}        152 {c |}{res}         14        1.27       75.95
{txt}        153 {c |}{res}         14        1.27       77.22
{txt}        154 {c |}{res}         14        1.27       78.48
{txt}        155 {c |}{res}         14        1.27       79.75
{txt}        156 {c |}{res}         14        1.27       81.01
{txt}        157 {c |}{res}         14        1.27       82.28
{txt}        158 {c |}{res}         14        1.27       83.54
{txt}        159 {c |}{res}         14        1.27       84.81
{txt}        160 {c |}{res}         14        1.27       86.08
{txt}        161 {c |}{res}         14        1.27       87.34
{txt}        162 {c |}{res}         14        1.27       88.61
{txt}        163 {c |}{res}         14        1.27       89.87
{txt}        164 {c |}{res}         14        1.27       91.14
{txt}        165 {c |}{res}         14        1.27       92.41
{txt}        166 {c |}{res}         14        1.27       93.67
{txt}        167 {c |}{res}         14        1.27       94.94
{txt}        168 {c |}{res}         14        1.27       96.20
{txt}        169 {c |}{res}         14        1.27       97.47
{txt}        170 {c |}{res}         14        1.27       98.73
{txt}        171 {c |}{res}         14        1.27      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      1,106      100.00
{txt}
{com}. replace t=t+(171-92) if region=="chandigarh" | region=="new_delhi" | region=="kanpur"
{txt}(513 real changes made)

{com}. 
. tab Count if four_bin==1

      {txt}Count {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
        122 {c |}{res}         14        2.00        2.00
{txt}        123 {c |}{res}         14        2.00        4.00
{txt}        124 {c |}{res}         14        2.00        6.00
{txt}        125 {c |}{res}         14        2.00        8.00
{txt}        126 {c |}{res}         14        2.00       10.00
{txt}        127 {c |}{res}         14        2.00       12.00
{txt}        128 {c |}{res}         14        2.00       14.00
{txt}        129 {c |}{res}         14        2.00       16.00
{txt}        130 {c |}{res}         14        2.00       18.00
{txt}        131 {c |}{res}         14        2.00       20.00
{txt}        132 {c |}{res}         14        2.00       22.00
{txt}        133 {c |}{res}         14        2.00       24.00
{txt}        134 {c |}{res}         14        2.00       26.00
{txt}        135 {c |}{res}         14        2.00       28.00
{txt}        136 {c |}{res}         14        2.00       30.00
{txt}        137 {c |}{res}         14        2.00       32.00
{txt}        138 {c |}{res}         14        2.00       34.00
{txt}        139 {c |}{res}         14        2.00       36.00
{txt}        140 {c |}{res}         14        2.00       38.00
{txt}        141 {c |}{res}         14        2.00       40.00
{txt}        142 {c |}{res}         14        2.00       42.00
{txt}        143 {c |}{res}         14        2.00       44.00
{txt}        144 {c |}{res}         14        2.00       46.00
{txt}        145 {c |}{res}         14        2.00       48.00
{txt}        146 {c |}{res}         14        2.00       50.00
{txt}        147 {c |}{res}         14        2.00       52.00
{txt}        148 {c |}{res}         14        2.00       54.00
{txt}        149 {c |}{res}         14        2.00       56.00
{txt}        150 {c |}{res}         14        2.00       58.00
{txt}        151 {c |}{res}         14        2.00       60.00
{txt}        152 {c |}{res}         14        2.00       62.00
{txt}        153 {c |}{res}         14        2.00       64.00
{txt}        154 {c |}{res}         14        2.00       66.00
{txt}        155 {c |}{res}         14        2.00       68.00
{txt}        156 {c |}{res}         14        2.00       70.00
{txt}        157 {c |}{res}         14        2.00       72.00
{txt}        158 {c |}{res}         14        2.00       74.00
{txt}        159 {c |}{res}         14        2.00       76.00
{txt}        160 {c |}{res}         14        2.00       78.00
{txt}        161 {c |}{res}         14        2.00       80.00
{txt}        162 {c |}{res}         14        2.00       82.00
{txt}        163 {c |}{res}         14        2.00       84.00
{txt}        164 {c |}{res}         14        2.00       86.00
{txt}        165 {c |}{res}         14        2.00       88.00
{txt}        166 {c |}{res}         14        2.00       90.00
{txt}        167 {c |}{res}         14        2.00       92.00
{txt}        168 {c |}{res}         14        2.00       94.00
{txt}        169 {c |}{res}         14        2.00       96.00
{txt}        170 {c |}{res}         14        2.00       98.00
{txt}        171 {c |}{res}         14        2.00      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        700      100.00
{txt}
{com}. replace t=t+(171-121) if region=="hyderabad" | region=="chennai"
{txt}(342 real changes made)

{com}. 
. 
. tab Count if five_bin==1

      {txt}Count {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
        155 {c |}{res}         14        5.88        5.88
{txt}        156 {c |}{res}         14        5.88       11.76
{txt}        157 {c |}{res}         14        5.88       17.65
{txt}        158 {c |}{res}         14        5.88       23.53
{txt}        159 {c |}{res}         14        5.88       29.41
{txt}        160 {c |}{res}         14        5.88       35.29
{txt}        161 {c |}{res}         14        5.88       41.18
{txt}        162 {c |}{res}         14        5.88       47.06
{txt}        163 {c |}{res}         14        5.88       52.94
{txt}        164 {c |}{res}         14        5.88       58.82
{txt}        165 {c |}{res}         14        5.88       64.71
{txt}        166 {c |}{res}         14        5.88       70.59
{txt}        167 {c |}{res}         14        5.88       76.47
{txt}        168 {c |}{res}         14        5.88       82.35
{txt}        169 {c |}{res}         14        5.88       88.24
{txt}        170 {c |}{res}         14        5.88       94.12
{txt}        171 {c |}{res}         14        5.88      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}        238      100.00
{txt}
{com}. replace t=t+(171-154) if region=="kochi"
{txt}(171 real changes made)

{com}. 
. 
. 
. 
. * Generate fixed effects based on these values
. tab t, gen(t_fe)

          {txt}t {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
       -170 {c |}{res}          6        0.25        0.25
{txt}       -169 {c |}{res}          6        0.25        0.50
{txt}       -168 {c |}{res}          6        0.25        0.75
{txt}       -167 {c |}{res}          6        0.25        1.00
{txt}       -166 {c |}{res}          6        0.25        1.25
{txt}       -165 {c |}{res}          6        0.25        1.50
{txt}       -164 {c |}{res}          6        0.25        1.75
{txt}       -163 {c |}{res}          6        0.25        2.01
{txt}       -162 {c |}{res}          6        0.25        2.26
{txt}       -161 {c |}{res}          6        0.25        2.51
{txt}       -160 {c |}{res}          6        0.25        2.76
{txt}       -159 {c |}{res}          6        0.25        3.01
{txt}       -158 {c |}{res}          6        0.25        3.26
{txt}       -157 {c |}{res}          6        0.25        3.51
{txt}       -156 {c |}{res}          6        0.25        3.76
{txt}       -155 {c |}{res}          6        0.25        4.01
{txt}       -154 {c |}{res}          6        0.25        4.26
{txt}       -153 {c |}{res}          7        0.29        4.55
{txt}       -152 {c |}{res}          7        0.29        4.85
{txt}       -151 {c |}{res}          7        0.29        5.14
{txt}       -150 {c |}{res}          7        0.29        5.43
{txt}       -149 {c |}{res}          7        0.29        5.72
{txt}       -148 {c |}{res}          7        0.29        6.02
{txt}       -147 {c |}{res}          7        0.29        6.31
{txt}       -146 {c |}{res}          7        0.29        6.60
{txt}       -145 {c |}{res}          7        0.29        6.89
{txt}       -144 {c |}{res}          7        0.29        7.18
{txt}       -143 {c |}{res}          7        0.29        7.48
{txt}       -142 {c |}{res}          7        0.29        7.77
{txt}       -141 {c |}{res}          7        0.29        8.06
{txt}       -140 {c |}{res}          7        0.29        8.35
{txt}       -139 {c |}{res}          7        0.29        8.65
{txt}       -138 {c |}{res}          7        0.29        8.94
{txt}       -137 {c |}{res}          7        0.29        9.23
{txt}       -136 {c |}{res}          7        0.29        9.52
{txt}       -135 {c |}{res}          7        0.29        9.82
{txt}       -134 {c |}{res}          7        0.29       10.11
{txt}       -133 {c |}{res}          7        0.29       10.40
{txt}       -132 {c |}{res}          7        0.29       10.69
{txt}       -131 {c |}{res}          7        0.29       10.99
{txt}       -130 {c |}{res}          7        0.29       11.28
{txt}       -129 {c |}{res}          7        0.29       11.57
{txt}       -128 {c |}{res}          7        0.29       11.86
{txt}       -127 {c |}{res}          7        0.29       12.16
{txt}       -126 {c |}{res}          7        0.29       12.45
{txt}       -125 {c |}{res}          7        0.29       12.74
{txt}       -124 {c |}{res}          7        0.29       13.03
{txt}       -123 {c |}{res}          7        0.29       13.32
{txt}       -122 {c |}{res}          7        0.29       13.62
{txt}       -121 {c |}{res}          7        0.29       13.91
{txt}       -120 {c |}{res}          9        0.38       14.29
{txt}       -119 {c |}{res}          9        0.38       14.66
{txt}       -118 {c |}{res}          9        0.38       15.04
{txt}       -117 {c |}{res}          9        0.38       15.41
{txt}       -116 {c |}{res}          9        0.38       15.79
{txt}       -115 {c |}{res}          9        0.38       16.17
{txt}       -114 {c |}{res}          9        0.38       16.54
{txt}       -113 {c |}{res}          9        0.38       16.92
{txt}       -112 {c |}{res}          9        0.38       17.29
{txt}       -111 {c |}{res}          9        0.38       17.67
{txt}       -110 {c |}{res}          9        0.38       18.05
{txt}       -109 {c |}{res}          9        0.38       18.42
{txt}       -108 {c |}{res}          9        0.38       18.80
{txt}       -107 {c |}{res}          9        0.38       19.17
{txt}       -106 {c |}{res}          9        0.38       19.55
{txt}       -105 {c |}{res}          9        0.38       19.92
{txt}       -104 {c |}{res}          9        0.38       20.30
{txt}       -103 {c |}{res}          9        0.38       20.68
{txt}       -102 {c |}{res}          9        0.38       21.05
{txt}       -101 {c |}{res}          9        0.38       21.43
{txt}       -100 {c |}{res}          9        0.38       21.80
{txt}        -99 {c |}{res}          9        0.38       22.18
{txt}        -98 {c |}{res}          9        0.38       22.56
{txt}        -97 {c |}{res}          9        0.38       22.93
{txt}        -96 {c |}{res}          9        0.38       23.31
{txt}        -95 {c |}{res}          9        0.38       23.68
{txt}        -94 {c |}{res}          9        0.38       24.06
{txt}        -93 {c |}{res}          9        0.38       24.44
{txt}        -92 {c |}{res}          9        0.38       24.81
{txt}        -91 {c |}{res}         12        0.50       25.31
{txt}        -90 {c |}{res}         12        0.50       25.81
{txt}        -89 {c |}{res}         12        0.50       26.32
{txt}        -88 {c |}{res}         12        0.50       26.82
{txt}        -87 {c |}{res}         12        0.50       27.32
{txt}        -86 {c |}{res}         12        0.50       27.82
{txt}        -85 {c |}{res}         12        0.50       28.32
{txt}        -84 {c |}{res}         12        0.50       28.82
{txt}        -83 {c |}{res}         12        0.50       29.32
{txt}        -82 {c |}{res}         12        0.50       29.82
{txt}        -81 {c |}{res}         12        0.50       30.33
{txt}        -80 {c |}{res}         12        0.50       30.83
{txt}        -79 {c |}{res}         12        0.50       31.33
{txt}        -78 {c |}{res}         12        0.50       31.83
{txt}        -77 {c |}{res}         12        0.50       32.33
{txt}        -76 {c |}{res}         12        0.50       32.83
{txt}        -75 {c |}{res}         12        0.50       33.33
{txt}        -74 {c |}{res}         12        0.50       33.83
{txt}        -73 {c |}{res}         12        0.50       34.34
{txt}        -72 {c |}{res}         12        0.50       34.84
{txt}        -71 {c |}{res}         12        0.50       35.34
{txt}        -70 {c |}{res}         12        0.50       35.84
{txt}        -69 {c |}{res}         12        0.50       36.34
{txt}        -68 {c |}{res}         12        0.50       36.84
{txt}        -67 {c |}{res}         12        0.50       37.34
{txt}        -66 {c |}{res}         12        0.50       37.84
{txt}        -65 {c |}{res}         12        0.50       38.35
{txt}        -64 {c |}{res}         12        0.50       38.85
{txt}        -63 {c |}{res}         12        0.50       39.35
{txt}        -62 {c |}{res}         12        0.50       39.85
{txt}        -61 {c |}{res}         12        0.50       40.35
{txt}        -60 {c |}{res}         12        0.50       40.85
{txt}        -59 {c |}{res}         12        0.50       41.35
{txt}        -58 {c |}{res}         12        0.50       41.85
{txt}        -57 {c |}{res}         12        0.50       42.36
{txt}        -56 {c |}{res}         12        0.50       42.86
{txt}        -55 {c |}{res}         12        0.50       43.36
{txt}        -54 {c |}{res}         12        0.50       43.86
{txt}        -53 {c |}{res}         14        0.58       44.44
{txt}        -52 {c |}{res}         14        0.58       45.03
{txt}        -51 {c |}{res}         14        0.58       45.61
{txt}        -50 {c |}{res}         14        0.58       46.20
{txt}        -49 {c |}{res}         14        0.58       46.78
{txt}        -48 {c |}{res}         14        0.58       47.37
{txt}        -47 {c |}{res}         14        0.58       47.95
{txt}        -46 {c |}{res}         14        0.58       48.54
{txt}        -45 {c |}{res}         14        0.58       49.12
{txt}        -44 {c |}{res}         14        0.58       49.71
{txt}        -43 {c |}{res}         14        0.58       50.29
{txt}        -42 {c |}{res}         14        0.58       50.88
{txt}        -41 {c |}{res}         14        0.58       51.46
{txt}        -40 {c |}{res}         14        0.58       52.05
{txt}        -39 {c |}{res}         14        0.58       52.63
{txt}        -38 {c |}{res}         14        0.58       53.22
{txt}        -37 {c |}{res}         14        0.58       53.80
{txt}        -36 {c |}{res}         14        0.58       54.39
{txt}        -35 {c |}{res}         14        0.58       54.97
{txt}        -34 {c |}{res}         14        0.58       55.56
{txt}        -33 {c |}{res}         14        0.58       56.14
{txt}        -32 {c |}{res}         14        0.58       56.73
{txt}        -31 {c |}{res}         14        0.58       57.31
{txt}        -30 {c |}{res}         14        0.58       57.89
{txt}        -29 {c |}{res}         14        0.58       58.48
{txt}        -28 {c |}{res}         14        0.58       59.06
{txt}        -27 {c |}{res}         14        0.58       59.65
{txt}        -26 {c |}{res}         14        0.58       60.23
{txt}        -25 {c |}{res}         14        0.58       60.82
{txt}        -24 {c |}{res}         14        0.58       61.40
{txt}        -23 {c |}{res}         14        0.58       61.99
{txt}        -22 {c |}{res}         14        0.58       62.57
{txt}        -21 {c |}{res}         14        0.58       63.16
{txt}        -20 {c |}{res}         14        0.58       63.74
{txt}        -19 {c |}{res}         14        0.58       64.33
{txt}        -18 {c |}{res}         14        0.58       64.91
{txt}        -17 {c |}{res}         14        0.58       65.50
{txt}        -16 {c |}{res}         14        0.58       66.08
{txt}        -15 {c |}{res}         14        0.58       66.67
{txt}        -14 {c |}{res}         14        0.58       67.25
{txt}        -13 {c |}{res}         14        0.58       67.84
{txt}        -12 {c |}{res}         14        0.58       68.42
{txt}        -11 {c |}{res}         14        0.58       69.01
{txt}        -10 {c |}{res}         14        0.58       69.59
{txt}         -9 {c |}{res}         14        0.58       70.18
{txt}         -8 {c |}{res}         14        0.58       70.76
{txt}         -7 {c |}{res}         14        0.58       71.35
{txt}         -6 {c |}{res}         14        0.58       71.93
{txt}         -5 {c |}{res}         14        0.58       72.51
{txt}         -4 {c |}{res}         14        0.58       73.10
{txt}         -3 {c |}{res}         14        0.58       73.68
{txt}         -2 {c |}{res}         14        0.58       74.27
{txt}         -1 {c |}{res}         14        0.58       74.85
{txt}          0 {c |}{res}         14        0.58       75.44
{txt}          1 {c |}{res}          8        0.33       75.77
{txt}          2 {c |}{res}          8        0.33       76.11
{txt}          3 {c |}{res}          8        0.33       76.44
{txt}          4 {c |}{res}          8        0.33       76.78
{txt}          5 {c |}{res}          8        0.33       77.11
{txt}          6 {c |}{res}          8        0.33       77.44
{txt}          7 {c |}{res}          8        0.33       77.78
{txt}          8 {c |}{res}          8        0.33       78.11
{txt}          9 {c |}{res}          8        0.33       78.45
{txt}         10 {c |}{res}          8        0.33       78.78
{txt}         11 {c |}{res}          8        0.33       79.11
{txt}         12 {c |}{res}          8        0.33       79.45
{txt}         13 {c |}{res}          8        0.33       79.78
{txt}         14 {c |}{res}          8        0.33       80.12
{txt}         15 {c |}{res}          8        0.33       80.45
{txt}         16 {c |}{res}          8        0.33       80.79
{txt}         17 {c |}{res}          8        0.33       81.12
{txt}         18 {c |}{res}          7        0.29       81.41
{txt}         19 {c |}{res}          7        0.29       81.70
{txt}         20 {c |}{res}          7        0.29       82.00
{txt}         21 {c |}{res}          7        0.29       82.29
{txt}         22 {c |}{res}          7        0.29       82.58
{txt}         23 {c |}{res}          7        0.29       82.87
{txt}         24 {c |}{res}          7        0.29       83.17
{txt}         25 {c |}{res}          7        0.29       83.46
{txt}         26 {c |}{res}          7        0.29       83.75
{txt}         27 {c |}{res}          7        0.29       84.04
{txt}         28 {c |}{res}          7        0.29       84.34
{txt}         29 {c |}{res}          7        0.29       84.63
{txt}         30 {c |}{res}          7        0.29       84.92
{txt}         31 {c |}{res}          7        0.29       85.21
{txt}         32 {c |}{res}          7        0.29       85.51
{txt}         33 {c |}{res}          7        0.29       85.80
{txt}         34 {c |}{res}          7        0.29       86.09
{txt}         35 {c |}{res}          7        0.29       86.38
{txt}         36 {c |}{res}          7        0.29       86.68
{txt}         37 {c |}{res}          7        0.29       86.97
{txt}         38 {c |}{res}          7        0.29       87.26
{txt}         39 {c |}{res}          7        0.29       87.55
{txt}         40 {c |}{res}          7        0.29       87.84
{txt}         41 {c |}{res}          7        0.29       88.14
{txt}         42 {c |}{res}          7        0.29       88.43
{txt}         43 {c |}{res}          7        0.29       88.72
{txt}         44 {c |}{res}          7        0.29       89.01
{txt}         45 {c |}{res}          7        0.29       89.31
{txt}         46 {c |}{res}          7        0.29       89.60
{txt}         47 {c |}{res}          7        0.29       89.89
{txt}         48 {c |}{res}          7        0.29       90.18
{txt}         49 {c |}{res}          7        0.29       90.48
{txt}         50 {c |}{res}          7        0.29       90.77
{txt}         51 {c |}{res}          5        0.21       90.98
{txt}         52 {c |}{res}          5        0.21       91.19
{txt}         53 {c |}{res}          5        0.21       91.40
{txt}         54 {c |}{res}          5        0.21       91.60
{txt}         55 {c |}{res}          5        0.21       91.81
{txt}         56 {c |}{res}          5        0.21       92.02
{txt}         57 {c |}{res}          5        0.21       92.23
{txt}         58 {c |}{res}          5        0.21       92.44
{txt}         59 {c |}{res}          5        0.21       92.65
{txt}         60 {c |}{res}          5        0.21       92.86
{txt}         61 {c |}{res}          5        0.21       93.07
{txt}         62 {c |}{res}          5        0.21       93.27
{txt}         63 {c |}{res}          5        0.21       93.48
{txt}         64 {c |}{res}          5        0.21       93.69
{txt}         65 {c |}{res}          5        0.21       93.90
{txt}         66 {c |}{res}          5        0.21       94.11
{txt}         67 {c |}{res}          5        0.21       94.32
{txt}         68 {c |}{res}          5        0.21       94.53
{txt}         69 {c |}{res}          5        0.21       94.74
{txt}         70 {c |}{res}          5        0.21       94.95
{txt}         71 {c |}{res}          5        0.21       95.15
{txt}         72 {c |}{res}          5        0.21       95.36
{txt}         73 {c |}{res}          5        0.21       95.57
{txt}         74 {c |}{res}          5        0.21       95.78
{txt}         75 {c |}{res}          5        0.21       95.99
{txt}         76 {c |}{res}          5        0.21       96.20
{txt}         77 {c |}{res}          5        0.21       96.41
{txt}         78 {c |}{res}          5        0.21       96.62
{txt}         79 {c |}{res}          5        0.21       96.83
{txt}         80 {c |}{res}          2        0.08       96.91
{txt}         81 {c |}{res}          2        0.08       96.99
{txt}         82 {c |}{res}          2        0.08       97.08
{txt}         83 {c |}{res}          2        0.08       97.16
{txt}         84 {c |}{res}          2        0.08       97.24
{txt}         85 {c |}{res}          2        0.08       97.33
{txt}         86 {c |}{res}          2        0.08       97.41
{txt}         87 {c |}{res}          2        0.08       97.49
{txt}         88 {c |}{res}          2        0.08       97.58
{txt}         89 {c |}{res}          2        0.08       97.66
{txt}         90 {c |}{res}          2        0.08       97.74
{txt}         91 {c |}{res}          2        0.08       97.83
{txt}         92 {c |}{res}          2        0.08       97.91
{txt}         93 {c |}{res}          2        0.08       97.99
{txt}         94 {c |}{res}          2        0.08       98.08
{txt}         95 {c |}{res}          2        0.08       98.16
{txt}         96 {c |}{res}          2        0.08       98.25
{txt}         97 {c |}{res}          2        0.08       98.33
{txt}         98 {c |}{res}          2        0.08       98.41
{txt}         99 {c |}{res}          2        0.08       98.50
{txt}        100 {c |}{res}          2        0.08       98.58
{txt}        101 {c |}{res}          2        0.08       98.66
{txt}        102 {c |}{res}          2        0.08       98.75
{txt}        103 {c |}{res}          2        0.08       98.83
{txt}        104 {c |}{res}          2        0.08       98.91
{txt}        105 {c |}{res}          2        0.08       99.00
{txt}        106 {c |}{res}          2        0.08       99.08
{txt}        107 {c |}{res}          2        0.08       99.16
{txt}        108 {c |}{res}          2        0.08       99.25
{txt}        109 {c |}{res}          2        0.08       99.33
{txt}        110 {c |}{res}          2        0.08       99.42
{txt}        111 {c |}{res}          2        0.08       99.50
{txt}        112 {c |}{res}          2        0.08       99.58
{txt}        113 {c |}{res}          2        0.08       99.67
{txt}        114 {c |}{res}          2        0.08       99.75
{txt}        115 {c |}{res}          2        0.08       99.83
{txt}        116 {c |}{res}          2        0.08       99.92
{txt}        117 {c |}{res}          2        0.08      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      2,394      100.00
{txt}
{com}. 
. 
. forvalues i=1/288 {c -(}
{txt}  2{com}. * Remove the t_fe=1 for untreated regions:
. replace t_fe`i'=0 if !inlist(region, "bubaneshwar", "guwhati", "chandigarh", "new_delhi", "kanpur", "chennai", "hyderabad", "kochi")
{txt}  3{com}. 
. * Drop the t_fe that are always zero (i.e. we never observe a the month 171 before the disaster bc there is no 
. * region that was treated the last month of our sample. Therefore we must drop t_fe171):
. sum t_fe`i'
{txt}  4{com}. if r(max)==0 {c -(}
{txt}  5{com}. drop t_fe`i'
{txt}  6{com}. {c )-}
{txt}  7{com}. {c )-}
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe1 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe2 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe3 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe4 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe5 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe6 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe7 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe8 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 7}t_fe9 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe10 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe11 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe12 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe13 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe14 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe15 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe16 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe17 {c |}{res}      2,394           0           0          0          0
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe18 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe19 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe20 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe21 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe22 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe23 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe24 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe25 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe26 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe27 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe28 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe29 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe30 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe31 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe32 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe33 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe34 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe35 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe36 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe37 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe38 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe39 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe40 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe41 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe42 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe43 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe44 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe45 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe46 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe47 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe48 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe49 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe50 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe51 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe52 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe53 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe54 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe55 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe56 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe57 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe58 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe59 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe60 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe61 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe62 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe63 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe64 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe65 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe66 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe67 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe68 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe69 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe70 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe71 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe72 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe73 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe74 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe75 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe76 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe77 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe78 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe79 {c |}{res}      2,394    .0012531    .0353848          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe80 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe81 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe82 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe83 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe84 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe85 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe86 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe87 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe88 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe89 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe90 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe91 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe92 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe93 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe94 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe95 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe96 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe97 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe98 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 6}t_fe99 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe100 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe101 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe102 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe103 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe104 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe105 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe106 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe107 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe108 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe109 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe110 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe111 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe112 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe113 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe114 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe115 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe116 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(6 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe117 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe118 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe119 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe120 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe121 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe122 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe123 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe124 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe125 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe126 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe127 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe128 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe129 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe130 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe131 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe132 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe133 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe134 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe135 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe136 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe137 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe138 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe139 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe140 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe141 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe142 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe143 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe144 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe145 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe146 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe147 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe148 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe149 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe150 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe151 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe152 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe153 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe154 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe155 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe156 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe157 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe158 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe159 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe160 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe161 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe162 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe163 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe164 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe165 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe166 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe167 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe168 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe169 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe170 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(7 real changes made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe171 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe172 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe173 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe174 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe175 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe176 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe177 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe178 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe179 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe180 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe181 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe182 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe183 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe184 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe185 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe186 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe187 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe188 {c |}{res}      2,394     .002924     .054006          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe189 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe190 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe191 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe192 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe193 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe194 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe195 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe196 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe197 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe198 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe199 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe200 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe201 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe202 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe203 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe204 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe205 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe206 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe207 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe208 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe209 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe210 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe211 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe212 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe213 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe214 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe215 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe216 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe217 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe218 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe219 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe220 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe221 {c |}{res}      2,394    .0025063    .0500103          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe222 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe223 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe224 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe225 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe226 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe227 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe228 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe229 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe230 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe231 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe232 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe233 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe234 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe235 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe236 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe237 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe238 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe239 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe240 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe241 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe242 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe243 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe244 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe245 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe246 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe247 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe248 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe249 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe250 {c |}{res}      2,394    .0016708    .0408503          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe251 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe252 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe253 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe254 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe255 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe256 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe257 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe258 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe259 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe260 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe261 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe262 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe263 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe264 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe265 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe266 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe267 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe268 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe269 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe270 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe271 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe272 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe273 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe274 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe275 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe276 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe277 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe278 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe279 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe280 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe281 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe282 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe283 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe284 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe285 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe286 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe287 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}(1 real change made)

    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}t_fe288 {c |}{res}      2,394    .0004177     .020438          0          1
{txt}
{com}. 
. * Drop the fixed effect for the reference month:
. drop t_fe171
{txt}
{com}. sort region date
{txt}
{com}. * Identify the pre-treatment month for the affected regions.
. * These are the relavant pre-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=18/170 {c -(}
{txt}  2{com}. local j=171-`i'
{txt}  3{com}. gen pre_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. * Identify the post-treatment month for the affected regions.
. * These are the relavant post-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=172/288{c -(}
{txt}  2{com}. local j=`i'-171
{txt}  3{com}. gen post_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. * Drop the t_fe* which are no longer needed:
. drop t_fe*
{txt}
{com}. 
. 
. 
. 
. 
. ** Set up CI matrix:
. 
. 
. *** Dynamic Dif-in-Difs regression with controls and region and time fixed effects:
. 
. 
. reg fdi_ihs pre* post* $control i.date i.region1, robust 
{txt}{p 0 6 2}note: {bf:pre_153} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:pre_152} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:pre_151} omitted because of collinearity.{p_end}

Linear regression                               Number of obs     = {res}     2,352
                                                {txt}{help j_robustsingular:F(378, 1902) }     =  {res}        .
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.8071
                                                {txt}Root MSE          =    {res} 1.1556

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}pre_153 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 5}pre_152 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 5}pre_151 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 5}pre_150 {c |}{col 14}{res}{space 2}-1.674162{col 26}{space 2} .5325371{col 37}{space 1}   -3.14{col 46}{space 3}0.002{col 54}{space 4} -2.71858{col 67}{space 3}-.6297435
{txt}{space 5}pre_149 {c |}{col 14}{res}{space 2}-.8470853{col 26}{space 2} .4804792{col 37}{space 1}   -1.76{col 46}{space 3}0.078{col 54}{space 4}-1.789407{col 67}{space 3} .0952363
{txt}{space 5}pre_148 {c |}{col 14}{res}{space 2}-2.050336{col 26}{space 2} .4663535{col 37}{space 1}   -4.40{col 46}{space 3}0.000{col 54}{space 4}-2.964954{col 67}{space 3}-1.135718
{txt}{space 5}pre_147 {c |}{col 14}{res}{space 2}-2.514269{col 26}{space 2} .5295762{col 37}{space 1}   -4.75{col 46}{space 3}0.000{col 54}{space 4}-3.552881{col 67}{space 3}-1.475658
{txt}{space 5}pre_146 {c |}{col 14}{res}{space 2}-2.342447{col 26}{space 2}  .508567{col 37}{space 1}   -4.61{col 46}{space 3}0.000{col 54}{space 4}-3.339855{col 67}{space 3} -1.34504
{txt}{space 5}pre_145 {c |}{col 14}{res}{space 2}-2.608137{col 26}{space 2} .6202707{col 37}{space 1}   -4.20{col 46}{space 3}0.000{col 54}{space 4}-3.824619{col 67}{space 3}-1.391655
{txt}{space 5}pre_144 {c |}{col 14}{res}{space 2}-3.216496{col 26}{space 2} .6137211{col 37}{space 1}   -5.24{col 46}{space 3}0.000{col 54}{space 4}-4.420133{col 67}{space 3}-2.012859
{txt}{space 5}pre_143 {c |}{col 14}{res}{space 2}-2.074263{col 26}{space 2} .5702446{col 37}{space 1}   -3.64{col 46}{space 3}0.000{col 54}{space 4}-3.192633{col 67}{space 3}-.9558922
{txt}{space 5}pre_142 {c |}{col 14}{res}{space 2}-1.936834{col 26}{space 2} .4546901{col 37}{space 1}   -4.26{col 46}{space 3}0.000{col 54}{space 4}-2.828578{col 67}{space 3} -1.04509
{txt}{space 5}pre_141 {c |}{col 14}{res}{space 2}-2.126671{col 26}{space 2} .4898305{col 37}{space 1}   -4.34{col 46}{space 3}0.000{col 54}{space 4}-3.087332{col 67}{space 3}-1.166009
{txt}{space 5}pre_140 {c |}{col 14}{res}{space 2}-1.140288{col 26}{space 2} .5196412{col 37}{space 1}   -2.19{col 46}{space 3}0.028{col 54}{space 4}-2.159415{col 67}{space 3}-.1211615
{txt}{space 5}pre_139 {c |}{col 14}{res}{space 2}-1.644429{col 26}{space 2} .4926666{col 37}{space 1}   -3.34{col 46}{space 3}0.001{col 54}{space 4}-2.610653{col 67}{space 3}-.6782055
{txt}{space 5}pre_138 {c |}{col 14}{res}{space 2} -2.17004{col 26}{space 2} .5229828{col 37}{space 1}   -4.15{col 46}{space 3}0.000{col 54}{space 4} -3.19572{col 67}{space 3}-1.144359
{txt}{space 5}pre_137 {c |}{col 14}{res}{space 2}-2.324207{col 26}{space 2} .5227104{col 37}{space 1}   -4.45{col 46}{space 3}0.000{col 54}{space 4}-3.349353{col 67}{space 3}-1.299061
{txt}{space 5}pre_136 {c |}{col 14}{res}{space 2} -2.47373{col 26}{space 2} .5230176{col 37}{space 1}   -4.73{col 46}{space 3}0.000{col 54}{space 4}-3.499479{col 67}{space 3}-1.447982
{txt}{space 5}pre_135 {c |}{col 14}{res}{space 2}-1.489011{col 26}{space 2} .6114463{col 37}{space 1}   -2.44{col 46}{space 3}0.015{col 54}{space 4}-2.688187{col 67}{space 3}-.2898357
{txt}{space 5}pre_134 {c |}{col 14}{res}{space 2}-3.474632{col 26}{space 2} .5802046{col 37}{space 1}   -5.99{col 46}{space 3}0.000{col 54}{space 4}-4.612536{col 67}{space 3}-2.336727
{txt}{space 5}pre_133 {c |}{col 14}{res}{space 2} -2.38307{col 26}{space 2}  .458487{col 37}{space 1}   -5.20{col 46}{space 3}0.000{col 54}{space 4} -3.28226{col 67}{space 3} -1.48388
{txt}{space 5}pre_132 {c |}{col 14}{res}{space 2}-2.357675{col 26}{space 2} .5499142{col 37}{space 1}   -4.29{col 46}{space 3}0.000{col 54}{space 4}-3.436173{col 67}{space 3}-1.279177
{txt}{space 5}pre_131 {c |}{col 14}{res}{space 2}-2.916164{col 26}{space 2}  .612473{col 37}{space 1}   -4.76{col 46}{space 3}0.000{col 54}{space 4}-4.117353{col 67}{space 3}-1.714974
{txt}{space 5}pre_130 {c |}{col 14}{res}{space 2}-1.934115{col 26}{space 2} .5020724{col 37}{space 1}   -3.85{col 46}{space 3}0.000{col 54}{space 4}-2.918785{col 67}{space 3}-.9494441
{txt}{space 5}pre_129 {c |}{col 14}{res}{space 2} .0400513{col 26}{space 2} .5167882{col 37}{space 1}    0.08{col 46}{space 3}0.938{col 54}{space 4}-.9734799{col 67}{space 3} 1.053583
{txt}{space 5}pre_128 {c |}{col 14}{res}{space 2}-.1622771{col 26}{space 2} .5533465{col 37}{space 1}   -0.29{col 46}{space 3}0.769{col 54}{space 4}-1.247507{col 67}{space 3} .9229527
{txt}{space 5}pre_127 {c |}{col 14}{res}{space 2}-2.098734{col 26}{space 2}  .538205{col 37}{space 1}   -3.90{col 46}{space 3}0.000{col 54}{space 4}-3.154268{col 67}{space 3}  -1.0432
{txt}{space 5}pre_126 {c |}{col 14}{res}{space 2}-2.535392{col 26}{space 2} .4880571{col 37}{space 1}   -5.19{col 46}{space 3}0.000{col 54}{space 4}-3.492575{col 67}{space 3}-1.578209
{txt}{space 5}pre_125 {c |}{col 14}{res}{space 2}-2.827412{col 26}{space 2} .5780732{col 37}{space 1}   -4.89{col 46}{space 3}0.000{col 54}{space 4}-3.961136{col 67}{space 3}-1.693688
{txt}{space 5}pre_124 {c |}{col 14}{res}{space 2}-1.376727{col 26}{space 2} .5693788{col 37}{space 1}   -2.42{col 46}{space 3}0.016{col 54}{space 4}  -2.4934{col 67}{space 3}-.2600548
{txt}{space 5}pre_123 {c |}{col 14}{res}{space 2}-2.967193{col 26}{space 2} .4548012{col 37}{space 1}   -6.52{col 46}{space 3}0.000{col 54}{space 4}-3.859155{col 67}{space 3}-2.075232
{txt}{space 5}pre_122 {c |}{col 14}{res}{space 2}-2.161633{col 26}{space 2} .5554062{col 37}{space 1}   -3.89{col 46}{space 3}0.000{col 54}{space 4}-3.250902{col 67}{space 3}-1.072363
{txt}{space 5}pre_121 {c |}{col 14}{res}{space 2} -1.50287{col 26}{space 2} .5202449{col 37}{space 1}   -2.89{col 46}{space 3}0.004{col 54}{space 4}-2.523181{col 67}{space 3}-.4825598
{txt}{space 5}pre_120 {c |}{col 14}{res}{space 2}-1.388502{col 26}{space 2} .4677275{col 37}{space 1}   -2.97{col 46}{space 3}0.003{col 54}{space 4}-2.305815{col 67}{space 3}-.4711897
{txt}{space 5}pre_119 {c |}{col 14}{res}{space 2}-2.718311{col 26}{space 2} .5049839{col 37}{space 1}   -5.38{col 46}{space 3}0.000{col 54}{space 4}-3.708691{col 67}{space 3} -1.72793
{txt}{space 5}pre_118 {c |}{col 14}{res}{space 2}-2.064029{col 26}{space 2} .4871039{col 37}{space 1}   -4.24{col 46}{space 3}0.000{col 54}{space 4}-3.019343{col 67}{space 3}-1.108715
{txt}{space 5}pre_117 {c |}{col 14}{res}{space 2}-1.504892{col 26}{space 2} .5596858{col 37}{space 1}   -2.69{col 46}{space 3}0.007{col 54}{space 4}-2.602555{col 67}{space 3}  -.40723
{txt}{space 5}pre_116 {c |}{col 14}{res}{space 2}-.8612638{col 26}{space 2} .5905539{col 37}{space 1}   -1.46{col 46}{space 3}0.145{col 54}{space 4}-2.019465{col 67}{space 3} .2969376
{txt}{space 5}pre_115 {c |}{col 14}{res}{space 2}-.9207778{col 26}{space 2} .7367541{col 37}{space 1}   -1.25{col 46}{space 3}0.212{col 54}{space 4}-2.365709{col 67}{space 3} .5241532
{txt}{space 5}pre_114 {c |}{col 14}{res}{space 2}-1.592495{col 26}{space 2} .7421264{col 37}{space 1}   -2.15{col 46}{space 3}0.032{col 54}{space 4}-3.047963{col 67}{space 3}-.1370283
{txt}{space 5}pre_113 {c |}{col 14}{res}{space 2}-1.071024{col 26}{space 2} .7961004{col 37}{space 1}   -1.35{col 46}{space 3}0.179{col 54}{space 4}-2.632346{col 67}{space 3} .4902979
{txt}{space 5}pre_112 {c |}{col 14}{res}{space 2}-.7674245{col 26}{space 2} .5355926{col 37}{space 1}   -1.43{col 46}{space 3}0.152{col 54}{space 4}-1.817835{col 67}{space 3} .2829862
{txt}{space 5}pre_111 {c |}{col 14}{res}{space 2}-1.426485{col 26}{space 2} .5482176{col 37}{space 1}   -2.60{col 46}{space 3}0.009{col 54}{space 4}-2.501656{col 67}{space 3}-.3513138
{txt}{space 5}pre_110 {c |}{col 14}{res}{space 2}-1.134548{col 26}{space 2} .8730982{col 37}{space 1}   -1.30{col 46}{space 3}0.194{col 54}{space 4}-2.846879{col 67}{space 3} .5777825
{txt}{space 5}pre_109 {c |}{col 14}{res}{space 2}-.8364033{col 26}{space 2} .4940756{col 37}{space 1}   -1.69{col 46}{space 3}0.091{col 54}{space 4} -1.80539{col 67}{space 3} .1325837
{txt}{space 5}pre_108 {c |}{col 14}{res}{space 2}-.7920045{col 26}{space 2} 1.136065{col 37}{space 1}   -0.70{col 46}{space 3}0.486{col 54}{space 4} -3.02007{col 67}{space 3}  1.43606
{txt}{space 5}pre_107 {c |}{col 14}{res}{space 2} -.970407{col 26}{space 2} .8369218{col 37}{space 1}   -1.16{col 46}{space 3}0.246{col 54}{space 4}-2.611788{col 67}{space 3} .6709741
{txt}{space 5}pre_106 {c |}{col 14}{res}{space 2}-.9630295{col 26}{space 2} .9428502{col 37}{space 1}   -1.02{col 46}{space 3}0.307{col 54}{space 4}-2.812159{col 67}{space 3} .8860997
{txt}{space 5}pre_105 {c |}{col 14}{res}{space 2}-1.675376{col 26}{space 2} .8178478{col 37}{space 1}   -2.05{col 46}{space 3}0.041{col 54}{space 4}-3.279349{col 67}{space 3}-.0714028
{txt}{space 5}pre_104 {c |}{col 14}{res}{space 2} .1227091{col 26}{space 2}  .492722{col 37}{space 1}    0.25{col 46}{space 3}0.803{col 54}{space 4}-.8436232{col 67}{space 3} 1.089041
{txt}{space 5}pre_103 {c |}{col 14}{res}{space 2}-.4297015{col 26}{space 2}  .482138{col 37}{space 1}   -0.89{col 46}{space 3}0.373{col 54}{space 4}-1.375276{col 67}{space 3} .5158734
{txt}{space 5}pre_102 {c |}{col 14}{res}{space 2} -.607631{col 26}{space 2} .8884412{col 37}{space 1}   -0.68{col 46}{space 3}0.494{col 54}{space 4}-2.350053{col 67}{space 3} 1.134791
{txt}{space 5}pre_101 {c |}{col 14}{res}{space 2}-.8606104{col 26}{space 2} 1.053364{col 37}{space 1}   -0.82{col 46}{space 3}0.414{col 54}{space 4} -2.92648{col 67}{space 3}  1.20526
{txt}{space 5}pre_100 {c |}{col 14}{res}{space 2}-.9472796{col 26}{space 2} .4178108{col 37}{space 1}   -2.27{col 46}{space 3}0.023{col 54}{space 4}-1.766695{col 67}{space 3}-.1278639
{txt}{space 6}pre_99 {c |}{col 14}{res}{space 2}-1.369109{col 26}{space 2}  .683415{col 37}{space 1}   -2.00{col 46}{space 3}0.045{col 54}{space 4}-2.709431{col 67}{space 3}-.0287869
{txt}{space 6}pre_98 {c |}{col 14}{res}{space 2}-1.041538{col 26}{space 2} .6032237{col 37}{space 1}   -1.73{col 46}{space 3}0.084{col 54}{space 4}-2.224587{col 67}{space 3} .1415119
{txt}{space 6}pre_97 {c |}{col 14}{res}{space 2}-1.747797{col 26}{space 2} .5560969{col 37}{space 1}   -3.14{col 46}{space 3}0.002{col 54}{space 4}-2.838421{col 67}{space 3}-.6571731
{txt}{space 6}pre_96 {c |}{col 14}{res}{space 2} -1.12644{col 26}{space 2} .9623274{col 37}{space 1}   -1.17{col 46}{space 3}0.242{col 54}{space 4}-3.013768{col 67}{space 3} .7608881
{txt}{space 6}pre_95 {c |}{col 14}{res}{space 2}-.3813091{col 26}{space 2} .7457987{col 37}{space 1}   -0.51{col 46}{space 3}0.609{col 54}{space 4}-1.843978{col 67}{space 3}  1.08136
{txt}{space 6}pre_94 {c |}{col 14}{res}{space 2}-1.343814{col 26}{space 2} .8523585{col 37}{space 1}   -1.58{col 46}{space 3}0.115{col 54}{space 4} -3.01547{col 67}{space 3} .3278418
{txt}{space 6}pre_93 {c |}{col 14}{res}{space 2}-1.566043{col 26}{space 2} .6628277{col 37}{space 1}   -2.36{col 46}{space 3}0.018{col 54}{space 4}-2.865988{col 67}{space 3} -.266097
{txt}{space 6}pre_92 {c |}{col 14}{res}{space 2}-.4157439{col 26}{space 2} .8012852{col 37}{space 1}   -0.52{col 46}{space 3}0.604{col 54}{space 4}-1.987234{col 67}{space 3} 1.155746
{txt}{space 6}pre_91 {c |}{col 14}{res}{space 2}-2.682952{col 26}{space 2} 1.296026{col 37}{space 1}   -2.07{col 46}{space 3}0.039{col 54}{space 4}-5.224733{col 67}{space 3}-.1411716
{txt}{space 6}pre_90 {c |}{col 14}{res}{space 2}-1.757571{col 26}{space 2} .6066497{col 37}{space 1}   -2.90{col 46}{space 3}0.004{col 54}{space 4} -2.94734{col 67}{space 3}-.5678024
{txt}{space 6}pre_89 {c |}{col 14}{res}{space 2}-.9781537{col 26}{space 2} .7089535{col 37}{space 1}   -1.38{col 46}{space 3}0.168{col 54}{space 4}-2.368562{col 67}{space 3} .4122544
{txt}{space 6}pre_88 {c |}{col 14}{res}{space 2}-.5388804{col 26}{space 2} .5284815{col 37}{space 1}   -1.02{col 46}{space 3}0.308{col 54}{space 4}-1.575345{col 67}{space 3} .4975839
{txt}{space 6}pre_87 {c |}{col 14}{res}{space 2} .0133343{col 26}{space 2} .6564107{col 37}{space 1}    0.02{col 46}{space 3}0.984{col 54}{space 4}-1.274026{col 67}{space 3} 1.300695
{txt}{space 6}pre_86 {c |}{col 14}{res}{space 2}-.4776671{col 26}{space 2} .5126322{col 37}{space 1}   -0.93{col 46}{space 3}0.352{col 54}{space 4}-1.483048{col 67}{space 3} .5277132
{txt}{space 6}pre_85 {c |}{col 14}{res}{space 2} -.114658{col 26}{space 2} .6277717{col 37}{space 1}   -0.18{col 46}{space 3}0.855{col 54}{space 4}-1.345851{col 67}{space 3} 1.116535
{txt}{space 6}pre_84 {c |}{col 14}{res}{space 2}-.6497245{col 26}{space 2} .5185744{col 37}{space 1}   -1.25{col 46}{space 3}0.210{col 54}{space 4}-1.666759{col 67}{space 3} .3673099
{txt}{space 6}pre_83 {c |}{col 14}{res}{space 2}-.1754317{col 26}{space 2} .4928589{col 37}{space 1}   -0.36{col 46}{space 3}0.722{col 54}{space 4}-1.142033{col 67}{space 3} .7911692
{txt}{space 6}pre_82 {c |}{col 14}{res}{space 2}-.8567126{col 26}{space 2} 1.163656{col 37}{space 1}   -0.74{col 46}{space 3}0.462{col 54}{space 4} -3.13889{col 67}{space 3} 1.425464
{txt}{space 6}pre_81 {c |}{col 14}{res}{space 2}-1.076285{col 26}{space 2} .6346497{col 37}{space 1}   -1.70{col 46}{space 3}0.090{col 54}{space 4}-2.320967{col 67}{space 3}  .168398
{txt}{space 6}pre_80 {c |}{col 14}{res}{space 2}-.8836872{col 26}{space 2}  .476287{col 37}{space 1}   -1.86{col 46}{space 3}0.064{col 54}{space 4}-1.817787{col 67}{space 3} .0504125
{txt}{space 6}pre_79 {c |}{col 14}{res}{space 2} .2761505{col 26}{space 2} .6562889{col 37}{space 1}    0.42{col 46}{space 3}0.674{col 54}{space 4}-1.010971{col 67}{space 3} 1.563272
{txt}{space 6}pre_78 {c |}{col 14}{res}{space 2}-1.109531{col 26}{space 2} .8860472{col 37}{space 1}   -1.25{col 46}{space 3}0.211{col 54}{space 4}-2.847257{col 67}{space 3} .6281958
{txt}{space 6}pre_77 {c |}{col 14}{res}{space 2}-.0285101{col 26}{space 2} .6380774{col 37}{space 1}   -0.04{col 46}{space 3}0.964{col 54}{space 4}-1.279915{col 67}{space 3} 1.222895
{txt}{space 6}pre_76 {c |}{col 14}{res}{space 2} -.586689{col 26}{space 2} .7596561{col 37}{space 1}   -0.77{col 46}{space 3}0.440{col 54}{space 4}-2.076536{col 67}{space 3} .9031577
{txt}{space 6}pre_75 {c |}{col 14}{res}{space 2}-.1168943{col 26}{space 2} .6784678{col 37}{space 1}   -0.17{col 46}{space 3}0.863{col 54}{space 4}-1.447514{col 67}{space 3} 1.213725
{txt}{space 6}pre_74 {c |}{col 14}{res}{space 2} -.739236{col 26}{space 2} .6373488{col 37}{space 1}   -1.16{col 46}{space 3}0.246{col 54}{space 4}-1.989212{col 67}{space 3} .5107402
{txt}{space 6}pre_73 {c |}{col 14}{res}{space 2}-.8074803{col 26}{space 2} .5592976{col 37}{space 1}   -1.44{col 46}{space 3}0.149{col 54}{space 4}-1.904381{col 67}{space 3} .2894209
{txt}{space 6}pre_72 {c |}{col 14}{res}{space 2}-.2235939{col 26}{space 2} .5754663{col 37}{space 1}   -0.39{col 46}{space 3}0.698{col 54}{space 4}-1.352205{col 67}{space 3} .9050176
{txt}{space 6}pre_71 {c |}{col 14}{res}{space 2}-.6737474{col 26}{space 2} .4730955{col 37}{space 1}   -1.42{col 46}{space 3}0.155{col 54}{space 4}-1.601588{col 67}{space 3} .2540932
{txt}{space 6}pre_70 {c |}{col 14}{res}{space 2}-.6686236{col 26}{space 2} .4826506{col 37}{space 1}   -1.39{col 46}{space 3}0.166{col 54}{space 4}-1.615204{col 67}{space 3} .2779565
{txt}{space 6}pre_69 {c |}{col 14}{res}{space 2}-.5177693{col 26}{space 2} .5893495{col 37}{space 1}   -0.88{col 46}{space 3}0.380{col 54}{space 4}-1.673609{col 67}{space 3}   .63807
{txt}{space 6}pre_68 {c |}{col 14}{res}{space 2}-.7968321{col 26}{space 2} .4827558{col 37}{space 1}   -1.65{col 46}{space 3}0.099{col 54}{space 4}-1.743619{col 67}{space 3} .1499544
{txt}{space 6}pre_67 {c |}{col 14}{res}{space 2}-.6278221{col 26}{space 2} .5292592{col 37}{space 1}   -1.19{col 46}{space 3}0.236{col 54}{space 4}-1.665812{col 67}{space 3} .4101673
{txt}{space 6}pre_66 {c |}{col 14}{res}{space 2}-.7659029{col 26}{space 2} .5146354{col 37}{space 1}   -1.49{col 46}{space 3}0.137{col 54}{space 4}-1.775212{col 67}{space 3} .2434063
{txt}{space 6}pre_65 {c |}{col 14}{res}{space 2}-.7933361{col 26}{space 2} .4547725{col 37}{space 1}   -1.74{col 46}{space 3}0.081{col 54}{space 4}-1.685241{col 67}{space 3} .0985691
{txt}{space 6}pre_64 {c |}{col 14}{res}{space 2}-.2219673{col 26}{space 2} .4676176{col 37}{space 1}   -0.47{col 46}{space 3}0.635{col 54}{space 4}-1.139064{col 67}{space 3}   .69513
{txt}{space 6}pre_63 {c |}{col 14}{res}{space 2}-1.121126{col 26}{space 2} .6388007{col 37}{space 1}   -1.76{col 46}{space 3}0.079{col 54}{space 4} -2.37395{col 67}{space 3} .1316976
{txt}{space 6}pre_62 {c |}{col 14}{res}{space 2}-.5906237{col 26}{space 2} .5480796{col 37}{space 1}   -1.08{col 46}{space 3}0.281{col 54}{space 4}-1.665524{col 67}{space 3} .4842766
{txt}{space 6}pre_61 {c |}{col 14}{res}{space 2}-.8090854{col 26}{space 2}  .460363{col 37}{space 1}   -1.76{col 46}{space 3}0.079{col 54}{space 4}-1.711955{col 67}{space 3}  .093784
{txt}{space 6}pre_60 {c |}{col 14}{res}{space 2}-.1053799{col 26}{space 2}  .511008{col 37}{space 1}   -0.21{col 46}{space 3}0.837{col 54}{space 4}-1.107575{col 67}{space 3} .8968151
{txt}{space 6}pre_59 {c |}{col 14}{res}{space 2}-1.239251{col 26}{space 2} .6036713{col 37}{space 1}   -2.05{col 46}{space 3}0.040{col 54}{space 4}-2.423178{col 67}{space 3}-.0553234
{txt}{space 6}pre_58 {c |}{col 14}{res}{space 2}-.5140753{col 26}{space 2} .6616444{col 37}{space 1}   -0.78{col 46}{space 3}0.437{col 54}{space 4}  -1.8117{col 67}{space 3} .7835497
{txt}{space 6}pre_57 {c |}{col 14}{res}{space 2}-.1481885{col 26}{space 2} .5096403{col 37}{space 1}   -0.29{col 46}{space 3}0.771{col 54}{space 4}-1.147701{col 67}{space 3} .8513242
{txt}{space 6}pre_56 {c |}{col 14}{res}{space 2}-.5207798{col 26}{space 2} .5221775{col 37}{space 1}   -1.00{col 46}{space 3}0.319{col 54}{space 4}-1.544881{col 67}{space 3}  .503321
{txt}{space 6}pre_55 {c |}{col 14}{res}{space 2} .1678677{col 26}{space 2} .4928068{col 37}{space 1}    0.34{col 46}{space 3}0.733{col 54}{space 4} -.798631{col 67}{space 3} 1.134366
{txt}{space 6}pre_54 {c |}{col 14}{res}{space 2} .2617333{col 26}{space 2} .4885954{col 37}{space 1}    0.54{col 46}{space 3}0.592{col 54}{space 4}-.6965057{col 67}{space 3} 1.219972
{txt}{space 6}pre_53 {c |}{col 14}{res}{space 2} .2911579{col 26}{space 2} .5093948{col 37}{space 1}    0.57{col 46}{space 3}0.568{col 54}{space 4}-.7078733{col 67}{space 3} 1.290189
{txt}{space 6}pre_52 {c |}{col 14}{res}{space 2}-.1325489{col 26}{space 2} .5293145{col 37}{space 1}   -0.25{col 46}{space 3}0.802{col 54}{space 4}-1.170647{col 67}{space 3} .9055491
{txt}{space 6}pre_51 {c |}{col 14}{res}{space 2}-.0094514{col 26}{space 2} .4416534{col 37}{space 1}   -0.02{col 46}{space 3}0.983{col 54}{space 4}-.8756274{col 67}{space 3} .8567246
{txt}{space 6}pre_50 {c |}{col 14}{res}{space 2} .1720385{col 26}{space 2} .4220319{col 37}{space 1}    0.41{col 46}{space 3}0.684{col 54}{space 4}-.6556554{col 67}{space 3} .9997324
{txt}{space 6}pre_49 {c |}{col 14}{res}{space 2}-.1673409{col 26}{space 2} .5397255{col 37}{space 1}   -0.31{col 46}{space 3}0.757{col 54}{space 4}-1.225857{col 67}{space 3} .8911752
{txt}{space 6}pre_48 {c |}{col 14}{res}{space 2}-.0883358{col 26}{space 2} .4533544{col 37}{space 1}   -0.19{col 46}{space 3}0.846{col 54}{space 4}-.9774599{col 67}{space 3} .8007883
{txt}{space 6}pre_47 {c |}{col 14}{res}{space 2} -.141304{col 26}{space 2} .4870087{col 37}{space 1}   -0.29{col 46}{space 3}0.772{col 54}{space 4}-1.096431{col 67}{space 3} .8138233
{txt}{space 6}pre_46 {c |}{col 14}{res}{space 2} .1701103{col 26}{space 2} .4496215{col 37}{space 1}    0.38{col 46}{space 3}0.705{col 54}{space 4}-.7116929{col 67}{space 3} 1.051913
{txt}{space 6}pre_45 {c |}{col 14}{res}{space 2}-.3320724{col 26}{space 2} .5130618{col 37}{space 1}   -0.65{col 46}{space 3}0.518{col 54}{space 4}-1.338295{col 67}{space 3} .6741506
{txt}{space 6}pre_44 {c |}{col 14}{res}{space 2} .2341964{col 26}{space 2} .5305097{col 37}{space 1}    0.44{col 46}{space 3}0.659{col 54}{space 4}-.8062457{col 67}{space 3} 1.274638
{txt}{space 6}pre_43 {c |}{col 14}{res}{space 2} .1055596{col 26}{space 2}  .536728{col 37}{space 1}    0.20{col 46}{space 3}0.844{col 54}{space 4}-.9470777{col 67}{space 3} 1.158197
{txt}{space 6}pre_42 {c |}{col 14}{res}{space 2}-.2522865{col 26}{space 2} .4970955{col 37}{space 1}   -0.51{col 46}{space 3}0.612{col 54}{space 4}-1.227196{col 67}{space 3} .7226231
{txt}{space 6}pre_41 {c |}{col 14}{res}{space 2} .4964441{col 26}{space 2} .6051744{col 37}{space 1}    0.82{col 46}{space 3}0.412{col 54}{space 4}-.6904311{col 67}{space 3} 1.683319
{txt}{space 6}pre_40 {c |}{col 14}{res}{space 2}-.3426875{col 26}{space 2} .5166661{col 37}{space 1}   -0.66{col 46}{space 3}0.507{col 54}{space 4}-1.355979{col 67}{space 3} .6706042
{txt}{space 6}pre_39 {c |}{col 14}{res}{space 2}-.2880765{col 26}{space 2} .4556699{col 37}{space 1}   -0.63{col 46}{space 3}0.527{col 54}{space 4}-1.181742{col 67}{space 3} .6055887
{txt}{space 6}pre_38 {c |}{col 14}{res}{space 2} -.021941{col 26}{space 2} .5281676{col 37}{space 1}   -0.04{col 46}{space 3}0.967{col 54}{space 4} -1.05779{col 67}{space 3} 1.013908
{txt}{space 6}pre_37 {c |}{col 14}{res}{space 2}-.1423225{col 26}{space 2} .5027887{col 37}{space 1}   -0.28{col 46}{space 3}0.777{col 54}{space 4}-1.128398{col 67}{space 3} .8437527
{txt}{space 6}pre_36 {c |}{col 14}{res}{space 2} .3797924{col 26}{space 2} .5125523{col 37}{space 1}    0.74{col 46}{space 3}0.459{col 54}{space 4}-.6254312{col 67}{space 3} 1.385016
{txt}{space 6}pre_35 {c |}{col 14}{res}{space 2} .0514332{col 26}{space 2} .5520462{col 37}{space 1}    0.09{col 46}{space 3}0.926{col 54}{space 4}-1.031247{col 67}{space 3} 1.134113
{txt}{space 6}pre_34 {c |}{col 14}{res}{space 2}-.1706699{col 26}{space 2} .4692003{col 37}{space 1}   -0.36{col 46}{space 3}0.716{col 54}{space 4}-1.090871{col 67}{space 3} .7495313
{txt}{space 6}pre_33 {c |}{col 14}{res}{space 2} .1683827{col 26}{space 2} .4852132{col 37}{space 1}    0.35{col 46}{space 3}0.729{col 54}{space 4}-.7832233{col 67}{space 3} 1.119989
{txt}{space 6}pre_32 {c |}{col 14}{res}{space 2} .5577441{col 26}{space 2} .5219225{col 37}{space 1}    1.07{col 46}{space 3}0.285{col 54}{space 4}-.4658566{col 67}{space 3} 1.581345
{txt}{space 6}pre_31 {c |}{col 14}{res}{space 2} .2175884{col 26}{space 2} .5995097{col 37}{space 1}    0.36{col 46}{space 3}0.717{col 54}{space 4}-.9581772{col 67}{space 3} 1.393354
{txt}{space 6}pre_30 {c |}{col 14}{res}{space 2} .0791154{col 26}{space 2}  .507841{col 37}{space 1}    0.16{col 46}{space 3}0.876{col 54}{space 4}-.9168686{col 67}{space 3} 1.075099
{txt}{space 6}pre_29 {c |}{col 14}{res}{space 2} .1047693{col 26}{space 2}  .463277{col 37}{space 1}    0.23{col 46}{space 3}0.821{col 54}{space 4} -.803815{col 67}{space 3} 1.013354
{txt}{space 6}pre_28 {c |}{col 14}{res}{space 2}   .34924{col 26}{space 2} .4998367{col 37}{space 1}    0.70{col 46}{space 3}0.485{col 54}{space 4}-.6310457{col 67}{space 3} 1.329526
{txt}{space 6}pre_27 {c |}{col 14}{res}{space 2}-.0323418{col 26}{space 2} .6418238{col 37}{space 1}   -0.05{col 46}{space 3}0.960{col 54}{space 4}-1.291094{col 67}{space 3} 1.226411
{txt}{space 6}pre_26 {c |}{col 14}{res}{space 2} .0660994{col 26}{space 2} .4806545{col 37}{space 1}    0.14{col 46}{space 3}0.891{col 54}{space 4} -.876566{col 67}{space 3} 1.008765
{txt}{space 6}pre_25 {c |}{col 14}{res}{space 2} .4149522{col 26}{space 2} .5763869{col 37}{space 1}    0.72{col 46}{space 3}0.472{col 54}{space 4}-.7154648{col 67}{space 3} 1.545369
{txt}{space 6}pre_24 {c |}{col 14}{res}{space 2} .2022255{col 26}{space 2} .4732368{col 37}{space 1}    0.43{col 46}{space 3}0.669{col 54}{space 4}-.7258923{col 67}{space 3} 1.130343
{txt}{space 6}pre_23 {c |}{col 14}{res}{space 2}-.0700003{col 26}{space 2} .5746462{col 37}{space 1}   -0.12{col 46}{space 3}0.903{col 54}{space 4}-1.197003{col 67}{space 3} 1.057003
{txt}{space 6}pre_22 {c |}{col 14}{res}{space 2} .0453384{col 26}{space 2} .4585301{col 37}{space 1}    0.10{col 46}{space 3}0.921{col 54}{space 4}-.8539365{col 67}{space 3} .9446132
{txt}{space 6}pre_21 {c |}{col 14}{res}{space 2} .1026495{col 26}{space 2} .5686655{col 37}{space 1}    0.18{col 46}{space 3}0.857{col 54}{space 4}-1.012624{col 67}{space 3} 1.217923
{txt}{space 6}pre_20 {c |}{col 14}{res}{space 2}-.6296592{col 26}{space 2} .5856219{col 37}{space 1}   -1.08{col 46}{space 3}0.282{col 54}{space 4}-1.778188{col 67}{space 3} .5188695
{txt}{space 6}pre_19 {c |}{col 14}{res}{space 2}-.1511936{col 26}{space 2} .4067345{col 37}{space 1}   -0.37{col 46}{space 3}0.710{col 54}{space 4}-.9488861{col 67}{space 3} .6464989
{txt}{space 6}pre_18 {c |}{col 14}{res}{space 2} .3987555{col 26}{space 2} .5312847{col 37}{space 1}    0.75{col 46}{space 3}0.453{col 54}{space 4}-.6432065{col 67}{space 3} 1.440718
{txt}{space 6}pre_17 {c |}{col 14}{res}{space 2} .3017004{col 26}{space 2} .4600716{col 37}{space 1}    0.66{col 46}{space 3}0.512{col 54}{space 4}-.6005976{col 67}{space 3} 1.203998
{txt}{space 6}pre_16 {c |}{col 14}{res}{space 2} .0164947{col 26}{space 2} .5164935{col 37}{space 1}    0.03{col 46}{space 3}0.975{col 54}{space 4}-.9964586{col 67}{space 3} 1.029448
{txt}{space 6}pre_15 {c |}{col 14}{res}{space 2} .3062707{col 26}{space 2} .5863509{col 37}{space 1}    0.52{col 46}{space 3}0.601{col 54}{space 4}-.8436878{col 67}{space 3} 1.456229
{txt}{space 6}pre_14 {c |}{col 14}{res}{space 2}  .082891{col 26}{space 2} .4885267{col 37}{space 1}    0.17{col 46}{space 3}0.865{col 54}{space 4}-.8752133{col 67}{space 3} 1.040995
{txt}{space 6}pre_13 {c |}{col 14}{res}{space 2} .1644358{col 26}{space 2} .5666705{col 37}{space 1}    0.29{col 46}{space 3}0.772{col 54}{space 4}-.9469252{col 67}{space 3} 1.275797
{txt}{space 6}pre_12 {c |}{col 14}{res}{space 2} .3496447{col 26}{space 2} .5609737{col 37}{space 1}    0.62{col 46}{space 3}0.533{col 54}{space 4}-.7505437{col 67}{space 3} 1.449833
{txt}{space 6}pre_11 {c |}{col 14}{res}{space 2} 1.103865{col 26}{space 2} .4666975{col 37}{space 1}    2.37{col 46}{space 3}0.018{col 54}{space 4} .1885725{col 67}{space 3} 2.019158
{txt}{space 6}pre_10 {c |}{col 14}{res}{space 2} .1666176{col 26}{space 2} .4848922{col 37}{space 1}    0.34{col 46}{space 3}0.731{col 54}{space 4}-.7843589{col 67}{space 3} 1.117594
{txt}{space 7}pre_9 {c |}{col 14}{res}{space 2} .7525651{col 26}{space 2} .5874011{col 37}{space 1}    1.28{col 46}{space 3}0.200{col 54}{space 4}-.3994531{col 67}{space 3} 1.904583
{txt}{space 7}pre_8 {c |}{col 14}{res}{space 2} .6519804{col 26}{space 2} .5386137{col 37}{space 1}    1.21{col 46}{space 3}0.226{col 54}{space 4}-.4043552{col 67}{space 3} 1.708316
{txt}{space 7}pre_7 {c |}{col 14}{res}{space 2}-.2685289{col 26}{space 2} .5220092{col 37}{space 1}   -0.51{col 46}{space 3}0.607{col 54}{space 4}  -1.2923{col 67}{space 3} .7552418
{txt}{space 7}pre_6 {c |}{col 14}{res}{space 2} .9228507{col 26}{space 2} .5318852{col 37}{space 1}    1.74{col 46}{space 3}0.083{col 54}{space 4}-.1202889{col 67}{space 3}  1.96599
{txt}{space 7}pre_5 {c |}{col 14}{res}{space 2} .0827602{col 26}{space 2} .4787582{col 37}{space 1}    0.17{col 46}{space 3}0.863{col 54}{space 4}-.8561862{col 67}{space 3} 1.021707
{txt}{space 7}pre_4 {c |}{col 14}{res}{space 2}-.0020406{col 26}{space 2} .5101109{col 37}{space 1}   -0.00{col 46}{space 3}0.997{col 54}{space 4}-1.002476{col 67}{space 3}  .998395
{txt}{space 7}pre_3 {c |}{col 14}{res}{space 2} 1.021614{col 26}{space 2} .5248975{col 37}{space 1}    1.95{col 46}{space 3}0.052{col 54}{space 4}-.0078214{col 67}{space 3} 2.051049
{txt}{space 7}pre_2 {c |}{col 14}{res}{space 2} .7628619{col 26}{space 2} .5409186{col 37}{space 1}    1.41{col 46}{space 3}0.159{col 54}{space 4}-.2979941{col 67}{space 3} 1.823718
{txt}{space 7}pre_1 {c |}{col 14}{res}{space 2} .1590801{col 26}{space 2} .4503815{col 37}{space 1}    0.35{col 46}{space 3}0.724{col 54}{space 4}-.7242134{col 67}{space 3} 1.042374
{txt}{space 6}post_1 {c |}{col 14}{res}{space 2}-2.241533{col 26}{space 2} .6166291{col 37}{space 1}   -3.64{col 46}{space 3}0.000{col 54}{space 4}-3.450873{col 67}{space 3}-1.032192
{txt}{space 6}post_2 {c |}{col 14}{res}{space 2}-2.528434{col 26}{space 2}  .568471{col 37}{space 1}   -4.45{col 46}{space 3}0.000{col 54}{space 4}-3.643326{col 67}{space 3}-1.413542
{txt}{space 6}post_3 {c |}{col 14}{res}{space 2}-2.528642{col 26}{space 2} .5433007{col 37}{space 1}   -4.65{col 46}{space 3}0.000{col 54}{space 4} -3.59417{col 67}{space 3}-1.463114
{txt}{space 6}post_4 {c |}{col 14}{res}{space 2}-3.074612{col 26}{space 2} .6647512{col 37}{space 1}   -4.63{col 46}{space 3}0.000{col 54}{space 4} -4.37833{col 67}{space 3}-1.770894
{txt}{space 6}post_5 {c |}{col 14}{res}{space 2}-3.429279{col 26}{space 2} .8300636{col 37}{space 1}   -4.13{col 46}{space 3}0.000{col 54}{space 4} -5.05721{col 67}{space 3}-1.801348
{txt}{space 6}post_6 {c |}{col 14}{res}{space 2}-3.921362{col 26}{space 2} .8291575{col 37}{space 1}   -4.73{col 46}{space 3}0.000{col 54}{space 4}-5.547515{col 67}{space 3}-2.295208
{txt}{space 6}post_7 {c |}{col 14}{res}{space 2} -3.36196{col 26}{space 2} .9128685{col 37}{space 1}   -3.68{col 46}{space 3}0.000{col 54}{space 4}-5.152289{col 67}{space 3}-1.571632
{txt}{space 6}post_8 {c |}{col 14}{res}{space 2}-2.905944{col 26}{space 2} .5877637{col 37}{space 1}   -4.94{col 46}{space 3}0.000{col 54}{space 4}-4.058673{col 67}{space 3}-1.753215
{txt}{space 6}post_9 {c |}{col 14}{res}{space 2}-2.441756{col 26}{space 2} .5282888{col 37}{space 1}   -4.62{col 46}{space 3}0.000{col 54}{space 4}-3.477843{col 67}{space 3} -1.40567
{txt}{space 5}post_10 {c |}{col 14}{res}{space 2} -2.70379{col 26}{space 2} .4655746{col 37}{space 1}   -5.81{col 46}{space 3}0.000{col 54}{space 4} -3.61688{col 67}{space 3}-1.790699
{txt}{space 5}post_11 {c |}{col 14}{res}{space 2}-3.374817{col 26}{space 2} .6292489{col 37}{space 1}   -5.36{col 46}{space 3}0.000{col 54}{space 4}-4.608907{col 67}{space 3}-2.140726
{txt}{space 5}post_12 {c |}{col 14}{res}{space 2}-2.365365{col 26}{space 2}   .48833{col 37}{space 1}   -4.84{col 46}{space 3}0.000{col 54}{space 4}-3.323084{col 67}{space 3}-1.407647
{txt}{space 5}post_13 {c |}{col 14}{res}{space 2}-3.127286{col 26}{space 2}  .776895{col 37}{space 1}   -4.03{col 46}{space 3}0.000{col 54}{space 4}-4.650942{col 67}{space 3}-1.603631
{txt}{space 5}post_14 {c |}{col 14}{res}{space 2}-2.680485{col 26}{space 2} .5017884{col 37}{space 1}   -5.34{col 46}{space 3}0.000{col 54}{space 4}-3.664599{col 67}{space 3}-1.696372
{txt}{space 5}post_15 {c |}{col 14}{res}{space 2}-2.720141{col 26}{space 2} .5575306{col 37}{space 1}   -4.88{col 46}{space 3}0.000{col 54}{space 4}-3.813577{col 67}{space 3}-1.626706
{txt}{space 5}post_16 {c |}{col 14}{res}{space 2}-2.543983{col 26}{space 2}  .452051{col 37}{space 1}   -5.63{col 46}{space 3}0.000{col 54}{space 4}-3.430551{col 67}{space 3}-1.657415
{txt}{space 5}post_17 {c |}{col 14}{res}{space 2}-3.149065{col 26}{space 2} .6169968{col 37}{space 1}   -5.10{col 46}{space 3}0.000{col 54}{space 4}-4.359127{col 67}{space 3}-1.939004
{txt}{space 5}post_18 {c |}{col 14}{res}{space 2}-3.799635{col 26}{space 2} 1.538423{col 37}{space 1}   -2.47{col 46}{space 3}0.014{col 54}{space 4}-6.816809{col 67}{space 3}-.7824617
{txt}{space 5}post_19 {c |}{col 14}{res}{space 2}-2.521545{col 26}{space 2} .4382777{col 37}{space 1}   -5.75{col 46}{space 3}0.000{col 54}{space 4}  -3.3811{col 67}{space 3}-1.661989
{txt}{space 5}post_20 {c |}{col 14}{res}{space 2}-2.427353{col 26}{space 2} .8157574{col 37}{space 1}   -2.98{col 46}{space 3}0.003{col 54}{space 4}-4.027227{col 67}{space 3}-.8274801
{txt}{space 5}post_21 {c |}{col 14}{res}{space 2}-2.133586{col 26}{space 2} .6136956{col 37}{space 1}   -3.48{col 46}{space 3}0.001{col 54}{space 4}-3.337173{col 67}{space 3}-.9299988
{txt}{space 5}post_22 {c |}{col 14}{res}{space 2}-2.677328{col 26}{space 2} .6152149{col 37}{space 1}   -4.35{col 46}{space 3}0.000{col 54}{space 4}-3.883895{col 67}{space 3}-1.470762
{txt}{space 5}post_23 {c |}{col 14}{res}{space 2}-2.904224{col 26}{space 2} .6201099{col 37}{space 1}   -4.68{col 46}{space 3}0.000{col 54}{space 4}-4.120391{col 67}{space 3}-1.688057
{txt}{space 5}post_24 {c |}{col 14}{res}{space 2}-2.966346{col 26}{space 2} .6719102{col 37}{space 1}   -4.41{col 46}{space 3}0.000{col 54}{space 4}-4.284104{col 67}{space 3}-1.648587
{txt}{space 5}post_25 {c |}{col 14}{res}{space 2}-2.393622{col 26}{space 2}  .603053{col 37}{space 1}   -3.97{col 46}{space 3}0.000{col 54}{space 4}-3.576336{col 67}{space 3}-1.210907
{txt}{space 5}post_26 {c |}{col 14}{res}{space 2}-1.835632{col 26}{space 2}  .501889{col 37}{space 1}   -3.66{col 46}{space 3}0.000{col 54}{space 4}-2.819943{col 67}{space 3}-.8513213
{txt}{space 5}post_27 {c |}{col 14}{res}{space 2}-2.437186{col 26}{space 2} .4098601{col 37}{space 1}   -5.95{col 46}{space 3}0.000{col 54}{space 4}-3.241009{col 67}{space 3}-1.633364
{txt}{space 5}post_28 {c |}{col 14}{res}{space 2}-2.906504{col 26}{space 2} .5523276{col 37}{space 1}   -5.26{col 46}{space 3}0.000{col 54}{space 4}-3.989736{col 67}{space 3}-1.823272
{txt}{space 5}post_29 {c |}{col 14}{res}{space 2}-2.368579{col 26}{space 2} .6382395{col 37}{space 1}   -3.71{col 46}{space 3}0.000{col 54}{space 4}-3.620302{col 67}{space 3}-1.116856
{txt}{space 5}post_30 {c |}{col 14}{res}{space 2}-3.039177{col 26}{space 2} .6369846{col 37}{space 1}   -4.77{col 46}{space 3}0.000{col 54}{space 4}-4.288439{col 67}{space 3}-1.789915
{txt}{space 5}post_31 {c |}{col 14}{res}{space 2}-2.462505{col 26}{space 2} .7189159{col 37}{space 1}   -3.43{col 46}{space 3}0.001{col 54}{space 4}-3.872451{col 67}{space 3}-1.052558
{txt}{space 5}post_32 {c |}{col 14}{res}{space 2}-2.547168{col 26}{space 2} .6034625{col 37}{space 1}   -4.22{col 46}{space 3}0.000{col 54}{space 4}-3.730686{col 67}{space 3} -1.36365
{txt}{space 5}post_33 {c |}{col 14}{res}{space 2}-2.182981{col 26}{space 2} .5692458{col 37}{space 1}   -3.83{col 46}{space 3}0.000{col 54}{space 4}-3.299393{col 67}{space 3}-1.066569
{txt}{space 5}post_34 {c |}{col 14}{res}{space 2}-2.313337{col 26}{space 2} .5928882{col 37}{space 1}   -3.90{col 46}{space 3}0.000{col 54}{space 4}-3.476117{col 67}{space 3}-1.150558
{txt}{space 5}post_35 {c |}{col 14}{res}{space 2}-1.661386{col 26}{space 2} .4901105{col 37}{space 1}   -3.39{col 46}{space 3}0.001{col 54}{space 4}-2.622597{col 67}{space 3}-.7001755
{txt}{space 5}post_36 {c |}{col 14}{res}{space 2}-2.547902{col 26}{space 2} .6356031{col 37}{space 1}   -4.01{col 46}{space 3}0.000{col 54}{space 4}-3.794455{col 67}{space 3} -1.30135
{txt}{space 5}post_37 {c |}{col 14}{res}{space 2}-2.439355{col 26}{space 2} .5942224{col 37}{space 1}   -4.11{col 46}{space 3}0.000{col 54}{space 4}-3.604751{col 67}{space 3}-1.273959
{txt}{space 5}post_38 {c |}{col 14}{res}{space 2}-2.540986{col 26}{space 2} .3692816{col 37}{space 1}   -6.88{col 46}{space 3}0.000{col 54}{space 4}-3.265225{col 67}{space 3}-1.816746
{txt}{space 5}post_39 {c |}{col 14}{res}{space 2}-2.390401{col 26}{space 2} .5302182{col 37}{space 1}   -4.51{col 46}{space 3}0.000{col 54}{space 4}-3.430271{col 67}{space 3}-1.350531
{txt}{space 5}post_40 {c |}{col 14}{res}{space 2}-2.743957{col 26}{space 2} .5750722{col 37}{space 1}   -4.77{col 46}{space 3}0.000{col 54}{space 4}-3.871796{col 67}{space 3}-1.616119
{txt}{space 5}post_41 {c |}{col 14}{res}{space 2} -2.50689{col 26}{space 2} .4148669{col 37}{space 1}   -6.04{col 46}{space 3}0.000{col 54}{space 4}-3.320532{col 67}{space 3}-1.693248
{txt}{space 5}post_42 {c |}{col 14}{res}{space 2} -1.22581{col 26}{space 2} .6144852{col 37}{space 1}   -1.99{col 46}{space 3}0.046{col 54}{space 4}-2.430945{col 67}{space 3}-.0206739
{txt}{space 5}post_43 {c |}{col 14}{res}{space 2}-2.544473{col 26}{space 2} .7610826{col 37}{space 1}   -3.34{col 46}{space 3}0.001{col 54}{space 4}-4.037117{col 67}{space 3}-1.051828
{txt}{space 5}post_44 {c |}{col 14}{res}{space 2}-2.982685{col 26}{space 2} .6320526{col 37}{space 1}   -4.72{col 46}{space 3}0.000{col 54}{space 4}-4.222274{col 67}{space 3}-1.743096
{txt}{space 5}post_45 {c |}{col 14}{res}{space 2} -1.84383{col 26}{space 2} .4194635{col 37}{space 1}   -4.40{col 46}{space 3}0.000{col 54}{space 4}-2.666487{col 67}{space 3}-1.021173
{txt}{space 5}post_46 {c |}{col 14}{res}{space 2}-2.611777{col 26}{space 2} .4318741{col 37}{space 1}   -6.05{col 46}{space 3}0.000{col 54}{space 4}-3.458774{col 67}{space 3}-1.764781
{txt}{space 5}post_47 {c |}{col 14}{res}{space 2} -1.84944{col 26}{space 2} .6307411{col 37}{space 1}   -2.93{col 46}{space 3}0.003{col 54}{space 4}-3.086457{col 67}{space 3}-.6124232
{txt}{space 5}post_48 {c |}{col 14}{res}{space 2}-2.519952{col 26}{space 2} .4562646{col 37}{space 1}   -5.52{col 46}{space 3}0.000{col 54}{space 4}-3.414783{col 67}{space 3} -1.62512
{txt}{space 5}post_49 {c |}{col 14}{res}{space 2}-2.572203{col 26}{space 2}  .739856{col 37}{space 1}   -3.48{col 46}{space 3}0.001{col 54}{space 4}-4.023217{col 67}{space 3}-1.121188
{txt}{space 5}post_50 {c |}{col 14}{res}{space 2}-2.328303{col 26}{space 2} .6928993{col 37}{space 1}   -3.36{col 46}{space 3}0.001{col 54}{space 4}-3.687226{col 67}{space 3}-.9693808
{txt}{space 5}post_51 {c |}{col 14}{res}{space 2}-2.267219{col 26}{space 2} 1.010625{col 37}{space 1}   -2.24{col 46}{space 3}0.025{col 54}{space 4}-4.249269{col 67}{space 3}-.2851686
{txt}{space 5}post_52 {c |}{col 14}{res}{space 2}-2.299513{col 26}{space 2} .5175167{col 37}{space 1}   -4.44{col 46}{space 3}0.000{col 54}{space 4}-3.314473{col 67}{space 3}-1.284553
{txt}{space 5}post_53 {c |}{col 14}{res}{space 2}-1.957519{col 26}{space 2} .6303774{col 37}{space 1}   -3.11{col 46}{space 3}0.002{col 54}{space 4}-3.193823{col 67}{space 3}-.7212156
{txt}{space 5}post_54 {c |}{col 14}{res}{space 2} -2.97972{col 26}{space 2} .6097502{col 37}{space 1}   -4.89{col 46}{space 3}0.000{col 54}{space 4} -4.17557{col 67}{space 3}-1.783871
{txt}{space 5}post_55 {c |}{col 14}{res}{space 2}-2.366668{col 26}{space 2} .5848646{col 37}{space 1}   -4.05{col 46}{space 3}0.000{col 54}{space 4}-3.513711{col 67}{space 3}-1.219624
{txt}{space 5}post_56 {c |}{col 14}{res}{space 2}-1.803848{col 26}{space 2} .5512234{col 37}{space 1}   -3.27{col 46}{space 3}0.001{col 54}{space 4}-2.884914{col 67}{space 3}-.7227821
{txt}{space 5}post_57 {c |}{col 14}{res}{space 2} -1.94992{col 26}{space 2} .6484052{col 37}{space 1}   -3.01{col 46}{space 3}0.003{col 54}{space 4} -3.22158{col 67}{space 3}-.6782594
{txt}{space 5}post_58 {c |}{col 14}{res}{space 2}-1.969342{col 26}{space 2} .4474915{col 37}{space 1}   -4.40{col 46}{space 3}0.000{col 54}{space 4}-2.846967{col 67}{space 3}-1.091716
{txt}{space 5}post_59 {c |}{col 14}{res}{space 2}-2.375587{col 26}{space 2} .5828077{col 37}{space 1}   -4.08{col 46}{space 3}0.000{col 54}{space 4}-3.518596{col 67}{space 3}-1.232577
{txt}{space 5}post_60 {c |}{col 14}{res}{space 2}-1.397673{col 26}{space 2}  .586892{col 37}{space 1}   -2.38{col 46}{space 3}0.017{col 54}{space 4}-2.548693{col 67}{space 3}-.2466536
{txt}{space 5}post_61 {c |}{col 14}{res}{space 2}-2.261946{col 26}{space 2} .5883285{col 37}{space 1}   -3.84{col 46}{space 3}0.000{col 54}{space 4}-3.415783{col 67}{space 3}-1.108109
{txt}{space 5}post_62 {c |}{col 14}{res}{space 2}-3.067402{col 26}{space 2} .7451155{col 37}{space 1}   -4.12{col 46}{space 3}0.000{col 54}{space 4}-4.528731{col 67}{space 3}-1.606072
{txt}{space 5}post_63 {c |}{col 14}{res}{space 2} -1.87241{col 26}{space 2} .6760439{col 37}{space 1}   -2.77{col 46}{space 3}0.006{col 54}{space 4}-3.198276{col 67}{space 3}-.5465449
{txt}{space 5}post_64 {c |}{col 14}{res}{space 2}-1.931753{col 26}{space 2} .4802275{col 37}{space 1}   -4.02{col 46}{space 3}0.000{col 54}{space 4}-2.873581{col 67}{space 3}-.9899254
{txt}{space 5}post_65 {c |}{col 14}{res}{space 2}-2.153124{col 26}{space 2}  .452748{col 37}{space 1}   -4.76{col 46}{space 3}0.000{col 54}{space 4}-3.041059{col 67}{space 3}-1.265189
{txt}{space 5}post_66 {c |}{col 14}{res}{space 2}-2.389901{col 26}{space 2} .5584846{col 37}{space 1}   -4.28{col 46}{space 3}0.000{col 54}{space 4}-3.485207{col 67}{space 3}-1.294594
{txt}{space 5}post_67 {c |}{col 14}{res}{space 2}-3.738077{col 26}{space 2} .8717634{col 37}{space 1}   -4.29{col 46}{space 3}0.000{col 54}{space 4} -5.44779{col 67}{space 3}-2.028364
{txt}{space 5}post_68 {c |}{col 14}{res}{space 2}-3.247209{col 26}{space 2} .6316997{col 37}{space 1}   -5.14{col 46}{space 3}0.000{col 54}{space 4}-4.486106{col 67}{space 3}-2.008312
{txt}{space 5}post_69 {c |}{col 14}{res}{space 2}-4.493599{col 26}{space 2} 1.371961{col 37}{space 1}   -3.28{col 46}{space 3}0.001{col 54}{space 4}-7.184304{col 67}{space 3}-1.802893
{txt}{space 5}post_70 {c |}{col 14}{res}{space 2}-2.132965{col 26}{space 2} .4891599{col 37}{space 1}   -4.36{col 46}{space 3}0.000{col 54}{space 4}-3.092311{col 67}{space 3}-1.173619
{txt}{space 5}post_71 {c |}{col 14}{res}{space 2}-2.059432{col 26}{space 2} .6800682{col 37}{space 1}   -3.03{col 46}{space 3}0.002{col 54}{space 4} -3.39319{col 67}{space 3}-.7256738
{txt}{space 5}post_72 {c |}{col 14}{res}{space 2}-2.548675{col 26}{space 2} .7161188{col 37}{space 1}   -3.56{col 46}{space 3}0.000{col 54}{space 4}-3.953136{col 67}{space 3}-1.144214
{txt}{space 5}post_73 {c |}{col 14}{res}{space 2}-2.073186{col 26}{space 2} .5689831{col 37}{space 1}   -3.64{col 46}{space 3}0.000{col 54}{space 4}-3.189082{col 67}{space 3}-.9572892
{txt}{space 5}post_74 {c |}{col 14}{res}{space 2}-2.534874{col 26}{space 2}   .78128{col 37}{space 1}   -3.24{col 46}{space 3}0.001{col 54}{space 4} -4.06713{col 67}{space 3}-1.002618
{txt}{space 5}post_75 {c |}{col 14}{res}{space 2}-1.468869{col 26}{space 2} .5005657{col 37}{space 1}   -2.93{col 46}{space 3}0.003{col 54}{space 4}-2.450585{col 67}{space 3} -.487154
{txt}{space 5}post_76 {c |}{col 14}{res}{space 2}-2.629249{col 26}{space 2} .5474185{col 37}{space 1}   -4.80{col 46}{space 3}0.000{col 54}{space 4}-3.702853{col 67}{space 3}-1.555646
{txt}{space 5}post_77 {c |}{col 14}{res}{space 2}-2.213918{col 26}{space 2} .7776919{col 37}{space 1}   -2.85{col 46}{space 3}0.004{col 54}{space 4}-3.739136{col 67}{space 3}-.6886989
{txt}{space 5}post_78 {c |}{col 14}{res}{space 2}-2.541943{col 26}{space 2} .5853036{col 37}{space 1}   -4.34{col 46}{space 3}0.000{col 54}{space 4}-3.689848{col 67}{space 3}-1.394039
{txt}{space 5}post_79 {c |}{col 14}{res}{space 2}-1.414984{col 26}{space 2} .7839247{col 37}{space 1}   -1.80{col 46}{space 3}0.071{col 54}{space 4}-2.952426{col 67}{space 3} .1224588
{txt}{space 5}post_80 {c |}{col 14}{res}{space 2}-3.416739{col 26}{space 2} .4290457{col 37}{space 1}   -7.96{col 46}{space 3}0.000{col 54}{space 4}-4.258188{col 67}{space 3}-2.575289
{txt}{space 5}post_81 {c |}{col 14}{res}{space 2}-1.658912{col 26}{space 2} .4477133{col 37}{space 1}   -3.71{col 46}{space 3}0.000{col 54}{space 4}-2.536973{col 67}{space 3} -.780851
{txt}{space 5}post_82 {c |}{col 14}{res}{space 2} -2.27717{col 26}{space 2} .4171836{col 37}{space 1}   -5.46{col 46}{space 3}0.000{col 54}{space 4}-3.095355{col 67}{space 3}-1.458984
{txt}{space 5}post_83 {c |}{col 14}{res}{space 2}-3.333697{col 26}{space 2} .3886653{col 37}{space 1}   -8.58{col 46}{space 3}0.000{col 54}{space 4}-4.095952{col 67}{space 3}-2.571442
{txt}{space 5}post_84 {c |}{col 14}{res}{space 2}-3.671082{col 26}{space 2} .4363241{col 37}{space 1}   -8.41{col 46}{space 3}0.000{col 54}{space 4}-4.526806{col 67}{space 3}-2.815358
{txt}{space 5}post_85 {c |}{col 14}{res}{space 2}-1.269863{col 26}{space 2}  .547547{col 37}{space 1}   -2.32{col 46}{space 3}0.020{col 54}{space 4}-2.343719{col 67}{space 3}-.1960074
{txt}{space 5}post_86 {c |}{col 14}{res}{space 2}-3.360698{col 26}{space 2} .4260243{col 37}{space 1}   -7.89{col 46}{space 3}0.000{col 54}{space 4}-4.196222{col 67}{space 3}-2.525174
{txt}{space 5}post_87 {c |}{col 14}{res}{space 2}-3.315448{col 26}{space 2} .4805666{col 37}{space 1}   -6.90{col 46}{space 3}0.000{col 54}{space 4}-4.257941{col 67}{space 3}-2.372955
{txt}{space 5}post_88 {c |}{col 14}{res}{space 2}-2.912857{col 26}{space 2} .4456792{col 37}{space 1}   -6.54{col 46}{space 3}0.000{col 54}{space 4}-3.786929{col 67}{space 3}-2.038786
{txt}{space 5}post_89 {c |}{col 14}{res}{space 2}-3.236029{col 26}{space 2} .5171352{col 37}{space 1}   -6.26{col 46}{space 3}0.000{col 54}{space 4}-4.250241{col 67}{space 3}-2.221817
{txt}{space 5}post_90 {c |}{col 14}{res}{space 2}-3.502353{col 26}{space 2} .4572113{col 37}{space 1}   -7.66{col 46}{space 3}0.000{col 54}{space 4}-4.399041{col 67}{space 3}-2.605665
{txt}{space 5}post_91 {c |}{col 14}{res}{space 2}-3.198615{col 26}{space 2} .4462571{col 37}{space 1}   -7.17{col 46}{space 3}0.000{col 54}{space 4} -4.07382{col 67}{space 3} -2.32341
{txt}{space 5}post_92 {c |}{col 14}{res}{space 2}-2.545344{col 26}{space 2} .4174165{col 37}{space 1}   -6.10{col 46}{space 3}0.000{col 54}{space 4}-3.363986{col 67}{space 3}-1.726702
{txt}{space 5}post_93 {c |}{col 14}{res}{space 2}-3.117137{col 26}{space 2} .4754704{col 37}{space 1}   -6.56{col 46}{space 3}0.000{col 54}{space 4}-4.049636{col 67}{space 3}-2.184639
{txt}{space 5}post_94 {c |}{col 14}{res}{space 2}-3.452304{col 26}{space 2} .4331747{col 37}{space 1}   -7.97{col 46}{space 3}0.000{col 54}{space 4}-4.301852{col 67}{space 3}-2.602757
{txt}{space 5}post_95 {c |}{col 14}{res}{space 2}-3.489492{col 26}{space 2}  .442842{col 37}{space 1}   -7.88{col 46}{space 3}0.000{col 54}{space 4}-4.357999{col 67}{space 3}-2.620985
{txt}{space 5}post_96 {c |}{col 14}{res}{space 2}-2.540065{col 26}{space 2} .4589572{col 37}{space 1}   -5.53{col 46}{space 3}0.000{col 54}{space 4}-3.440178{col 67}{space 3}-1.639953
{txt}{space 5}post_97 {c |}{col 14}{res}{space 2}-2.434609{col 26}{space 2} .4314654{col 37}{space 1}   -5.64{col 46}{space 3}0.000{col 54}{space 4}-3.280804{col 67}{space 3}-1.588414
{txt}{space 5}post_98 {c |}{col 14}{res}{space 2}-2.710561{col 26}{space 2} .4262236{col 37}{space 1}   -6.36{col 46}{space 3}0.000{col 54}{space 4}-3.546476{col 67}{space 3}-1.874647
{txt}{space 5}post_99 {c |}{col 14}{res}{space 2}-3.239429{col 26}{space 2} .4355182{col 37}{space 1}   -7.44{col 46}{space 3}0.000{col 54}{space 4}-4.093573{col 67}{space 3}-2.385286
{txt}{space 4}post_100 {c |}{col 14}{res}{space 2}-3.292086{col 26}{space 2} .4312807{col 37}{space 1}   -7.63{col 46}{space 3}0.000{col 54}{space 4}-4.137919{col 67}{space 3}-2.446253
{txt}{space 4}post_101 {c |}{col 14}{res}{space 2}-3.517547{col 26}{space 2} .5505409{col 37}{space 1}   -6.39{col 46}{space 3}0.000{col 54}{space 4}-4.597275{col 67}{space 3} -2.43782
{txt}{space 4}post_102 {c |}{col 14}{res}{space 2}-3.765998{col 26}{space 2} .4636232{col 37}{space 1}   -8.12{col 46}{space 3}0.000{col 54}{space 4}-4.675261{col 67}{space 3}-2.856734
{txt}{space 4}post_103 {c |}{col 14}{res}{space 2}-4.019283{col 26}{space 2} .4328628{col 37}{space 1}   -9.29{col 46}{space 3}0.000{col 54}{space 4}-4.868219{col 67}{space 3}-3.170347
{txt}{space 4}post_104 {c |}{col 14}{res}{space 2}-4.006151{col 26}{space 2} .4802408{col 37}{space 1}   -8.34{col 46}{space 3}0.000{col 54}{space 4}-4.948006{col 67}{space 3}-3.064297
{txt}{space 4}post_105 {c |}{col 14}{res}{space 2}-3.252007{col 26}{space 2} .4139713{col 37}{space 1}   -7.86{col 46}{space 3}0.000{col 54}{space 4}-4.063892{col 67}{space 3}-2.440121
{txt}{space 4}post_106 {c |}{col 14}{res}{space 2}-1.088998{col 26}{space 2} .4539663{col 37}{space 1}   -2.40{col 46}{space 3}0.017{col 54}{space 4}-1.979322{col 67}{space 3}-.1986742
{txt}{space 4}post_107 {c |}{col 14}{res}{space 2}-1.016381{col 26}{space 2} .4626406{col 37}{space 1}   -2.20{col 46}{space 3}0.028{col 54}{space 4}-1.923718{col 67}{space 3}-.1090451
{txt}{space 4}post_108 {c |}{col 14}{res}{space 2}-2.672753{col 26}{space 2} .4226348{col 37}{space 1}   -6.32{col 46}{space 3}0.000{col 54}{space 4}-3.501629{col 67}{space 3}-1.843876
{txt}{space 4}post_109 {c |}{col 14}{res}{space 2}-.6692941{col 26}{space 2} .4311128{col 37}{space 1}   -1.55{col 46}{space 3}0.121{col 54}{space 4}-1.514798{col 67}{space 3} .1762095
{txt}{space 4}post_110 {c |}{col 14}{res}{space 2} -4.08999{col 26}{space 2} .4508205{col 37}{space 1}   -9.07{col 46}{space 3}0.000{col 54}{space 4}-4.974144{col 67}{space 3}-3.205835
{txt}{space 4}post_111 {c |}{col 14}{res}{space 2}-.6354837{col 26}{space 2}  .428764{col 37}{space 1}   -1.48{col 46}{space 3}0.138{col 54}{space 4}-1.476381{col 67}{space 3} .2054135
{txt}{space 4}post_112 {c |}{col 14}{res}{space 2}-1.181944{col 26}{space 2} .4842252{col 37}{space 1}   -2.44{col 46}{space 3}0.015{col 54}{space 4}-2.131612{col 67}{space 3}-.2322759
{txt}{space 4}post_113 {c |}{col 14}{res}{space 2}-4.093658{col 26}{space 2} .4423457{col 37}{space 1}   -9.25{col 46}{space 3}0.000{col 54}{space 4}-4.961192{col 67}{space 3}-3.226124
{txt}{space 4}post_114 {c |}{col 14}{res}{space 2}-2.515918{col 26}{space 2}   .42068{col 37}{space 1}   -5.98{col 46}{space 3}0.000{col 54}{space 4}-3.340961{col 67}{space 3}-1.690876
{txt}{space 4}post_115 {c |}{col 14}{res}{space 2}-2.909399{col 26}{space 2} .4549321{col 37}{space 1}   -6.40{col 46}{space 3}0.000{col 54}{space 4}-3.801618{col 67}{space 3}-2.017181
{txt}{space 4}post_116 {c |}{col 14}{res}{space 2}-1.928118{col 26}{space 2} .4314458{col 37}{space 1}   -4.47{col 46}{space 3}0.000{col 54}{space 4}-2.774275{col 67}{space 3}-1.081962
{txt}{space 4}post_117 {c |}{col 14}{res}{space 2}-3.968056{col 26}{space 2} .4621586{col 37}{space 1}   -8.59{col 46}{space 3}0.000{col 54}{space 4}-4.874447{col 67}{space 3}-3.061665
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 2.043512{col 26}{space 2} .4333531{col 37}{space 1}    4.72{col 46}{space 3}0.000{col 54}{space 4} 1.193615{col 67}{space 3}  2.89341
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .2624855{col 26}{space 2} .1113302{col 37}{space 1}    2.36{col 46}{space 3}0.018{col 54}{space 4} .0441433{col 67}{space 3} .4808276
{txt}{space 12} {c |}
{space 8}date {c |}
{space 8}553  {c |}{col 14}{res}{space 2}-.2648144{col 26}{space 2} .5021046{col 37}{space 1}   -0.53{col 46}{space 3}0.598{col 54}{space 4}-1.249548{col 67}{space 3} .7199192
{txt}{space 8}554  {c |}{col 14}{res}{space 2} -.505199{col 26}{space 2} .4866415{col 37}{space 1}   -1.04{col 46}{space 3}0.299{col 54}{space 4}-1.459606{col 67}{space 3} .4492082
{txt}{space 8}555  {c |}{col 14}{res}{space 2}-.0412657{col 26}{space 2} .5451787{col 37}{space 1}   -0.08{col 46}{space 3}0.940{col 54}{space 4}-1.110477{col 67}{space 3} 1.027945
{txt}{space 8}556  {c |}{col 14}{res}{space 2}-.2130877{col 26}{space 2} .5194978{col 37}{space 1}   -0.41{col 46}{space 3}0.682{col 54}{space 4}-1.231933{col 67}{space 3} .8057576
{txt}{space 8}557  {c |}{col 14}{res}{space 2} .0526019{col 26}{space 2} .6238718{col 37}{space 1}    0.08{col 46}{space 3}0.933{col 54}{space 4}-1.170943{col 67}{space 3} 1.276147
{txt}{space 8}558  {c |}{col 14}{res}{space 2} .6609605{col 26}{space 2}  .633774{col 37}{space 1}    1.04{col 46}{space 3}0.297{col 54}{space 4}-.5820046{col 67}{space 3} 1.903926
{txt}{space 8}559  {c |}{col 14}{res}{space 2} .4001011{col 26}{space 2} .5863766{col 37}{space 1}    0.68{col 46}{space 3}0.495{col 54}{space 4}-.7499077{col 67}{space 3}  1.55011
{txt}{space 8}560  {c |}{col 14}{res}{space 2} .2626724{col 26}{space 2} .4739351{col 37}{space 1}    0.55{col 46}{space 3}0.579{col 54}{space 4}-.6668147{col 67}{space 3}  1.19216
{txt}{space 8}561  {c |}{col 14}{res}{space 2}-.4288646{col 26}{space 2}  .512464{col 37}{space 1}   -0.84{col 46}{space 3}0.403{col 54}{space 4}-1.433915{col 67}{space 3}  .576186
{txt}{space 8}562  {c |}{col 14}{res}{space 2} .0283883{col 26}{space 2} .5390576{col 37}{space 1}    0.05{col 46}{space 3}0.958{col 54}{space 4}-1.028818{col 67}{space 3} 1.085595
{txt}{space 8}563  {c |}{col 14}{res}{space 2}-.0297325{col 26}{space 2} .5130756{col 37}{space 1}   -0.06{col 46}{space 3}0.954{col 54}{space 4}-1.035982{col 67}{space 3} .9765175
{txt}{space 8}564  {c |}{col 14}{res}{space 2}-.6245809{col 26}{space 2} .5515033{col 37}{space 1}   -1.13{col 46}{space 3}0.258{col 54}{space 4}-1.706196{col 67}{space 3}  .457034
{txt}{space 8}565  {c |}{col 14}{res}{space 2}-.4704134{col 26}{space 2} .5460779{col 37}{space 1}   -0.86{col 46}{space 3}0.389{col 54}{space 4}-1.541388{col 67}{space 3} .6005612
{txt}{space 8}566  {c |}{col 14}{res}{space 2}-.3208899{col 26}{space 2}  .541999{col 37}{space 1}   -0.59{col 46}{space 3}0.554{col 54}{space 4}-1.383865{col 67}{space 3}  .742085
{txt}{space 8}567  {c |}{col 14}{res}{space 2}-.4242354{col 26}{space 2} .6252378{col 37}{space 1}   -0.68{col 46}{space 3}0.498{col 54}{space 4}-1.650459{col 67}{space 3} .8019885
{txt}{space 8}568  {c |}{col 14}{res}{space 2}-.2013624{col 26}{space 2} .5980825{col 37}{space 1}   -0.34{col 46}{space 3}0.736{col 54}{space 4}-1.374329{col 67}{space 3} .9716041
{txt}{space 8}569  {c |}{col 14}{res}{space 2}-.4115505{col 26}{space 2} .4904364{col 37}{space 1}   -0.84{col 46}{space 3}0.401{col 54}{space 4}  -1.3734{col 67}{space 3} .5502993
{txt}{space 8}570  {c |}{col 14}{res}{space 2} .4444281{col 26}{space 2} .5710942{col 37}{space 1}    0.78{col 46}{space 3}0.437{col 54}{space 4}-.6756086{col 67}{space 3} 1.564465
{txt}{space 8}571  {c |}{col 14}{res}{space 2}-.7598301{col 26}{space 2} .6248747{col 37}{space 1}   -1.22{col 46}{space 3}0.224{col 54}{space 4}-1.985342{col 67}{space 3} .4656817
{txt}{space 8}572  {c |}{col 14}{res}{space 2}-.8605058{col 26}{space 2} .5186321{col 37}{space 1}   -1.66{col 46}{space 3}0.097{col 54}{space 4}-1.877653{col 67}{space 3} .1566418
{txt}{space 8}573  {c |}{col 14}{res}{space 2}-.5222335{col 26}{space 2} .5472071{col 37}{space 1}   -0.95{col 46}{space 3}0.340{col 54}{space 4}-1.595423{col 67}{space 3} .5509556
{txt}{space 8}574  {c |}{col 14}{res}{space 2}-.5376308{col 26}{space 2} .5723862{col 37}{space 1}   -0.94{col 46}{space 3}0.348{col 54}{space 4}-1.660202{col 67}{space 3} .5849399
{txt}{space 8}575  {c |}{col 14}{res}{space 2}  .185487{col 26}{space 2} .5626412{col 37}{space 1}    0.33{col 46}{space 3}0.742{col 54}{space 4}-.9179718{col 67}{space 3} 1.288946
{txt}{space 8}576  {c |}{col 14}{res}{space 2}-.5255064{col 26}{space 2} .5243547{col 37}{space 1}   -1.00{col 46}{space 3}0.316{col 54}{space 4}-1.553877{col 67}{space 3} .5028642
{txt}{space 8}577  {c |}{col 14}{res}{space 2}-.2334868{col 26}{space 2} .6083532{col 37}{space 1}   -0.38{col 46}{space 3}0.701{col 54}{space 4}-1.426596{col 67}{space 3} .9596228
{txt}{space 8}578  {c |}{col 14}{res}{space 2}-.2405356{col 26}{space 2} .6136345{col 37}{space 1}   -0.39{col 46}{space 3}0.695{col 54}{space 4}-1.444003{col 67}{space 3} .9629318
{txt}{space 8}579  {c |}{col 14}{res}{space 2}-.0937053{col 26}{space 2} .4979238{col 37}{space 1}   -0.19{col 46}{space 3}0.851{col 54}{space 4} -1.07024{col 67}{space 3} .8828289
{txt}{space 8}580  {c |}{col 14}{res}{space 2}-.0178923{col 26}{space 2} .5863462{col 37}{space 1}   -0.03{col 46}{space 3}0.976{col 54}{space 4}-1.167842{col 67}{space 3} 1.132057
{txt}{space 8}581  {c |}{col 14}{res}{space 2}-.1143927{col 26}{space 2} .4960887{col 37}{space 1}   -0.23{col 46}{space 3}0.818{col 54}{space 4}-1.087328{col 67}{space 3} .8585424
{txt}{space 8}582  {c |}{col 14}{res}{space 2}-.2287606{col 26}{space 2} .5162355{col 37}{space 1}   -0.44{col 46}{space 3}0.658{col 54}{space 4}-1.241208{col 67}{space 3} .7836866
{txt}{space 8}583  {c |}{col 14}{res}{space 2}-.3425878{col 26}{space 2}  .544109{col 37}{space 1}   -0.63{col 46}{space 3}0.529{col 54}{space 4}-1.409701{col 67}{space 3} .7245254
{txt}{space 8}584  {c |}{col 14}{res}{space 2}-.1154959{col 26}{space 2} .5277236{col 37}{space 1}   -0.22{col 46}{space 3}0.827{col 54}{space 4}-1.150474{col 67}{space 3} .9194819
{txt}{space 8}585  {c |}{col 14}{res}{space 2}-.3511085{col 26}{space 2} .5240046{col 37}{space 1}   -0.67{col 46}{space 3}0.503{col 54}{space 4}-1.378793{col 67}{space 3} .6765756
{txt}{space 8}586  {c |}{col 14}{res}{space 2}-.5339395{col 26}{space 2} .4542763{col 37}{space 1}   -1.18{col 46}{space 3}0.240{col 54}{space 4}-1.424872{col 67}{space 3} .3569927
{txt}{space 8}587  {c |}{col 14}{res}{space 2}-.8631965{col 26}{space 2} .5938069{col 37}{space 1}   -1.45{col 46}{space 3}0.146{col 54}{space 4}-2.027778{col 67}{space 3} .3013847
{txt}{space 8}588  {c |}{col 14}{res}{space 2}-.5629143{col 26}{space 2} .6036474{col 37}{space 1}   -0.93{col 46}{space 3}0.351{col 54}{space 4}-1.746795{col 67}{space 3} .6209663
{txt}{space 8}589  {c |}{col 14}{res}{space 2}-.3424063{col 26}{space 2} .5346263{col 37}{space 1}   -0.64{col 46}{space 3}0.522{col 54}{space 4}-1.390922{col 67}{space 3} .7061093
{txt}{space 8}590  {c |}{col 14}{res}{space 2}-.7226185{col 26}{space 2} .5335759{col 37}{space 1}   -1.35{col 46}{space 3}0.176{col 54}{space 4}-1.769074{col 67}{space 3}  .323837
{txt}{space 8}591  {c |}{col 14}{res}{space 2}-1.041525{col 26}{space 2} .5961374{col 37}{space 1}   -1.75{col 46}{space 3}0.081{col 54}{space 4}-2.210677{col 67}{space 3} .1276271
{txt}{space 8}592  {c |}{col 14}{res}{space 2}-.6721737{col 26}{space 2} .5773816{col 37}{space 1}   -1.16{col 46}{space 3}0.244{col 54}{space 4}-1.804541{col 67}{space 3} .4601939
{txt}{space 8}593  {c |}{col 14}{res}{space 2}-.2476727{col 26}{space 2}  .610786{col 37}{space 1}   -0.41{col 46}{space 3}0.685{col 54}{space 4}-1.445554{col 67}{space 3} .9502082
{txt}{space 8}594  {c |}{col 14}{res}{space 2}-.3779227{col 26}{space 2} .5896743{col 37}{space 1}   -0.64{col 46}{space 3}0.522{col 54}{space 4}-1.534399{col 67}{space 3} .7785536
{txt}{space 8}595  {c |}{col 14}{res}{space 2}-.0252581{col 26}{space 2}  .646908{col 37}{space 1}   -0.04{col 46}{space 3}0.969{col 54}{space 4}-1.293982{col 67}{space 3} 1.243466
{txt}{space 8}596  {c |}{col 14}{res}{space 2}-.6380508{col 26}{space 2} .6362946{col 37}{space 1}   -1.00{col 46}{space 3}0.316{col 54}{space 4}-1.885959{col 67}{space 3} .6098578
{txt}{space 8}597  {c |}{col 14}{res}{space 2}-.6506062{col 26}{space 2}  .646492{col 37}{space 1}   -1.01{col 46}{space 3}0.314{col 54}{space 4}-1.918514{col 67}{space 3} .6173017
{txt}{space 8}598  {c |}{col 14}{res}{space 2} -.449842{col 26}{space 2} .6075627{col 37}{space 1}   -0.74{col 46}{space 3}0.459{col 54}{space 4}-1.641401{col 67}{space 3} .7417171
{txt}{space 8}599  {c |}{col 14}{res}{space 2} -.981968{col 26}{space 2} .6488196{col 37}{space 1}   -1.51{col 46}{space 3}0.130{col 54}{space 4}-2.254441{col 67}{space 3} .2905047
{txt}{space 8}600  {c |}{col 14}{res}{space 2}-.7003619{col 26}{space 2} .6021425{col 37}{space 1}   -1.16{col 46}{space 3}0.245{col 54}{space 4}-1.881291{col 67}{space 3} .4805671
{txt}{space 8}601  {c |}{col 14}{res}{space 2}-.7907502{col 26}{space 2} .6103085{col 37}{space 1}   -1.30{col 46}{space 3}0.195{col 54}{space 4}-1.987695{col 67}{space 3} .4061941
{txt}{space 8}602  {c |}{col 14}{res}{space 2}  -.30849{col 26}{space 2}  .598887{col 37}{space 1}   -0.52{col 46}{space 3}0.607{col 54}{space 4}-1.483034{col 67}{space 3} .8660543
{txt}{space 8}603  {c |}{col 14}{res}{space 2} -1.42335{col 26}{space 2} .5195935{col 37}{space 1}   -2.74{col 46}{space 3}0.006{col 54}{space 4}-2.442383{col 67}{space 3}-.4043168
{txt}{space 8}604  {c |}{col 14}{res}{space 2}-1.234045{col 26}{space 2} .5217831{col 37}{space 1}   -2.37{col 46}{space 3}0.018{col 54}{space 4}-2.257372{col 67}{space 3}-.2107179
{txt}{space 8}605  {c |}{col 14}{res}{space 2}-.7517622{col 26}{space 2} .5872776{col 37}{space 1}   -1.28{col 46}{space 3}0.201{col 54}{space 4}-1.903538{col 67}{space 3} .4000138
{txt}{space 8}606  {c |}{col 14}{res}{space 2}-.7661839{col 26}{space 2} .5924019{col 37}{space 1}   -1.29{col 46}{space 3}0.196{col 54}{space 4} -1.92801{col 67}{space 3} .3956419
{txt}{space 8}607  {c |}{col 14}{res}{space 2}-.8326396{col 26}{space 2} .5808036{col 37}{space 1}   -1.43{col 46}{space 3}0.152{col 54}{space 4}-1.971719{col 67}{space 3} .3064395
{txt}{space 8}608  {c |}{col 14}{res}{space 2}-1.013088{col 26}{space 2} .5803205{col 37}{space 1}   -1.75{col 46}{space 3}0.081{col 54}{space 4}-2.151219{col 67}{space 3} .1250438
{txt}{space 8}609  {c |}{col 14}{res}{space 2}-1.073043{col 26}{space 2} .7739514{col 37}{space 1}   -1.39{col 46}{space 3}0.166{col 54}{space 4}-2.590925{col 67}{space 3}   .44484
{txt}{space 8}610  {c |}{col 14}{res}{space 2}-.5847599{col 26}{space 2} .7769772{col 37}{space 1}   -0.75{col 46}{space 3}0.452{col 54}{space 4}-2.108577{col 67}{space 3}  .939057
{txt}{space 8}611  {c |}{col 14}{res}{space 2}-.3730675{col 26}{space 2} .5492392{col 37}{space 1}   -0.68{col 46}{space 3}0.497{col 54}{space 4}-1.450242{col 67}{space 3} .7041071
{txt}{space 8}612  {c |}{col 14}{res}{space 2}-1.252169{col 26}{space 2}  .739801{col 37}{space 1}   -1.69{col 46}{space 3}0.091{col 54}{space 4}-2.703075{col 67}{space 3} .1987376
{txt}{space 8}613  {c |}{col 14}{res}{space 2}-1.045424{col 26}{space 2} .7975181{col 37}{space 1}   -1.31{col 46}{space 3}0.190{col 54}{space 4}-2.609526{col 67}{space 3} .5186783
{txt}{space 8}614  {c |}{col 14}{res}{space 2} -1.09408{col 26}{space 2} .5749725{col 37}{space 1}   -1.90{col 46}{space 3}0.057{col 54}{space 4}-2.221723{col 67}{space 3} .0335633
{txt}{space 8}615  {c |}{col 14}{res}{space 2}-1.220971{col 26}{space 2} .6723715{col 37}{space 1}   -1.82{col 46}{space 3}0.070{col 54}{space 4}-2.539634{col 67}{space 3} .0976919
{txt}{space 8}616  {c |}{col 14}{res}{space 2}-1.326079{col 26}{space 2} .6572978{col 37}{space 1}   -2.02{col 46}{space 3}0.044{col 54}{space 4}-2.615179{col 67}{space 3}-.0369782
{txt}{space 8}617  {c |}{col 14}{res}{space 2}-1.590031{col 26}{space 2} .8556946{col 37}{space 1}   -1.86{col 46}{space 3}0.063{col 54}{space 4}-3.268229{col 67}{space 3} .0881677
{txt}{space 8}618  {c |}{col 14}{res}{space 2}-1.344494{col 26}{space 2} .5830661{col 37}{space 1}   -2.31{col 46}{space 3}0.021{col 54}{space 4} -2.48801{col 67}{space 3}-.2009777
{txt}{space 8}619  {c |}{col 14}{res}{space 2}-.8607999{col 26}{space 2} .5784261{col 37}{space 1}   -1.49{col 46}{space 3}0.137{col 54}{space 4}-1.995216{col 67}{space 3} .2736163
{txt}{space 8}620  {c |}{col 14}{res}{space 2}-.7458031{col 26}{space 2}  .795444{col 37}{space 1}   -0.94{col 46}{space 3}0.349{col 54}{space 4}-2.305837{col 67}{space 3} .8142311
{txt}{space 8}621  {c |}{col 14}{res}{space 2}-.8619036{col 26}{space 2} .5902474{col 37}{space 1}   -1.46{col 46}{space 3}0.144{col 54}{space 4}-2.019504{col 67}{space 3} .2956968
{txt}{space 8}622  {c |}{col 14}{res}{space 2}-1.269461{col 26}{space 2} .6235767{col 37}{space 1}   -2.04{col 46}{space 3}0.042{col 54}{space 4}-2.492427{col 67}{space 3}-.0464951
{txt}{space 8}623  {c |}{col 14}{res}{space 2}-1.407571{col 26}{space 2}  .603108{col 37}{space 1}   -2.33{col 46}{space 3}0.020{col 54}{space 4}-2.590394{col 67}{space 3}-.2247488
{txt}{space 8}624  {c |}{col 14}{res}{space 2}-1.508498{col 26}{space 2} .6654586{col 37}{space 1}   -2.27{col 46}{space 3}0.024{col 54}{space 4}-2.813603{col 67}{space 3}-.2033924
{txt}{space 8}625  {c |}{col 14}{res}{space 2}-1.733757{col 26}{space 2}  .794091{col 37}{space 1}   -2.18{col 46}{space 3}0.029{col 54}{space 4}-3.291138{col 67}{space 3}-.1763761
{txt}{space 8}626  {c |}{col 14}{res}{space 2}-1.250684{col 26}{space 2} .6828255{col 37}{space 1}   -1.83{col 46}{space 3}0.067{col 54}{space 4} -2.58985{col 67}{space 3} .0884815
{txt}{space 8}627  {c |}{col 14}{res}{space 2}-1.772918{col 26}{space 2} .6836744{col 37}{space 1}   -2.59{col 46}{space 3}0.010{col 54}{space 4}-3.113748{col 67}{space 3}-.4320875
{txt}{space 8}628  {c |}{col 14}{res}{space 2}-2.484028{col 26}{space 2} .8083818{col 37}{space 1}   -3.07{col 46}{space 3}0.002{col 54}{space 4}-4.069436{col 67}{space 3}-.8986199
{txt}{space 8}629  {c |}{col 14}{res}{space 2}-1.988834{col 26}{space 2} .6110834{col 37}{space 1}   -3.25{col 46}{space 3}0.001{col 54}{space 4}-3.187298{col 67}{space 3}-.7903696
{txt}{space 8}630  {c |}{col 14}{res}{space 2}-1.264222{col 26}{space 2} .6867591{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4}-2.611103{col 67}{space 3} .0826578
{txt}{space 8}631  {c |}{col 14}{res}{space 2}-2.036787{col 26}{space 2} .8717734{col 37}{space 1}   -2.34{col 46}{space 3}0.020{col 54}{space 4}-3.746519{col 67}{space 3}-.3270541
{txt}{space 8}632  {c |}{col 14}{res}{space 2}-1.709608{col 26}{space 2} .7035436{col 37}{space 1}   -2.43{col 46}{space 3}0.015{col 54}{space 4}-3.089406{col 67}{space 3}-.3298098
{txt}{space 8}633  {c |}{col 14}{res}{space 2}-1.135201{col 26}{space 2} .5972576{col 37}{space 1}   -1.90{col 46}{space 3}0.057{col 54}{space 4} -2.30655{col 67}{space 3} .0361478
{txt}{space 8}634  {c |}{col 14}{res}{space 2}-1.837117{col 26}{space 2} .6428594{col 37}{space 1}   -2.86{col 46}{space 3}0.004{col 54}{space 4}-3.097901{col 67}{space 3}-.5763334
{txt}{space 8}635  {c |}{col 14}{res}{space 2}-1.357945{col 26}{space 2} .7219235{col 37}{space 1}   -1.88{col 46}{space 3}0.060{col 54}{space 4} -2.77379{col 67}{space 3} .0579001
{txt}{space 8}636  {c |}{col 14}{res}{space 2}-1.765586{col 26}{space 2} .7331724{col 37}{space 1}   -2.41{col 46}{space 3}0.016{col 54}{space 4}-3.203493{col 67}{space 3}-.3276799
{txt}{space 8}637  {c |}{col 14}{res}{space 2}-2.540785{col 26}{space 2} .6766439{col 37}{space 1}   -3.75{col 46}{space 3}0.000{col 54}{space 4}-3.867827{col 67}{space 3}-1.213743
{txt}{space 8}638  {c |}{col 14}{res}{space 2}-1.315151{col 26}{space 2} .6840745{col 37}{space 1}   -1.92{col 46}{space 3}0.055{col 54}{space 4}-2.656766{col 67}{space 3} .0264643
{txt}{space 8}639  {c |}{col 14}{res}{space 2} -1.63963{col 26}{space 2} .6714721{col 37}{space 1}   -2.44{col 46}{space 3}0.015{col 54}{space 4}-2.956529{col 67}{space 3}-.3227308
{txt}{space 8}640  {c |}{col 14}{res}{space 2}-1.342871{col 26}{space 2} .6588056{col 37}{space 1}   -2.04{col 46}{space 3}0.042{col 54}{space 4}-2.634928{col 67}{space 3}-.0508137
{txt}{space 8}641  {c |}{col 14}{res}{space 2}-1.673291{col 26}{space 2} .6601744{col 37}{space 1}   -2.53{col 46}{space 3}0.011{col 54}{space 4}-2.968033{col 67}{space 3}-.3785488
{txt}{space 8}642  {c |}{col 14}{res}{space 2}-1.686899{col 26}{space 2} .6607958{col 37}{space 1}   -2.55{col 46}{space 3}0.011{col 54}{space 4}-2.982859{col 67}{space 3}-.3909378
{txt}{space 8}643  {c |}{col 14}{res}{space 2}-1.429093{col 26}{space 2} .6471228{col 37}{space 1}   -2.21{col 46}{space 3}0.027{col 54}{space 4}-2.698238{col 67}{space 3}-.1599481
{txt}{space 8}644  {c |}{col 14}{res}{space 2}-1.868772{col 26}{space 2} .7057329{col 37}{space 1}   -2.65{col 46}{space 3}0.008{col 54}{space 4}-3.252864{col 67}{space 3}-.4846801
{txt}{space 8}645  {c |}{col 14}{res}{space 2} -.787708{col 26}{space 2} .7341539{col 37}{space 1}   -1.07{col 46}{space 3}0.283{col 54}{space 4} -2.22754{col 67}{space 3} .6521235
{txt}{space 8}646  {c |}{col 14}{res}{space 2}-1.047148{col 26}{space 2} .7585126{col 37}{space 1}   -1.38{col 46}{space 3}0.168{col 54}{space 4}-2.534752{col 67}{space 3} .4404561
{txt}{space 8}647  {c |}{col 14}{res}{space 2}-1.091767{col 26}{space 2} .7379212{col 37}{space 1}   -1.48{col 46}{space 3}0.139{col 54}{space 4}-2.538987{col 67}{space 3} .3554528
{txt}{space 8}648  {c |}{col 14}{res}{space 2}-.9837902{col 26}{space 2} .7260324{col 37}{space 1}   -1.36{col 46}{space 3}0.176{col 54}{space 4}-2.407694{col 67}{space 3} .4401132
{txt}{space 8}649  {c |}{col 14}{res}{space 2}-.7189837{col 26}{space 2} .6874289{col 37}{space 1}   -1.05{col 46}{space 3}0.296{col 54}{space 4}-2.067177{col 67}{space 3}   .62921
{txt}{space 8}650  {c |}{col 14}{res}{space 2}-1.310853{col 26}{space 2} .6556538{col 37}{space 1}   -2.00{col 46}{space 3}0.046{col 54}{space 4}-2.596729{col 67}{space 3}-.0249769
{txt}{space 8}651  {c |}{col 14}{res}{space 2}-1.361414{col 26}{space 2} .7146071{col 37}{space 1}   -1.91{col 46}{space 3}0.057{col 54}{space 4} -2.76291{col 67}{space 3} .0400824
{txt}{space 8}652  {c |}{col 14}{res}{space 2}-1.500572{col 26}{space 2} .7181712{col 37}{space 1}   -2.09{col 46}{space 3}0.037{col 54}{space 4}-2.909058{col 67}{space 3}-.0920865
{txt}{space 8}653  {c |}{col 14}{res}{space 2}-.3590982{col 26}{space 2} .7731186{col 37}{space 1}   -0.46{col 46}{space 3}0.642{col 54}{space 4}-1.875348{col 67}{space 3} 1.157151
{txt}{space 8}654  {c |}{col 14}{res}{space 2}-.9533762{col 26}{space 2} .7062934{col 37}{space 1}   -1.35{col 46}{space 3}0.177{col 54}{space 4}-2.338567{col 67}{space 3} .4318149
{txt}{space 8}655  {c |}{col 14}{res}{space 2} -.912431{col 26}{space 2} .6839476{col 37}{space 1}   -1.33{col 46}{space 3}0.182{col 54}{space 4}-2.253797{col 67}{space 3} .4289353
{txt}{space 8}656  {c |}{col 14}{res}{space 2}-1.142473{col 26}{space 2} .6948802{col 37}{space 1}   -1.64{col 46}{space 3}0.100{col 54}{space 4}-2.505281{col 67}{space 3}  .220334
{txt}{space 8}657  {c |}{col 14}{res}{space 2}-1.291646{col 26}{space 2} .7011535{col 37}{space 1}   -1.84{col 46}{space 3}0.066{col 54}{space 4}-2.666757{col 67}{space 3} .0834649
{txt}{space 8}658  {c |}{col 14}{res}{space 2} -1.72914{col 26}{space 2} .7925301{col 37}{space 1}   -2.18{col 46}{space 3}0.029{col 54}{space 4}-3.283459{col 67}{space 3}-.1748201
{txt}{space 8}659  {c |}{col 14}{res}{space 2}-1.203138{col 26}{space 2} .6985415{col 37}{space 1}   -1.72{col 46}{space 3}0.085{col 54}{space 4}-2.573125{col 67}{space 3} .1668503
{txt}{space 8}660  {c |}{col 14}{res}{space 2}-1.750624{col 26}{space 2} .7546819{col 37}{space 1}   -2.32{col 46}{space 3}0.020{col 54}{space 4}-3.230715{col 67}{space 3}-.2705328
{txt}{space 8}661  {c |}{col 14}{res}{space 2}-1.918055{col 26}{space 2}  .910384{col 37}{space 1}   -2.11{col 46}{space 3}0.035{col 54}{space 4}-3.703511{col 67}{space 3}-.1325989
{txt}{space 8}662  {c |}{col 14}{res}{space 2}-1.035091{col 26}{space 2} .7605961{col 37}{space 1}   -1.36{col 46}{space 3}0.174{col 54}{space 4}-2.526781{col 67}{space 3} .4565997
{txt}{space 8}663  {c |}{col 14}{res}{space 2}-1.740104{col 26}{space 2} .7214389{col 37}{space 1}   -2.41{col 46}{space 3}0.016{col 54}{space 4}-3.154999{col 67}{space 3}-.3252095
{txt}{space 8}664  {c |}{col 14}{res}{space 2}-1.270583{col 26}{space 2} .7387712{col 37}{space 1}   -1.72{col 46}{space 3}0.086{col 54}{space 4} -2.71947{col 67}{space 3} .1783038
{txt}{space 8}665  {c |}{col 14}{res}{space 2}-1.079303{col 26}{space 2} .8250316{col 37}{space 1}   -1.31{col 46}{space 3}0.191{col 54}{space 4}-2.697365{col 67}{space 3} .5387589
{txt}{space 8}666  {c |}{col 14}{res}{space 2}-1.408024{col 26}{space 2} .7381702{col 37}{space 1}   -1.91{col 46}{space 3}0.057{col 54}{space 4}-2.855732{col 67}{space 3} .0396841
{txt}{space 8}667  {c |}{col 14}{res}{space 2}-1.387337{col 26}{space 2} .7074875{col 37}{space 1}   -1.96{col 46}{space 3}0.050{col 54}{space 4} -2.77487{col 67}{space 3} .0001962
{txt}{space 8}668  {c |}{col 14}{res}{space 2}-1.325737{col 26}{space 2} .7436375{col 37}{space 1}   -1.78{col 46}{space 3}0.075{col 54}{space 4}-2.784168{col 67}{space 3} .1326939
{txt}{space 8}669  {c |}{col 14}{res}{space 2}-1.255161{col 26}{space 2}  .710206{col 37}{space 1}   -1.77{col 46}{space 3}0.077{col 54}{space 4}-2.648026{col 67}{space 3} .1377036
{txt}{space 8}670  {c |}{col 14}{res}{space 2}-1.356625{col 26}{space 2} .7138926{col 37}{space 1}   -1.90{col 46}{space 3}0.058{col 54}{space 4} -2.75672{col 67}{space 3} .0434694
{txt}{space 8}671  {c |}{col 14}{res}{space 2}-1.081472{col 26}{space 2} .7541511{col 37}{space 1}   -1.43{col 46}{space 3}0.152{col 54}{space 4}-2.560522{col 67}{space 3}  .397578
{txt}{space 8}672  {c |}{col 14}{res}{space 2}-1.447097{col 26}{space 2} .7600877{col 37}{space 1}   -1.90{col 46}{space 3}0.057{col 54}{space 4} -2.93779{col 67}{space 3} .0435959
{txt}{space 8}673  {c |}{col 14}{res}{space 2}-1.316534{col 26}{space 2} .7530427{col 37}{space 1}   -1.75{col 46}{space 3}0.081{col 54}{space 4} -2.79341{col 67}{space 3} .1603428
{txt}{space 8}674  {c |}{col 14}{res}{space 2}-.9535968{col 26}{space 2} .7516284{col 37}{space 1}   -1.27{col 46}{space 3}0.205{col 54}{space 4}-2.427699{col 67}{space 3} .5205058
{txt}{space 8}675  {c |}{col 14}{res}{space 2}-.6271558{col 26}{space 2} .7585995{col 37}{space 1}   -0.83{col 46}{space 3}0.408{col 54}{space 4} -2.11493{col 67}{space 3} .8606186
{txt}{space 8}676  {c |}{col 14}{res}{space 2}-.4318378{col 26}{space 2} .7782458{col 37}{space 1}   -0.55{col 46}{space 3}0.579{col 54}{space 4}-1.958143{col 67}{space 3} 1.094467
{txt}{space 8}677  {c |}{col 14}{res}{space 2}-1.025783{col 26}{space 2} .7518631{col 37}{space 1}   -1.36{col 46}{space 3}0.173{col 54}{space 4}-2.500346{col 67}{space 3} .4487797
{txt}{space 8}678  {c |}{col 14}{res}{space 2}-.7035912{col 26}{space 2} .7467912{col 37}{space 1}   -0.94{col 46}{space 3}0.346{col 54}{space 4}-2.168207{col 67}{space 3} .7610247
{txt}{space 8}679  {c |}{col 14}{res}{space 2}-.5535984{col 26}{space 2} .7566638{col 37}{space 1}   -0.73{col 46}{space 3}0.464{col 54}{space 4}-2.037577{col 67}{space 3} .9303797
{txt}{space 8}680  {c |}{col 14}{res}{space 2}-.5985548{col 26}{space 2} .7629715{col 37}{space 1}   -0.78{col 46}{space 3}0.433{col 54}{space 4}-2.094904{col 67}{space 3} .8977941
{txt}{space 8}681  {c |}{col 14}{res}{space 2}-.6129253{col 26}{space 2} .7446451{col 37}{space 1}   -0.82{col 46}{space 3}0.411{col 54}{space 4}-2.073332{col 67}{space 3} .8474816
{txt}{space 8}682  {c |}{col 14}{res}{space 2}-.8476961{col 26}{space 2} .7598724{col 37}{space 1}   -1.12{col 46}{space 3}0.265{col 54}{space 4}-2.337967{col 67}{space 3} .6425748
{txt}{space 8}683  {c |}{col 14}{res}{space 2}-1.161887{col 26}{space 2}  .771944{col 37}{space 1}   -1.51{col 46}{space 3}0.132{col 54}{space 4}-2.675833{col 67}{space 3} .3520584
{txt}{space 8}684  {c |}{col 14}{res}{space 2}-.9152727{col 26}{space 2} .7939844{col 37}{space 1}   -1.15{col 46}{space 3}0.249{col 54}{space 4}-2.472444{col 67}{space 3} .6418991
{txt}{space 8}685  {c |}{col 14}{res}{space 2}-1.302381{col 26}{space 2} .7694494{col 37}{space 1}   -1.69{col 46}{space 3}0.091{col 54}{space 4}-2.811434{col 67}{space 3} .2066726
{txt}{space 8}686  {c |}{col 14}{res}{space 2}-.9649957{col 26}{space 2}  .803003{col 37}{space 1}   -1.20{col 46}{space 3}0.230{col 54}{space 4}-2.539855{col 67}{space 3} .6098634
{txt}{space 8}687  {c |}{col 14}{res}{space 2}-.8740424{col 26}{space 2} .8615952{col 37}{space 1}   -1.01{col 46}{space 3}0.310{col 54}{space 4}-2.563813{col 67}{space 3} .8157286
{txt}{space 8}688  {c |}{col 14}{res}{space 2}-1.107729{col 26}{space 2} .7974992{col 37}{space 1}   -1.39{col 46}{space 3}0.165{col 54}{space 4}-2.671794{col 67}{space 3} .4563362
{txt}{space 8}689  {c |}{col 14}{res}{space 2}-1.164991{col 26}{space 2} .8319499{col 37}{space 1}   -1.40{col 46}{space 3}0.162{col 54}{space 4}-2.796621{col 67}{space 3} .4666392
{txt}{space 8}690  {c |}{col 14}{res}{space 2}-1.579524{col 26}{space 2} .8123162{col 37}{space 1}   -1.94{col 46}{space 3}0.052{col 54}{space 4}-3.172649{col 67}{space 3} .0135998
{txt}{space 8}691  {c |}{col 14}{res}{space 2}-1.268225{col 26}{space 2} .8496512{col 37}{space 1}   -1.49{col 46}{space 3}0.136{col 54}{space 4}-2.934571{col 67}{space 3} .3981208
{txt}{space 8}692  {c |}{col 14}{res}{space 2}-1.013706{col 26}{space 2} .8171383{col 37}{space 1}   -1.24{col 46}{space 3}0.215{col 54}{space 4}-2.616287{col 67}{space 3} .5888759
{txt}{space 8}693  {c |}{col 14}{res}{space 2}-1.329179{col 26}{space 2} .8098501{col 37}{space 1}   -1.64{col 46}{space 3}0.101{col 54}{space 4}-2.917467{col 67}{space 3} .2591083
{txt}{space 8}694  {c |}{col 14}{res}{space 2}-1.112746{col 26}{space 2} .7933716{col 37}{space 1}   -1.40{col 46}{space 3}0.161{col 54}{space 4}-2.668716{col 67}{space 3} .4432235
{txt}{space 8}695  {c |}{col 14}{res}{space 2} -1.43393{col 26}{space 2} .8257665{col 37}{space 1}   -1.74{col 46}{space 3}0.083{col 54}{space 4}-3.053433{col 67}{space 3} .1855732
{txt}{space 8}696  {c |}{col 14}{res}{space 2}-1.333173{col 26}{space 2} .8249571{col 37}{space 1}   -1.62{col 46}{space 3}0.106{col 54}{space 4}-2.951088{col 67}{space 3} .2847431
{txt}{space 8}697  {c |}{col 14}{res}{space 2}-1.295984{col 26}{space 2} .8327446{col 37}{space 1}   -1.56{col 46}{space 3}0.120{col 54}{space 4}-2.929173{col 67}{space 3} .3372043
{txt}{space 8}698  {c |}{col 14}{res}{space 2}-1.364038{col 26}{space 2} .8390443{col 37}{space 1}   -1.63{col 46}{space 3}0.104{col 54}{space 4}-3.009581{col 67}{space 3} .2815059
{txt}{space 8}699  {c |}{col 14}{res}{space 2}-1.469494{col 26}{space 2} .8303236{col 37}{space 1}   -1.77{col 46}{space 3}0.077{col 54}{space 4}-3.097935{col 67}{space 3} .1589464
{txt}{space 8}700  {c |}{col 14}{res}{space 2}-1.193542{col 26}{space 2} .8218794{col 37}{space 1}   -1.45{col 46}{space 3}0.147{col 54}{space 4}-2.805422{col 67}{space 3}  .418338
{txt}{space 8}701  {c |}{col 14}{res}{space 2}-1.546048{col 26}{space 2} .8273234{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-3.168604{col 67}{space 3}  .076509
{txt}{space 8}702  {c |}{col 14}{res}{space 2} -1.49339{col 26}{space 2} .8464755{col 37}{space 1}   -1.76{col 46}{space 3}0.078{col 54}{space 4}-3.153508{col 67}{space 3} .1667276
{txt}{space 8}703  {c |}{col 14}{res}{space 2} -1.26793{col 26}{space 2} .8863673{col 37}{space 1}   -1.43{col 46}{space 3}0.153{col 54}{space 4}-3.006284{col 67}{space 3} .4704246
{txt}{space 8}704  {c |}{col 14}{res}{space 2}-1.019479{col 26}{space 2} .8183196{col 37}{space 1}   -1.25{col 46}{space 3}0.213{col 54}{space 4}-2.624377{col 67}{space 3} .5854191
{txt}{space 8}705  {c |}{col 14}{res}{space 2}-.7661938{col 26}{space 2} .8120919{col 37}{space 1}   -0.94{col 46}{space 3}0.346{col 54}{space 4}-2.358878{col 67}{space 3} .8264905
{txt}{space 8}706  {c |}{col 14}{res}{space 2}-.7793253{col 26}{space 2} .8354713{col 37}{space 1}   -0.93{col 46}{space 3}0.351{col 54}{space 4}-2.417862{col 67}{space 3} .8592111
{txt}{space 8}707  {c |}{col 14}{res}{space 2}-.6520963{col 26}{space 2}   .81541{col 37}{space 1}   -0.80{col 46}{space 3}0.424{col 54}{space 4}-2.251288{col 67}{space 3} .9470956
{txt}{space 8}708  {c |}{col 14}{res}{space 2}-.5050052{col 26}{space 2} .8771833{col 37}{space 1}   -0.58{col 46}{space 3}0.565{col 54}{space 4}-2.225348{col 67}{space 3} 1.215337
{txt}{space 8}709  {c |}{col 14}{res}{space 2}-.8868265{col 26}{space 2}  .880524{col 37}{space 1}   -1.01{col 46}{space 3}0.314{col 54}{space 4}-2.613721{col 67}{space 3} .8400678
{txt}{space 8}710  {c |}{col 14}{res}{space 2}-.8799218{col 26}{space 2} .8625562{col 37}{space 1}   -1.02{col 46}{space 3}0.308{col 54}{space 4}-2.571577{col 67}{space 3} .8117338
{txt}{space 8}711  {c |}{col 14}{res}{space 2}-1.067443{col 26}{space 2} .8684618{col 37}{space 1}   -1.23{col 46}{space 3}0.219{col 54}{space 4}-2.770681{col 67}{space 3} .6357943
{txt}{space 8}712  {c |}{col 14}{res}{space 2}-.9063205{col 26}{space 2} .8706786{col 37}{space 1}   -1.04{col 46}{space 3}0.298{col 54}{space 4}-2.613906{col 67}{space 3} .8012649
{txt}{space 8}713  {c |}{col 14}{res}{space 2}-.6225905{col 26}{space 2} .8622413{col 37}{space 1}   -0.72{col 46}{space 3}0.470{col 54}{space 4}-2.313628{col 67}{space 3} 1.068447
{txt}{space 8}714  {c |}{col 14}{res}{space 2}-1.170245{col 26}{space 2} .8895124{col 37}{space 1}   -1.32{col 46}{space 3}0.188{col 54}{space 4}-2.914768{col 67}{space 3} .5742771
{txt}{space 8}715  {c |}{col 14}{res}{space 2}-.9026522{col 26}{space 2} .8752432{col 37}{space 1}   -1.03{col 46}{space 3}0.303{col 54}{space 4} -2.61919{col 67}{space 3} .8138854
{txt}{space 8}716  {c |}{col 14}{res}{space 2}-1.036756{col 26}{space 2} .8641051{col 37}{space 1}   -1.20{col 46}{space 3}0.230{col 54}{space 4}-2.731449{col 67}{space 3} .6579371
{txt}{space 8}717  {c |}{col 14}{res}{space 2}-1.205537{col 26}{space 2} .8922481{col 37}{space 1}   -1.35{col 46}{space 3}0.177{col 54}{space 4}-2.955425{col 67}{space 3} .5443504
{txt}{space 8}718  {c |}{col 14}{res}{space 2}-.7557534{col 26}{space 2} .8604715{col 37}{space 1}   -0.88{col 46}{space 3}0.380{col 54}{space 4} -2.44332{col 67}{space 3} .9318135
{txt}{space 8}719  {c |}{col 14}{res}{space 2}-1.028254{col 26}{space 2}   .87829{col 37}{space 1}   -1.17{col 46}{space 3}0.242{col 54}{space 4}-2.750767{col 67}{space 3} .6942587
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.729965{col 26}{space 2} .1200192{col 37}{space 1}   14.41{col 46}{space 3}0.000{col 54}{space 4} 1.494582{col 67}{space 3} 1.965348
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-1.215473{col 26}{space 2} .3020561{col 37}{space 1}   -4.02{col 46}{space 3}0.000{col 54}{space 4}-1.807869{col 67}{space 3} -.623077
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-.2342647{col 26}{space 2}  .556658{col 37}{space 1}   -0.42{col 46}{space 3}0.674{col 54}{space 4}-1.325989{col 67}{space 3} .8574596
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-.7822047{col 26}{space 2} .3586191{col 37}{space 1}   -2.18{col 46}{space 3}0.029{col 54}{space 4}-1.485533{col 67}{space 3}-.0788765
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 1.382783{col 26}{space 2} .3534842{col 37}{space 1}    3.91{col 46}{space 3}0.000{col 54}{space 4}  .689525{col 67}{space 3}  2.07604
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-.7868958{col 26}{space 2}  .495071{col 37}{space 1}   -1.59{col 46}{space 3}0.112{col 54}{space 4}-1.757835{col 67}{space 3} .1840433
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 1.702084{col 26}{space 2} .4104833{col 37}{space 1}    4.15{col 46}{space 3}0.000{col 54}{space 4} .8970389{col 67}{space 3} 2.507129
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-1.993417{col 26}{space 2} .2430436{col 37}{space 1}   -8.20{col 46}{space 3}0.000{col 54}{space 4}-2.470077{col 67}{space 3}-1.516757
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-3.029136{col 26}{space 2} .3848262{col 37}{space 1}   -7.87{col 46}{space 3}0.000{col 54}{space 4}-3.783862{col 67}{space 3} -2.27441
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-.2326943{col 26}{space 2} .4485012{col 37}{space 1}   -0.52{col 46}{space 3}0.604{col 54}{space 4}  -1.1123{col 67}{space 3} .6469118
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}-.0278915{col 26}{space 2} .3028029{col 37}{space 1}   -0.09{col 46}{space 3}0.927{col 54}{space 4}-.6217522{col 67}{space 3} .5659693
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 3.598803{col 26}{space 2} .4640703{col 37}{space 1}    7.75{col 46}{space 3}0.000{col 54}{space 4} 2.688663{col 67}{space 3} 4.508943
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} 3.700856{col 26}{space 2} 1.212419{col 37}{space 1}    3.05{col 46}{space 3}0.002{col 54}{space 4} 1.323045{col 67}{space 3} 6.078666
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-24.11042{col 26}{space 2} 5.242763{col 37}{space 1}   -4.60{col 46}{space 3}0.000{col 54}{space 4}-34.39259{col 67}{space 3}-13.82825
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. 
. boottest {c -(}pre_72{c )-} {c -(}pre_71{c )-} {c -(}pre_70{c )-} ///
>                 {c -(}pre_69{c )-} {c -(}pre_68{c )-} {c -(}pre_67{c )-} {c -(}pre_66{c )-} {c -(}pre_65{c )-} {c -(}pre_64{c )-} {c -(}pre_63{c )-} {c -(}pre_62{c )-} {c -(}pre_61{c )-} {c -(}pre_60{c )-} ///
>                 {c -(}pre_59{c )-} {c -(}pre_58{c )-} {c -(}pre_57{c )-} {c -(}pre_56{c )-} {c -(}pre_55{c )-} {c -(}pre_54{c )-} {c -(}pre_53{c )-} {c -(}pre_52{c )-} {c -(}pre_51{c )-} {c -(}pre_50{c )-} ///
>                 {c -(}pre_49{c )-} {c -(}pre_48{c )-} {c -(}pre_47{c )-} {c -(}pre_46{c )-} {c -(}pre_45{c )-} {c -(}pre_44{c )-} {c -(}pre_43{c )-} {c -(}pre_42{c )-} {c -(}pre_41{c )-} {c -(}pre_40{c )-} ///
>                 {c -(}pre_39{c )-} {c -(}pre_38{c )-} {c -(}pre_37{c )-} {c -(}pre_36{c )-} {c -(}pre_35{c )-} {c -(}pre_34{c )-} {c -(}pre_33{c )-} {c -(}pre_32{c )-} {c -(}pre_31{c )-} {c -(}pre_30{c )-} ///
>                 {c -(}pre_29{c )-} {c -(}pre_28{c )-} {c -(}pre_27{c )-} {c -(}pre_26{c )-} {c -(}pre_25{c )-} {c -(}pre_24{c )-} {c -(}pre_23{c )-} {c -(}pre_22{c )-} {c -(}pre_21{c )-} {c -(}pre_20{c )-} ///
>                 {c -(}pre_19{c )-} {c -(}pre_18{c )-} {c -(}pre_17{c )-} {c -(}pre_16{c )-} {c -(}pre_15{c )-} {c -(}pre_14{c )-} {c -(}pre_13{c )-} {c -(}pre_12{c )-} {c -(}pre_11{c )-} {c -(}pre_10{c )-} ///
>                 {c -(}pre_9{c )-} {c -(}pre_8{c )-} {c -(}pre_7{c )-} {c -(}pre_6{c )-} {c -(}pre_5{c )-} {c -(}pre_4{c )-} {c -(}pre_3{c )-} {c -(}pre_2{c )-} {c -(}pre_1{c )-} ///
>                 {c -(}post_1{c )-} {c -(}post_2{c )-} {c -(}post_3{c )-} {c -(}post_4{c )-}  {c -(}post_5{c )-} {c -(}post_6{c )-} {c -(}post_7{c )-} {c -(}post_8{c )-} {c -(}post_9{c )-} ///
>                 {c -(}post_10{c )-} {c -(}post_11{c )-} {c -(}post_12{c )-} {c -(}post_13{c )-} {c -(}post_14{c )-} {c -(}post_15{c )-} {c -(}post_16{c )-} {c -(}post_17{c )-} {c -(}post_18{c )-} {c -(}post_19{c )-} ///
>                 {c -(}post_20{c )-} {c -(}post_21{c )-} {c -(}post_22{c )-} {c -(}post_23{c )-} {c -(}post_24{c )-} {c -(}post_25{c )-} {c -(}post_26{c )-} {c -(}post_27{c )-} {c -(}post_28{c )-} {c -(}post_29{c )-} ///
>                 {c -(}post_30{c )-} {c -(}post_31{c )-} {c -(}post_32{c )-} {c -(}post_33{c )-} {c -(}post_34{c )-} {c -(}post_35{c )-} {c -(}post_36{c )-} {c -(}post_37{c )-} {c -(}post_38{c )-} {c -(}post_39{c )-} ///
>                 {c -(}post_40{c )-} {c -(}post_41{c )-} {c -(}post_42{c )-} {c -(}post_43{c )-} {c -(}post_44{c )-} {c -(}post_45{c )-} {c -(}post_46{c )-} {c -(}post_47{c )-} {c -(}post_48{c )-} {c -(}post_49{c )-} ///
>                 {c -(}post_50{c )-} {c -(}post_51{c )-} {c -(}post_52{c )-} {c -(}post_53{c )-} {c -(}post_54{c )-} {c -(}post_55{c )-} {c -(}post_56{c )-} {c -(}post_57{c )-} {c -(}post_58{c )-} {c -(}post_59{c )-} ///
>                 {c -(}post_60{c )-} {c -(}post_61{c )-} {c -(}post_62{c )-} {c -(}post_63{c )-} {c -(}post_64{c )-} {c -(}post_65{c )-} {c -(}post_66{c )-} {c -(}post_67{c )-} {c -(}post_68{c )-} {c -(}post_69{c )-} ///
>                 {c -(}post_70{c )-} {c -(}post_71{c )-} {c -(}post_72{c )-} ///
>                 , reps(9999) gridpoints(10) boottype(wild)  bootcluster(region1 date) nograph seed(123)
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_72

{txt}{col 26}t(1902) = {res}   -0.3885
{col 25}{txt}Prob>|t| = {res}    0.6957

95%{txt} confidence set for null hypothesis expression: [{res}-1.612{txt}, {res}1.083{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_71

{txt}{col 26}t(1902) = {res}   -1.4241
{col 25}{txt}Prob>|t| = {res}    0.1444

95%{txt} confidence set for null hypothesis expression: [{res}-1.671{txt}, {res}.3251{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_70

{txt}{col 26}t(1902) = {res}   -1.3853
{col 25}{txt}Prob>|t| = {res}    0.1596

95%{txt} confidence set for null hypothesis expression: [{res}-1.707{txt}, {res}.3354{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_69

{txt}{col 26}t(1902) = {res}   -0.8785
{col 25}{txt}Prob>|t| = {res}    0.3899

95%{txt} confidence set for null hypothesis expression: [{res}-1.815{txt}, {res}.912{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_68

{txt}{col 26}t(1902) = {res}   -1.6506
{col 25}{txt}Prob>|t| = {res}    0.1038

95%{txt} confidence set for null hypothesis expression: [{res}-1.784{txt}, {res}.226{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_67

{txt}{col 26}t(1902) = {res}   -1.1862
{col 25}{txt}Prob>|t| = {res}    0.2345

95%{txt} confidence set for null hypothesis expression: [{res}-2.106{txt}, {res}.5186{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_66

{txt}{col 26}t(1902) = {res}   -1.4882
{col 25}{txt}Prob>|t| = {res}    0.1423

95%{txt} confidence set for null hypothesis expression: [{res}-1.906{txt}, {res}.3288{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_65

{txt}{col 26}t(1902) = {res}   -1.7445
{col 25}{txt}Prob>|t| = {res}    0.0795

95%{txt} confidence set for null hypothesis expression: [{res}-1.737{txt}, {res}.109{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_64

{txt}{col 26}t(1902) = {res}   -0.4747
{col 25}{txt}Prob>|t| = {res}    0.6378

95%{txt} confidence set for null hypothesis expression: [{res}-1.322{txt}, {res}.8078{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_63

{txt}{col 26}t(1902) = {res}   -1.7550
{col 25}{txt}Prob>|t| = {res}    0.1084

95%{txt} confidence set for null hypothesis expression: [{res}-2.504{txt}, {res}.3312{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_62

{txt}{col 26}t(1902) = {res}   -1.0776
{col 25}{txt}Prob>|t| = {res}    0.2801

95%{txt} confidence set for null hypothesis expression: [{res}-1.897{txt}, {res}.5258{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_61

{txt}{col 26}t(1902) = {res}   -1.7575
{col 25}{txt}Prob>|t| = {res}    0.0902

95%{txt} confidence set for null hypothesis expression: [{res}-1.729{txt}, {res}.1911{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_60

{txt}{col 26}t(1902) = {res}   -0.2062
{col 25}{txt}Prob>|t| = {res}    0.8278

95%{txt} confidence set for null hypothesis expression: [{res}-1.268{txt}, {res}.9859{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_59

{txt}{col 26}t(1902) = {res}   -2.0529
{col 25}{txt}Prob>|t| = {res}    0.0586

95%{txt} confidence set for null hypothesis expression: [{res}-2.442{txt}, {res}.05309{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_58

{txt}{col 26}t(1902) = {res}   -0.7770
{col 25}{txt}Prob>|t| = {res}    0.4875

95%{txt} confidence set for null hypothesis expression: [{res}-2.097{txt}, {res}1.185{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_57

{txt}{col 26}t(1902) = {res}   -0.2908
{col 25}{txt}Prob>|t| = {res}    0.7697

95%{txt} confidence set for null hypothesis expression: [{res}-1.334{txt}, {res}.9406{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_56

{txt}{col 26}t(1902) = {res}   -0.9973
{col 25}{txt}Prob>|t| = {res}    0.2908

95%{txt} confidence set for null hypothesis expression: [{res}-1.661{txt}, {res}.5395{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_55

{txt}{col 26}t(1902) = {res}    0.3406
{col 25}{txt}Prob>|t| = {res}    0.7388

95%{txt} confidence set for null hypothesis expression: [{res}-1.029{txt}, {res}1.233{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_54

{txt}{col 26}t(1902) = {res}    0.5357
{col 25}{txt}Prob>|t| = {res}    0.6027

95%{txt} confidence set for null hypothesis expression: [{res}-.8897{txt}, {res}1.294{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_53

{txt}{col 26}t(1902) = {res}    0.5716
{col 25}{txt}Prob>|t| = {res}    0.5592

95%{txt} confidence set for null hypothesis expression: [{res}-.8567{txt}, {res}1.403{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_52

{txt}{col 26}t(1902) = {res}   -0.2504
{col 25}{txt}Prob>|t| = {res}    0.8003

95%{txt} confidence set for null hypothesis expression: [{res}-1.296{txt}, {res}1.008{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_51

{txt}{col 26}t(1902) = {res}   -0.0214
{col 25}{txt}Prob>|t| = {res}    0.9828

95%{txt} confidence set for null hypothesis expression: [{res}-1.103{txt}, {res}.9489{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_50

{txt}{col 26}t(1902) = {res}    0.4076
{col 25}{txt}Prob>|t| = {res}    0.6739

95%{txt} confidence set for null hypothesis expression: [{res}-.8047{txt}, {res}1.042{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_49

{txt}{col 26}t(1902) = {res}   -0.3100
{col 25}{txt}Prob>|t| = {res}    0.7545

95%{txt} confidence set for null hypothesis expression: [{res}-1.403{txt}, {res}1.078{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_48

{txt}{col 26}t(1902) = {res}   -0.1948
{col 25}{txt}Prob>|t| = {res}    0.8476

95%{txt} confidence set for null hypothesis expression: [{res}-1.122{txt}, {res}.9329{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_47

{txt}{col 26}t(1902) = {res}   -0.2901
{col 25}{txt}Prob>|t| = {res}    0.7688

95%{txt} confidence set for null hypothesis expression: [{res}-1.255{txt}, {res}.9166{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_46

{txt}{col 26}t(1902) = {res}    0.3783
{col 25}{txt}Prob>|t| = {res}    0.7037

95%{txt} confidence set for null hypothesis expression: [{res}-.9169{txt}, {res}1.101{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_45

{txt}{col 26}t(1902) = {res}   -0.6472
{col 25}{txt}Prob>|t| = {res}    0.5159

95%{txt} confidence set for null hypothesis expression: [{res}-1.576{txt}, {res}.7482{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_44

{txt}{col 26}t(1902) = {res}    0.4415
{col 25}{txt}Prob>|t| = {res}    0.6447

95%{txt} confidence set for null hypothesis expression: [{res}-1.006{txt}, {res}1.33{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_43

{txt}{col 26}t(1902) = {res}    0.1967
{col 25}{txt}Prob>|t| = {res}    0.8409

95%{txt} confidence set for null hypothesis expression: [{res}-1.202{txt}, {res}1.252{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_42

{txt}{col 26}t(1902) = {res}   -0.5075
{col 25}{txt}Prob>|t| = {res}    0.6027

95%{txt} confidence set for null hypothesis expression: [{res}-1.456{txt}, {res}.7874{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_41

{txt}{col 26}t(1902) = {res}    0.8203
{col 25}{txt}Prob>|t| = {res}    0.4260

95%{txt} confidence set for null hypothesis expression: [{res}-.9224{txt}, {res}1.763{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_40

{txt}{col 26}t(1902) = {res}   -0.6633
{col 25}{txt}Prob>|t| = {res}    0.5133

95%{txt} confidence set for null hypothesis expression: [{res}-1.575{txt}, {res}.8316{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_39

{txt}{col 26}t(1902) = {res}   -0.6322
{col 25}{txt}Prob>|t| = {res}    0.5087

95%{txt} confidence set for null hypothesis expression: [{res}-1.341{txt}, {res}.6501{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_38

{txt}{col 26}t(1902) = {res}   -0.0415
{col 25}{txt}Prob>|t| = {res}    0.9644

95%{txt} confidence set for null hypothesis expression: [{res}-1.378{txt}, {res}1.08{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_37

{txt}{col 26}t(1902) = {res}   -0.2831
{col 25}{txt}Prob>|t| = {res}    0.7721

95%{txt} confidence set for null hypothesis expression: [{res}-1.331{txt}, {res}1.002{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_36

{txt}{col 26}t(1902) = {res}    0.7410
{col 25}{txt}Prob>|t| = {res}    0.4672

95%{txt} confidence set for null hypothesis expression: [{res}-.8812{txt}, {res}1.525{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_35

{txt}{col 26}t(1902) = {res}    0.0932
{col 25}{txt}Prob>|t| = {res}    0.9257

95%{txt} confidence set for null hypothesis expression: [{res}-1.31{txt}, {res}1.285{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_34

{txt}{col 26}t(1902) = {res}   -0.3637
{col 25}{txt}Prob>|t| = {res}    0.7040

95%{txt} confidence set for null hypothesis expression: [{res}-1.244{txt}, {res}.8357{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_33

{txt}{col 26}t(1902) = {res}    0.3470
{col 25}{txt}Prob>|t| = {res}    0.7256

95%{txt} confidence set for null hypothesis expression: [{res}-1.005{txt}, {res}1.202{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_32

{txt}{col 26}t(1902) = {res}    1.0686
{col 25}{txt}Prob>|t| = {res}    0.2946

95%{txt} confidence set for null hypothesis expression: [{res}-.5903{txt}, {res}1.636{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_31

{txt}{col 26}t(1902) = {res}    0.3629
{col 25}{txt}Prob>|t| = {res}    0.7141

95%{txt} confidence set for null hypothesis expression: [{res}-1.112{txt}, {res}1.524{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_30

{txt}{col 26}t(1902) = {res}    0.1558
{col 25}{txt}Prob>|t| = {res}    0.8712

95%{txt} confidence set for null hypothesis expression: [{res}-1.009{txt}, {res}1.112{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_29

{txt}{col 26}t(1902) = {res}    0.2261
{col 25}{txt}Prob>|t| = {res}    0.8375

95%{txt} confidence set for null hypothesis expression: [{res}-1.012{txt}, {res}1.228{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_28

{txt}{col 26}t(1902) = {res}    0.6987
{col 25}{txt}Prob>|t| = {res}    0.4845

95%{txt} confidence set for null hypothesis expression: [{res}-.7764{txt}, {res}1.34{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_27

{txt}{col 26}t(1902) = {res}   -0.0504
{col 25}{txt}Prob>|t| = {res}    0.9599

95%{txt} confidence set for null hypothesis expression: [{res}-1.591{txt}, {res}1.433{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_26

{txt}{col 26}t(1902) = {res}    0.1375
{col 25}{txt}Prob>|t| = {res}    0.8908

95%{txt} confidence set for null hypothesis expression: [{res}-1.124{txt}, {res}1.186{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_25

{txt}{col 26}t(1902) = {res}    0.7199
{col 25}{txt}Prob>|t| = {res}    0.4761

95%{txt} confidence set for null hypothesis expression: [{res}-.9039{txt}, {res}1.701{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_24

{txt}{col 26}t(1902) = {res}    0.4273
{col 25}{txt}Prob>|t| = {res}    0.6614

95%{txt} confidence set for null hypothesis expression: [{res}-.8591{txt}, {res}1.199{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_23

{txt}{col 26}t(1902) = {res}   -0.1218
{col 25}{txt}Prob>|t| = {res}    0.9012

95%{txt} confidence set for null hypothesis expression: [{res}-1.329{txt}, {res}1.121{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_22

{txt}{col 26}t(1902) = {res}    0.0989
{col 25}{txt}Prob>|t| = {res}    0.9200

95%{txt} confidence set for null hypothesis expression: [{res}-.9953{txt}, {res}1.042{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_21

{txt}{col 26}t(1902) = {res}    0.1805
{col 25}{txt}Prob>|t| = {res}    0.8565

95%{txt} confidence set for null hypothesis expression: [{res}-1.211{txt}, {res}1.476{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_20

{txt}{col 26}t(1902) = {res}   -1.0752
{col 25}{txt}Prob>|t| = {res}    0.2902

95%{txt} confidence set for null hypothesis expression: [{res}-1.955{txt}, {res}.536{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_19

{txt}{col 26}t(1902) = {res}   -0.3717
{col 25}{txt}Prob>|t| = {res}    0.7024

95%{txt} confidence set for null hypothesis expression: [{res}-1.113{txt}, {res}.7391{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_18

{txt}{col 26}t(1902) = {res}    0.7505
{col 25}{txt}Prob>|t| = {res}    0.4560

95%{txt} confidence set for null hypothesis expression: [{res}-.8852{txt}, {res}1.595{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_17

{txt}{col 26}t(1902) = {res}    0.6558
{col 25}{txt}Prob>|t| = {res}    0.5110

95%{txt} confidence set for null hypothesis expression: [{res}-.7937{txt}, {res}1.273{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_16

{txt}{col 26}t(1902) = {res}    0.0319
{col 25}{txt}Prob>|t| = {res}    0.9743

95%{txt} confidence set for null hypothesis expression: [{res}-1.252{txt}, {res}1.152{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_15

{txt}{col 26}t(1902) = {res}    0.5223
{col 25}{txt}Prob>|t| = {res}    0.5988

95%{txt} confidence set for null hypothesis expression: [{res}-.9624{txt}, {res}1.622{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_14

{txt}{col 26}t(1902) = {res}    0.1697
{col 25}{txt}Prob>|t| = {res}    0.8620

95%{txt} confidence set for null hypothesis expression: [{res}-1.104{txt}, {res}1.15{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_13

{txt}{col 26}t(1902) = {res}    0.2902
{col 25}{txt}Prob>|t| = {res}    0.7672

95%{txt} confidence set for null hypothesis expression: [{res}-1.156{txt}, {res}1.5{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_12

{txt}{col 26}t(1902) = {res}    0.6233
{col 25}{txt}Prob>|t| = {res}    0.5362

95%{txt} confidence set for null hypothesis expression: [{res}-.8517{txt}, {res}1.565{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_11

{txt}{col 26}t(1902) = {res}    2.3653
{col 25}{txt}Prob>|t| = {res}    0.0282

95%{txt} confidence set for null hypothesis expression: [{res}.1607{txt}, {res}1.923{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_10

{txt}{col 26}t(1902) = {res}    0.3436
{col 25}{txt}Prob>|t| = {res}    0.7361

95%{txt} confidence set for null hypothesis expression: [{res}-.9428{txt}, {res}1.245{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_9

{txt}{col 26}t(1902) = {res}    1.2812
{col 25}{txt}Prob>|t| = {res}    0.1979

95%{txt} confidence set for null hypothesis expression: [{res}-.4631{txt}, {res}1.916{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_8

{txt}{col 26}t(1902) = {res}    1.2105
{col 25}{txt}Prob>|t| = {res}    0.2340

95%{txt} confidence set for null hypothesis expression: [{res}-.564{txt}, {res}1.766{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_7

{txt}{col 26}t(1902) = {res}   -0.5144
{col 25}{txt}Prob>|t| = {res}    0.6088

95%{txt} confidence set for null hypothesis expression: [{res}-1.5{txt}, {res}.952{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_6

{txt}{col 26}t(1902) = {res}    1.7351
{col 25}{txt}Prob>|t| = {res}    0.1055

95%{txt} confidence set for null hypothesis expression: [{res}-.3022{txt}, {res}2.001{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_5

{txt}{col 26}t(1902) = {res}    0.1729
{col 25}{txt}Prob>|t| = {res}    0.8577

95%{txt} confidence set for null hypothesis expression: [{res}-.9739{txt}, {res}1.126{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_4

{txt}{col 26}t(1902) = {res}   -0.0040
{col 25}{txt}Prob>|t| = {res}    0.9966

95%{txt} confidence set for null hypothesis expression: [{res}-1.161{txt}, {res}1.157{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_3

{txt}{col 26}t(1902) = {res}    1.9463
{col 25}{txt}Prob>|t| = {res}    0.0707

95%{txt} confidence set for null hypothesis expression: [{res}-.1174{txt}, {res}2.105{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_2

{txt}{col 26}t(1902) = {res}    1.4103
{col 25}{txt}Prob>|t| = {res}    0.1886

95%{txt} confidence set for null hypothesis expression: [{res}-.4875{txt}, {res}1.927{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_1

{txt}{col 26}t(1902) = {res}    0.3532
{col 25}{txt}Prob>|t| = {res}    0.7231

95%{txt} confidence set for null hypothesis expression: [{res}-.8742{txt}, {res}1.153{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_1

{txt}{col 26}t(1902) = {res}   -3.6351
{col 25}{txt}Prob>|t| = {res}    0.0020

95%{txt} confidence set for null hypothesis expression: [{res}-3.266{txt}, {res}-1.212{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_2

{txt}{col 26}t(1902) = {res}   -4.4478
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.388{txt}, {res}-1.716{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_3

{txt}{col 26}t(1902) = {res}   -4.6542
{col 25}{txt}Prob>|t| = {res}    0.0003

95%{txt} confidence set for null hypothesis expression: [{res}-3.298{txt}, {res}-1.716{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_4

{txt}{col 26}t(1902) = {res}   -4.6252
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-4.054{txt}, {res}-2.195{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_5

{txt}{col 26}t(1902) = {res}   -4.1313
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-4.808{txt}, {res}-2.17{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_6

{txt}{col 26}t(1902) = {res}   -4.7293
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-5.118{txt}, {res}-2.778{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_7

{txt}{col 26}t(1902) = {res}   -3.6829
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-4.932{txt}, {res}-1.965{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_8

{txt}{col 26}t(1902) = {res}   -4.9441
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.73{txt}, {res}-2.079{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_9

{txt}{col 26}t(1902) = {res}   -4.6220
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.211{txt}, {res}-1.711{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_10

{txt}{col 26}t(1902) = {res}   -5.8074
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.318{txt}, {res}-2.13{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_11

{txt}{col 26}t(1902) = {res}   -5.3632
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-4.202{txt}, {res}-2.621{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_12

{txt}{col 26}t(1902) = {res}   -4.8438
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-3.052{txt}, {res}-1.674{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_13

{txt}{col 26}t(1902) = {res}   -4.0254
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}-4.364{txt}, {res}-1.878{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_14

{txt}{col 26}t(1902) = {res}   -5.3419
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-3.34{txt}, {res}-2.039{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_15

{txt}{col 26}t(1902) = {res}   -4.8789
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.505{txt}, {res}-1.96{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_16

{txt}{col 26}t(1902) = {res}   -5.6276
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.131{txt}, {res}-1.979{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_17

{txt}{col 26}t(1902) = {res}   -5.1039
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-3.996{txt}, {res}-2.301{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_18

{txt}{col 26}t(1902) = {res}   -2.4698
{col 25}{txt}Prob>|t| = {res}    0.0032

95%{txt} confidence set for null hypothesis expression: [{res}-6.875{txt}, {res}-1.312{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_19

{txt}{col 26}t(1902) = {res}   -5.7533
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.067{txt}, {res}-1.983{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_20

{txt}{col 26}t(1902) = {res}   -2.9756
{col 25}{txt}Prob>|t| = {res}    0.0052

95%{txt} confidence set for null hypothesis expression: [{res}-3.969{txt}, {res}-.9273{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_21

{txt}{col 26}t(1902) = {res}   -3.4766
{col 25}{txt}Prob>|t| = {res}    0.0010

95%{txt} confidence set for null hypothesis expression: [{res}-3.127{txt}, {res}-1.164{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_22

{txt}{col 26}t(1902) = {res}   -4.3519
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.599{txt}, {res}-1.816{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_23

{txt}{col 26}t(1902) = {res}   -4.6834
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}-3.829{txt}, {res}-1.977{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_24

{txt}{col 26}t(1902) = {res}   -4.4148
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}-4.01{txt}, {res}-1.911{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_25

{txt}{col 26}t(1902) = {res}   -3.9692
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.311{txt}, {res}-1.528{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_26

{txt}{col 26}t(1902) = {res}   -3.6574
{col 25}{txt}Prob>|t| = {res}    0.0016

95%{txt} confidence set for null hypothesis expression: [{res}-2.667{txt}, {res}-1.032{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_27

{txt}{col 26}t(1902) = {res}   -5.9464
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-2.917{txt}, {res}-1.947{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_28

{txt}{col 26}t(1902) = {res}   -5.2623
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.602{txt}, {res}-2.187{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_29

{txt}{col 26}t(1902) = {res}   -3.7111
{col 25}{txt}Prob>|t| = {res}    0.0008

95%{txt} confidence set for null hypothesis expression: [{res}-3.328{txt}, {res}-1.38{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_30

{txt}{col 26}t(1902) = {res}   -4.7712
{col 25}{txt}Prob>|t| = {res}    0.0007

95%{txt} confidence set for null hypothesis expression: [{res}-3.941{txt}, {res}-2.069{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_31

{txt}{col 26}t(1902) = {res}   -3.4253
{col 25}{txt}Prob>|t| = {res}    0.0040

95%{txt} confidence set for null hypothesis expression: [{res}-3.743{txt}, {res}-1.112{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_32

{txt}{col 26}t(1902) = {res}   -4.2209
{col 25}{txt}Prob>|t| = {res}    0.0008

95%{txt} confidence set for null hypothesis expression: [{res}-3.453{txt}, {res}-1.57{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_33

{txt}{col 26}t(1902) = {res}   -3.8349
{col 25}{txt}Prob>|t| = {res}    0.0006

95%{txt} confidence set for null hypothesis expression: [{res}-3.146{txt}, {res}-1.258{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_34

{txt}{col 26}t(1902) = {res}   -3.9018
{col 25}{txt}Prob>|t| = {res}    0.0006

95%{txt} confidence set for null hypothesis expression: [{res}-3.27{txt}, {res}-1.393{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_35

{txt}{col 26}t(1902) = {res}   -3.3898
{col 25}{txt}Prob>|t| = {res}    0.0043

95%{txt} confidence set for null hypothesis expression: [{res}-2.531{txt}, {res}-.804{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_36

{txt}{col 26}t(1902) = {res}   -4.0086
{col 25}{txt}Prob>|t| = {res}    0.0005

95%{txt} confidence set for null hypothesis expression: [{res}-3.552{txt}, {res}-1.566{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_37

{txt}{col 26}t(1902) = {res}   -4.1051
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}-3.412{txt}, {res}-1.487{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_38

{txt}{col 26}t(1902) = {res}   -6.8809
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-2.908{txt}, {res}-2.16{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_39

{txt}{col 26}t(1902) = {res}   -4.5083
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-3.169{txt}, {res}-1.641{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_40

{txt}{col 26}t(1902) = {res}   -4.7715
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.547{txt}, {res}-1.967{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_41

{txt}{col 26}t(1902) = {res}   -6.0426
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.004{txt}, {res}-2.014{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_42

{txt}{col 26}t(1902) = {res}   -1.9949
{col 25}{txt}Prob>|t| = {res}    0.0768

95%{txt} confidence set for null hypothesis expression: [{res}-2.583{txt}, {res}.2204{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_43

{txt}{col 26}t(1902) = {res}   -3.3432
{col 25}{txt}Prob>|t| = {res}    0.0035

95%{txt} confidence set for null hypothesis expression: [{res}-4.008{txt}, {res}-1.125{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_44

{txt}{col 26}t(1902) = {res}   -4.7190
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.855{txt}, {res}-2.143{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_45

{txt}{col 26}t(1902) = {res}   -4.3957
{col 25}{txt}Prob>|t| = {res}    0.0007

95%{txt} confidence set for null hypothesis expression: [{res}-2.478{txt}, {res}-1.217{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_46

{txt}{col 26}t(1902) = {res}   -6.0475
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.126{txt}, {res}-2.085{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_47

{txt}{col 26}t(1902) = {res}   -2.9322
{col 25}{txt}Prob>|t| = {res}    0.0110

95%{txt} confidence set for null hypothesis expression: [{res}-3.109{txt}, {res}-.5789{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_48

{txt}{col 26}t(1902) = {res}   -5.5230
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.098{txt}, {res}-1.926{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_49

{txt}{col 26}t(1902) = {res}   -3.4766
{col 25}{txt}Prob>|t| = {res}    0.0008

95%{txt} confidence set for null hypothesis expression: [{res}-3.881{txt}, {res}-1.305{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_50

{txt}{col 26}t(1902) = {res}   -3.3602
{col 25}{txt}Prob>|t| = {res}    0.0013

95%{txt} confidence set for null hypothesis expression: [{res}-3.573{txt}, {res}-1.151{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_51

{txt}{col 26}t(1902) = {res}   -2.2434
{col 25}{txt}Prob>|t| = {res}    0.1356

95%{txt} confidence set for null hypothesis expression: [{res}-4.307{txt}, {res}2.301{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_52

{txt}{col 26}t(1902) = {res}   -4.4434
{col 25}{txt}Prob>|t| = {res}    0.0027

95%{txt} confidence set for null hypothesis expression: [{res}-2.988{txt}, {res}-1.506{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_53

{txt}{col 26}t(1902) = {res}   -3.1053
{col 25}{txt}Prob>|t| = {res}    0.0050

95%{txt} confidence set for null hypothesis expression: [{res}-3.169{txt}, {res}-.8206{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_54

{txt}{col 26}t(1902) = {res}   -4.8868
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-3.75{txt}, {res}-2.147{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_55

{txt}{col 26}t(1902) = {res}   -4.0465
{col 25}{txt}Prob>|t| = {res}    0.0008

95%{txt} confidence set for null hypothesis expression: [{res}-3.191{txt}, {res}-1.431{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_56

{txt}{col 26}t(1902) = {res}   -3.2724
{col 25}{txt}Prob>|t| = {res}    0.0099

95%{txt} confidence set for null hypothesis expression: [{res}-2.71{txt}, {res}-.6986{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_57

{txt}{col 26}t(1902) = {res}   -3.0073
{col 25}{txt}Prob>|t| = {res}    0.0093

95%{txt} confidence set for null hypothesis expression: [{res}-3.072{txt}, {res}-.5954{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_58

{txt}{col 26}t(1902) = {res}   -4.4008
{col 25}{txt}Prob>|t| = {res}    0.0031

95%{txt} confidence set for null hypothesis expression: [{res}-2.592{txt}, {res}-1.292{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_59

{txt}{col 26}t(1902) = {res}   -4.0761
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}-3.214{txt}, {res}-1.535{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_60

{txt}{col 26}t(1902) = {res}   -2.3815
{col 25}{txt}Prob>|t| = {res}    0.0677

95%{txt} confidence set for null hypothesis expression: [{res}-2.489{txt}, {res}.2113{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_61

{txt}{col 26}t(1902) = {res}   -3.8447
{col 25}{txt}Prob>|t| = {res}    0.0007

95%{txt} confidence set for null hypothesis expression: [{res}-3.116{txt}, {res}-1.328{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_62

{txt}{col 26}t(1902) = {res}   -4.1167
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-4.101{txt}, {res}-2.056{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_63

{txt}{col 26}t(1902) = {res}   -2.7697
{col 25}{txt}Prob>|t| = {res}    0.0202

95%{txt} confidence set for null hypothesis expression: [{res}-3.062{txt}, {res}-.4476{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_64

{txt}{col 26}t(1902) = {res}   -4.0226
{col 25}{txt}Prob>|t| = {res}    0.0023

95%{txt} confidence set for null hypothesis expression: [{res}-2.658{txt}, {res}-1.204{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_65

{txt}{col 26}t(1902) = {res}   -4.7557
{col 25}{txt}Prob>|t| = {res}    0.0010

95%{txt} confidence set for null hypothesis expression: [{res}-2.782{txt}, {res}-1.529{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_66

{txt}{col 26}t(1902) = {res}   -4.2793
{col 25}{txt}Prob>|t| = {res}    0.0005

95%{txt} confidence set for null hypothesis expression: [{res}-3.198{txt}, {res}-1.618{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_67

{txt}{col 26}t(1902) = {res}   -4.2879
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-4.92{txt}, {res}-2.406{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_68

{txt}{col 26}t(1902) = {res}   -5.1404
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-4.007{txt}, {res}-2.548{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_69

{txt}{col 26}t(1902) = {res}   -3.2753
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-6.767{txt}, {res}-2.523{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_70

{txt}{col 26}t(1902) = {res}   -4.3605
{col 25}{txt}Prob>|t| = {res}    0.0019

95%{txt} confidence set for null hypothesis expression: [{res}-2.817{txt}, {res}-1.348{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_71

{txt}{col 26}t(1902) = {res}   -3.0283
{col 25}{txt}Prob>|t| = {res}    0.0633

95%{txt} confidence set for null hypothesis expression: [{res}-3.205{txt}, {res}.2846{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_72

{txt}{col 26}t(1902) = {res}   -3.5590
{col 25}{txt}Prob>|t| = {res}    0.0125

95%{txt} confidence set for null hypothesis expression: [{res}-3.674{txt}, {res}-.855{txt}]
{res}{txt}
{com}. 
. 
. ** These are too many coefficients to report and I like to create my own coeffient plot
. ** Here is the code:
. 
. * Pull coefficients into matrix:
. mat beta=e(b)
{txt}
{com}. 
. ** Average Treatment Effects:
. mat A = beta[1,82..225]
{txt}
{com}. 
. mat pre= A[1,1..72]
{txt}
{com}. mat post= A[1,73..144]
{txt}
{com}. 
. * Need to set the reference month at 0:
. mat pre_post=(pre, 0, post)
{txt}
{com}. mat list pre_post
{res}
{txt}pre_post[1,145]
        pre_72      pre_71      pre_70      pre_69      pre_68      pre_67      pre_66      pre_65      pre_64      pre_63      pre_62      pre_61      pre_60
y1 {res} -.22359392  -.67374738  -.66862357  -.51776934  -.79683212  -.62782211  -.76590287  -.79333613  -.22196725  -1.1211261  -.59062371  -.80908544  -.10537995

{txt}        pre_59      pre_58      pre_57      pre_56      pre_55      pre_54      pre_53      pre_52      pre_51      pre_50      pre_49      pre_48      pre_47
y1 {res} -1.2392509  -.51407526   -.1481885  -.52077981   .16786765   .26173335   .29115792  -.13254887  -.00945136   .17203851  -.16734087  -.08833578    -.141304

{txt}        pre_46      pre_45      pre_44      pre_43      pre_42      pre_41      pre_40      pre_39      pre_38      pre_37      pre_36      pre_35      pre_34
y1 {res}  .17011028  -.33207238    .2341964   .10555959  -.25228652   .49644408  -.34268752  -.28807652  -.02194104  -.14232253   .37979245   .05143322  -.17066993

{txt}        pre_33      pre_32      pre_31      pre_30      pre_29      pre_28      pre_27      pre_26      pre_25      pre_24      pre_23      pre_22      pre_21
y1 {res}   .1683827   .55774407   .21758839   .07911535    .1047693   .34923999  -.03234182   .06609937   .41495216   .20222548  -.07000028   .04533835   .10264953

{txt}        pre_20      pre_19      pre_18      pre_17      pre_16      pre_15      pre_14      pre_13      pre_12      pre_11      pre_10       pre_9       pre_8
y1 {res} -.62965925  -.15119361   .39875552   .30170036   .01649469   .30627071   .08289105   .16443577    .3496447   1.1038652   .16661764   .75256506   .65198045

{txt}         pre_7       pre_6       pre_5       pre_4       pre_3       pre_2       pre_1         c73      post_1      post_2      post_3      post_4      post_5
y1 {res} -.26852891   .92285068   .08276025  -.00204059   1.0216139   .76286194   .15908008           0  -2.2415328  -2.5284336  -2.5286417   -3.074612  -3.4292788

{txt}        post_6      post_7      post_8      post_9     post_10     post_11     post_12     post_13     post_14     post_15     post_16     post_17     post_18
y1 {res} -3.9213616  -3.3619602  -2.9059438  -2.4417564  -2.7037897  -3.3748166  -2.3653654  -3.1272863  -2.6804854  -2.7201412  -2.5439827  -3.1490655  -3.7996353

{txt}       post_19     post_20     post_21     post_22     post_23     post_24     post_25     post_26     post_27     post_28     post_29     post_30     post_31
y1 {res} -2.5215445  -2.4273533   -2.133586  -2.6773285  -2.9042239  -2.9663456  -2.3936218  -1.8356321  -2.4371865   -2.906504  -2.3685787  -3.0391774  -2.4625045

{txt}       post_32     post_33     post_34     post_35     post_36     post_37     post_38     post_39     post_40     post_41     post_42     post_43     post_44
y1 {res} -2.5471677  -2.1829808  -2.3133374  -1.6613861  -2.5479022  -2.4393547  -2.5409858   -2.390401  -2.7439575  -2.5068898  -1.2258097  -2.5444726  -2.9826848

{txt}       post_45     post_46     post_47     post_48     post_49     post_50     post_51     post_52     post_53     post_54     post_55     post_56     post_57
y1 {res} -1.8438302  -2.6117772  -1.8494403  -2.5199516  -2.5722028  -2.3283032  -2.2672186  -2.2995127  -1.9575192  -2.9797203  -2.3666676   -1.803848  -1.9499195

{txt}       post_58     post_59     post_60     post_61     post_62     post_63     post_64     post_65     post_66     post_67     post_68     post_69     post_70
y1 {res} -1.9693415  -2.3755869  -1.3976732  -2.2619459  -3.0674015  -1.8724104  -1.9317533  -2.1531236  -2.3899008  -3.7380772  -3.2472093  -4.4935986   -2.132965

{txt}       post_71     post_72
y1 {res} -2.0594317   -2.548675
{reset}
{com}. 
. 
. ** Create a counter column:
. mat Z=J(1,145,0)
{txt}
{com}. local j=1
{txt}
{com}. forvalues i=-72/72 {c -(}
{txt}  2{com}. mat Z[1,`j'] = `i'
{txt}  3{com}. local j=`j'+1
{txt}  4{com}. {c )-}
{txt}
{com}. 
. ** Grab the confidence intervals and append them together:
. mat CI=r(CI_1)
{txt}
{com}. mat missing=J(1,2,.)
{txt}
{com}. forvalues i=2/72 {c -(}
{txt}  2{com}. capture confirm mat r(CI_`i')
{txt}  3{com}. if !_rc {c -(}
{txt}  4{com}. mat temp = r(CI_`i')
{txt}  5{com}. mat temp2 = temp[1, 1 .. 2]
{txt}  6{com}. 
. mat CI=CI\temp2
{txt}  7{com}. {c )-}
{txt}  8{com}. else {c -(}
{txt}  9{com}. mat CI=CI\missing
{txt} 10{com}. {c )-}
{txt} 11{com}. {c )-}
{txt}
{com}. 
. mat zero=J(1,2,0)
{txt}
{com}. mat CI = CI\zero
{txt}
{com}. 
. forvalues i=73/144 {c -(}
{txt}  2{com}. capture confirm mat r(CI_`i')
{txt}  3{com}. if !_rc {c -(}
{txt}  4{com}. mat temp = r(CI_`i')
{txt}  5{com}. mat temp2 = temp[1, 1 .. 2]
{txt}  6{com}. 
. mat CI=CI\temp2
{txt}  7{com}. {c )-}
{txt}  8{com}. else {c -(}
{txt}  9{com}. mat CI=CI\missing
{txt} 10{com}. {c )-}
{txt} 11{com}. {c )-}
{txt}
{com}. mat list CI
{res}
{txt}CI[145,2]
                 lo          hi
 pre_72 {res} -1.6121076   1.0832217
{txt} pre_71 {res} -1.6706994   .32514629
{txt} pre_70 {res} -1.7067082   .33537625
{txt} pre_69 {res} -1.8151872   .91199899
{txt} pre_68 {res} -1.7841842   .22596031
{txt} pre_67 {res} -2.1062611   .51862579
{txt} pre_66 {res} -1.9063085   .32883953
{txt} pre_65 {res} -1.7373705   .10896739
{txt} pre_64 {res} -1.3223056   .80777389
{txt} pre_63 {res} -2.5036908   .33117083
{txt} pre_62 {res} -1.8971517   .52575539
{txt} pre_61 {res} -1.7288447   .19111925
{txt} pre_60 {res} -1.2679002    .9858611
{txt} pre_59 {res} -2.4422837   .05309233
{txt} pre_58 {res} -2.0970297   1.1847552
{txt} pre_57 {res} -1.3341824   .94064284
{txt} pre_56 {res} -1.6612016    .5394895
{txt} pre_55 {res} -1.0288094   1.2332594
{txt} pre_54 {res} -.88971104   1.2941785
{txt} pre_53 {res} -.85666388   1.4033773
{txt} pre_52 {res} -1.2958275   1.0075986
{txt} pre_51 {res} -1.1031169   .94889413
{txt} pre_50 {res}  -.8047351   1.0417507
{txt} pre_49 {res} -1.4025943   1.0779474
{txt} pre_48 {res} -1.1221161   .93286023
{txt} pre_47 {res} -1.2549649   .91662573
{txt} pre_46 {res} -.91687805   1.1011245
{txt} pre_45 {res} -1.5760155   .74824042
{txt} pre_44 {res} -1.0064099   1.3302635
{txt} pre_43 {res} -1.2023203   1.2516284
{txt} pre_42 {res} -1.4564836   .78741182
{txt} pre_41 {res} -.92236341   1.7625769
{txt} pre_40 {res} -1.5747779   .83161173
{txt} pre_39 {res} -1.3411039   .65013539
{txt} pre_38 {res} -1.3783857   1.0803705
{txt} pre_37 {res} -1.3312132   1.0016433
{txt} pre_36 {res} -.88121311   1.5252003
{txt} pre_35 {res} -1.3098039   1.2847856
{txt} pre_34 {res} -1.2442093   .83568746
{txt} pre_33 {res} -1.0052885   1.2020308
{txt} pre_32 {res} -.59025639   1.6364723
{txt} pre_31 {res} -1.1121504    1.523708
{txt} pre_30 {res} -1.0092612   1.1116266
{txt} pre_29 {res} -1.0124703     1.22807
{txt} pre_28 {res} -.77636432   1.3400884
{txt} pre_27 {res} -1.5907624   1.4326003
{txt} pre_26 {res} -1.1242726   1.1861126
{txt} pre_25 {res}   -.903853   1.7008297
{txt} pre_24 {res} -.85911877   1.1994653
{txt} pre_23 {res} -1.3287485     1.12149
{txt} pre_22 {res} -.99533447    1.041946
{txt} pre_21 {res} -1.2108422   1.4762584
{txt} pre_20 {res} -1.9554506   .53598804
{txt} pre_19 {res} -1.1127626   .73908567
{txt} pre_18 {res}  -.8851534   1.5946184
{txt} pre_17 {res} -.79366934   1.2732273
{txt} pre_16 {res} -1.2517368    1.152223
{txt} pre_15 {res} -.96243296   1.6223534
{txt} pre_14 {res} -1.1035398   1.1495036
{txt} pre_13 {res} -1.1559158    1.499721
{txt} pre_12 {res} -.85166639   1.5648739
{txt} pre_11 {res}  .16070463   1.9234341
{txt} pre_10 {res} -.94284775   1.2451766
{txt}  pre_9 {res} -.46306279   1.9155571
{txt}  pre_8 {res} -.56399297   1.7662431
{txt}  pre_7 {res} -1.4995778   .95198172
{txt}  pre_6 {res}  -.3022065    2.001354
{txt}  pre_5 {res} -.97390131   1.1260031
{txt}  pre_4 {res} -1.1608427   1.1572215
{txt}  pre_3 {res} -.11743553    2.105344
{txt}  pre_2 {res} -.48753682   1.9269395
{txt}  pre_1 {res} -.87415052   1.1529636
{txt}     r1 {res}          0           0
{txt} post_1 {res} -3.2656897  -1.2116327
{txt} post_2 {res} -3.3883854  -1.7156735
{txt} post_3 {res} -3.2975624  -1.7161407
{txt} post_4 {res} -4.0542726  -2.1945889
{txt} post_5 {res} -4.8081749  -2.1695628
{txt} post_6 {res} -5.1184139  -2.7777377
{txt} post_7 {res} -4.9324018  -1.9646764
{txt} post_8 {res} -3.7298853  -2.0793244
{txt} post_9 {res} -3.2106754  -1.7105185
{txt}post_10 {res} -3.3180877  -2.1303959
{txt}post_11 {res} -4.2015081  -2.6211394
{txt}post_12 {res} -3.0520332  -1.6736454
{txt}post_13 {res} -4.3644113  -1.8775817
{txt}post_14 {res} -3.3403394  -2.0385606
{txt}post_15 {res} -3.5051211  -1.9595567
{txt}post_16 {res} -3.1313348  -1.9791387
{txt}post_17 {res} -3.9960204  -2.3013848
{txt}post_18 {res} -6.8753209   -1.312482
{txt}post_19 {res} -3.0672051  -1.9830966
{txt}post_20 {res} -3.9694638  -.92727407
{txt}post_21 {res} -3.1270011  -1.1643297
{txt}post_22 {res}  -3.599217  -1.8163045
{txt}post_23 {res} -3.8286655  -1.9765075
{txt}post_24 {res}  -4.010181  -1.9105795
{txt}post_25 {res} -3.3114533  -1.5283142
{txt}post_26 {res} -2.6671979  -1.0320574
{txt}post_27 {res} -2.9173545  -1.9471955
{txt}post_28 {res} -3.6018951  -2.1869016
{txt}post_29 {res} -3.3282994  -1.3798457
{txt}post_30 {res} -3.9406938  -2.0694828
{txt}post_31 {res} -3.7428017  -1.1120693
{txt}post_32 {res} -3.4529036  -1.5704527
{txt}post_33 {res} -3.1455994  -1.2580611
{txt}post_34 {res}  -3.269997  -1.3925025
{txt}post_35 {res} -2.5312536  -.80397928
{txt}post_36 {res} -3.5522681  -1.5663923
{txt}post_37 {res} -3.4118893  -1.4873491
{txt}post_38 {res} -2.9075138  -2.1603519
{txt}post_39 {res} -3.1692486   -1.641433
{txt}post_40 {res} -3.5468296  -1.9668482
{txt}post_41 {res} -3.0041749  -2.0138106
{txt}post_42 {res} -2.5833387    .2204487
{txt}post_43 {res} -4.0079252  -1.1251264
{txt}post_44 {res} -3.8551098  -2.1425208
{txt}post_45 {res} -2.4776922  -1.2165369
{txt}post_46 {res} -3.1259275  -2.0852496
{txt}post_47 {res} -3.1091233  -.57887545
{txt}post_48 {res} -3.0982338  -1.9256385
{txt}post_49 {res} -3.8811319   -1.305289
{txt}post_50 {res} -3.5729584  -1.1511391
{txt}post_51 {res} -4.3069653   2.3012079
{txt}post_52 {res} -2.9875737   -1.505833
{txt}post_53 {res} -3.1693367  -.82061123
{txt}post_54 {res} -3.7498369  -2.1469224
{txt}post_55 {res} -3.1910325  -1.4309815
{txt}post_56 {res} -2.7098546   -.6986231
{txt}post_57 {res} -3.0720218  -.59538475
{txt}post_58 {res} -2.5915737  -1.2921474
{txt}post_59 {res} -3.2143085   -1.535186
{txt}post_60 {res}  -2.488663   .21128981
{txt}post_61 {res}  -3.115673  -1.3279477
{txt}post_62 {res} -4.1010439  -2.0558405
{txt}post_63 {res} -3.0618916  -.44758616
{txt}post_64 {res} -2.6584797  -1.2035886
{txt}post_65 {res} -2.7817982  -1.5293275
{txt}post_66 {res} -3.1984331  -1.6180448
{txt}post_67 {res} -4.9203266  -2.4056151
{txt}post_68 {res} -4.0065517  -2.5481658
{txt}post_69 {res} -6.7671537  -2.5229872
{txt}post_70 {res} -2.8168449  -1.3480518
{txt}post_71 {res} -3.2054118   .28457752
{txt}post_72 {res} -3.6739361  -.85498779
{reset}
{com}. 
. 
. 
. ** Build Coefficient and Confidence Interval Matrix:
. mat AZ= (Z', pre_post')
{txt}
{com}. mat AZ= AZ,CI
{txt}
{com}. mat list AZ
{res}
{txt}AZ[145,4]
              r1          y1          lo          hi
  c1 {res}        -72  -.22359392  -1.6121076   1.0832217
{txt}  c2 {res}        -71  -.67374738  -1.6706994   .32514629
{txt}  c3 {res}        -70  -.66862357  -1.7067082   .33537625
{txt}  c4 {res}        -69  -.51776934  -1.8151872   .91199899
{txt}  c5 {res}        -68  -.79683212  -1.7841842   .22596031
{txt}  c6 {res}        -67  -.62782211  -2.1062611   .51862579
{txt}  c7 {res}        -66  -.76590287  -1.9063085   .32883953
{txt}  c8 {res}        -65  -.79333613  -1.7373705   .10896739
{txt}  c9 {res}        -64  -.22196725  -1.3223056   .80777389
{txt} c10 {res}        -63  -1.1211261  -2.5036908   .33117083
{txt} c11 {res}        -62  -.59062371  -1.8971517   .52575539
{txt} c12 {res}        -61  -.80908544  -1.7288447   .19111925
{txt} c13 {res}        -60  -.10537995  -1.2679002    .9858611
{txt} c14 {res}        -59  -1.2392509  -2.4422837   .05309233
{txt} c15 {res}        -58  -.51407526  -2.0970297   1.1847552
{txt} c16 {res}        -57   -.1481885  -1.3341824   .94064284
{txt} c17 {res}        -56  -.52077981  -1.6612016    .5394895
{txt} c18 {res}        -55   .16786765  -1.0288094   1.2332594
{txt} c19 {res}        -54   .26173335  -.88971104   1.2941785
{txt} c20 {res}        -53   .29115792  -.85666388   1.4033773
{txt} c21 {res}        -52  -.13254887  -1.2958275   1.0075986
{txt} c22 {res}        -51  -.00945136  -1.1031169   .94889413
{txt} c23 {res}        -50   .17203851   -.8047351   1.0417507
{txt} c24 {res}        -49  -.16734087  -1.4025943   1.0779474
{txt} c25 {res}        -48  -.08833578  -1.1221161   .93286023
{txt} c26 {res}        -47    -.141304  -1.2549649   .91662573
{txt} c27 {res}        -46   .17011028  -.91687805   1.1011245
{txt} c28 {res}        -45  -.33207238  -1.5760155   .74824042
{txt} c29 {res}        -44    .2341964  -1.0064099   1.3302635
{txt} c30 {res}        -43   .10555959  -1.2023203   1.2516284
{txt} c31 {res}        -42  -.25228652  -1.4564836   .78741182
{txt} c32 {res}        -41   .49644408  -.92236341   1.7625769
{txt} c33 {res}        -40  -.34268752  -1.5747779   .83161173
{txt} c34 {res}        -39  -.28807652  -1.3411039   .65013539
{txt} c35 {res}        -38  -.02194104  -1.3783857   1.0803705
{txt} c36 {res}        -37  -.14232253  -1.3312132   1.0016433
{txt} c37 {res}        -36   .37979245  -.88121311   1.5252003
{txt} c38 {res}        -35   .05143322  -1.3098039   1.2847856
{txt} c39 {res}        -34  -.17066993  -1.2442093   .83568746
{txt} c40 {res}        -33    .1683827  -1.0052885   1.2020308
{txt} c41 {res}        -32   .55774407  -.59025639   1.6364723
{txt} c42 {res}        -31   .21758839  -1.1121504    1.523708
{txt} c43 {res}        -30   .07911535  -1.0092612   1.1116266
{txt} c44 {res}        -29    .1047693  -1.0124703     1.22807
{txt} c45 {res}        -28   .34923999  -.77636432   1.3400884
{txt} c46 {res}        -27  -.03234182  -1.5907624   1.4326003
{txt} c47 {res}        -26   .06609937  -1.1242726   1.1861126
{txt} c48 {res}        -25   .41495216    -.903853   1.7008297
{txt} c49 {res}        -24   .20222548  -.85911877   1.1994653
{txt} c50 {res}        -23  -.07000028  -1.3287485     1.12149
{txt} c51 {res}        -22   .04533835  -.99533447    1.041946
{txt} c52 {res}        -21   .10264953  -1.2108422   1.4762584
{txt} c53 {res}        -20  -.62965925  -1.9554506   .53598804
{txt} c54 {res}        -19  -.15119361  -1.1127626   .73908567
{txt} c55 {res}        -18   .39875552   -.8851534   1.5946184
{txt} c56 {res}        -17   .30170036  -.79366934   1.2732273
{txt} c57 {res}        -16   .01649469  -1.2517368    1.152223
{txt} c58 {res}        -15   .30627071  -.96243296   1.6223534
{txt} c59 {res}        -14   .08289105  -1.1035398   1.1495036
{txt} c60 {res}        -13   .16443577  -1.1559158    1.499721
{txt} c61 {res}        -12    .3496447  -.85166639   1.5648739
{txt} c62 {res}        -11   1.1038652   .16070463   1.9234341
{txt} c63 {res}        -10   .16661764  -.94284775   1.2451766
{txt} c64 {res}         -9   .75256506  -.46306279   1.9155571
{txt} c65 {res}         -8   .65198045  -.56399297   1.7662431
{txt} c66 {res}         -7  -.26852891  -1.4995778   .95198172
{txt} c67 {res}         -6   .92285068   -.3022065    2.001354
{txt} c68 {res}         -5   .08276025  -.97390131   1.1260031
{txt} c69 {res}         -4  -.00204059  -1.1608427   1.1572215
{txt} c70 {res}         -3   1.0216139  -.11743553    2.105344
{txt} c71 {res}         -2   .76286194  -.48753682   1.9269395
{txt} c72 {res}         -1   .15908008  -.87415052   1.1529636
{txt} c73 {res}          0           0           0           0
{txt} c74 {res}          1  -2.2415328  -3.2656897  -1.2116327
{txt} c75 {res}          2  -2.5284336  -3.3883854  -1.7156735
{txt} c76 {res}          3  -2.5286417  -3.2975624  -1.7161407
{txt} c77 {res}          4   -3.074612  -4.0542726  -2.1945889
{txt} c78 {res}          5  -3.4292788  -4.8081749  -2.1695628
{txt} c79 {res}          6  -3.9213616  -5.1184139  -2.7777377
{txt} c80 {res}          7  -3.3619602  -4.9324018  -1.9646764
{txt} c81 {res}          8  -2.9059438  -3.7298853  -2.0793244
{txt} c82 {res}          9  -2.4417564  -3.2106754  -1.7105185
{txt} c83 {res}         10  -2.7037897  -3.3180877  -2.1303959
{txt} c84 {res}         11  -3.3748166  -4.2015081  -2.6211394
{txt} c85 {res}         12  -2.3653654  -3.0520332  -1.6736454
{txt} c86 {res}         13  -3.1272863  -4.3644113  -1.8775817
{txt} c87 {res}         14  -2.6804854  -3.3403394  -2.0385606
{txt} c88 {res}         15  -2.7201412  -3.5051211  -1.9595567
{txt} c89 {res}         16  -2.5439827  -3.1313348  -1.9791387
{txt} c90 {res}         17  -3.1490655  -3.9960204  -2.3013848
{txt} c91 {res}         18  -3.7996353  -6.8753209   -1.312482
{txt} c92 {res}         19  -2.5215445  -3.0672051  -1.9830966
{txt} c93 {res}         20  -2.4273533  -3.9694638  -.92727407
{txt} c94 {res}         21   -2.133586  -3.1270011  -1.1643297
{txt} c95 {res}         22  -2.6773285   -3.599217  -1.8163045
{txt} c96 {res}         23  -2.9042239  -3.8286655  -1.9765075
{txt} c97 {res}         24  -2.9663456   -4.010181  -1.9105795
{txt} c98 {res}         25  -2.3936218  -3.3114533  -1.5283142
{txt} c99 {res}         26  -1.8356321  -2.6671979  -1.0320574
{txt}c100 {res}         27  -2.4371865  -2.9173545  -1.9471955
{txt}c101 {res}         28   -2.906504  -3.6018951  -2.1869016
{txt}c102 {res}         29  -2.3685787  -3.3282994  -1.3798457
{txt}c103 {res}         30  -3.0391774  -3.9406938  -2.0694828
{txt}c104 {res}         31  -2.4625045  -3.7428017  -1.1120693
{txt}c105 {res}         32  -2.5471677  -3.4529036  -1.5704527
{txt}c106 {res}         33  -2.1829808  -3.1455994  -1.2580611
{txt}c107 {res}         34  -2.3133374   -3.269997  -1.3925025
{txt}c108 {res}         35  -1.6613861  -2.5312536  -.80397928
{txt}c109 {res}         36  -2.5479022  -3.5522681  -1.5663923
{txt}c110 {res}         37  -2.4393547  -3.4118893  -1.4873491
{txt}c111 {res}         38  -2.5409858  -2.9075138  -2.1603519
{txt}c112 {res}         39   -2.390401  -3.1692486   -1.641433
{txt}c113 {res}         40  -2.7439575  -3.5468296  -1.9668482
{txt}c114 {res}         41  -2.5068898  -3.0041749  -2.0138106
{txt}c115 {res}         42  -1.2258097  -2.5833387    .2204487
{txt}c116 {res}         43  -2.5444726  -4.0079252  -1.1251264
{txt}c117 {res}         44  -2.9826848  -3.8551098  -2.1425208
{txt}c118 {res}         45  -1.8438302  -2.4776922  -1.2165369
{txt}c119 {res}         46  -2.6117772  -3.1259275  -2.0852496
{txt}c120 {res}         47  -1.8494403  -3.1091233  -.57887545
{txt}c121 {res}         48  -2.5199516  -3.0982338  -1.9256385
{txt}c122 {res}         49  -2.5722028  -3.8811319   -1.305289
{txt}c123 {res}         50  -2.3283032  -3.5729584  -1.1511391
{txt}c124 {res}         51  -2.2672186  -4.3069653   2.3012079
{txt}c125 {res}         52  -2.2995127  -2.9875737   -1.505833
{txt}c126 {res}         53  -1.9575192  -3.1693367  -.82061123
{txt}c127 {res}         54  -2.9797203  -3.7498369  -2.1469224
{txt}c128 {res}         55  -2.3666676  -3.1910325  -1.4309815
{txt}c129 {res}         56   -1.803848  -2.7098546   -.6986231
{txt}c130 {res}         57  -1.9499195  -3.0720218  -.59538475
{txt}c131 {res}         58  -1.9693415  -2.5915737  -1.2921474
{txt}c132 {res}         59  -2.3755869  -3.2143085   -1.535186
{txt}c133 {res}         60  -1.3976732   -2.488663   .21128981
{txt}c134 {res}         61  -2.2619459   -3.115673  -1.3279477
{txt}c135 {res}         62  -3.0674015  -4.1010439  -2.0558405
{txt}c136 {res}         63  -1.8724104  -3.0618916  -.44758616
{txt}c137 {res}         64  -1.9317533  -2.6584797  -1.2035886
{txt}c138 {res}         65  -2.1531236  -2.7817982  -1.5293275
{txt}c139 {res}         66  -2.3899008  -3.1984331  -1.6180448
{txt}c140 {res}         67  -3.7380772  -4.9203266  -2.4056151
{txt}c141 {res}         68  -3.2472093  -4.0065517  -2.5481658
{txt}c142 {res}         69  -4.4935986  -6.7671537  -2.5229872
{txt}c143 {res}         70   -2.132965  -2.8168449  -1.3480518
{txt}c144 {res}         71  -2.0594317  -3.2054118   .28457752
{txt}c145 {res}         72   -2.548675  -3.6739361  -.85498779
{reset}
{com}. * Create variables from matrix so that you can graph them:
. svmat AZ, names(direct)
{txt}
{com}. sort direct1
{txt}
{com}. 
. 
. sort direct1
{txt}
{com}. sum direct2 direct3 direct4 

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct2 {c |}{res}        145   -1.277835     1.36951  -4.493598   1.103865
{txt}{space 5}direct3 {c |}{res}        145   -2.355186    1.350264  -6.875321   .1607046
{txt}{space 5}direct4 {c |}{res}        145   -.2046902    1.453447  -2.777738   2.301208
{txt}
{com}. 
. graph twoway (rarea direct3 direct4 direct1, color(gs10%20) )  ///
>         (connected direct2 direct1, xline(0) yline(0) lc(ebblue) mc(ebblue%70) msymbol(smccircle)) ///
>         , ytitle("Change in IHS of FDI", ax(1)) xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0, axis(1) ) yline(0, axis(2 1)) ///
>         name(dynamic_did, replace) xscale(r(-72, 72)) xlabel(-72(12)72) ///
>         ylabel( , angle(horizontal)) yscale(titlegap(*+1)) ///
>         legend(off) ///
>         
{p 0 4 2}
{txt}(note:  named style
smccircle not found in class
symbol,  default attributes used)
{p_end}
{res}{txt}
{com}.         
.         
.         
. graph export _3results/figures/figure4.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure4.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
{txt}end of do-file

{com}. do _2code/_2analysis/figure5
{txt}
{com}. 
. ********************************************************************************
. * Figure 5: Event studies
. 
. ********************************************************************************
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. 
. *generate months to event
. 
. generate dif=1000
{txt}
{com}. replace dif=Count-23 if Count<39 
{txt}(608 real changes made)

{com}. replace dif=Count-55 if Count>=39 & Count <74 
{txt}(560 real changes made)

{com}. replace dif=Count-93 if Count>=74 & Count <107 
{txt}(528 real changes made)

{com}. replace dif=Count-122 if Count>=107 & Count <138 
{txt}(496 real changes made)

{com}. replace dif=Count-155 if Count>=138
{txt}(544 real changes made)

{com}. 
. 
. *generate affected region dummy for event study
. gen affected_event=0
{txt}
{com}. replace affected_event=1 if (Count<39 & (region=="kolkata" | region=="patna"))
{txt}(76 real changes made)

{com}. replace affected_event=1 if (Count>=39 & Count <74 & (region=="bubaneshwar" | region=="guwahati" | region=="kolkata" | region=="patna"))
{txt}(140 real changes made)

{com}. replace affected_event=1 if (Count>=74 & Count <107  & (region=="chandigarh" | region=="new_delhi" | region=="kanpur"))
{txt}(99 real changes made)

{com}. replace affected_event=1 if (Count>=107 & Count <138   & (region=="hyderabad" | region=="chennai"))
{txt}(62 real changes made)

{com}. replace affected_event=1 if (Count>=138  & region=="kochi")
{txt}(34 real changes made)

{com}. 
. *time to event variables as factors
. tostring dif, replace
{txt}dif was {res:float} now {res:str3}

{com}. destring dif, replace
{txt}dif: all characters numeric; {res}replaced {txt}as {res}byte
{txt}
{com}. tab dif, gen(t_fe)

        {txt}dif {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
        -22 {c |}{res}         16        0.58        0.58
{txt}        -21 {c |}{res}         16        0.58        1.17
{txt}        -20 {c |}{res}         16        0.58        1.75
{txt}        -19 {c |}{res}         32        1.17        2.92
{txt}        -18 {c |}{res}         32        1.17        4.09
{txt}        -17 {c |}{res}         48        1.75        5.85
{txt}        -16 {c |}{res}         64        2.34        8.19
{txt}        -15 {c |}{res}         80        2.92       11.11
{txt}        -14 {c |}{res}         80        2.92       14.04
{txt}        -13 {c |}{res}         80        2.92       16.96
{txt}        -12 {c |}{res}         80        2.92       19.88
{txt}        -11 {c |}{res}         80        2.92       22.81
{txt}        -10 {c |}{res}         80        2.92       25.73
{txt}         -9 {c |}{res}         80        2.92       28.65
{txt}         -8 {c |}{res}         80        2.92       31.58
{txt}         -7 {c |}{res}         80        2.92       34.50
{txt}         -6 {c |}{res}         80        2.92       37.43
{txt}         -5 {c |}{res}         80        2.92       40.35
{txt}         -4 {c |}{res}         80        2.92       43.27
{txt}         -3 {c |}{res}         80        2.92       46.20
{txt}         -2 {c |}{res}         80        2.92       49.12
{txt}         -1 {c |}{res}         80        2.92       52.05
{txt}          0 {c |}{res}         80        2.92       54.97
{txt}          1 {c |}{res}         80        2.92       57.89
{txt}          2 {c |}{res}         80        2.92       60.82
{txt}          3 {c |}{res}         80        2.92       63.74
{txt}          4 {c |}{res}         80        2.92       66.67
{txt}          5 {c |}{res}         80        2.92       69.59
{txt}          6 {c |}{res}         80        2.92       72.51
{txt}          7 {c |}{res}         80        2.92       75.44
{txt}          8 {c |}{res}         80        2.92       78.36
{txt}          9 {c |}{res}         80        2.92       81.29
{txt}         10 {c |}{res}         80        2.92       84.21
{txt}         11 {c |}{res}         80        2.92       87.13
{txt}         12 {c |}{res}         80        2.92       90.06
{txt}         13 {c |}{res}         80        2.92       92.98
{txt}         14 {c |}{res}         64        2.34       95.32
{txt}         15 {c |}{res}         64        2.34       97.66
{txt}         16 {c |}{res}         32        1.17       98.83
{txt}         17 {c |}{res}         16        0.58       99.42
{txt}         18 {c |}{res}         16        0.58      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      2,736      100.00
{txt}
{com}. 
. * Identify the pre-treatment month for the unaffected regions.
. * These are the relavant pre-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=1/21 {c -(}
{txt}  2{com}. local j=22-`i'
{txt}  3{com}. gen pre_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. 
. * Identify the post-treatment month for the affected regions.
. * These are the relavant post-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=23/41{c -(}
{txt}  2{com}. local j=`i'-22
{txt}  3{com}. gen post_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. 
. *** Event study regression on AFFECTED REGIONS:
. 
. reg fdi_ihs pre* post* $control i.region1 if (affected_event==1), robust
{txt}{p 0 6 2}note: {bf:pre_21} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:pre_20} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:pre_19} omitted because of collinearity.{p_end}

Linear regression                               Number of obs     = {res}       405
                                                {txt}F(48, 356)        =  {res}    57.80
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.7868
                                                {txt}Root MSE          =    {res} 1.2365

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}pre_21 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_20 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_19 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_18 {c |}{col 14}{res}{space 2} .3260652{col 26}{space 2} .7862875{col 37}{space 1}    0.41{col 46}{space 3}0.679{col 54}{space 4}-1.220287{col 67}{space 3} 1.872418
{txt}{space 6}pre_17 {c |}{col 14}{res}{space 2}-.0443813{col 26}{space 2}   .54696{col 37}{space 1}   -0.08{col 46}{space 3}0.935{col 54}{space 4} -1.12006{col 67}{space 3} 1.031298
{txt}{space 6}pre_16 {c |}{col 14}{res}{space 2}-.0365568{col 26}{space 2} .5296674{col 37}{space 1}   -0.07{col 46}{space 3}0.945{col 54}{space 4}-1.078227{col 67}{space 3} 1.005114
{txt}{space 6}pre_15 {c |}{col 14}{res}{space 2}-.4681806{col 26}{space 2} .4654538{col 37}{space 1}   -1.01{col 46}{space 3}0.315{col 54}{space 4}-1.383565{col 67}{space 3} .4472041
{txt}{space 6}pre_14 {c |}{col 14}{res}{space 2}-.0194903{col 26}{space 2}  .424357{col 37}{space 1}   -0.05{col 46}{space 3}0.963{col 54}{space 4} -.854052{col 67}{space 3} .8150714
{txt}{space 6}pre_13 {c |}{col 14}{res}{space 2}-.2986006{col 26}{space 2} .4696409{col 37}{space 1}   -0.64{col 46}{space 3}0.525{col 54}{space 4} -1.22222{col 67}{space 3} .6250187
{txt}{space 6}pre_12 {c |}{col 14}{res}{space 2}-.4716245{col 26}{space 2} .4035469{col 37}{space 1}   -1.17{col 46}{space 3}0.243{col 54}{space 4} -1.26526{col 67}{space 3}  .322011
{txt}{space 6}pre_11 {c |}{col 14}{res}{space 2}-.1108515{col 26}{space 2} .4753559{col 37}{space 1}   -0.23{col 46}{space 3}0.816{col 54}{space 4} -1.04571{col 67}{space 3} .8240072
{txt}{space 6}pre_10 {c |}{col 14}{res}{space 2}-.0752347{col 26}{space 2} .4168302{col 37}{space 1}   -0.18{col 46}{space 3}0.857{col 54}{space 4}-.8949937{col 67}{space 3} .7445243
{txt}{space 7}pre_9 {c |}{col 14}{res}{space 2} .1668461{col 26}{space 2} .4647465{col 37}{space 1}    0.36{col 46}{space 3}0.720{col 54}{space 4}-.7471476{col 67}{space 3}  1.08084
{txt}{space 7}pre_8 {c |}{col 14}{res}{space 2} .1890684{col 26}{space 2} .4703435{col 37}{space 1}    0.40{col 46}{space 3}0.688{col 54}{space 4}-.7359325{col 67}{space 3} 1.114069
{txt}{space 7}pre_7 {c |}{col 14}{res}{space 2}-.2353251{col 26}{space 2} .4732745{col 37}{space 1}   -0.50{col 46}{space 3}0.619{col 54}{space 4} -1.16609{col 67}{space 3} .6954402
{txt}{space 7}pre_6 {c |}{col 14}{res}{space 2} .3703003{col 26}{space 2} .4716906{col 37}{space 1}    0.79{col 46}{space 3}0.433{col 54}{space 4}-.5573501{col 67}{space 3} 1.297951
{txt}{space 7}pre_5 {c |}{col 14}{res}{space 2}  .128615{col 26}{space 2} .4163867{col 37}{space 1}    0.31{col 46}{space 3}0.758{col 54}{space 4}-.6902718{col 67}{space 3} .9475018
{txt}{space 7}pre_4 {c |}{col 14}{res}{space 2} .1560266{col 26}{space 2} .4495058{col 37}{space 1}    0.35{col 46}{space 3}0.729{col 54}{space 4}-.7279939{col 67}{space 3} 1.040047
{txt}{space 7}pre_3 {c |}{col 14}{res}{space 2}  .399011{col 26}{space 2} .4107696{col 37}{space 1}    0.97{col 46}{space 3}0.332{col 54}{space 4}-.4088291{col 67}{space 3} 1.206851
{txt}{space 7}pre_2 {c |}{col 14}{res}{space 2} .4858791{col 26}{space 2} .4655446{col 37}{space 1}    1.04{col 46}{space 3}0.297{col 54}{space 4}-.4296843{col 67}{space 3} 1.401442
{txt}{space 7}pre_1 {c |}{col 14}{res}{space 2}-.0052855{col 26}{space 2} .4453049{col 37}{space 1}   -0.01{col 46}{space 3}0.991{col 54}{space 4}-.8810443{col 67}{space 3} .8704734
{txt}{space 6}post_1 {c |}{col 14}{res}{space 2} -2.12328{col 26}{space 2} .4539652{col 37}{space 1}   -4.68{col 46}{space 3}0.000{col 54}{space 4}-3.016071{col 67}{space 3}-1.230489
{txt}{space 6}post_2 {c |}{col 14}{res}{space 2}-2.219944{col 26}{space 2} .4457489{col 37}{space 1}   -4.98{col 46}{space 3}0.000{col 54}{space 4}-3.096576{col 67}{space 3}-1.343312
{txt}{space 6}post_3 {c |}{col 14}{res}{space 2}-2.309616{col 26}{space 2} .4711642{col 37}{space 1}   -4.90{col 46}{space 3}0.000{col 54}{space 4}-3.236231{col 67}{space 3}-1.383001
{txt}{space 6}post_4 {c |}{col 14}{res}{space 2}-2.911257{col 26}{space 2} .5694729{col 37}{space 1}   -5.11{col 46}{space 3}0.000{col 54}{space 4}-4.031211{col 67}{space 3}-1.791303
{txt}{space 6}post_5 {c |}{col 14}{res}{space 2}-2.607767{col 26}{space 2} .5818747{col 37}{space 1}   -4.48{col 46}{space 3}0.000{col 54}{space 4}-3.752111{col 67}{space 3}-1.463423
{txt}{space 6}post_6 {c |}{col 14}{res}{space 2} -2.98338{col 26}{space 2} .6763559{col 37}{space 1}   -4.41{col 46}{space 3}0.000{col 54}{space 4}-4.313536{col 67}{space 3}-1.653225
{txt}{space 6}post_7 {c |}{col 14}{res}{space 2}-2.558672{col 26}{space 2} .7074042{col 37}{space 1}   -3.62{col 46}{space 3}0.000{col 54}{space 4}-3.949889{col 67}{space 3}-1.167456
{txt}{space 6}post_8 {c |}{col 14}{res}{space 2} -2.48811{col 26}{space 2} .6364914{col 37}{space 1}   -3.91{col 46}{space 3}0.000{col 54}{space 4}-3.739866{col 67}{space 3}-1.236355
{txt}{space 6}post_9 {c |}{col 14}{res}{space 2}-1.425797{col 26}{space 2} .4618932{col 37}{space 1}   -3.09{col 46}{space 3}0.002{col 54}{space 4}-2.334179{col 67}{space 3}-.5174144
{txt}{space 5}post_10 {c |}{col 14}{res}{space 2}-1.876059{col 26}{space 2} .4878737{col 37}{space 1}   -3.85{col 46}{space 3}0.000{col 54}{space 4}-2.835535{col 67}{space 3}-.9165819
{txt}{space 5}post_11 {c |}{col 14}{res}{space 2}-2.213997{col 26}{space 2} .5717529{col 37}{space 1}   -3.87{col 46}{space 3}0.000{col 54}{space 4}-3.338435{col 67}{space 3}-1.089559
{txt}{space 5}post_12 {c |}{col 14}{res}{space 2}-1.609988{col 26}{space 2}  .527945{col 37}{space 1}   -3.05{col 46}{space 3}0.002{col 54}{space 4}-2.648271{col 67}{space 3}-.5717047
{txt}{space 5}post_13 {c |}{col 14}{res}{space 2}-1.601654{col 26}{space 2} .5635563{col 37}{space 1}   -2.84{col 46}{space 3}0.005{col 54}{space 4}-2.709972{col 67}{space 3}-.4933363
{txt}{space 5}post_14 {c |}{col 14}{res}{space 2}-1.833621{col 26}{space 2} .4347773{col 37}{space 1}   -4.22{col 46}{space 3}0.000{col 54}{space 4}-2.688676{col 67}{space 3}-.9785663
{txt}{space 5}post_15 {c |}{col 14}{res}{space 2}-2.395527{col 26}{space 2} .6687361{col 37}{space 1}   -3.58{col 46}{space 3}0.000{col 54}{space 4}-3.710697{col 67}{space 3}-1.080358
{txt}{space 5}post_16 {c |}{col 14}{res}{space 2}-1.656371{col 26}{space 2} .4246864{col 37}{space 1}   -3.90{col 46}{space 3}0.000{col 54}{space 4} -2.49158{col 67}{space 3} -.821161
{txt}{space 5}post_17 {c |}{col 14}{res}{space 2}-1.565177{col 26}{space 2} .6923618{col 37}{space 1}   -2.26{col 46}{space 3}0.024{col 54}{space 4} -2.92681{col 67}{space 3}-.2035432
{txt}{space 5}post_18 {c |}{col 14}{res}{space 2}-2.070496{col 26}{space 2} .8180221{col 37}{space 1}   -2.53{col 46}{space 3}0.012{col 54}{space 4}-3.679259{col 67}{space 3}-.4617328
{txt}{space 5}post_19 {c |}{col 14}{res}{space 2}-1.384049{col 26}{space 2} .5014248{col 37}{space 1}   -2.76{col 46}{space 3}0.006{col 54}{space 4}-2.370176{col 67}{space 3}-.3979215
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} -1.39621{col 26}{space 2} 1.104066{col 37}{space 1}   -1.26{col 46}{space 3}0.207{col 54}{space 4}-3.567522{col 67}{space 3} .7751024
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-8.650239{col 26}{space 2} 8.188514{col 37}{space 1}   -1.06{col 46}{space 3}0.292{col 54}{space 4}-24.75418{col 67}{space 3} 7.453702
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 1}chandigarh  {c |}{col 14}{res}{space 2} 7.552829{col 26}{space 2} 1.934349{col 37}{space 1}    3.90{col 46}{space 3}0.000{col 54}{space 4} 3.748641{col 67}{space 3} 11.35702
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} 12.88369{col 26}{space 2} 3.134176{col 37}{space 1}    4.11{col 46}{space 3}0.000{col 54}{space 4}  6.71986{col 67}{space 3} 19.04751
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2} .6866933{col 26}{space 2} .5494901{col 37}{space 1}    1.25{col 46}{space 3}0.212{col 54}{space 4}-.3939615{col 67}{space 3} 1.767348
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} 7.292168{col 26}{space 2} .8641975{col 37}{space 1}    8.44{col 46}{space 3}0.000{col 54}{space 4} 5.592594{col 67}{space 3} 8.991742
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2} 17.01216{col 26}{space 2} 11.85025{col 37}{space 1}    1.44{col 46}{space 3}0.152{col 54}{space 4}-6.293137{col 67}{space 3} 40.31747
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2} 3.066861{col 26}{space 2} 2.757863{col 37}{space 1}    1.11{col 46}{space 3}0.267{col 54}{space 4} -2.35689{col 67}{space 3} 8.490612
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2} 9.575918{col 26}{space 2} 5.584292{col 37}{space 1}    1.71{col 46}{space 3}0.087{col 54}{space 4}-1.406429{col 67}{space 3} 20.55827
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2}-2.184329{col 26}{space 2}  7.80727{col 37}{space 1}   -0.28{col 46}{space 3}0.780{col 54}{space 4} -17.5385{col 67}{space 3} 13.16984
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}  6.84134{col 26}{space 2} 7.176508{col 37}{space 1}    0.95{col 46}{space 3}0.341{col 54}{space 4}-7.272339{col 67}{space 3} 20.95502
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2} 110.5686{col 26}{space 2}  74.9843{col 37}{space 1}    1.47{col 46}{space 3}0.141{col 54}{space 4}-36.89927{col 67}{space 3} 258.0365
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. 
. boottest {c -(}pre_18{c )-} {c -(}pre_17{c )-} {c -(}pre_16{c )-} {c -(}pre_15{c )-} {c -(}pre_14{c )-} {c -(}pre_13{c )-} {c -(}pre_12{c )-} ///
>                 {c -(}pre_11{c )-} {c -(}pre_10{c )-} {c -(}pre_9{c )-} {c -(}pre_8{c )-} {c -(}pre_7{c )-} {c -(}pre_6{c )-} {c -(}pre_5{c )-} {c -(}pre_4{c )-} ///
>                 {c -(}pre_3{c )-} {c -(}pre_2{c )-} {c -(}pre_1{c )-} {c -(}post_1{c )-} {c -(}post_2{c )-} {c -(}post_3{c )-} {c -(}post_4{c )-}  {c -(}post_5{c )-} ///
>                 {c -(}post_6{c )-} {c -(}post_7{c )-} {c -(}post_8{c )-} {c -(}post_9{c )-} {c -(}post_10{c )-} {c -(}post_11{c )-} {c -(}post_12{c )-} {c -(}post_13{c )-} ///
>                 {c -(}post_14{c )-} {c -(}post_15{c )-} {c -(}post_16{c )-} {c -(}post_17{c )-} {c -(}post_18{c )-} {c -(}post_19{c )-} ///
>                 , reps(9999) gridpoints(10) bootcluster(region1 date) nograph seed(123) 
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_18

{txt}{col 27}t(356) = {res}    0.4147
{col 25}{txt}Prob>|t| = {res}    0.7485

95%{txt} confidence set for null hypothesis expression: [{res}-1.543{txt}, {res}2.819{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_17

{txt}{col 27}t(356) = {res}   -0.0811
{col 25}{txt}Prob>|t| = {res}    0.9411

95%{txt} confidence set for null hypothesis expression: [{res}-1.453{txt}, {res}1.554{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_16

{txt}{col 27}t(356) = {res}   -0.0690
{col 25}{txt}Prob>|t| = {res}    0.9445

95%{txt} confidence set for null hypothesis expression: [{res}-1.485{txt}, {res}1.325{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_15

{txt}{col 27}t(356) = {res}   -1.0059
{col 25}{txt}Prob>|t| = {res}    0.3173

95%{txt} confidence set for null hypothesis expression: [{res}-1.463{txt}, {res}.566{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_14

{txt}{col 27}t(356) = {res}   -0.0459
{col 25}{txt}Prob>|t| = {res}    0.9630

95%{txt} confidence set for null hypothesis expression: [{res}-.9485{txt}, {res}.9626{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_13

{txt}{col 27}t(356) = {res}   -0.6358
{col 25}{txt}Prob>|t| = {res}    0.5347

95%{txt} confidence set for null hypothesis expression: [{res}-1.318{txt}, {res}.7755{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_12

{txt}{col 27}t(356) = {res}   -1.1687
{col 25}{txt}Prob>|t| = {res}    0.2545

95%{txt} confidence set for null hypothesis expression: [{res}-1.314{txt}, {res}.4412{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_11

{txt}{col 27}t(356) = {res}   -0.2332
{col 25}{txt}Prob>|t| = {res}    0.8139

95%{txt} confidence set for null hypothesis expression: [{res}-1.121{txt}, {res}.964{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_10

{txt}{col 27}t(356) = {res}   -0.1805
{col 25}{txt}Prob>|t| = {res}    0.8537

95%{txt} confidence set for null hypothesis expression: [{res}-.9987{txt}, {res}.8928{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_9

{txt}{col 27}t(356) = {res}    0.3590
{col 25}{txt}Prob>|t| = {res}    0.7158

95%{txt} confidence set for null hypothesis expression: [{res}-.8483{txt}, {res}1.229{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_8

{txt}{col 27}t(356) = {res}    0.4020
{col 25}{txt}Prob>|t| = {res}    0.6890

95%{txt} confidence set for null hypothesis expression: [{res}-.8284{txt}, {res}1.243{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_7

{txt}{col 27}t(356) = {res}   -0.4972
{col 25}{txt}Prob>|t| = {res}    0.6217

95%{txt} confidence set for null hypothesis expression: [{res}-1.265{txt}, {res}.8371{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_6

{txt}{col 27}t(356) = {res}    0.7850
{col 25}{txt}Prob>|t| = {res}    0.4330

95%{txt} confidence set for null hypothesis expression: [{res}-.6927{txt}, {res}1.419{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_5

{txt}{col 27}t(356) = {res}    0.3089
{col 25}{txt}Prob>|t| = {res}    0.7580

95%{txt} confidence set for null hypothesis expression: [{res}-.8006{txt}, {res}1.091{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_4

{txt}{col 27}t(356) = {res}    0.3471
{col 25}{txt}Prob>|t| = {res}    0.7280

95%{txt} confidence set for null hypothesis expression: [{res}-.8655{txt}, {res}1.173{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_3

{txt}{col 27}t(356) = {res}    0.9714
{col 25}{txt}Prob>|t| = {res}    0.3365

95%{txt} confidence set for null hypothesis expression: [{res}-.5248{txt}, {res}1.316{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_2

{txt}{col 27}t(356) = {res}    1.0437
{col 25}{txt}Prob>|t| = {res}    0.3053

95%{txt} confidence set for null hypothesis expression: [{res}-.5569{txt}, {res}1.504{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_1

{txt}{col 27}t(356) = {res}   -0.0119
{col 25}{txt}Prob>|t| = {res}    0.9907

95%{txt} confidence set for null hypothesis expression: [{res}-1.018{txt}, {res}.9966{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_1

{txt}{col 27}t(356) = {res}   -4.6772
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-2.786{txt}, {res}-1.446{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_2

{txt}{col 27}t(356) = {res}   -4.9803
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-2.839{txt}, {res}-1.584{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_3

{txt}{col 27}t(356) = {res}   -4.9019
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-2.974{txt}, {res}-1.617{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_4

{txt}{col 27}t(356) = {res}   -5.1122
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.701{txt}, {res}-2.115{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_5

{txt}{col 27}t(356) = {res}   -4.4817
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.45{txt}, {res}-1.726{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_6

{txt}{col 27}t(356) = {res}   -4.4110
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.992{txt}, {res}-1.918{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_7

{txt}{col 27}t(356) = {res}   -3.6170
{col 25}{txt}Prob>|t| = {res}    0.0002

95%{txt} confidence set for null hypothesis expression: [{res}-3.725{txt}, {res}-1.388{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_8

{txt}{col 27}t(356) = {res}   -3.9091
{col 25}{txt}Prob>|t| = {res}    0.0005

95%{txt} confidence set for null hypothesis expression: [{res}-3.501{txt}, {res}-1.448{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_9

{txt}{col 27}t(356) = {res}   -3.0869
{col 25}{txt}Prob>|t| = {res}    0.0062

95%{txt} confidence set for null hypothesis expression: [{res}-2.237{txt}, {res}-.5674{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_10

{txt}{col 27}t(356) = {res}   -3.8454
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-2.654{txt}, {res}-1.083{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_11

{txt}{col 27}t(356) = {res}   -3.8723
{col 25}{txt}Prob>|t| = {res}    0.0003

95%{txt} confidence set for null hypothesis expression: [{res}-3.132{txt}, {res}-1.283{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_12

{txt}{col 27}t(356) = {res}   -3.0495
{col 25}{txt}Prob>|t| = {res}    0.0042

95%{txt} confidence set for null hypothesis expression: [{res}-2.544{txt}, {res}-.6553{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_13

{txt}{col 27}t(356) = {res}   -2.8420
{col 25}{txt}Prob>|t| = {res}    0.0080

95%{txt} confidence set for null hypothesis expression: [{res}-2.648{txt}, {res}-.5406{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_14

{txt}{col 27}t(356) = {res}   -4.2174
{col 25}{txt}Prob>|t| = {res}    0.0007

95%{txt} confidence set for null hypothesis expression: [{res}-2.507{txt}, {res}-1.141{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_15

{txt}{col 27}t(356) = {res}   -3.5822
{col 25}{txt}Prob>|t| = {res}    0.0003

95%{txt} confidence set for null hypothesis expression: [{res}-3.464{txt}, {res}-1.351{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_16

{txt}{col 27}t(356) = {res}   -3.9002
{col 25}{txt}Prob>|t| = {res}    0.0016

95%{txt} confidence set for null hypothesis expression: [{res}-2.314{txt}, {res}-.9448{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_17

{txt}{col 27}t(356) = {res}   -2.2606
{col 25}{txt}Prob>|t| = {res}    0.0236

95%{txt} confidence set for null hypothesis expression: [{res}-2.897{txt}, {res}-.2766{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_18

{txt}{col 27}t(356) = {res}   -2.5311
{col 25}{txt}Prob>|t| = {res}    0.0254

95%{txt} confidence set for null hypothesis expression: [{res}-3.524{txt}, {res}-.4386{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_19

{txt}{col 27}t(356) = {res}   -2.7602
{col 25}{txt}Prob>|t| = {res}    0.0316

95%{txt} confidence set for null hypothesis expression: [{res}-2.346{txt}, {res}-.2901{txt}]
{res}{txt}
{com}. 
. 
. ** These are too many coefficients to report and I like to create my own coeffient plot
. ** Here is the code:
. 
. * Pull coefficients into matrix:
. mat beta=e(b)
{txt}
{com}. 
. ** Average Treatment Effects:
. mat A = beta[1,4..40]
{txt}
{com}. 
. mat pre= A[1,1..18]
{txt}
{com}. mat post= A[1,19..37]
{txt}
{com}. 
. * Need to set the reference month at 0:
. mat pre_post=(pre, 0, post)
{txt}
{com}. mat list pre_post
{res}
{txt}pre_post[1,38]
        pre_18      pre_17      pre_16      pre_15      pre_14      pre_13      pre_12      pre_11      pre_10       pre_9       pre_8       pre_7       pre_6
y1 {res}  .32606518  -.04438133  -.03655678  -.46818063  -.01949026  -.29860062  -.47162451  -.11085152  -.07523471   .16684608   .18906843  -.23532506   .37030032

{txt}         pre_5       pre_4       pre_3       pre_2       pre_1         c19      post_1      post_2      post_3      post_4      post_5      post_6      post_7
y1 {res}  .12861501   .15602661   .39901097   .48587908  -.00528546           0  -2.1232799  -2.2199442   -2.309616  -2.9112571  -2.6077668  -2.9833802  -2.5586725

{txt}        post_8      post_9     post_10     post_11     post_12     post_13     post_14     post_15     post_16     post_17     post_18     post_19
y1 {res} -2.4881103  -1.4257967  -1.8760586  -2.2139973  -1.6099876  -1.6016544  -1.8336211  -2.3955274  -1.6563705  -1.5651765  -2.0704959  -1.3840486
{reset}
{com}. 
. 
. ** Create a counter column:
. mat Z=J(1,38,0)
{txt}
{com}. local j=1
{txt}
{com}. forvalues i=-18/19 {c -(}
{txt}  2{com}. mat Z[1,`j'] = `i'
{txt}  3{com}. local j=`j'+1
{txt}  4{com}. {c )-}
{txt}
{com}. 
. ** Grab the confidence intervals and append them together:
. mat CI=r(CI_1)
{txt}
{com}. 
. 
. 
. 
. 
. mat missing=J(1,2,.)
{txt}
{com}. forvalues i=2/18 {c -(}
{txt}  2{com}. capture confirm mat r(CI_`i')
{txt}  3{com}. if !_rc {c -(}
{txt}  4{com}. mat CI=CI\r(CI_`i')
{txt}  5{com}. {c )-}
{txt}  6{com}. else {c -(}
{txt}  7{com}. mat CI=CI\missing
{txt}  8{com}. {c )-}
{txt}  9{com}. {c )-}
{txt}
{com}. 
. mat zero=J(1,2,0)
{txt}
{com}. mat CI = CI\zero
{txt}
{com}. 
. forvalues i=19/37 {c -(}
{txt}  2{com}. capture confirm mat r(CI_`i')
{txt}  3{com}. if !_rc {c -(}
{txt}  4{com}. mat CI=CI\r(CI_`i')
{txt}  5{com}. {c )-}
{txt}  6{com}. else {c -(}
{txt}  7{com}. mat CI=CI\missing
{txt}  8{com}. {c )-}
{txt}  9{com}. {c )-}
{txt}
{com}. mat list CI
{res}
{txt}CI[38,2]
                 lo          hi
 pre_18 {res} -1.5430928   2.8191854
{txt} pre_17 {res}  -1.452776   1.5537087
{txt} pre_16 {res} -1.4850302   1.3252272
{txt} pre_15 {res} -1.4632359   .56599239
{txt} pre_14 {res} -.94846015   .96260219
{txt} pre_13 {res} -1.3183592   .77546032
{txt} pre_12 {res}  -1.314198   .44124723
{txt} pre_11 {res} -1.1213279   .96396634
{txt} pre_10 {res} -.99872763   .89284802
{txt}  pre_9 {res} -.84830786   1.2289502
{txt}  pre_8 {res} -.82840141   1.2432779
{txt}  pre_7 {res} -1.2647338   .83714427
{txt}  pre_6 {res} -.69274214   1.4193834
{txt}  pre_5 {res} -.80056597    1.091021
{txt}  pre_4 {res} -.86545933   1.1733478
{txt}  pre_3 {res} -.52479492   1.3159916
{txt}  pre_2 {res} -.55687465   1.5036178
{txt}  pre_1 {res} -1.0184405   .99660949
{txt}     r1 {res}          0           0
{txt} post_1 {res}  -2.785666  -1.4460005
{txt} post_2 {res} -2.8389835  -1.5840662
{txt} post_3 {res} -2.9736253  -1.6169242
{txt} post_4 {res} -3.7011916  -2.1147306
{txt} post_5 {res} -3.4497094  -1.7260845
{txt} post_6 {res} -3.9915415  -1.9184839
{txt} post_7 {res} -3.7245483  -1.3884189
{txt} post_8 {res} -3.5009489  -1.4476954
{txt} post_9 {res} -2.2370444  -.56740293
{txt}post_10 {res} -2.6540113  -1.0832269
{txt}post_11 {res} -3.1324568  -1.2832773
{txt}post_12 {res} -2.5439085  -.65531866
{txt}post_13 {res} -2.6478049  -.54063599
{txt}post_14 {res}  -2.506931  -1.1410075
{txt}post_15 {res} -3.4641226  -1.3511325
{txt}post_16 {res} -2.3140596  -.94478744
{txt}post_17 {res} -2.8969108  -.27664532
{txt}post_18 {res} -3.5242396  -.43864728
{txt}post_19 {res} -2.3462487  -.29008156
{reset}
{com}. 
. 
. ** Build Coefficient and Confidence Interval Matrix:
. mat AZ= (Z', pre_post')
{txt}
{com}. mat AZ= AZ,CI
{txt}
{com}. mat list AZ
{res}
{txt}AZ[38,4]
             r1          y1          lo          hi
 c1 {res}        -18   .32606518  -1.5430928   2.8191854
{txt} c2 {res}        -17  -.04438133   -1.452776   1.5537087
{txt} c3 {res}        -16  -.03655678  -1.4850302   1.3252272
{txt} c4 {res}        -15  -.46818063  -1.4632359   .56599239
{txt} c5 {res}        -14  -.01949026  -.94846015   .96260219
{txt} c6 {res}        -13  -.29860062  -1.3183592   .77546032
{txt} c7 {res}        -12  -.47162451   -1.314198   .44124723
{txt} c8 {res}        -11  -.11085152  -1.1213279   .96396634
{txt} c9 {res}        -10  -.07523471  -.99872763   .89284802
{txt}c10 {res}         -9   .16684608  -.84830786   1.2289502
{txt}c11 {res}         -8   .18906843  -.82840141   1.2432779
{txt}c12 {res}         -7  -.23532506  -1.2647338   .83714427
{txt}c13 {res}         -6   .37030032  -.69274214   1.4193834
{txt}c14 {res}         -5   .12861501  -.80056597    1.091021
{txt}c15 {res}         -4   .15602661  -.86545933   1.1733478
{txt}c16 {res}         -3   .39901097  -.52479492   1.3159916
{txt}c17 {res}         -2   .48587908  -.55687465   1.5036178
{txt}c18 {res}         -1  -.00528546  -1.0184405   .99660949
{txt}c19 {res}          0           0           0           0
{txt}c20 {res}          1  -2.1232799   -2.785666  -1.4460005
{txt}c21 {res}          2  -2.2199442  -2.8389835  -1.5840662
{txt}c22 {res}          3   -2.309616  -2.9736253  -1.6169242
{txt}c23 {res}          4  -2.9112571  -3.7011916  -2.1147306
{txt}c24 {res}          5  -2.6077668  -3.4497094  -1.7260845
{txt}c25 {res}          6  -2.9833802  -3.9915415  -1.9184839
{txt}c26 {res}          7  -2.5586725  -3.7245483  -1.3884189
{txt}c27 {res}          8  -2.4881103  -3.5009489  -1.4476954
{txt}c28 {res}          9  -1.4257967  -2.2370444  -.56740293
{txt}c29 {res}         10  -1.8760586  -2.6540113  -1.0832269
{txt}c30 {res}         11  -2.2139973  -3.1324568  -1.2832773
{txt}c31 {res}         12  -1.6099876  -2.5439085  -.65531866
{txt}c32 {res}         13  -1.6016544  -2.6478049  -.54063599
{txt}c33 {res}         14  -1.8336211   -2.506931  -1.1410075
{txt}c34 {res}         15  -2.3955274  -3.4641226  -1.3511325
{txt}c35 {res}         16  -1.6563705  -2.3140596  -.94478744
{txt}c36 {res}         17  -1.5651765  -2.8969108  -.27664532
{txt}c37 {res}         18  -2.0704959  -3.5242396  -.43864728
{txt}c38 {res}         19  -1.3840486  -2.3462487  -.29008156
{reset}
{com}. * Create variables from matrix so that you can graph them:
. svmat AZ, names(direct)
{txt}
{com}. sort direct1
{txt}
{com}. 
. 
. ** Coefficient estimates and CI are in IHS terms.
. * We can transform coefficient estimates in relative terms (i.e. % change):
. forvalues i = 5/7 {c -(}
{txt}  2{com}. local j=`i'-3
{txt}  3{com}. gen direct`i' = (exp(direct`j')-1)*100
{txt}  4{com}. {c )-}
{txt}(2,698 missing values generated)
(2,698 missing values generated)
(2,698 missing values generated)

{com}. 
. 
. * We can also transform coefficient estimates in absolute terms ($ mil.):
. ** For this we need to know the average value of FDI in the pre-treatment month for each affected region
. ** Then we take the average of that because the coefficient estimate is evaluated against this average:
. 
. * Generate pre-treatment average FDI inflows for each affected region:
. egen pre_fdi_avg = mean(fdi) if inlist(dif, -1) & affected_event==1
{txt}(2,724 missing values generated)

{com}. bysort id (pre_fdi_avg): replace pre_fdi_avg = pre_fdi_avg[1]
{txt}(2724 real changes made)

{com}. sum pre_fdi_avg

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 1}pre_fdi_avg {c |}{res}      2,736    154.3611           0   154.3611   154.3611
{txt}
{com}. 
. 
. * Convert relative changes to absolute changes 
. /* Remember direct2 is already in percentage terms */
. 
. forvalues i=8/10 {c -(}
{txt}  2{com}. local j=`i'-6
{txt}  3{com}. gen direct`i'= asinh(pre_fdi_avg) + direct`j'
{txt}  4{com}. replace direct`i'=sinh(direct`i') - pre_fdi_avg
{txt}  5{com}. {c )-}
{txt}(2,698 missing values generated)
(38 real changes made)
(2,698 missing values generated)
(38 real changes made)
(2,698 missing values generated)
(38 real changes made)

{com}. 
. 
. 
. * FIGURE 5A: IHS FDI Effect:
. sort direct1
{txt}
{com}. sum direct5  if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct5 {c |}{res}         19   -86.32365    6.273241  -94.93786  -74.94379
{txt}
{com}. 
. 
. 
. graph twoway (rarea direct3 direct4 direct1 if inrange(direct1,-18,18), color(gs10%20) fintensity(100))  ///
>         (connected direct2 direct1 if inrange(direct1,-18,18), msize(medium) xline(0) yline(0) lc(ebblue) mc(ebblue%70) msymbol(circle)) ///
>         , ytitle("Change in IHS of FDI", ax(1)) xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0) yline(0, axis(2 1)) ///
>         name(event_direct, replace) xscale(r(-18,18)) xlabel(-18(4)18) ///
>         ylabel( , angle(horizontal)) yscale(titlegap(*+1)) ///
>         legend(off)
{res}{txt}
{com}.         
.         
. 
.         
.         *legend(order(2 1) lab(1 "95% C. I.") lab(2 "Relative Change in FDI (%)") col(2) position(6)) ///
>         
.         
.         
.         *note("Note: Changes in IHS-transformed FDI are depicted with their respective 95% C.I. Point" ///
>         *"      estimates are based on 405 observations and range from -2.98 to 0.49. The regression produces" ///
>         *"      an R-squared of 0.79 and the C.I. is based on two-way wild cluster bootstrapped standard errors.")
. 
. 
. graph export _3results/figures/figure5a.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure5a.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. ** FIGURE 5.C: Relative FDI Effects
. sum direct5

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct5 {c |}{res}         38   -40.14486    50.99448  -94.93786   62.56034
{txt}
{com}. sum direct5 if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct5 {c |}{res}         19   -86.32365    6.273241  -94.93786  -74.94379
{txt}
{com}.         
. graph twoway (connected direct5 direct1 if inrange(direct1,-18,18), msize(medium) xline(0 ) yline(0 ) lc(ebblue) mc(ebblue%70) msymbol(circle)) ///
>         , ytitle("Change in FDI (%)", ax(1)) xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0, axis(1)) yline(0, axis(2 1)) ///
>         name(event_direct_rel, replace) xscale(r(-18,19)) xlabel(-18(4)19) yscale(r(-100,75)) ylabel(-100(25)75)  ///
>         yscale(titlegap(*+1)) //////
>         
{res}{txt}
{com}.         
.         *legend(lab(1 "Relative Change in FDI (%)")) ///
>         
.         *note("Note: Transformed point estimates range from -94.9% to 62.6% and average -86.3% post disaster.")
. 
. graph export _3results/figures/figure5c.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure5c.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. 
. * FIGURE 5.E: Absolute FDI Effect:
. sum direct8

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct8 {c |}{res}         38   -61.97528     78.7231   -146.579   96.57043
{txt}
{com}. sum direct8 pre_fdi_avg if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct8 {c |}{res}         19   -133.2647    9.690283   -146.579  -115.6901
{txt}{space 1}pre_fdi_avg {c |}{res}      2,717    154.3611           0   154.3611   154.3611
{txt}
{com}. replace direct10=200 if direct10>200
{txt}(2,713 real changes made)

{com}. 
. 
. graph twoway (connected direct8 direct1 if inrange(direct1,-18,18), msize(medium) xline(0) yline(0) lc(ebblue) mc(ebblue%70) msymbol(smccircle)) ///
>         , ytitle("Change in FDI ($ mil.)") xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0 ) yline(0) ///
>         name(event_direct_abs, replace) xscale(r(-18, 19)) xlabel(-18(4)19) ///
>         yscale(titlegap(*+1)) ///
>         
{p 0 4 2}
{txt}(note:  named style
smccircle not found in class
symbol,  default attributes used)
{p_end}
{res}{txt}
{com}.         
.         *note("Note: Absolute changes in FDI are calculated based the average FDI value of $154 mil." ///
>         *"         observed during the excluded reference month in the affected regions. Transformed point" ///
>         *"         estimates range from -$146 million to $96 million and average -$133 million post treatment.") 
. 
. 
. 
. graph export _3results/figures/figure5e.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure5e.pdf{rm}
saved as
PDF
format
{p_end}

{com}.         
. 
. 
.         
.         
.         
.         
.         
. *********************************************************************
. *** Event study regression on unaffected regions:
. *********************************************************************
. 
. ** Reload the data (since I had droped two regions for the dynamic analysis):
. 
. drop pre* post* direct*
{txt}
{com}. 
. 
. * Identify the pre-treatment month for the unaffected regions.
. * These are the relavant pre-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=1/22 {c -(}
{txt}  2{com}. local j=23-`i'
{txt}  3{com}. gen pre_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. * Identify the post-treatment month for the affected regions.
. * These are the relavant post-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=24/41{c -(}
{txt}  2{com}. local j=`i'-23
{txt}  3{com}. gen post_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. * Drop the t_fe* which are no longer needed:
. drop t_fe*
{txt}
{com}. 
. 
. sort region date
{txt}
{com}. 
. reg fdi_ihs pre* post* $control i.region1 if (affected_event==0), robust
{txt}{p 0 6 2}note: {bf:pre_22} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:pre_21} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:pre_20} omitted because of collinearity.{p_end}

Linear regression                               Number of obs     = {res}     2,283
                                                {txt}F(54, 2228)       =  {res}   319.40
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.7450
                                                {txt}Root MSE          =    {res} 1.2021

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}pre_22 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_21 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_20 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_19 {c |}{col 14}{res}{space 2} .2137553{col 26}{space 2} .2535482{col 37}{space 1}    0.84{col 46}{space 3}0.399{col 54}{space 4}-.2834602{col 67}{space 3} .7109708
{txt}{space 6}pre_18 {c |}{col 14}{res}{space 2}  .249256{col 26}{space 2} .2488213{col 37}{space 1}    1.00{col 46}{space 3}0.317{col 54}{space 4}-.2386899{col 67}{space 3} .7372019
{txt}{space 6}pre_17 {c |}{col 14}{res}{space 2}-.0093514{col 26}{space 2} .2030974{col 37}{space 1}   -0.05{col 46}{space 3}0.963{col 54}{space 4}-.4076314{col 67}{space 3} .3889286
{txt}{space 6}pre_16 {c |}{col 14}{res}{space 2} .1781661{col 26}{space 2} .2359356{col 37}{space 1}    0.76{col 46}{space 3}0.450{col 54}{space 4}-.2845106{col 67}{space 3} .6408428
{txt}{space 6}pre_15 {c |}{col 14}{res}{space 2} .2162596{col 26}{space 2} .1970057{col 37}{space 1}    1.10{col 46}{space 3}0.272{col 54}{space 4}-.1700743{col 67}{space 3} .6025935
{txt}{space 6}pre_14 {c |}{col 14}{res}{space 2} .2384471{col 26}{space 2} .2033617{col 37}{space 1}    1.17{col 46}{space 3}0.241{col 54}{space 4}-.1603511{col 67}{space 3} .6372453
{txt}{space 6}pre_13 {c |}{col 14}{res}{space 2} .1088028{col 26}{space 2} .2212077{col 37}{space 1}    0.49{col 46}{space 3}0.623{col 54}{space 4}-.3249921{col 67}{space 3} .5425976
{txt}{space 6}pre_12 {c |}{col 14}{res}{space 2}-.0834875{col 26}{space 2} .2593482{col 37}{space 1}   -0.32{col 46}{space 3}0.748{col 54}{space 4}-.5920769{col 67}{space 3} .4251018
{txt}{space 6}pre_11 {c |}{col 14}{res}{space 2} .2974728{col 26}{space 2} .1936123{col 37}{space 1}    1.54{col 46}{space 3}0.125{col 54}{space 4}-.0822065{col 67}{space 3} .6771522
{txt}{space 6}pre_10 {c |}{col 14}{res}{space 2}-.0312786{col 26}{space 2} .2329019{col 37}{space 1}   -0.13{col 46}{space 3}0.893{col 54}{space 4}-.4880061{col 67}{space 3} .4254489
{txt}{space 7}pre_9 {c |}{col 14}{res}{space 2} .1529605{col 26}{space 2} .2158473{col 37}{space 1}    0.71{col 46}{space 3}0.479{col 54}{space 4}-.2703223{col 67}{space 3} .5762433
{txt}{space 7}pre_8 {c |}{col 14}{res}{space 2} .4090335{col 26}{space 2} .1889071{col 37}{space 1}    2.17{col 46}{space 3}0.030{col 54}{space 4} .0385811{col 67}{space 3} .7794859
{txt}{space 7}pre_7 {c |}{col 14}{res}{space 2}-.0635302{col 26}{space 2} .1957473{col 37}{space 1}   -0.32{col 46}{space 3}0.746{col 54}{space 4}-.4473964{col 67}{space 3} .3203361
{txt}{space 7}pre_6 {c |}{col 14}{res}{space 2} .1831401{col 26}{space 2} .2065157{col 37}{space 1}    0.89{col 46}{space 3}0.375{col 54}{space 4}-.2218433{col 67}{space 3} .5881235
{txt}{space 7}pre_5 {c |}{col 14}{res}{space 2} .2753544{col 26}{space 2} .2048469{col 37}{space 1}    1.34{col 46}{space 3}0.179{col 54}{space 4}-.1263563{col 67}{space 3} .6770651
{txt}{space 7}pre_4 {c |}{col 14}{res}{space 2}-.0212116{col 26}{space 2} .1933231{col 37}{space 1}   -0.11{col 46}{space 3}0.913{col 54}{space 4}-.4003239{col 67}{space 3} .3579008
{txt}{space 7}pre_3 {c |}{col 14}{res}{space 2} .2983073{col 26}{space 2} .1911548{col 37}{space 1}    1.56{col 46}{space 3}0.119{col 54}{space 4}-.0765528{col 67}{space 3} .6731675
{txt}{space 7}pre_2 {c |}{col 14}{res}{space 2} .0843807{col 26}{space 2} .1852665{col 37}{space 1}    0.46{col 46}{space 3}0.649{col 54}{space 4}-.2789323{col 67}{space 3} .4476937
{txt}{space 7}pre_1 {c |}{col 14}{res}{space 2} .3764293{col 26}{space 2} .2030204{col 37}{space 1}    1.85{col 46}{space 3}0.064{col 54}{space 4}-.0216995{col 67}{space 3} .7745582
{txt}{space 6}post_1 {c |}{col 14}{res}{space 2} .1421201{col 26}{space 2}  .196173{col 37}{space 1}    0.72{col 46}{space 3}0.469{col 54}{space 4}-.2425809{col 67}{space 3} .5268211
{txt}{space 6}post_2 {c |}{col 14}{res}{space 2} .3719492{col 26}{space 2} .1903349{col 37}{space 1}    1.95{col 46}{space 3}0.051{col 54}{space 4}-.0013031{col 67}{space 3} .7452015
{txt}{space 6}post_3 {c |}{col 14}{res}{space 2} .3580473{col 26}{space 2} .1962073{col 37}{space 1}    1.82{col 46}{space 3}0.068{col 54}{space 4}-.0267209{col 67}{space 3} .7428155
{txt}{space 6}post_4 {c |}{col 14}{res}{space 2} .6453975{col 26}{space 2} .1988958{col 37}{space 1}    3.24{col 46}{space 3}0.001{col 54}{space 4}  .255357{col 67}{space 3} 1.035438
{txt}{space 6}post_5 {c |}{col 14}{res}{space 2} .6659831{col 26}{space 2} .1991325{col 37}{space 1}    3.34{col 46}{space 3}0.001{col 54}{space 4} .2754785{col 67}{space 3} 1.056488
{txt}{space 6}post_6 {c |}{col 14}{res}{space 2} .6207989{col 26}{space 2} .2281859{col 37}{space 1}    2.72{col 46}{space 3}0.007{col 54}{space 4} .1733198{col 67}{space 3} 1.068278
{txt}{space 6}post_7 {c |}{col 14}{res}{space 2} .7204005{col 26}{space 2} .2005666{col 37}{space 1}    3.59{col 46}{space 3}0.000{col 54}{space 4} .3270836{col 67}{space 3} 1.113717
{txt}{space 6}post_8 {c |}{col 14}{res}{space 2} .8151277{col 26}{space 2}  .178695{col 37}{space 1}    4.56{col 46}{space 3}0.000{col 54}{space 4} .4647015{col 67}{space 3} 1.165554
{txt}{space 6}post_9 {c |}{col 14}{res}{space 2} .7035588{col 26}{space 2} .1855761{col 37}{space 1}    3.79{col 46}{space 3}0.000{col 54}{space 4} .3396386{col 67}{space 3} 1.067479
{txt}{space 5}post_10 {c |}{col 14}{res}{space 2} .8266323{col 26}{space 2} .1966242{col 37}{space 1}    4.20{col 46}{space 3}0.000{col 54}{space 4} .4410464{col 67}{space 3} 1.212218
{txt}{space 5}post_11 {c |}{col 14}{res}{space 2} .6654492{col 26}{space 2} .1903171{col 37}{space 1}    3.50{col 46}{space 3}0.000{col 54}{space 4} .2922317{col 67}{space 3} 1.038667
{txt}{space 5}post_12 {c |}{col 14}{res}{space 2}  .770082{col 26}{space 2} .2019459{col 37}{space 1}    3.81{col 46}{space 3}0.000{col 54}{space 4} .3740602{col 67}{space 3} 1.166104
{txt}{space 5}post_13 {c |}{col 14}{res}{space 2} .6716086{col 26}{space 2} .1880481{col 37}{space 1}    3.57{col 46}{space 3}0.000{col 54}{space 4} .3028407{col 67}{space 3} 1.040376
{txt}{space 5}post_14 {c |}{col 14}{res}{space 2}  .579064{col 26}{space 2}  .225495{col 37}{space 1}    2.57{col 46}{space 3}0.010{col 54}{space 4} .1368618{col 67}{space 3} 1.021266
{txt}{space 5}post_15 {c |}{col 14}{res}{space 2} .5906566{col 26}{space 2} .1816241{col 37}{space 1}    3.25{col 46}{space 3}0.001{col 54}{space 4} .2344863{col 67}{space 3} .9468268
{txt}{space 5}post_16 {c |}{col 14}{res}{space 2} .8502753{col 26}{space 2} .2433133{col 37}{space 1}    3.49{col 46}{space 3}0.000{col 54}{space 4} .3731309{col 67}{space 3}  1.32742
{txt}{space 5}post_17 {c |}{col 14}{res}{space 2} .9413231{col 26}{space 2}   .44728{col 37}{space 1}    2.10{col 46}{space 3}0.035{col 54}{space 4} .0641939{col 67}{space 3} 1.818452
{txt}{space 5}post_18 {c |}{col 14}{res}{space 2}  .852307{col 26}{space 2} .2791414{col 37}{space 1}    3.05{col 46}{space 3}0.002{col 54}{space 4} .3049026{col 67}{space 3} 1.399711
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} .7301151{col 26}{space 2} .0615222{col 37}{space 1}   11.87{col 46}{space 3}0.000{col 54}{space 4} .6094681{col 67}{space 3}  .850762
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2} .6605309{col 26}{space 2} .0927731{col 37}{space 1}    7.12{col 46}{space 3}0.000{col 54}{space 4} .4786002{col 67}{space 3} .8424617
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.726653{col 26}{space 2} .0845789{col 37}{space 1}   20.41{col 46}{space 3}0.000{col 54}{space 4} 1.560791{col 67}{space 3} 1.892515
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-2.130281{col 26}{space 2} .1369364{col 37}{space 1}  -15.56{col 46}{space 3}0.000{col 54}{space 4}-2.398817{col 67}{space 3}-1.861745
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-3.249988{col 26}{space 2}  .134676{col 37}{space 1}  -24.13{col 46}{space 3}0.000{col 54}{space 4}-3.514092{col 67}{space 3}-2.985885
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-2.020034{col 26}{space 2} .1717718{col 37}{space 1}  -11.76{col 46}{space 3}0.000{col 54}{space 4}-2.356883{col 67}{space 3}-1.683184
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .5684373{col 26}{space 2} .0908349{col 37}{space 1}    6.26{col 46}{space 3}0.000{col 54}{space 4} .3903074{col 67}{space 3} .7465672
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-2.002321{col 26}{space 2}  .155085{col 37}{space 1}  -12.91{col 46}{space 3}0.000{col 54}{space 4}-2.306447{col 67}{space 3}-1.698195
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .1141064{col 26}{space 2} .1188994{col 37}{space 1}    0.96{col 46}{space 3}0.337{col 54}{space 4}-.1190589{col 67}{space 3} .3472717
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.621501{col 26}{space 2} .1257621{col 37}{space 1}  -20.84{col 46}{space 3}0.000{col 54}{space 4}-2.868125{col 67}{space 3}-2.374878
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-4.376741{col 26}{space 2} .1725206{col 37}{space 1}  -25.37{col 46}{space 3}0.000{col 54}{space 4}-4.715059{col 67}{space 3}-4.038423
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.875226{col 26}{space 2} .1545514{col 37}{space 1}  -12.13{col 46}{space 3}0.000{col 54}{space 4}-2.178306{col 67}{space 3}-1.572146
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2}-2.725652{col 26}{space 2} .1117421{col 37}{space 1}  -24.39{col 46}{space 3}0.000{col 54}{space 4}-2.944781{col 67}{space 3}-2.506522
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2}  .752014{col 26}{space 2} .0899535{col 37}{space 1}    8.36{col 46}{space 3}0.000{col 54}{space 4} .5756125{col 67}{space 3} .9284155
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.027616{col 26}{space 2} .1482651{col 37}{space 1}   13.68{col 46}{space 3}0.000{col 54}{space 4} 1.736864{col 67}{space 3} 2.318369
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} 1.487901{col 26}{space 2} .2847329{col 37}{space 1}    5.23{col 46}{space 3}0.000{col 54}{space 4} .9295312{col 67}{space 3}  2.04627
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-4.950678{col 26}{space 2} .1157951{col 37}{space 1}  -42.75{col 46}{space 3}0.000{col 54}{space 4}-5.177756{col 67}{space 3}-4.723601
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-12.32277{col 26}{space 2}  .747083{col 37}{space 1}  -16.49{col 46}{space 3}0.000{col 54}{space 4}-13.78782{col 67}{space 3}-10.85771
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. 
. boottest {c -(}pre_19{c )-} {c -(}pre_18{c )-} {c -(}pre_17{c )-} {c -(}pre_16{c )-} {c -(}pre_15{c )-} {c -(}pre_14{c )-} {c -(}pre_13{c )-} {c -(}pre_12{c )-} ///
>                 {c -(}pre_11{c )-} {c -(}pre_10{c )-} {c -(}pre_9{c )-} {c -(}pre_8{c )-} {c -(}pre_7{c )-} {c -(}pre_6{c )-} {c -(}pre_5{c )-} {c -(}pre_4{c )-} ///
>                 {c -(}pre_3{c )-} {c -(}pre_2{c )-} {c -(}pre_1{c )-} {c -(}post_1{c )-} {c -(}post_2{c )-} {c -(}post_3{c )-} {c -(}post_4{c )-}  {c -(}post_5{c )-} ///
>                 {c -(}post_6{c )-} {c -(}post_7{c )-} {c -(}post_8{c )-} {c -(}post_9{c )-} {c -(}post_10{c )-} {c -(}post_11{c )-} {c -(}post_12{c )-} {c -(}post_13{c )-} ///
>                 {c -(}post_14{c )-} {c -(}post_15{c )-} {c -(}post_16{c )-} {c -(}post_17{c )-} {c -(}post_18{c )-} ///
>                 , reps(9999) gridpoints(10)  bootcluster(region1) nograph seed(123)
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_19

{txt}{col 26}t(2228) = {res}    0.8431
{col 25}{txt}Prob>|t| = {res}    0.4119

95%{txt} confidence set for null hypothesis expression: [{res}-.3215{txt}, {res}.7456{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_18

{txt}{col 26}t(2228) = {res}    1.0017
{col 25}{txt}Prob>|t| = {res}    0.3238

95%{txt} confidence set for null hypothesis expression: [{res}-.2709{txt}, {res}.7622{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_17

{txt}{col 26}t(2228) = {res}   -0.0460
{col 25}{txt}Prob>|t| = {res}    0.9644

95%{txt} confidence set for null hypothesis expression: [{res}-.4245{txt}, {res}.4013{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_16

{txt}{col 26}t(2228) = {res}    0.7551
{col 25}{txt}Prob>|t| = {res}    0.4576

95%{txt} confidence set for null hypothesis expression: [{res}-.2949{txt}, {res}.6473{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_15

{txt}{col 26}t(2228) = {res}    1.0977
{col 25}{txt}Prob>|t| = {res}    0.2795

95%{txt} confidence set for null hypothesis expression: [{res}-.1857{txt}, {res}.6164{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_14

{txt}{col 26}t(2228) = {res}    1.1725
{col 25}{txt}Prob>|t| = {res}    0.2435

95%{txt} confidence set for null hypothesis expression: [{res}-.162{txt}, {res}.6462{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_13

{txt}{col 26}t(2228) = {res}    0.4919
{col 25}{txt}Prob>|t| = {res}    0.6349

95%{txt} confidence set for null hypothesis expression: [{res}-.3364{txt}, {res}.558{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_12

{txt}{col 26}t(2228) = {res}   -0.3219
{col 25}{txt}Prob>|t| = {res}    0.7614

95%{txt} confidence set for null hypothesis expression: [{res}-.5982{txt}, {res}.4297{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_11

{txt}{col 26}t(2228) = {res}    1.5364
{col 25}{txt}Prob>|t| = {res}    0.1176

95%{txt} confidence set for null hypothesis expression: [{res}-.08106{txt}, {res}.6726{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_10

{txt}{col 26}t(2228) = {res}   -0.1343
{col 25}{txt}Prob>|t| = {res}    0.8951

95%{txt} confidence set for null hypothesis expression: [{res}-.5011{txt}, {res}.4317{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_9

{txt}{col 26}t(2228) = {res}    0.7087
{col 25}{txt}Prob>|t| = {res}    0.4780

95%{txt} confidence set for null hypothesis expression: [{res}-.2797{txt}, {res}.5914{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_8

{txt}{col 26}t(2228) = {res}    2.1653
{col 25}{txt}Prob>|t| = {res}    0.0317

95%{txt} confidence set for null hypothesis expression: [{res}.03955{txt}, {res}.7783{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_7

{txt}{col 26}t(2228) = {res}   -0.3246
{col 25}{txt}Prob>|t| = {res}    0.7457

95%{txt} confidence set for null hypothesis expression: [{res}-.4554{txt}, {res}.3305{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_6

{txt}{col 26}t(2228) = {res}    0.8868
{col 25}{txt}Prob>|t| = {res}    0.3759

95%{txt} confidence set for null hypothesis expression: [{res}-.23{txt}, {res}.6{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_5

{txt}{col 26}t(2228) = {res}    1.3442
{col 25}{txt}Prob>|t| = {res}    0.1881

95%{txt} confidence set for null hypothesis expression: [{res}-.1367{txt}, {res}.6841{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_4

{txt}{col 26}t(2228) = {res}   -0.1097
{col 25}{txt}Prob>|t| = {res}    0.9163

95%{txt} confidence set for null hypothesis expression: [{res}-.4134{txt}, {res}.3683{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_3

{txt}{col 26}t(2228) = {res}    1.5606
{col 25}{txt}Prob>|t| = {res}    0.1200

95%{txt} confidence set for null hypothesis expression: [{res}-.08708{txt}, {res}.678{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_2

{txt}{col 26}t(2228) = {res}    0.4555
{col 25}{txt}Prob>|t| = {res}    0.6434

95%{txt} confidence set for null hypothesis expression: [{res}-.2891{txt}, {res}.4556{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}pre_1

{txt}{col 26}t(2228) = {res}    1.8541
{col 25}{txt}Prob>|t| = {res}    0.0623

95%{txt} confidence set for null hypothesis expression: [{res}-.02462{txt}, {res}.7741{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_1

{txt}{col 26}t(2228) = {res}    0.7245
{col 25}{txt}Prob>|t| = {res}    0.4623

95%{txt} confidence set for null hypothesis expression: [{res}-.2438{txt}, {res}.53{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_2

{txt}{col 26}t(2228) = {res}    1.9542
{col 25}{txt}Prob>|t| = {res}    0.0546

95%{txt} confidence set for null hypothesis expression: [{res}-.007631{txt}, {res}.7481{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_3

{txt}{col 26}t(2228) = {res}    1.8248
{col 25}{txt}Prob>|t| = {res}    0.0685

95%{txt} confidence set for null hypothesis expression: [{res}-.02862{txt}, {res}.7453{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_4

{txt}{col 26}t(2228) = {res}    3.2449
{col 25}{txt}Prob>|t| = {res}    0.0017

95%{txt} confidence set for null hypothesis expression: [{res}.2576{txt}, {res}1.024{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_5

{txt}{col 26}t(2228) = {res}    3.3444
{col 25}{txt}Prob>|t| = {res}    0.0009

95%{txt} confidence set for null hypothesis expression: [{res}.2845{txt}, {res}1.048{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_6

{txt}{col 26}t(2228) = {res}    2.7206
{col 25}{txt}Prob>|t| = {res}    0.0072

95%{txt} confidence set for null hypothesis expression: [{res}.1761{txt}, {res}1.064{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_7

{txt}{col 26}t(2228) = {res}    3.5918
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}.3431{txt}, {res}1.103{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_8

{txt}{col 26}t(2228) = {res}    4.5616
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}.4851{txt}, {res}1.147{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_9

{txt}{col 26}t(2228) = {res}    3.7912
{col 25}{txt}Prob>|t| = {res}    0.0003

95%{txt} confidence set for null hypothesis expression: [{res}.3504{txt}, {res}1.058{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_10

{txt}{col 26}t(2228) = {res}    4.2041
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}.4577{txt}, {res}1.193{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_11

{txt}{col 26}t(2228) = {res}    3.4965
{col 25}{txt}Prob>|t| = {res}    0.0003

95%{txt} confidence set for null hypothesis expression: [{res}.3038{txt}, {res}1.031{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_12

{txt}{col 26}t(2228) = {res}    3.8133
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}.3874{txt}, {res}1.157{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_13

{txt}{col 26}t(2228) = {res}    3.5715
{col 25}{txt}Prob>|t| = {res}    0.0003

95%{txt} confidence set for null hypothesis expression: [{res}.3168{txt}, {res}1.031{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_14

{txt}{col 26}t(2228) = {res}    2.5680
{col 25}{txt}Prob>|t| = {res}    0.0104

95%{txt} confidence set for null hypothesis expression: [{res}.1359{txt}, {res}1.02{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_15

{txt}{col 26}t(2228) = {res}    3.2521
{col 25}{txt}Prob>|t| = {res}    0.0014

95%{txt} confidence set for null hypothesis expression: [{res}.2423{txt}, {res}.9395{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_16

{txt}{col 26}t(2228) = {res}    3.4946
{col 25}{txt}Prob>|t| = {res}    0.0010

95%{txt} confidence set for null hypothesis expression: [{res}.3974{txt}, {res}1.298{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_17

{txt}{col 26}t(2228) = {res}    2.1045
{col 25}{txt}Prob>|t| = {res}    0.0599

95%{txt} confidence set for null hypothesis expression: [{res}-.04229{txt}, {res}1.873{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1{txt}, Rademacher weights:
  {res}post_18

{txt}{col 26}t(2228) = {res}    3.0533
{col 25}{txt}Prob>|t| = {res}    0.0098

95%{txt} confidence set for null hypothesis expression: [{res}.3208{txt}, {res}1.339{txt}]
{res}{txt}
{com}.                 
. ** These are too many coefficients to report and I like to create my own coeffient plot
. ** Here is the code:
. * Pull coefficients into matrix:
. mat beta=e(b)
{txt}
{com}. 
. ** Average Treatment Effects:
. mat A = beta[1,4..40]
{txt}
{com}. 
. mat pre= A[1,1..18]
{txt}
{com}. mat post= A[1,19..37]
{txt}
{com}. 
. * Need to set the reference month at 0:
. mat pre_post=(pre, 0, post)
{txt}
{com}. mat list pre_post
{res}
{txt}pre_post[1,38]
        pre_19      pre_18      pre_17      pre_16      pre_15      pre_14      pre_13      pre_12      pre_11      pre_10       pre_9       pre_8       pre_7
y1 {res}  .21375532     .249256  -.00935142   .17816612   .21625962   .23844712   .10880276  -.08348754   .29747282   -.0312786   .15296048    .4090335  -.06353018

{txt}         pre_6       pre_5       pre_4       pre_3       pre_2         c19       pre_1      post_1      post_2      post_3      post_4      post_5      post_6
y1 {res}  .18314013    .2753544  -.02121157   .29830735   .08438071           0   .37642935   .14212011   .37194921    .3580473   .64539753   .66598312   .62079894

{txt}        post_7      post_8      post_9     post_10     post_11     post_12     post_13     post_14     post_15     post_16     post_17     post_18
y1 {res}  .72040051   .81512767   .70355876   .82663226   .66544923   .77008197   .67160856   .57906401    .5906566   .85027533   .94132306   .85230703
{reset}
{com}. 
. 
. ** Create a counter column:
. mat Z=J(1,38,0)
{txt}
{com}. local j=1
{txt}
{com}. forvalues i=-18/19 {c -(}
{txt}  2{com}. mat Z[1,`j'] = `i'
{txt}  3{com}. local j=`j'+1
{txt}  4{com}. {c )-}
{txt}
{com}. 
. ** Grab the confidence intervals and append them together:
. mat CI=r(CI_1)
{txt}
{com}. 
. 
. 
. 
. 
. mat missing=J(1,2,.)
{txt}
{com}. forvalues i=2/18 {c -(}
{txt}  2{com}. capture confirm mat r(CI_`i')
{txt}  3{com}. if !_rc {c -(}
{txt}  4{com}. mat CI=CI\r(CI_`i')
{txt}  5{com}. {c )-}
{txt}  6{com}. else {c -(}
{txt}  7{com}. mat CI=CI\missing
{txt}  8{com}. {c )-}
{txt}  9{com}. {c )-}
{txt}
{com}. 
. mat zero=J(1,2,0)
{txt}
{com}. mat CI = CI\zero
{txt}
{com}. 
. forvalues i=19/37 {c -(}
{txt}  2{com}. capture confirm mat r(CI_`i')
{txt}  3{com}. if !_rc {c -(}
{txt}  4{com}. mat CI=CI\r(CI_`i')
{txt}  5{com}. {c )-}
{txt}  6{com}. else {c -(}
{txt}  7{com}. mat CI=CI\missing
{txt}  8{com}. {c )-}
{txt}  9{com}. {c )-}
{txt}
{com}. mat list CI
{res}
{txt}CI[38,2]
                 lo          hi
 pre_19 {res} -.32146528   .74558051
{txt} pre_18 {res}  -.2708568   .76217803
{txt} pre_17 {res} -.42447455   .40126043
{txt} pre_16 {res}  -.2949236   .64728588
{txt} pre_15 {res} -.18566474   .61641676
{txt} pre_14 {res} -.16200382   .64620116
{txt} pre_13 {res} -.33642466    .5579986
{txt} pre_12 {res} -.59820774   .42971335
{txt} pre_11 {res} -.08105676   .67260778
{txt} pre_10 {res} -.50108089   .43166344
{txt}  pre_9 {res} -.27970755    .5914275
{txt}  pre_8 {res}  .03954521    .7783446
{txt}  pre_7 {res}  -.4554359   .33049597
{txt}  pre_6 {res} -.22997977   .60000024
{txt}  pre_5 {res} -.13666186   .68407744
{txt}  pre_4 {res} -.41342401   .36831981
{txt}  pre_3 {res} -.08707727    .6780449
{txt}  pre_2 {res} -.28913469   .45559492
{txt}     r1 {res}          0           0
{txt}  pre_1 {res} -.02462314   .77408054
{txt} post_1 {res} -.24380588   .53004135
{txt} post_2 {res} -.00763136   .74808105
{txt} post_3 {res} -.02861771   .74531477
{txt} post_4 {res}   .2576343   1.0239802
{txt} post_5 {res}  .28448061   1.0481307
{txt} post_6 {res}  .17611514   1.0635937
{txt} post_7 {res}  .34307072   1.1026536
{txt} post_8 {res}  .48514754   1.1472273
{txt} post_9 {res}  .35042812   1.0580141
{txt}post_10 {res}  .45768328    1.193073
{txt}post_11 {res}  .30379366   1.0314795
{txt}post_12 {res}  .38736046    1.156739
{txt}post_13 {res}  .31681116   1.0306443
{txt}post_14 {res}  .13593006   1.0201789
{txt}post_15 {res}   .2422626   .93948411
{txt}post_16 {res}  .39740613   1.2978962
{txt}post_17 {res} -.04228636   1.8732174
{txt}post_18 {res}   .3207898   1.3385441
{reset}
{com}. 
. 
. ** Build Coefficient and Confidence Interval Matrix:
. mat AZ= (Z', pre_post')
{txt}
{com}. mat AZ= AZ,CI
{txt}
{com}. mat list AZ
{res}
{txt}AZ[38,4]
             r1          y1          lo          hi
 c1 {res}        -18   .21375532  -.32146528   .74558051
{txt} c2 {res}        -17     .249256   -.2708568   .76217803
{txt} c3 {res}        -16  -.00935142  -.42447455   .40126043
{txt} c4 {res}        -15   .17816612   -.2949236   .64728588
{txt} c5 {res}        -14   .21625962  -.18566474   .61641676
{txt} c6 {res}        -13   .23844712  -.16200382   .64620116
{txt} c7 {res}        -12   .10880276  -.33642466    .5579986
{txt} c8 {res}        -11  -.08348754  -.59820774   .42971335
{txt} c9 {res}        -10   .29747282  -.08105676   .67260778
{txt}c10 {res}         -9   -.0312786  -.50108089   .43166344
{txt}c11 {res}         -8   .15296048  -.27970755    .5914275
{txt}c12 {res}         -7    .4090335   .03954521    .7783446
{txt}c13 {res}         -6  -.06353018   -.4554359   .33049597
{txt}c14 {res}         -5   .18314013  -.22997977   .60000024
{txt}c15 {res}         -4    .2753544  -.13666186   .68407744
{txt}c16 {res}         -3  -.02121157  -.41342401   .36831981
{txt}c17 {res}         -2   .29830735  -.08707727    .6780449
{txt}c18 {res}         -1   .08438071  -.28913469   .45559492
{txt}c19 {res}          0           0           0           0
{txt}c20 {res}          1   .37642935  -.02462314   .77408054
{txt}c21 {res}          2   .14212011  -.24380588   .53004135
{txt}c22 {res}          3   .37194921  -.00763136   .74808105
{txt}c23 {res}          4    .3580473  -.02861771   .74531477
{txt}c24 {res}          5   .64539753    .2576343   1.0239802
{txt}c25 {res}          6   .66598312   .28448061   1.0481307
{txt}c26 {res}          7   .62079894   .17611514   1.0635937
{txt}c27 {res}          8   .72040051   .34307072   1.1026536
{txt}c28 {res}          9   .81512767   .48514754   1.1472273
{txt}c29 {res}         10   .70355876   .35042812   1.0580141
{txt}c30 {res}         11   .82663226   .45768328    1.193073
{txt}c31 {res}         12   .66544923   .30379366   1.0314795
{txt}c32 {res}         13   .77008197   .38736046    1.156739
{txt}c33 {res}         14   .67160856   .31681116   1.0306443
{txt}c34 {res}         15   .57906401   .13593006   1.0201789
{txt}c35 {res}         16    .5906566    .2422626   .93948411
{txt}c36 {res}         17   .85027533   .39740613   1.2978962
{txt}c37 {res}         18   .94132306  -.04228636   1.8732174
{txt}c38 {res}         19   .85230703    .3207898   1.3385441
{reset}
{com}. * Create variables from matrix so that you can graph them:
. svmat AZ, names(direct)
{txt}
{com}. sort direct1
{txt}
{com}. 
. 
. 
. 
. ** Coefficient estimates and CI are in IHS terms.
. * We can transform coefficient estimates in relative terms (i.e. % change):
. forvalues i = 5/7 {c -(}
{txt}  2{com}. local j=`i'-3
{txt}  3{com}. gen direct`i' = (exp(direct`j')-1)*100
{txt}  4{com}. {c )-}
{txt}(2,698 missing values generated)
(2,698 missing values generated)
(2,698 missing values generated)

{com}. 
. 
. * We can also transform coefficient estimates in absolute terms ($ mil.):
. ** For this we need to know the average value of FDI in the pre-treatment month for each affected region
. ** Then we take the average of that because the coefficient estimate is evaluated against this average:
. 
. * Generate pre-treatment average FDI inflows for each affected region:
. egen pre_fdi_avg = mean(fdi) if inlist(dif, 0) & affected_event==0
{txt}(2,668 missing values generated)

{com}. bysort id (pre_fdi_avg): replace pre_fdi_avg = pre_fdi_avg[1]
{txt}(2668 real changes made)

{com}. 
. *fill up 
. 
. gsort -direct1
{txt}
{com}. replace pre_fdi_avg = pre_fdi_avg[_n-1] if missing(pre_fdi_avg)
{txt}(0 real changes made)

{com}. sum pre_fdi_avg

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 1}pre_fdi_avg {c |}{res}      2,736    93.68627           0   93.68627   93.68627
{txt}
{com}. 
. 
. 
. * Convert relative changes to absolute changes 
. /* Remember direct2 is already in percentage terms */
. 
. forvalues i=8/10 {c -(}
{txt}  2{com}. local j=`i'-6
{txt}  3{com}. gen direct`i'= asinh(pre_fdi_avg) + direct`j'
{txt}  4{com}. replace direct`i'=sinh(direct`i') - pre_fdi_avg
{txt}  5{com}. {c )-}
{txt}(2,698 missing values generated)
(38 real changes made)
(2,698 missing values generated)
(38 real changes made)
(2,698 missing values generated)
(38 real changes made)

{com}. 
. * Let's graph the relative changes with CI and the absolute changes in FDI:
. *** The confidence interval reaches to far and messes up the scale of the graph.
. ** We restrict the cofidence interval to max 300 see note on figure
. 
. 
. * FIGURE 5.B: Indirect IHS FDI Effect:
. sort direct1
{txt}
{com}. sum direct2  

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct2 {c |}{res}         38    .3911497    .3067042  -.0834875    .941323
{txt}
{com}. sum direct2  if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct2 {c |}{res}         19    .6403795     .204203   .1421201    .941323
{txt}
{com}. 
. graph twoway (rarea direct3 direct4 direct1 if inrange(direct1,-18,18), color(gs10%20))  ///
>         (connected direct2 direct1 if inrange(direct1,-18,18), msize(medium) xline(0 ) yline(0 ) lc(ebblue) mc(ebblue%70) msymbol(smccircle)) ///
>         , ytitle("Change in IHS of FDI", ax(1)) xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0, axis(1) lcolor(black)) yline(0, axis(2 1) lcolor(black)) ///
>         name(event_indirect, replace) xscale(r(-18,18)) xlabel(-18(4)18) ///
>         ylabel(, angle(horizontal)) yscale(titlegap(*+1)) ///
>         legend(off)
{p 0 4 2}
{txt}(note:  named style
smccircle not found in class
symbol,  default attributes used)
{p_end}
{res}{txt}
{com}.         
.         
.         
.         *legend(order(2 1) lab(1 "95% C. I.") lab(2 "Relative Change in FDI (%)") col(2) position(6)) ///
>         
.         
.         
.         *note("Note: Changes in IHS-transformed FDI are depicted with their respective 95% confidence interval." ///
>         *"      Point estimates are based on 2,283 observations and range from -0.08 to 0.94. The regression" ///
>         *"      produces an R-squared of 0.75 and standard errors are heteroskedasticity-robust.")
. 
. 
. graph export _3results/figures/figure5b.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure5b.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. * FIGURE 5.D: INDIRECT RELATIVE FDI EFFECTS     
. sum direct5 

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct5 {c |}{res}         38     54.8333    47.98664  -8.009746   156.3371
{txt}
{com}. sum direct5 if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct5 {c |}{res}         19    93.29814    36.54542   15.27151   156.3371
{txt}
{com}. graph twoway (connected direct5 direct1 if inrange(direct1,-18,18), msize(medium) xline(0 ) yline(0 ) lc(ebblue) mc(ebblue%70) msymbol(smccircle)) ///
>         , ytitle("Change in FDI (%)", ax(1)) xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0, axis(1) lcolor(black)) yline(0, axis(2 1) lcolor(black)) yscale(titlegap(*+1)) ///
>         name(event_indirect_rel, replace) yscale(r(-25,150)) ylabel(-25(25)150) xscale(r(-18,19)) xlabel(-18(4)19) ///
>         
{p 0 4 2}
{txt}(note:  named style
smccircle not found in class
symbol,  default attributes used)
{p_end}
{res}{txt}
{com}.         
.         *legend(order(2 1) lab(1 "95% C. I.") lab(2 "Relative Change in FDI (%)")) ///
>         *note("Note: Transformed point estimates range from -8.0% to 156.3% and average 93.7% post disaster.")
.         
. 
. graph export _3results/figures/figure5d.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure5d.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. * FIGURE 5.F: INDIRECT ABSOLUTE FDI EFFECTS:    
. sum direct8 pre_fdi_avg

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct8 {c |}{res}         38    51.37352    44.95872  -7.504493   146.4722
{txt}{space 1}pre_fdi_avg {c |}{res}      2,736    93.68627           0   93.68627   93.68627
{txt}
{com}. sum direct8 if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct8 {c |}{res}         19    87.41127    34.23933   14.30807   146.4722
{txt}
{com}. replace direct10=200 if direct10>200
{txt}(2,704 real changes made)

{com}. 
. graph twoway (connected direct8 direct1 if inrange(direct1,-18,18), msize(medium) xline(0 ) yline(0 ) lc(ebblue) mc(ebblue%70) msymbol(smccircle)) ///
>         , ytitle("Change in FDI ($ mil.)") xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0 ) yline(0 ) ///
>         name(event_indirect_abs, replace) yscale(r(-25,150)) ylabel(-25(25)150) xscale(r(-18, 19)) xlabel(-18(4)19) ///
>         yscale(titlegap(*+1)) ///
>         
{p 0 4 2}
{txt}(note:  named style
smccircle not found in class
symbol,  default attributes used)
{p_end}
{res}{txt}
{com}.         
.         *note("Note: Absolute changes in FDI are calculated based on the average FDI value of $94 mil." ///
>         *"         observed during the excluded reference month in the unaffected regions. Transformed" ///
>         *"         point estimates range from -$8 million to $146 million and average $88 million post treatment.")
. 
. 
. graph export _3results/figures/figure5f.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figure5f.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. 
. 
.         
. 
. 
. 
. 
{txt}end of do-file

{com}. do _2code/_2analysis/figureB1
{txt}
{com}. ********************************************************************************
. * Figure B1: Spillover effects excluding Mumbai and Banglore
. 
. ********************************************************************************
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. ** Exclude Mumbai and Bangalore:
. 
. drop if region=="mumbai" | region=="bangalore"
{txt}(342 observations deleted)

{com}. 
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. *generate months to event for new disasters
. 
. generate dif=1000
{txt}
{com}. order region date Count dif
{txt}
{com}. 
. replace dif=Count-23 if Count<39 
{txt}(532 real changes made)

{com}. replace dif=Count-55 if Count>=39 & Count <74 
{txt}(490 real changes made)

{com}. replace dif=Count-93 if Count>=74 & Count <107 
{txt}(462 real changes made)

{com}. replace dif=Count-122 if Count>=107 & Count <138 
{txt}(434 real changes made)

{com}. replace dif=Count-155 if Count>=138
{txt}(476 real changes made)

{com}. 
. 
. 
. *generate affected region dummy for event study
. gen affected_event=0
{txt}
{com}. replace affected_event=1 if (Count<39 & (region=="kolkata" | region=="patna"))
{txt}(76 real changes made)

{com}. replace affected_event=1 if (Count>=39 & Count <74 & (region=="bubaneshwar" | region=="guwahati" | region=="kolkata" | region=="patna"))
{txt}(140 real changes made)

{com}. replace affected_event=1 if (Count>=74 & Count <107  & (region=="chandigarh" | region=="new_delhi" | region=="kanpur"))
{txt}(99 real changes made)

{com}. replace affected_event=1 if (Count>=107 & Count <138   & (region=="hyderabad" | region=="chennai"))
{txt}(62 real changes made)

{com}. replace affected_event=1 if (Count>=138  & region=="kochi")
{txt}(34 real changes made)

{com}. 
. *time to event variables as factors
. tostring dif, replace
{txt}dif was {res:float} now {res:str3}

{com}. 
. destring dif, replace
{txt}dif: all characters numeric; {res}replaced {txt}as {res}byte
{txt}
{com}. tab dif, gen(t_fe)

        {txt}dif {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
        -22 {c |}{res}         14        0.58        0.58
{txt}        -21 {c |}{res}         14        0.58        1.17
{txt}        -20 {c |}{res}         14        0.58        1.75
{txt}        -19 {c |}{res}         28        1.17        2.92
{txt}        -18 {c |}{res}         28        1.17        4.09
{txt}        -17 {c |}{res}         42        1.75        5.85
{txt}        -16 {c |}{res}         56        2.34        8.19
{txt}        -15 {c |}{res}         70        2.92       11.11
{txt}        -14 {c |}{res}         70        2.92       14.04
{txt}        -13 {c |}{res}         70        2.92       16.96
{txt}        -12 {c |}{res}         70        2.92       19.88
{txt}        -11 {c |}{res}         70        2.92       22.81
{txt}        -10 {c |}{res}         70        2.92       25.73
{txt}         -9 {c |}{res}         70        2.92       28.65
{txt}         -8 {c |}{res}         70        2.92       31.58
{txt}         -7 {c |}{res}         70        2.92       34.50
{txt}         -6 {c |}{res}         70        2.92       37.43
{txt}         -5 {c |}{res}         70        2.92       40.35
{txt}         -4 {c |}{res}         70        2.92       43.27
{txt}         -3 {c |}{res}         70        2.92       46.20
{txt}         -2 {c |}{res}         70        2.92       49.12
{txt}         -1 {c |}{res}         70        2.92       52.05
{txt}          0 {c |}{res}         70        2.92       54.97
{txt}          1 {c |}{res}         70        2.92       57.89
{txt}          2 {c |}{res}         70        2.92       60.82
{txt}          3 {c |}{res}         70        2.92       63.74
{txt}          4 {c |}{res}         70        2.92       66.67
{txt}          5 {c |}{res}         70        2.92       69.59
{txt}          6 {c |}{res}         70        2.92       72.51
{txt}          7 {c |}{res}         70        2.92       75.44
{txt}          8 {c |}{res}         70        2.92       78.36
{txt}          9 {c |}{res}         70        2.92       81.29
{txt}         10 {c |}{res}         70        2.92       84.21
{txt}         11 {c |}{res}         70        2.92       87.13
{txt}         12 {c |}{res}         70        2.92       90.06
{txt}         13 {c |}{res}         70        2.92       92.98
{txt}         14 {c |}{res}         56        2.34       95.32
{txt}         15 {c |}{res}         56        2.34       97.66
{txt}         16 {c |}{res}         28        1.17       98.83
{txt}         17 {c |}{res}         14        0.58       99.42
{txt}         18 {c |}{res}         14        0.58      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      2,394      100.00
{txt}
{com}. 
.         
. 
. * Identify the pre-treatment month for the unaffected regions.
. * These are the relavant pre-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=1/22 {c -(}
{txt}  2{com}. local j=23-`i'
{txt}  3{com}. gen pre_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. * Identify the post-treatment month for the affected regions.
. * These are the relavant post-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=24/41{c -(}
{txt}  2{com}. local j=`i'-23
{txt}  3{com}. gen post_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. * Drop the t_fe* which are no longer needed:
. drop t_fe*
{txt}
{com}. 
. 
. 
. sort region date
{txt}
{com}. 
. reg fdi_ihs pre* post* $control i.region1 if (affected_event==0), robust
{txt}{p 0 6 2}note: {bf:pre_22} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:pre_21} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:pre_20} omitted because of collinearity.{p_end}

Linear regression                               Number of obs     = {res}     1,947
                                                {txt}F(52, 1894)       =  {res}   183.21
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.6493
                                                {txt}Root MSE          =    {res} 1.2737

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}pre_22 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_21 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_20 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 6}pre_19 {c |}{col 14}{res}{space 2} .1956031{col 26}{space 2} .2880203{col 37}{space 1}    0.68{col 46}{space 3}0.497{col 54}{space 4}-.3692673{col 67}{space 3} .7604734
{txt}{space 6}pre_18 {c |}{col 14}{res}{space 2} .2647255{col 26}{space 2}  .286762{col 37}{space 1}    0.92{col 46}{space 3}0.356{col 54}{space 4}-.2976771{col 67}{space 3} .8271281
{txt}{space 6}pre_17 {c |}{col 14}{res}{space 2} -.055737{col 26}{space 2} .2332871{col 37}{space 1}   -0.24{col 46}{space 3}0.811{col 54}{space 4}-.5132637{col 67}{space 3} .4017897
{txt}{space 6}pre_16 {c |}{col 14}{res}{space 2} .1365641{col 26}{space 2} .2741456{col 37}{space 1}    0.50{col 46}{space 3}0.618{col 54}{space 4}-.4010951{col 67}{space 3} .6742232
{txt}{space 6}pre_15 {c |}{col 14}{res}{space 2} .1875628{col 26}{space 2} .2270866{col 37}{space 1}    0.83{col 46}{space 3}0.409{col 54}{space 4}-.2578034{col 67}{space 3}  .632929
{txt}{space 6}pre_14 {c |}{col 14}{res}{space 2} .2516357{col 26}{space 2} .2345938{col 37}{space 1}    1.07{col 46}{space 3}0.284{col 54}{space 4}-.2084538{col 67}{space 3} .7117251
{txt}{space 6}pre_13 {c |}{col 14}{res}{space 2}  .057133{col 26}{space 2} .2561982{col 37}{space 1}    0.22{col 46}{space 3}0.824{col 54}{space 4}-.4453273{col 67}{space 3} .5595933
{txt}{space 6}pre_12 {c |}{col 14}{res}{space 2}-.1031829{col 26}{space 2} .3001352{col 37}{space 1}   -0.34{col 46}{space 3}0.731{col 54}{space 4}-.6918133{col 67}{space 3} .4854475
{txt}{space 6}pre_11 {c |}{col 14}{res}{space 2}  .279967{col 26}{space 2} .2232987{col 37}{space 1}    1.25{col 46}{space 3}0.210{col 54}{space 4}-.1579703{col 67}{space 3} .7179043
{txt}{space 6}pre_10 {c |}{col 14}{res}{space 2}-.0824959{col 26}{space 2} .2704829{col 37}{space 1}   -0.30{col 46}{space 3}0.760{col 54}{space 4}-.6129716{col 67}{space 3} .4479799
{txt}{space 7}pre_9 {c |}{col 14}{res}{space 2} .1136144{col 26}{space 2} .2505758{col 37}{space 1}    0.45{col 46}{space 3}0.650{col 54}{space 4}-.3778192{col 67}{space 3}  .605048
{txt}{space 7}pre_8 {c |}{col 14}{res}{space 2} .4355542{col 26}{space 2} .2176203{col 37}{space 1}    2.00{col 46}{space 3}0.045{col 54}{space 4} .0087536{col 67}{space 3} .8623549
{txt}{space 7}pre_7 {c |}{col 14}{res}{space 2}-.1260587{col 26}{space 2} .2272868{col 37}{space 1}   -0.55{col 46}{space 3}0.579{col 54}{space 4}-.5718175{col 67}{space 3} .3197001
{txt}{space 7}pre_6 {c |}{col 14}{res}{space 2} .1456252{col 26}{space 2} .2399172{col 37}{space 1}    0.61{col 46}{space 3}0.544{col 54}{space 4}-.3249046{col 67}{space 3} .6161549
{txt}{space 7}pre_5 {c |}{col 14}{res}{space 2} .3082587{col 26}{space 2} .2371679{col 37}{space 1}    1.30{col 46}{space 3}0.194{col 54}{space 4} -.156879{col 67}{space 3} .7733964
{txt}{space 7}pre_4 {c |}{col 14}{res}{space 2}-.0278555{col 26}{space 2} .2224044{col 37}{space 1}   -0.13{col 46}{space 3}0.900{col 54}{space 4}-.4640388{col 67}{space 3} .4083277
{txt}{space 7}pre_3 {c |}{col 14}{res}{space 2} .3042223{col 26}{space 2} .2205765{col 37}{space 1}    1.38{col 46}{space 3}0.168{col 54}{space 4}-.1283761{col 67}{space 3} .7368206
{txt}{space 7}pre_2 {c |}{col 14}{res}{space 2} .0675701{col 26}{space 2} .2152375{col 37}{space 1}    0.31{col 46}{space 3}0.754{col 54}{space 4}-.3545573{col 67}{space 3} .4896976
{txt}{space 7}pre_1 {c |}{col 14}{res}{space 2} .4077877{col 26}{space 2} .2317452{col 37}{space 1}    1.76{col 46}{space 3}0.079{col 54}{space 4}-.0467149{col 67}{space 3} .8622903
{txt}{space 6}post_1 {c |}{col 14}{res}{space 2} .2315185{col 26}{space 2} .2245741{col 37}{space 1}    1.03{col 46}{space 3}0.303{col 54}{space 4}-.2089201{col 67}{space 3} .6719572
{txt}{space 6}post_2 {c |}{col 14}{res}{space 2} .4936294{col 26}{space 2} .2159161{col 37}{space 1}    2.29{col 46}{space 3}0.022{col 54}{space 4}  .070171{col 67}{space 3} .9170877
{txt}{space 6}post_3 {c |}{col 14}{res}{space 2} .4553728{col 26}{space 2} .2244779{col 37}{space 1}    2.03{col 46}{space 3}0.043{col 54}{space 4} .0151229{col 67}{space 3} .8956228
{txt}{space 6}post_4 {c |}{col 14}{res}{space 2} .6137591{col 26}{space 2} .2308698{col 37}{space 1}    2.66{col 46}{space 3}0.008{col 54}{space 4} .1609734{col 67}{space 3} 1.066545
{txt}{space 6}post_5 {c |}{col 14}{res}{space 2} .6400794{col 26}{space 2}  .231411{col 37}{space 1}    2.77{col 46}{space 3}0.006{col 54}{space 4} .1862322{col 67}{space 3} 1.093927
{txt}{space 6}post_6 {c |}{col 14}{res}{space 2} .5753966{col 26}{space 2} .2632488{col 37}{space 1}    2.19{col 46}{space 3}0.029{col 54}{space 4} .0591086{col 67}{space 3} 1.091685
{txt}{space 6}post_7 {c |}{col 14}{res}{space 2} .7431468{col 26}{space 2} .2333382{col 37}{space 1}    3.18{col 46}{space 3}0.001{col 54}{space 4}   .28552{col 67}{space 3} 1.200774
{txt}{space 6}post_8 {c |}{col 14}{res}{space 2} .8427572{col 26}{space 2} .2062073{col 37}{space 1}    4.09{col 46}{space 3}0.000{col 54}{space 4} .4383399{col 67}{space 3} 1.247174
{txt}{space 6}post_9 {c |}{col 14}{res}{space 2} .7416408{col 26}{space 2} .2150759{col 37}{space 1}    3.45{col 46}{space 3}0.001{col 54}{space 4} .3198303{col 67}{space 3} 1.163451
{txt}{space 5}post_10 {c |}{col 14}{res}{space 2} .8231639{col 26}{space 2} .2249394{col 37}{space 1}    3.66{col 46}{space 3}0.000{col 54}{space 4} .3820088{col 67}{space 3} 1.264319
{txt}{space 5}post_11 {c |}{col 14}{res}{space 2} .6738651{col 26}{space 2} .2186287{col 37}{space 1}    3.08{col 46}{space 3}0.002{col 54}{space 4} .2450866{col 67}{space 3} 1.102644
{txt}{space 5}post_12 {c |}{col 14}{res}{space 2} .7393086{col 26}{space 2} .2325726{col 37}{space 1}    3.18{col 46}{space 3}0.002{col 54}{space 4} .2831833{col 67}{space 3} 1.195434
{txt}{space 5}post_13 {c |}{col 14}{res}{space 2} .6821652{col 26}{space 2} .2172176{col 37}{space 1}    3.14{col 46}{space 3}0.002{col 54}{space 4} .2561544{col 67}{space 3} 1.108176
{txt}{space 5}post_14 {c |}{col 14}{res}{space 2} .4949088{col 26}{space 2} .2559349{col 37}{space 1}    1.93{col 46}{space 3}0.053{col 54}{space 4}-.0070351{col 67}{space 3} .9968527
{txt}{space 5}post_15 {c |}{col 14}{res}{space 2} .5880353{col 26}{space 2} .2091866{col 37}{space 1}    2.81{col 46}{space 3}0.005{col 54}{space 4} .1777749{col 67}{space 3} .9982958
{txt}{space 5}post_16 {c |}{col 14}{res}{space 2}  .870813{col 26}{space 2} .2754509{col 37}{space 1}    3.16{col 46}{space 3}0.002{col 54}{space 4} .3305941{col 67}{space 3} 1.411032
{txt}{space 5}post_17 {c |}{col 14}{res}{space 2} .9151798{col 26}{space 2} .4977663{col 37}{space 1}    1.84{col 46}{space 3}0.066{col 54}{space 4}-.0610481{col 67}{space 3} 1.891408
{txt}{space 5}post_18 {c |}{col 14}{res}{space 2} .9270919{col 26}{space 2} .3202086{col 37}{space 1}    2.90{col 46}{space 3}0.004{col 54}{space 4} .2990933{col 67}{space 3} 1.555091
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} .7127686{col 26}{space 2} .0658737{col 37}{space 1}   10.82{col 46}{space 3}0.000{col 54}{space 4}  .583576{col 67}{space 3} .8419611
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}  .330226{col 26}{space 2}  .175044{col 37}{space 1}    1.89{col 46}{space 3}0.059{col 54}{space 4}-.0130733{col 67}{space 3} .6735253
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 5}bhopal  {c |}{col 14}{res}{space 2}-2.079729{col 26}{space 2} .1439229{col 37}{space 1}  -14.45{col 46}{space 3}0.000{col 54}{space 4}-2.361993{col 67}{space 3}-1.797465
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-3.389412{col 26}{space 2} .1410329{col 37}{space 1}  -24.03{col 46}{space 3}0.000{col 54}{space 4}-3.666008{col 67}{space 3}-3.112816
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-2.023987{col 26}{space 2} .1710053{col 37}{space 1}  -11.84{col 46}{space 3}0.000{col 54}{space 4}-2.359365{col 67}{space 3}-1.688608
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .4964556{col 26}{space 2} .0967602{col 37}{space 1}    5.13{col 46}{space 3}0.000{col 54}{space 4} .3066879{col 67}{space 3} .6862233
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-2.123666{col 26}{space 2} .1581959{col 37}{space 1}  -13.42{col 46}{space 3}0.000{col 54}{space 4}-2.433922{col 67}{space 3} -1.81341
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .0902105{col 26}{space 2} .1190486{col 37}{space 1}    0.76{col 46}{space 3}0.449{col 54}{space 4}-.1432696{col 67}{space 3} .3236906
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.587405{col 26}{space 2} .1298973{col 37}{space 1}  -19.92{col 46}{space 3}0.000{col 54}{space 4}-2.842162{col 67}{space 3}-2.332648
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-3.961138{col 26}{space 2} .2497466{col 37}{space 1}  -15.86{col 46}{space 3}0.000{col 54}{space 4}-4.450945{col 67}{space 3}-3.471331
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-2.085073{col 26}{space 2} .1730118{col 37}{space 1}  -12.05{col 46}{space 3}0.000{col 54}{space 4}-2.424387{col 67}{space 3}-1.745759
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2}-2.576187{col 26}{space 2} .1280877{col 37}{space 1}  -20.11{col 46}{space 3}0.000{col 54}{space 4}-2.827395{col 67}{space 3} -2.32498
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 1.597519{col 26}{space 2}   .23237{col 37}{space 1}    6.87{col 46}{space 3}0.000{col 54}{space 4} 1.141791{col 67}{space 3} 2.053247
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2} .2122764{col 26}{space 2} .5852184{col 37}{space 1}    0.36{col 46}{space 3}0.717{col 54}{space 4}-.9354641{col 67}{space 3} 1.360017
{txt}{space 6}patna  {c |}{col 14}{res}{space 2} -4.76087{col 26}{space 2} .1520388{col 37}{space 1}  -31.31{col 46}{space 3}0.000{col 54}{space 4}-5.059051{col 67}{space 3}-4.462689
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-8.453038{col 26}{space 2} 1.628718{col 37}{space 1}   -5.19{col 46}{space 3}0.000{col 54}{space 4}-11.64731{col 67}{space 3}-5.258767
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. 
. boottest {c -(}pre_19{c )-} {c -(}pre_18{c )-} {c -(}pre_17{c )-} {c -(}pre_16{c )-} {c -(}pre_15{c )-} {c -(}pre_14{c )-} {c -(}pre_13{c )-} {c -(}pre_12{c )-} ///
>                 {c -(}pre_11{c )-} {c -(}pre_10{c )-} {c -(}pre_9{c )-} {c -(}pre_8{c )-} {c -(}pre_7{c )-} {c -(}pre_6{c )-} {c -(}pre_5{c )-} {c -(}pre_4{c )-} ///
>                 {c -(}pre_3{c )-} {c -(}pre_2{c )-} {c -(}pre_1{c )-} {c -(}post_1{c )-} {c -(}post_2{c )-} {c -(}post_3{c )-} {c -(}post_4{c )-}  {c -(}post_5{c )-} ///
>                 {c -(}post_6{c )-} {c -(}post_7{c )-} {c -(}post_8{c )-} {c -(}post_9{c )-} {c -(}post_10{c )-} {c -(}post_11{c )-} {c -(}post_12{c )-} {c -(}post_13{c )-} ///
>                 {c -(}post_14{c )-} {c -(}post_15{c )-} {c -(}post_16{c )-} {c -(}post_17{c )-} {c -(}post_18{c )-}  ///
>                 , reps(9999) gridpoints(10)  bootcluster(region1 date) nograph seed(123)
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_19

{txt}{col 26}t(1894) = {res}    0.6791
{col 25}{txt}Prob>|t| = {res}    0.5032

95%{txt} confidence set for null hypothesis expression: [{res}-.4125{txt}, {res}.7991{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_18

{txt}{col 26}t(1894) = {res}    0.9232
{col 25}{txt}Prob>|t| = {res}    0.3607

95%{txt} confidence set for null hypothesis expression: [{res}-.3307{txt}, {res}.8569{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_17

{txt}{col 26}t(1894) = {res}   -0.2389
{col 25}{txt}Prob>|t| = {res}    0.8108

95%{txt} confidence set for null hypothesis expression: [{res}-.5329{txt}, {res}.4243{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_16

{txt}{col 26}t(1894) = {res}    0.4981
{col 25}{txt}Prob>|t| = {res}    0.6144

95%{txt} confidence set for null hypothesis expression: [{res}-.4148{txt}, {res}.688{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_15

{txt}{col 26}t(1894) = {res}    0.8260
{col 25}{txt}Prob>|t| = {res}    0.4079

95%{txt} confidence set for null hypothesis expression: [{res}-.2626{txt}, {res}.638{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_14

{txt}{col 26}t(1894) = {res}    1.0726
{col 25}{txt}Prob>|t| = {res}    0.2856

95%{txt} confidence set for null hypothesis expression: [{res}-.2126{txt}, {res}.7168{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_13

{txt}{col 26}t(1894) = {res}    0.2230
{col 25}{txt}Prob>|t| = {res}    0.8287

95%{txt} confidence set for null hypothesis expression: [{res}-.4658{txt}, {res}.5725{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_12

{txt}{col 26}t(1894) = {res}   -0.3438
{col 25}{txt}Prob>|t| = {res}    0.7471

95%{txt} confidence set for null hypothesis expression: [{res}-.6922{txt}, {res}.4925{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_11

{txt}{col 26}t(1894) = {res}    1.2538
{col 25}{txt}Prob>|t| = {res}    0.2173

95%{txt} confidence set for null hypothesis expression: [{res}-.1698{txt}, {res}.7341{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_10

{txt}{col 26}t(1894) = {res}   -0.3050
{col 25}{txt}Prob>|t| = {res}    0.7635

95%{txt} confidence set for null hypothesis expression: [{res}-.6202{txt}, {res}.463{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_9

{txt}{col 26}t(1894) = {res}    0.4534
{col 25}{txt}Prob>|t| = {res}    0.6588

95%{txt} confidence set for null hypothesis expression: [{res}-.3943{txt}, {res}.6133{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_8

{txt}{col 26}t(1894) = {res}    2.0014
{col 25}{txt}Prob>|t| = {res}    0.0469

95%{txt} confidence set for null hypothesis expression: [{res}.007429{txt}, {res}.8648{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_7

{txt}{col 26}t(1894) = {res}   -0.5546
{col 25}{txt}Prob>|t| = {res}    0.5743

95%{txt} confidence set for null hypothesis expression: [{res}-.5811{txt}, {res}.3299{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_6

{txt}{col 26}t(1894) = {res}    0.6070
{col 25}{txt}Prob>|t| = {res}    0.5503

95%{txt} confidence set for null hypothesis expression: [{res}-.3337{txt}, {res}.6236{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_5

{txt}{col 26}t(1894) = {res}    1.2997
{col 25}{txt}Prob>|t| = {res}    0.1927

95%{txt} confidence set for null hypothesis expression: [{res}-.1592{txt}, {res}.7711{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_4

{txt}{col 26}t(1894) = {res}   -0.1252
{col 25}{txt}Prob>|t| = {res}    0.9009

95%{txt} confidence set for null hypothesis expression: [{res}-.4726{txt}, {res}.4195{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_3

{txt}{col 26}t(1894) = {res}    1.3792
{col 25}{txt}Prob>|t| = {res}    0.1692

95%{txt} confidence set for null hypothesis expression: [{res}-.134{txt}, {res}.7478{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_2

{txt}{col 26}t(1894) = {res}    0.3139
{col 25}{txt}Prob>|t| = {res}    0.7579

95%{txt} confidence set for null hypothesis expression: [{res}-.3719{txt}, {res}.5035{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_1

{txt}{col 26}t(1894) = {res}    1.7596
{col 25}{txt}Prob>|t| = {res}    0.0833

95%{txt} confidence set for null hypothesis expression: [{res}-.05505{txt}, {res}.8625{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_1

{txt}{col 26}t(1894) = {res}    1.0309
{col 25}{txt}Prob>|t| = {res}    0.3096

95%{txt} confidence set for null hypothesis expression: [{res}-.2171{txt}, {res}.6779{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_2

{txt}{col 26}t(1894) = {res}    2.2862
{col 25}{txt}Prob>|t| = {res}    0.0234

95%{txt} confidence set for null hypothesis expression: [{res}.06659{txt}, {res}.9202{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_3

{txt}{col 26}t(1894) = {res}    2.0286
{col 25}{txt}Prob>|t| = {res}    0.0427

95%{txt} confidence set for null hypothesis expression: [{res}.01889{txt}, {res}.8964{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_4

{txt}{col 26}t(1894) = {res}    2.6585
{col 25}{txt}Prob>|t| = {res}    0.0076

95%{txt} confidence set for null hypothesis expression: [{res}.1668{txt}, {res}1.063{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_5

{txt}{col 26}t(1894) = {res}    2.7660
{col 25}{txt}Prob>|t| = {res}    0.0062

95%{txt} confidence set for null hypothesis expression: [{res}.2007{txt}, {res}1.084{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_6

{txt}{col 26}t(1894) = {res}    2.1858
{col 25}{txt}Prob>|t| = {res}    0.0327

95%{txt} confidence set for null hypothesis expression: [{res}.06045{txt}, {res}1.091{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_7

{txt}{col 26}t(1894) = {res}    3.1848
{col 25}{txt}Prob>|t| = {res}    0.0018

95%{txt} confidence set for null hypothesis expression: [{res}.2913{txt}, {res}1.195{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_8

{txt}{col 26}t(1894) = {res}    4.0869
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}.4559{txt}, {res}1.232{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_9

{txt}{col 26}t(1894) = {res}    3.4483
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}.3302{txt}, {res}1.148{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_10

{txt}{col 26}t(1894) = {res}    3.6595
{col 25}{txt}Prob>|t| = {res}    0.0003

95%{txt} confidence set for null hypothesis expression: [{res}.3934{txt}, {res}1.254{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_11

{txt}{col 26}t(1894) = {res}    3.0822
{col 25}{txt}Prob>|t| = {res}    0.0035

95%{txt} confidence set for null hypothesis expression: [{res}.2529{txt}, {res}1.093{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_12

{txt}{col 26}t(1894) = {res}    3.1788
{col 25}{txt}Prob>|t| = {res}    0.0017

95%{txt} confidence set for null hypothesis expression: [{res}.2909{txt}, {res}1.186{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_13

{txt}{col 26}t(1894) = {res}    3.1405
{col 25}{txt}Prob>|t| = {res}    0.0012

95%{txt} confidence set for null hypothesis expression: [{res}.2703{txt}, {res}1.097{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_14

{txt}{col 26}t(1894) = {res}    1.9337
{col 25}{txt}Prob>|t| = {res}    0.0604

95%{txt} confidence set for null hypothesis expression: [{res}-.02458{txt}, {res}1.013{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_15

{txt}{col 26}t(1894) = {res}    2.8111
{col 25}{txt}Prob>|t| = {res}    0.0056

95%{txt} confidence set for null hypothesis expression: [{res}.1873{txt}, {res}.9893{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_16

{txt}{col 26}t(1894) = {res}    3.1614
{col 25}{txt}Prob>|t| = {res}    0.0028

95%{txt} confidence set for null hypothesis expression: [{res}.3438{txt}, {res}1.385{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_17

{txt}{col 26}t(1894) = {res}    1.8386
{col 25}{txt}Prob>|t| = {res}    0.0946

95%{txt} confidence set for null hypothesis expression: [{res}-.2206{txt}, {res}2.013{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_18

{txt}{col 26}t(1894) = {res}    2.8953
{col 25}{txt}Prob>|t| = {res}    0.0173

95%{txt} confidence set for null hypothesis expression: [{res}.2854{txt}, {res}1.488{txt}]
{res}{txt}
{com}.                 
. ** These are too many coefficients to report and I like to create my own coeffient plot
. ** Here is the code:
. 
. * Pull coefficients into matrix:
. * Pull coefficients into matrix:
. mat beta=e(b)
{txt}
{com}. 
. ** Average Treatment Effects:
. mat A = beta[1,4..40]
{txt}
{com}. 
. mat pre= A[1,1..18]
{txt}
{com}. mat post= A[1,19..37]
{txt}
{com}. 
. * Need to set the reference month at 0:
. mat pre_post=(pre, 0, post)
{txt}
{com}. mat list pre_post
{res}
{txt}pre_post[1,38]
        pre_19      pre_18      pre_17      pre_16      pre_15      pre_14      pre_13      pre_12      pre_11      pre_10       pre_9       pre_8       pre_7
y1 {res}  .19560307   .26472555  -.05573701   .13656407   .18756283   .25163567   .05713303   -.1031829   .27996701  -.08249588    .1136144   .43555425  -.12605873

{txt}         pre_6       pre_5       pre_4       pre_3       pre_2         c19       pre_1      post_1      post_2      post_3      post_4      post_5      post_6
y1 {res}  .14562515   .30825872  -.02785555   .30422226   .06757015           0   .40778769   .23151852   .49362938   .45537285    .6137591   .64007943   .57539662

{txt}        post_7      post_8      post_9     post_10     post_11     post_12     post_13     post_14     post_15     post_16     post_17     post_18
y1 {res}  .74314682   .84275716   .74164079    .8231639   .67386508    .7393086   .68216523   .49490877   .58803534   .87081304   .91517977   .92709193
{reset}
{com}. 
. 
. ** Create a counter column:
. mat Z=J(1,38,0)
{txt}
{com}. local j=1
{txt}
{com}. forvalues i=-18/19 {c -(}
{txt}  2{com}. mat Z[1,`j'] = `i'
{txt}  3{com}. local j=`j'+1
{txt}  4{com}. {c )-}
{txt}
{com}. 
. ** Grab the confidence intervals and append them together:
. mat CI=r(CI_1)
{txt}
{com}. 
. 
. 
. 
. 
. mat missing=J(1,2,.)
{txt}
{com}. forvalues i=2/18 {c -(}
{txt}  2{com}. capture confirm mat r(CI_`i')
{txt}  3{com}. if !_rc {c -(}
{txt}  4{com}. mat CI=CI\r(CI_`i')
{txt}  5{com}. {c )-}
{txt}  6{com}. else {c -(}
{txt}  7{com}. mat CI=CI\missing
{txt}  8{com}. {c )-}
{txt}  9{com}. {c )-}
{txt}
{com}. 
. mat zero=J(1,2,0)
{txt}
{com}. mat CI = CI\zero
{txt}
{com}. 
. forvalues i=19/37 {c -(}
{txt}  2{com}. capture confirm mat r(CI_`i')
{txt}  3{com}. if !_rc {c -(}
{txt}  4{com}. mat CI=CI\r(CI_`i')
{txt}  5{com}. {c )-}
{txt}  6{com}. else {c -(}
{txt}  7{com}. mat CI=CI\missing
{txt}  8{com}. {c )-}
{txt}  9{com}. {c )-}
{txt}
{com}. mat list CI
{res}
{txt}CI[38,2]
                 lo          hi
 pre_19 {res} -.41250466   .79912359
{txt} pre_18 {res} -.33068083   .85694985
{txt} pre_17 {res} -.53285645   .42429718
{txt} pre_16 {res} -.41482696   .68804191
{txt} pre_15 {res} -.26259038   .63804769
{txt} pre_14 {res}  -.2125816   .71683372
{txt} pre_13 {res} -.46578004   .57251894
{txt} pre_12 {res} -.69222313   .49251535
{txt} pre_11 {res} -.16978098   .73408816
{txt} pre_10 {res} -.62016211   .46300978
{txt}  pre_9 {res} -.39432764   .61326474
{txt}  pre_8 {res}  .00742911    .8648052
{txt}  pre_7 {res} -.58109012   .32993949
{txt}  pre_6 {res} -.33374066   .62361762
{txt}  pre_5 {res} -.15922743   .77112059
{txt}  pre_4 {res} -.47260837   .41945547
{txt}  pre_3 {res} -.13399419   .74780077
{txt}  pre_2 {res} -.37189915   .50346878
{txt}     r1 {res}          0           0
{txt}  pre_1 {res} -.05505088   .86245607
{txt} post_1 {res} -.21714729    .6779194
{txt} post_2 {res}   .0665872   .92015179
{txt} post_3 {res}  .01889191    .8964038
{txt} post_4 {res}  .16683784   1.0627025
{txt} post_5 {res}  .20067348   1.0841442
{txt} post_6 {res}  .06045246   1.0911645
{txt} post_7 {res}  .29129072    1.195063
{txt} post_8 {res}  .45585345   1.2324503
{txt} post_9 {res}  .33015632   1.1476388
{txt}post_10 {res}  .39341594   1.2544192
{txt}post_11 {res}  .25290573   1.0929748
{txt}post_12 {res}  .29093632   1.1855252
{txt}post_13 {res}  .27028868   1.0974617
{txt}post_14 {res} -.02457885   1.0125532
{txt}post_15 {res}  .18732796   .98926735
{txt}post_16 {res}  .34382199   1.3846263
{txt}post_17 {res}  -.2206267   2.0127052
{txt}post_18 {res}  .28542257   1.4883572
{reset}
{com}. 
. 
. ** Build Coefficient and Confidence Interval Matrix:
. mat AZ= (Z', pre_post')
{txt}
{com}. mat AZ= AZ,CI
{txt}
{com}. mat list AZ
{res}
{txt}AZ[38,4]
             r1          y1          lo          hi
 c1 {res}        -18   .19560307  -.41250466   .79912359
{txt} c2 {res}        -17   .26472555  -.33068083   .85694985
{txt} c3 {res}        -16  -.05573701  -.53285645   .42429718
{txt} c4 {res}        -15   .13656407  -.41482696   .68804191
{txt} c5 {res}        -14   .18756283  -.26259038   .63804769
{txt} c6 {res}        -13   .25163567   -.2125816   .71683372
{txt} c7 {res}        -12   .05713303  -.46578004   .57251894
{txt} c8 {res}        -11   -.1031829  -.69222313   .49251535
{txt} c9 {res}        -10   .27996701  -.16978098   .73408816
{txt}c10 {res}         -9  -.08249588  -.62016211   .46300978
{txt}c11 {res}         -8    .1136144  -.39432764   .61326474
{txt}c12 {res}         -7   .43555425   .00742911    .8648052
{txt}c13 {res}         -6  -.12605873  -.58109012   .32993949
{txt}c14 {res}         -5   .14562515  -.33374066   .62361762
{txt}c15 {res}         -4   .30825872  -.15922743   .77112059
{txt}c16 {res}         -3  -.02785555  -.47260837   .41945547
{txt}c17 {res}         -2   .30422226  -.13399419   .74780077
{txt}c18 {res}         -1   .06757015  -.37189915   .50346878
{txt}c19 {res}          0           0           0           0
{txt}c20 {res}          1   .40778769  -.05505088   .86245607
{txt}c21 {res}          2   .23151852  -.21714729    .6779194
{txt}c22 {res}          3   .49362938    .0665872   .92015179
{txt}c23 {res}          4   .45537285   .01889191    .8964038
{txt}c24 {res}          5    .6137591   .16683784   1.0627025
{txt}c25 {res}          6   .64007943   .20067348   1.0841442
{txt}c26 {res}          7   .57539662   .06045246   1.0911645
{txt}c27 {res}          8   .74314682   .29129072    1.195063
{txt}c28 {res}          9   .84275716   .45585345   1.2324503
{txt}c29 {res}         10   .74164079   .33015632   1.1476388
{txt}c30 {res}         11    .8231639   .39341594   1.2544192
{txt}c31 {res}         12   .67386508   .25290573   1.0929748
{txt}c32 {res}         13    .7393086   .29093632   1.1855252
{txt}c33 {res}         14   .68216523   .27028868   1.0974617
{txt}c34 {res}         15   .49490877  -.02457885   1.0125532
{txt}c35 {res}         16   .58803534   .18732796   .98926735
{txt}c36 {res}         17   .87081304   .34382199   1.3846263
{txt}c37 {res}         18   .91517977   -.2206267   2.0127052
{txt}c38 {res}         19   .92709193   .28542257   1.4883572
{reset}
{com}. * Create variables from matrix so that you can graph them:
. svmat AZ, names(direct)
{txt}
{com}. sort direct1
{txt}
{com}. 
. 
. 
. 
. ** Coefficient estimates and CI are in IHS terms.
. * We can transform coefficient estimates in relative terms (i.e. % change):
. forvalues i = 5/7 {c -(}
{txt}  2{com}. local j=`i'-3
{txt}  3{com}. gen direct`i' = (exp(direct`j')-1)*100
{txt}  4{com}. {c )-}
{txt}(2,356 missing values generated)
(2,356 missing values generated)
(2,356 missing values generated)

{com}. 
. 
. * We can also transform coefficient estimates in absolute terms ($ mil.):
. ** For this we need to know the average value of FDI in the pre-treatment month for each affected region
. ** Then we take the average of that because the coefficient estimate is evaluated against this average:
. 
. * Generate pre-treatment average FDI inflows for each affected region:
. egen pre_fdi_avg = mean(fdi) if inlist(dif, 0) & affected_event==0
{txt}(2,336 missing values generated)

{com}. bysort id (pre_fdi_avg): replace pre_fdi_avg = pre_fdi_avg[1]
{txt}(2336 real changes made)

{com}. sum pre_fdi_avg

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 1}pre_fdi_avg {c |}{res}      2,394    46.66667           0   46.66667   46.66667
{txt}
{com}. 
. 
. 
. * Convert relative changes to absolute changes 
. /* Remember direct2 is already in percentage terms */
. 
. forvalues i=8/10 {c -(}
{txt}  2{com}. local j=`i'-6
{txt}  3{com}. gen direct`i'= asinh(pre_fdi_avg) + direct`j'
{txt}  4{com}. replace direct`i'=sinh(direct`i') - pre_fdi_avg
{txt}  5{com}. {c )-}
{txt}(2,356 missing values generated)
(38 real changes made)
(2,356 missing values generated)
(38 real changes made)
(2,356 missing values generated)
(38 real changes made)

{com}. 
. * Let's graph the relative changes with CI and the absolute changes in FDI:
. *** The confidence interval reaches to far and messes up the scale of the graph.
. ** We restrict the cofidence interval to max 300 see note on figure
. 
. 
. * FIGURE 5.B: Indirect IHS FDI Effect:
. sort direct1
{txt}
{com}. sum direct2  

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct2 {c |}{res}         38    .3897981    .3195082  -.1260587    .927092
{txt}
{com}. sum direct2  if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct2 {c |}{res}         19    .6557695    .1855947   .2315185    .927092
{txt}
{com}. 
. 
. 
. graph twoway (rarea direct3 direct4 direct1 if inrange(direct1,-18,18), color(gs10%20) fintensity(100))  ///
>         (connected direct2 direct1 if inrange(direct1,-18,18), msize(medium) xline(0 ) yline(0 ) lc(ebblue) mc(ebblue%70) msymbol(smccircle)) ///
>         , ytitle("Change in IHS of FDI", ax(1)) xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0, axis(1) lcolor(black)) yline(0, axis(2 1) lcolor(black)) ///
>         name(event_indirect, replace) xscale(r(-18,18)) xlabel(-18(4)18) ///
>         ylabel(, angle(horizontal)) yscale(titlegap(*+1)) ///
>         legend(off)
{p 0 4 2}
{txt}(note:  named style
smccircle not found in class
symbol,  default attributes used)
{p_end}
{res}{txt}
{com}.         
. 
. 
. graph export _3results/figures/figureB1.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figureB1.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. 
.         
. 
{txt}end of do-file

{com}. do _2code/_2analysis/figureB2
{txt}
{com}. ********************************************************************************
. * Figure B1: Event studies more disasters
. 
. ********************************************************************************
. 
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
. global control lag_lgdp lag_lpop
{txt}
{com}. *generate months to event
. 
. generate dif=.
{txt}(2,736 missing values generated)

{com}. gen affected_event=0
{txt}
{com}. 
. 
. ***additional disasters***
. * AD1: July 2006 surate flood (Ahmedabad)
. 
. * AD2: July 2009 (kochi bubaneshwar)
. 
. * AD3: September 2014 ( bubaneshwar hyderabad)
. 
. * AD4: July 2019 south asia floods (Guwhati)
. 
. *ADD1
. replace dif = Count-10  if Count < 17
{txt}(256 real changes made)

{com}. replace affected_event=1 if Count<17 & region=="ahmedabad"
{txt}(16 real changes made)

{com}. 
. *AD2 
. replace dif = Count-46 if inrange(Count,35,50)
{txt}(256 real changes made)

{com}. replace affected_event=1 if inrange(Count,35,50) & (region=="bubaneshwar" | region=="kochi")
{txt}(32 real changes made)

{com}. 
. *AD3 
. replace dif = Count-108 if inrange(Count,101,115)
{txt}(240 real changes made)

{com}. replace affected_event=1 if inrange(Count,101,115)  & (region=="bubaneshwar" | region=="hyderabad")
{txt}(30 real changes made)

{com}. 
. *AD4
. replace dif = Count-166 if Count >= 161
{txt}(176 real changes made)

{com}. replace affected_event=1 if Count >= 161  & region=="guwahati"
{txt}(11 real changes made)

{com}. *generate affected region dummy for event study
. 
. 
. ** Original Disasters:
. *ND1: August 2007
. replace dif=Count-23 if inrange(Count,17,35)
{txt}(304 real changes made)

{com}. replace affected_event=1 if inrange(Count,17,35) & (region=="kolkata" | region=="patna")
{txt}(38 real changes made)

{com}. 
. 
. *ND2: April 2010
. replace dif=Count-55 if inrange(Count,51,73)
{txt}(368 real changes made)

{com}. replace affected_event=1 if inrange(Count,51,73) & (region=="bubaneshwar" | region=="guwahati")
{txt}(46 real changes made)

{com}. 
. *ND3: June 2013
. replace dif=Count-93 if inrange(Count,74,100)
{txt}(432 real changes made)

{com}. replace affected_event=1 if inrange(Count,74,100)  & (region=="chandigarh" | region=="new_delhi" | region=="kanpur")
{txt}(81 real changes made)

{com}. 
. 
. *ND4: November 2015
. replace dif=Count-122 if inrange(Count,116,137)
{txt}(352 real changes made)

{com}. replace affected_event=1 if inrange(Count,116,137)   & (region=="hyderabad" | region=="chennai")
{txt}(44 real changes made)

{com}. 
. *ND5: August 2018
. replace dif=Count-155 if inrange(Count,138,160)
{txt}(368 real changes made)

{com}. replace affected_event=1 if inrange(Count,138,160)  & region=="kochi"
{txt}(23 real changes made)

{com}. 
. 
. 
. 
. *normal five disasters
. /*
> generate dif=1000
> replace dif=Count-23 if Count<39 
> replace dif=Count-55 if Count>=39 & Count <74 
> replace dif=Count-93 if Count>=74 & Count <107 
> replace dif=Count-122 if Count>=107 & Count <138 
> replace dif=Count-155 if Count>=138
> 
> 
> *generate affected region dummy for event study
> gen affected_event=0
> replace affected_event=1 if (Count<39 & (region=="kolkata" | region=="patna"))
> replace affected_event=1 if (Count>=39 & Count <74 & (region=="bubaneshwar" | region=="guwahati" | region=="kolkata" | region=="patna"))
> replace affected_event=1 if (Count>=74 & Count <107  & (region=="chandigarh" | region=="new_delhi" | region=="kanpur"))
> replace affected_event=1 if (Count>=107 & Count <138   & (region=="hyderabad" | region=="chennai"))
> replace affected_event=1 if (Count>=138  & region=="kochi")
> */
. 
. *bro region date dif Count affected_event
. 
. 
. 
. 
. 
. *time to event variables as factors
. tostring dif, replace
{txt}dif was {res:float} now {res:str3}

{com}. 
. destring dif, replace
{txt}dif: all characters numeric; {res}replaced {txt}as {res}byte
{txt}
{com}. tab dif, gen(t_fe)

        {txt}dif {c |}      Freq.     Percent        Cum.
{hline 12}{c +}{hline 35}
        -19 {c |}{res}         16        0.58        0.58
{txt}        -18 {c |}{res}         16        0.58        1.17
{txt}        -17 {c |}{res}         32        1.17        2.34
{txt}        -16 {c |}{res}         32        1.17        3.51
{txt}        -15 {c |}{res}         32        1.17        4.68
{txt}        -14 {c |}{res}         32        1.17        5.85
{txt}        -13 {c |}{res}         32        1.17        7.02
{txt}        -12 {c |}{res}         32        1.17        8.19
{txt}        -11 {c |}{res}         32        1.17        9.36
{txt}        -10 {c |}{res}         48        1.75       11.11
{txt}         -9 {c |}{res}         64        2.34       13.45
{txt}         -8 {c |}{res}         64        2.34       15.79
{txt}         -7 {c |}{res}         80        2.92       18.71
{txt}         -6 {c |}{res}        112        4.09       22.81
{txt}         -5 {c |}{res}        128        4.68       27.49
{txt}         -4 {c |}{res}        144        5.26       32.75
{txt}         -3 {c |}{res}        144        5.26       38.01
{txt}         -2 {c |}{res}        144        5.26       43.27
{txt}         -1 {c |}{res}        144        5.26       48.54
{txt}          0 {c |}{res}        144        5.26       53.80
{txt}          1 {c |}{res}        144        5.26       59.06
{txt}          2 {c |}{res}        144        5.26       64.33
{txt}          3 {c |}{res}        144        5.26       69.59
{txt}          4 {c |}{res}        144        5.26       74.85
{txt}          5 {c |}{res}        128        4.68       79.53
{txt}          6 {c |}{res}         96        3.51       83.04
{txt}          7 {c |}{res}         80        2.92       85.96
{txt}          8 {c |}{res}         48        1.75       87.72
{txt}          9 {c |}{res}         48        1.75       89.47
{txt}         10 {c |}{res}         48        1.75       91.23
{txt}         11 {c |}{res}         48        1.75       92.98
{txt}         12 {c |}{res}         48        1.75       94.74
{txt}         13 {c |}{res}         32        1.17       95.91
{txt}         14 {c |}{res}         32        1.17       97.08
{txt}         15 {c |}{res}         32        1.17       98.25
{txt}         16 {c |}{res}         16        0.58       98.83
{txt}         17 {c |}{res}         16        0.58       99.42
{txt}         18 {c |}{res}         16        0.58      100.00
{txt}{hline 12}{c +}{hline 35}
      Total {c |}{res}      2,736      100.00
{txt}
{com}. 
. *bro region date dif Count
. 
. * Identify the pre-treatment month for the unaffected regions.
. * These are the relavant pre-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=1/18 {c -(}
{txt}  2{com}. local j=19-`i'
{txt}  3{com}. gen pre_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. * Identify the post-treatment month for the affected regions.
. * These are the relavant post-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=20/38{c -(}
{txt}  2{com}. local j=`i'-19
{txt}  3{com}. gen post_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. 
. 
. *** 2.1) Event study regression on AFFECTED REGIONS:
. 
. reg fdi_ihs pre* post* $control i.region1 if (affected_event==1), robust

{txt}Linear regression                               Number of obs     = {res}       318
                                                {txt}F(49, 268)        =  {res}    61.41
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.7476
                                                {txt}Root MSE          =    {res} 1.3937

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}pre_18 {c |}{col 14}{res}{space 2} .7439755{col 26}{space 2} .5159117{col 37}{space 1}    1.44{col 46}{space 3}0.150{col 54}{space 4}  -.27178{col 67}{space 3} 1.759731
{txt}{space 6}pre_17 {c |}{col 14}{res}{space 2} .3180359{col 26}{space 2} .4758776{col 37}{space 1}    0.67{col 46}{space 3}0.505{col 54}{space 4}-.6188981{col 67}{space 3}  1.25497
{txt}{space 6}pre_16 {c |}{col 14}{res}{space 2}  .330497{col 26}{space 2} .7056466{col 37}{space 1}    0.47{col 46}{space 3}0.640{col 54}{space 4}-1.058819{col 67}{space 3} 1.719813
{txt}{space 6}pre_15 {c |}{col 14}{res}{space 2} .6457979{col 26}{space 2} .5119046{col 37}{space 1}    1.26{col 46}{space 3}0.208{col 54}{space 4}-.3620682{col 67}{space 3} 1.653664
{txt}{space 6}pre_14 {c |}{col 14}{res}{space 2} .4392748{col 26}{space 2} .3918985{col 37}{space 1}    1.12{col 46}{space 3}0.263{col 54}{space 4}-.3323167{col 67}{space 3} 1.210866
{txt}{space 6}pre_13 {c |}{col 14}{res}{space 2} .5861059{col 26}{space 2} .4317135{col 37}{space 1}    1.36{col 46}{space 3}0.176{col 54}{space 4}-.2638755{col 67}{space 3} 1.436087
{txt}{space 6}pre_12 {c |}{col 14}{res}{space 2} .0779173{col 26}{space 2} .4717134{col 37}{space 1}    0.17{col 46}{space 3}0.869{col 54}{space 4} -.850818{col 67}{space 3} 1.006653
{txt}{space 6}pre_11 {c |}{col 14}{res}{space 2} .8056484{col 26}{space 2} .5041495{col 37}{space 1}    1.60{col 46}{space 3}0.111{col 54}{space 4}-.1869489{col 67}{space 3} 1.798246
{txt}{space 6}pre_10 {c |}{col 14}{res}{space 2} .6387007{col 26}{space 2}  .387838{col 37}{space 1}    1.65{col 46}{space 3}0.101{col 54}{space 4}-.1248961{col 67}{space 3} 1.402298
{txt}{space 7}pre_9 {c |}{col 14}{res}{space 2} .3023467{col 26}{space 2} .5159902{col 37}{space 1}    0.59{col 46}{space 3}0.558{col 54}{space 4}-.7135632{col 67}{space 3} 1.318257
{txt}{space 7}pre_8 {c |}{col 14}{res}{space 2} .4654718{col 26}{space 2} .4589965{col 37}{space 1}    1.01{col 46}{space 3}0.311{col 54}{space 4}-.4382259{col 67}{space 3}  1.36917
{txt}{space 7}pre_7 {c |}{col 14}{res}{space 2} .2322393{col 26}{space 2} .4345043{col 37}{space 1}    0.53{col 46}{space 3}0.593{col 54}{space 4}-.6232368{col 67}{space 3} 1.087715
{txt}{space 7}pre_6 {c |}{col 14}{res}{space 2} .0488629{col 26}{space 2} .4299701{col 37}{space 1}    0.11{col 46}{space 3}0.910{col 54}{space 4}-.7976859{col 67}{space 3} .8954118
{txt}{space 7}pre_5 {c |}{col 14}{res}{space 2}-.1488819{col 26}{space 2} .4614631{col 37}{space 1}   -0.32{col 46}{space 3}0.747{col 54}{space 4}-1.057436{col 67}{space 3} .7596722
{txt}{space 7}pre_4 {c |}{col 14}{res}{space 2}-.3417887{col 26}{space 2} .3889296{col 37}{space 1}   -0.88{col 46}{space 3}0.380{col 54}{space 4}-1.107535{col 67}{space 3} .4239574
{txt}{space 7}pre_3 {c |}{col 14}{res}{space 2}-.0338429{col 26}{space 2} .4094877{col 37}{space 1}   -0.08{col 46}{space 3}0.934{col 54}{space 4}-.8400649{col 67}{space 3} .7723792
{txt}{space 7}pre_2 {c |}{col 14}{res}{space 2} .1953379{col 26}{space 2} .4468485{col 37}{space 1}    0.44{col 46}{space 3}0.662{col 54}{space 4}-.6844422{col 67}{space 3} 1.075118
{txt}{space 7}pre_1 {c |}{col 14}{res}{space 2}-.3459337{col 26}{space 2} .4121887{col 37}{space 1}   -0.84{col 46}{space 3}0.402{col 54}{space 4}-1.157473{col 67}{space 3} .4656061
{txt}{space 6}post_1 {c |}{col 14}{res}{space 2}-1.799028{col 26}{space 2}  .471385{col 37}{space 1}   -3.82{col 46}{space 3}0.000{col 54}{space 4}-2.727117{col 67}{space 3}-.8709393
{txt}{space 6}post_2 {c |}{col 14}{res}{space 2}-2.033601{col 26}{space 2} .4122653{col 37}{space 1}   -4.93{col 46}{space 3}0.000{col 54}{space 4}-2.845292{col 67}{space 3}-1.221911
{txt}{space 6}post_3 {c |}{col 14}{res}{space 2}-1.973398{col 26}{space 2} .5113066{col 37}{space 1}   -3.86{col 46}{space 3}0.000{col 54}{space 4}-2.980087{col 67}{space 3}-.9667092
{txt}{space 6}post_4 {c |}{col 14}{res}{space 2}-2.469385{col 26}{space 2} .4846305{col 37}{space 1}   -5.10{col 46}{space 3}0.000{col 54}{space 4}-3.423552{col 67}{space 3}-1.515218
{txt}{space 6}post_5 {c |}{col 14}{res}{space 2}-2.208027{col 26}{space 2} .5489894{col 37}{space 1}   -4.02{col 46}{space 3}0.000{col 54}{space 4}-3.288907{col 67}{space 3}-1.127146
{txt}{space 6}post_6 {c |}{col 14}{res}{space 2}-3.044562{col 26}{space 2} .6157308{col 37}{space 1}   -4.94{col 46}{space 3}0.000{col 54}{space 4}-4.256847{col 67}{space 3}-1.832277
{txt}{space 6}post_7 {c |}{col 14}{res}{space 2}-2.854827{col 26}{space 2}  .657318{col 37}{space 1}   -4.34{col 46}{space 3}0.000{col 54}{space 4} -4.14899{col 67}{space 3}-1.560663
{txt}{space 6}post_8 {c |}{col 14}{res}{space 2}-3.095787{col 26}{space 2} .6321691{col 37}{space 1}   -4.90{col 46}{space 3}0.000{col 54}{space 4}-4.340436{col 67}{space 3}-1.851137
{txt}{space 6}post_9 {c |}{col 14}{res}{space 2}-2.248171{col 26}{space 2} .4654049{col 37}{space 1}   -4.83{col 46}{space 3}0.000{col 54}{space 4}-3.164485{col 67}{space 3}-1.331856
{txt}{space 5}post_10 {c |}{col 14}{res}{space 2} -2.96412{col 26}{space 2} .5879817{col 37}{space 1}   -5.04{col 46}{space 3}0.000{col 54}{space 4}-4.121771{col 67}{space 3}-1.806469
{txt}{space 5}post_11 {c |}{col 14}{res}{space 2}-2.901422{col 26}{space 2} .6487061{col 37}{space 1}   -4.47{col 46}{space 3}0.000{col 54}{space 4} -4.17863{col 67}{space 3}-1.624213
{txt}{space 5}post_12 {c |}{col 14}{res}{space 2}-1.965752{col 26}{space 2} .5102833{col 37}{space 1}   -3.85{col 46}{space 3}0.000{col 54}{space 4}-2.970426{col 67}{space 3}-.9610784
{txt}{space 5}post_13 {c |}{col 14}{res}{space 2} -2.44639{col 26}{space 2} .7001739{col 37}{space 1}   -3.49{col 46}{space 3}0.001{col 54}{space 4}-3.824931{col 67}{space 3}-1.067848
{txt}{space 5}post_14 {c |}{col 14}{res}{space 2}-2.987246{col 26}{space 2} .3935291{col 37}{space 1}   -7.59{col 46}{space 3}0.000{col 54}{space 4}-3.762047{col 67}{space 3}-2.212444
{txt}{space 5}post_15 {c |}{col 14}{res}{space 2}-3.738138{col 26}{space 2} 1.044314{col 37}{space 1}   -3.58{col 46}{space 3}0.000{col 54}{space 4} -5.79424{col 67}{space 3}-1.682035
{txt}{space 5}post_16 {c |}{col 14}{res}{space 2}-2.730888{col 26}{space 2} .3242339{col 37}{space 1}   -8.42{col 46}{space 3}0.000{col 54}{space 4}-3.369257{col 67}{space 3}-2.092518
{txt}{space 5}post_17 {c |}{col 14}{res}{space 2}-3.309723{col 26}{space 2} 1.202926{col 37}{space 1}   -2.75{col 46}{space 3}0.006{col 54}{space 4} -5.67811{col 67}{space 3}-.9413369
{txt}{space 5}post_18 {c |}{col 14}{res}{space 2}-3.641547{col 26}{space 2} .9556636{col 37}{space 1}   -3.81{col 46}{space 3}0.000{col 54}{space 4}-5.523111{col 67}{space 3}-1.759984
{txt}{space 5}post_19 {c |}{col 14}{res}{space 2}-2.594191{col 26}{space 2} .3638884{col 37}{space 1}   -7.13{col 46}{space 3}0.000{col 54}{space 4}-3.310635{col 67}{space 3}-1.877747
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} 1.738902{col 26}{space 2} .4581158{col 37}{space 1}    3.80{col 46}{space 3}0.000{col 54}{space 4} .8369389{col 67}{space 3} 2.640866
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}-1.110046{col 26}{space 2} 4.392283{col 37}{space 1}   -0.25{col 46}{space 3}0.801{col 54}{space 4}-9.757816{col 67}{space 3} 7.537723
{txt}{space 12} {c |}
{space 5}region1 {c |}
bubaneshwar  {c |}{col 14}{res}{space 2}-3.340155{col 26}{space 2}  1.18051{col 37}{space 1}   -2.83{col 46}{space 3}0.005{col 54}{space 4}-5.664407{col 67}{space 3}-1.015902
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-3.468497{col 26}{space 2} .6665496{col 37}{space 1}   -5.20{col 46}{space 3}0.000{col 54}{space 4}-4.780837{col 67}{space 3}-2.156158
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2}-.5895139{col 26}{space 2} 1.025424{col 37}{space 1}   -0.57{col 46}{space 3}0.566{col 54}{space 4}-2.608424{col 67}{space 3} 1.429397
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-2.851225{col 26}{space 2}  .827622{col 37}{space 1}   -3.45{col 46}{space 3}0.001{col 54}{space 4}-4.480693{col 67}{space 3}-1.221757
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2}-.7057879{col 26}{space 2} .7172653{col 37}{space 1}   -0.98{col 46}{space 3}0.326{col 54}{space 4}-2.117979{col 67}{space 3} .7064035
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-4.091541{col 26}{space 2} 5.596821{col 37}{space 1}   -0.73{col 46}{space 3}0.465{col 54}{space 4}-15.11087{col 67}{space 3} 6.927789
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-4.117681{col 26}{space 2} 2.252156{col 37}{space 1}   -1.83{col 46}{space 3}0.069{col 54}{space 4}-8.551849{col 67}{space 3} .3164874
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2}-1.101836{col 26}{space 2} 2.051238{col 37}{space 1}   -0.54{col 46}{space 3}0.592{col 54}{space 4}-5.140427{col 67}{space 3} 2.936755
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2}-1.418327{col 26}{space 2} 5.168411{col 37}{space 1}   -0.27{col 46}{space 3}0.784{col 54}{space 4}-11.59418{col 67}{space 3} 8.757525
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-1.508185{col 26}{space 2} 2.693395{col 37}{space 1}   -0.56{col 46}{space 3}0.576{col 54}{space 4}-6.811089{col 67}{space 3} 3.794719
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-3.573685{col 26}{space 2} 43.66382{col 37}{space 1}   -0.08{col 46}{space 3}0.935{col 54}{space 4}-89.54143{col 67}{space 3} 82.39406
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. 
. 
. boottest {c -(}pre_18{c )-} {c -(}pre_17{c )-} {c -(}pre_16{c )-} {c -(}pre_15{c )-} {c -(}pre_14{c )-} {c -(}pre_13{c )-} {c -(}pre_12{c )-} ///
>                 {c -(}pre_11{c )-} {c -(}pre_10{c )-} {c -(}pre_9{c )-} {c -(}pre_8{c )-} {c -(}pre_7{c )-} {c -(}pre_6{c )-} {c -(}pre_5{c )-} {c -(}pre_4{c )-} ///
>                 {c -(}pre_3{c )-} {c -(}pre_2{c )-} {c -(}pre_1{c )-} {c -(}post_1{c )-} {c -(}post_2{c )-} {c -(}post_3{c )-} {c -(}post_4{c )-}  {c -(}post_5{c )-} ///
>                 {c -(}post_6{c )-} {c -(}post_7{c )-} {c -(}post_8{c )-} {c -(}post_9{c )-} {c -(}post_10{c )-} {c -(}post_11{c )-} {c -(}post_12{c )-} {c -(}post_13{c )-} ///
>                 {c -(}post_14{c )-} {c -(}post_15{c )-} {c -(}post_16{c )-} {c -(}post_17{c )-} {c -(}post_18{c )-} {c -(}post_19{c )-}, reps(9999) gridpoints(10) bootcluster(region1 date) nograph seed(123)
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_18

{txt}{col 27}t(268) = {res}    1.4421
{col 25}{txt}Prob>|t| = {res}    0.2747

95%{txt} confidence set for null hypothesis expression: [{res}-1.275{txt}, {res}3.237{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_17

{txt}{col 27}t(268) = {res}    0.6683
{col 25}{txt}Prob>|t| = {res}    0.5564

95%{txt} confidence set for null hypothesis expression: [{res}-1.577{txt}, {res}3.257{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_16

{txt}{col 27}t(268) = {res}    0.4684
{col 25}{txt}Prob>|t| = {res}    0.6488

95%{txt} confidence set for null hypothesis expression: [{res}-3.943{txt}, {res}2.401{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_15

{txt}{col 27}t(268) = {res}    1.2616
{col 25}{txt}Prob>|t| = {res}    0.2658

95%{txt} confidence set for null hypothesis expression: [{res}-.7512{txt}, {res}2.098{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_14

{txt}{col 27}t(268) = {res}    1.1209
{col 25}{txt}Prob>|t| = {res}    0.2724

95%{txt} confidence set for null hypothesis expression: [{res}-.5538{txt}, {res}1.541{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_13

{txt}{col 27}t(268) = {res}    1.3576
{col 25}{txt}Prob>|t| = {res}    0.2122

95%{txt} confidence set for null hypothesis expression: [{res}-.7039{txt}, {res}1.69{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_12

{txt}{col 27}t(268) = {res}    0.1652
{col 25}{txt}Prob>|t| = {res}    0.8835

95%{txt} confidence set for null hypothesis expression: [{res}-1.136{txt}, {res}2.024{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_11

{txt}{col 27}t(268) = {res}    1.5980
{col 25}{txt}Prob>|t| = {res}    0.1796

95%{txt} confidence set for null hypothesis expression: [{res}-.8546{txt}, {res}1.976{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_10

{txt}{col 27}t(268) = {res}    1.6468
{col 25}{txt}Prob>|t| = {res}    0.1238

95%{txt} confidence set for null hypothesis expression: [{res}-.4047{txt}, {res}1.583{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_9

{txt}{col 27}t(268) = {res}    0.5860
{col 25}{txt}Prob>|t| = {res}    0.5813

95%{txt} confidence set for null hypothesis expression: [{res}-1.073{txt}, {res}1.701{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_8

{txt}{col 27}t(268) = {res}    1.0141
{col 25}{txt}Prob>|t| = {res}    0.3269

95%{txt} confidence set for null hypothesis expression: [{res}-.7611{txt}, {res}1.517{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_7

{txt}{col 27}t(268) = {res}    0.5345
{col 25}{txt}Prob>|t| = {res}    0.5905

95%{txt} confidence set for null hypothesis expression: [{res}-.8812{txt}, {res}1.347{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_6

{txt}{col 27}t(268) = {res}    0.1136
{col 25}{txt}Prob>|t| = {res}    0.9113

95%{txt} confidence set for null hypothesis expression: [{res}-.9648{txt}, {res}1.032{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_5

{txt}{col 27}t(268) = {res}   -0.3226
{col 25}{txt}Prob>|t| = {res}    0.7470

95%{txt} confidence set for null hypothesis expression: [{res}-1.136{txt}, {res}.826{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_4

{txt}{col 27}t(268) = {res}   -0.8788
{col 25}{txt}Prob>|t| = {res}    0.3639

95%{txt} confidence set for null hypothesis expression: [{res}-1.157{txt}, {res}.4947{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_3

{txt}{col 27}t(268) = {res}   -0.0826
{col 25}{txt}Prob>|t| = {res}    0.9286

95%{txt} confidence set for null hypothesis expression: [{res}-.8785{txt}, {res}.814{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_2

{txt}{col 27}t(268) = {res}    0.4371
{col 25}{txt}Prob>|t| = {res}    0.6536

95%{txt} confidence set for null hypothesis expression: [{res}-.7458{txt}, {res}1.124{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_1

{txt}{col 27}t(268) = {res}   -0.8393
{col 25}{txt}Prob>|t| = {res}    0.3874

95%{txt} confidence set for null hypothesis expression: [{res}-1.189{txt}, {res}.5129{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_1

{txt}{col 27}t(268) = {res}   -3.8165
{col 25}{txt}Prob>|t| = {res}    0.0006

95%{txt} confidence set for null hypothesis expression: [{res}-2.561{txt}, {res}-1.012{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_2

{txt}{col 27}t(268) = {res}   -4.9327
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-2.629{txt}, {res}-1.435{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_3

{txt}{col 27}t(268) = {res}   -3.8595
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}-2.78{txt}, {res}-1.119{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_4

{txt}{col 27}t(268) = {res}   -5.0954
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.158{txt}, {res}-1.765{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_5

{txt}{col 27}t(268) = {res}   -4.0220
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.09{txt}, {res}-1.321{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_6

{txt}{col 27}t(268) = {res}   -4.9446
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.932{txt}, {res}-2.132{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_7

{txt}{col 27}t(268) = {res}   -4.3431
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.835{txt}, {res}-1.867{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_8

{txt}{col 27}t(268) = {res}   -4.8971
{col 25}{txt}Prob>|t| = {res}    0.0000

95%{txt} confidence set for null hypothesis expression: [{res}-3.962{txt}, {res}-2.179{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_9

{txt}{col 27}t(268) = {res}   -4.8306
{col 25}{txt}Prob>|t| = {res}    0.0016

95%{txt} confidence set for null hypothesis expression: [{res}-2.788{txt}, {res}-1.669{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_10

{txt}{col 27}t(268) = {res}   -5.0412
{col 25}{txt}Prob>|t| = {res}    0.0004

95%{txt} confidence set for null hypothesis expression: [{res}-3.571{txt}, {res}-2.384{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_11

{txt}{col 27}t(268) = {res}   -4.4726
{col 25}{txt}Prob>|t| = {res}    0.0001

95%{txt} confidence set for null hypothesis expression: [{res}-3.642{txt}, {res}-2.134{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_12

{txt}{col 27}t(268) = {res}   -3.8523
{col 25}{txt}Prob>|t| = {res}    0.0218

95%{txt} confidence set for null hypothesis expression: [{res}-2.62{txt}, {res}-1.041{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_13

{txt}{col 27}t(268) = {res}   -3.4940
{col 25}{txt}Prob>|t| = {res}    0.0003

95%{txt} confidence set for null hypothesis expression: [{res}-3.492{txt}, {res}-1.356{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_14

{txt}{col 27}t(268) = {res}   -7.5909
{col 25}{txt}Prob>|t| = {res}    0.0019

95%{txt} confidence set for null hypothesis expression: [{res}-3.329{txt}, {res}-2.647{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_15

{txt}{col 27}t(268) = {res}   -3.5795
{col 25}{txt}Prob>|t| = {res}    0.0032

95%{txt} confidence set for null hypothesis expression: [{res}-5.113{txt}, {res}-2.748{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_16

{txt}{col 27}t(268) = {res}   -8.4226
{col 25}{txt}Prob>|t| = {res}    0.0041

95%{txt} confidence set for null hypothesis expression: [{res}-3.019{txt}, {res}-2.45{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_17

{txt}{col 27}t(268) = {res}   -2.7514
{col 25}{txt}Prob>|t| = {res}    0.1358

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_18

{txt}{col 27}t(268) = {res}   -3.8105
{col 25}{txt}Prob>|t| = {res}    0.1451

95%{txt} confidence set for null hypothesis expression: [{res}.{txt}, {res}.{txt}]
{res}(A confidence interval could not be bounded. Try widening the search range with the {cmd:gridmin()} and {cmd:gridmax()} options.)

{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_19

{txt}{col 27}t(268) = {res}   -7.1291
{col 25}{txt}Prob>|t| = {res}    0.0546

95%{txt} confidence set for null hypothesis expression: [{res}-6.279{txt}, {res}.2206{txt}]
{res}{txt}
{com}. 
. 
. 
. 
. ** These are too many coefficients to report and I like to create my own coeffient plot
. ** Here is the code:
. 
. * Pull coefficients into matrix:
. mat beta=e(b)
{txt}
{com}. 
. ** Average Treatment Effects:
. mat A = beta[1,1..37]
{txt}
{com}. 
. mat pre= A[1,1..18]
{txt}
{com}. mat post= A[1,19..37]
{txt}
{com}. 
. * Need to set the reference month at 0:
. mat pre_post=(pre, 0, post)
{txt}
{com}. mat list pre_post
{res}
{txt}pre_post[1,38]
        pre_18      pre_17      pre_16      pre_15      pre_14      pre_13      pre_12      pre_11      pre_10       pre_9       pre_8       pre_7       pre_6
y1 {res}  .74397553   .31803593   .33049701   .64579791   .43927479   .58610588   .07791731   .80564839   .63870072   .30234672    .4654718    .2322393   .04886294

{txt}         pre_5       pre_4       pre_3       pre_2       pre_1         c19      post_1      post_2      post_3      post_4      post_5      post_6      post_7
y1 {res} -.14888187  -.34178874  -.03384286    .1953379  -.34593368           0  -1.7990281  -2.0336013  -1.9733978  -2.4693851  -2.2080267  -3.0445618  -2.8548266

{txt}        post_8      post_9     post_10     post_11     post_12     post_13     post_14     post_15     post_16     post_17     post_18     post_19
y1 {res} -3.0957866  -2.2481707  -2.9641203  -2.9014218  -1.9657523  -2.4463895  -2.9872455  -3.7381378  -2.7308878  -3.3097233  -3.6415472   -2.594191
{reset}
{com}. 
. 
. ** Create a counter column:
. mat Z=J(1,38,0)
{txt}
{com}. local j=1
{txt}
{com}. forvalues i=-18/19 {c -(}
{txt}  2{com}. mat Z[1,`j'] = `i'
{txt}  3{com}. local j=`j'+1
{txt}  4{com}. {c )-}
{txt}
{com}. 
. 
. ** Grab the confidence intervals and append them together:
. mat CI=r(CI_1)
{txt}
{com}. 
. forvalues i=2/18 {c -(}
{txt}  2{com}. mat CI=CI\r(CI_`i')
{txt}  3{com}. {c )-}
{txt}
{com}. mat zero=J(1,2,0)
{txt}
{com}. mat CI = CI\zero
{txt}
{com}. 
. forvalues i=19/37 {c -(}
{txt}  2{com}. mat CI=CI\r(CI_`i')
{txt}  3{com}. {c )-}
{txt}
{com}. mat list CI
{res}
{txt}CI[38,2]
                 lo          hi
 pre_18 {res} -1.2745527   3.2369786
{txt} pre_17 {res} -1.5766486   3.2566195
{txt} pre_16 {res} -3.9427571   2.4012168
{txt} pre_15 {res} -.75122947   2.0978809
{txt} pre_14 {res}  -.5537902   1.5406287
{txt} pre_13 {res} -.70385985   1.6895305
{txt} pre_12 {res}  -1.136256   2.0243379
{txt} pre_11 {res}  -.8545696   1.9763535
{txt} pre_10 {res} -.40470856   1.5832025
{txt}  pre_9 {res} -1.0733588   1.7008477
{txt}  pre_8 {res} -.76112325   1.5169342
{txt}  pre_7 {res} -.88124883    1.346798
{txt}  pre_6 {res} -.96483774   1.0316355
{txt}  pre_5 {res} -1.1361345   .82599706
{txt}  pre_4 {res} -1.1566528   .49474869
{txt}  pre_3 {res} -.87850784   .81396112
{txt}  pre_2 {res} -.74583248   1.1240939
{txt}  pre_1 {res} -1.1888015   .51286736
{txt}     r1 {res}          0           0
{txt} post_1 {res} -2.5614468  -1.0123548
{txt} post_2 {res} -2.6294994  -1.4346091
{txt} post_3 {res} -2.7795809   -1.119243
{txt} post_4 {res} -3.1575058  -1.7645647
{txt} post_5 {res} -3.0900135  -1.3212284
{txt} post_6 {res} -3.9318232  -2.1322173
{txt} post_7 {res} -3.8349845  -1.8673517
{txt} post_8 {res} -3.9619567  -2.1794189
{txt} post_9 {res} -2.7882215  -1.6690322
{txt}post_10 {res} -3.5706934  -2.3835061
{txt}post_11 {res} -3.6423728  -2.1338945
{txt}post_12 {res} -2.6199599  -1.0410213
{txt}post_13 {res} -3.4923176  -1.3555506
{txt}post_14 {res} -3.3293763  -2.6470383
{txt}post_15 {res} -5.1132276  -2.7479268
{txt}post_16 {res} -3.0188646  -2.4500724
{txt}post_17 {res}          .           .
{txt}post_18 {res}          .           .
{txt}post_19 {res} -6.2791649   .22056094
{reset}
{com}. 
. 
. ** Build Coefficient and Confidence Interval Matrix:
. mat AZ= (Z', pre_post')
{txt}
{com}. mat AZ= AZ,CI
{txt}
{com}. mat list AZ
{res}
{txt}AZ[38,4]
             r1          y1          lo          hi
 c1 {res}        -18   .74397553  -1.2745527   3.2369786
{txt} c2 {res}        -17   .31803593  -1.5766486   3.2566195
{txt} c3 {res}        -16   .33049701  -3.9427571   2.4012168
{txt} c4 {res}        -15   .64579791  -.75122947   2.0978809
{txt} c5 {res}        -14   .43927479   -.5537902   1.5406287
{txt} c6 {res}        -13   .58610588  -.70385985   1.6895305
{txt} c7 {res}        -12   .07791731   -1.136256   2.0243379
{txt} c8 {res}        -11   .80564839   -.8545696   1.9763535
{txt} c9 {res}        -10   .63870072  -.40470856   1.5832025
{txt}c10 {res}         -9   .30234672  -1.0733588   1.7008477
{txt}c11 {res}         -8    .4654718  -.76112325   1.5169342
{txt}c12 {res}         -7    .2322393  -.88124883    1.346798
{txt}c13 {res}         -6   .04886294  -.96483774   1.0316355
{txt}c14 {res}         -5  -.14888187  -1.1361345   .82599706
{txt}c15 {res}         -4  -.34178874  -1.1566528   .49474869
{txt}c16 {res}         -3  -.03384286  -.87850784   .81396112
{txt}c17 {res}         -2    .1953379  -.74583248   1.1240939
{txt}c18 {res}         -1  -.34593368  -1.1888015   .51286736
{txt}c19 {res}          0           0           0           0
{txt}c20 {res}          1  -1.7990281  -2.5614468  -1.0123548
{txt}c21 {res}          2  -2.0336013  -2.6294994  -1.4346091
{txt}c22 {res}          3  -1.9733978  -2.7795809   -1.119243
{txt}c23 {res}          4  -2.4693851  -3.1575058  -1.7645647
{txt}c24 {res}          5  -2.2080267  -3.0900135  -1.3212284
{txt}c25 {res}          6  -3.0445618  -3.9318232  -2.1322173
{txt}c26 {res}          7  -2.8548266  -3.8349845  -1.8673517
{txt}c27 {res}          8  -3.0957866  -3.9619567  -2.1794189
{txt}c28 {res}          9  -2.2481707  -2.7882215  -1.6690322
{txt}c29 {res}         10  -2.9641203  -3.5706934  -2.3835061
{txt}c30 {res}         11  -2.9014218  -3.6423728  -2.1338945
{txt}c31 {res}         12  -1.9657523  -2.6199599  -1.0410213
{txt}c32 {res}         13  -2.4463895  -3.4923176  -1.3555506
{txt}c33 {res}         14  -2.9872455  -3.3293763  -2.6470383
{txt}c34 {res}         15  -3.7381378  -5.1132276  -2.7479268
{txt}c35 {res}         16  -2.7308878  -3.0188646  -2.4500724
{txt}c36 {res}         17  -3.3097233           .           .
{txt}c37 {res}         18  -3.6415472           .           .
{txt}c38 {res}         19   -2.594191  -6.2791649   .22056094
{reset}
{com}. 
. * Create variables from matrix so that you can graph them:
. svmat AZ, names(direct)
{txt}
{com}. sort direct1
{txt}
{com}. 
. 
. ** Coefficient estimates and CI are in IHS terms.
. * We can transform coefficient estimates in relative terms (i.e. % change):
. forvalues i = 5/7 {c -(}
{txt}  2{com}. local j=`i'-3
{txt}  3{com}. gen direct`i' = (exp(direct`j')-1)*100
{txt}  4{com}. {c )-}
{txt}(2,698 missing values generated)
(2,700 missing values generated)
(2,700 missing values generated)

{com}. 
. 
. * We can also transform coefficient estimates in absolute terms ($ mil.):
. ** For this we need to know the average value of FDI in the pre-treatment month for each affected region
. ** Then we take the average of that because the coefficient estimate is evaluated against this average:
. 
. * Generate pre-treatment average FDI inflows for each affected region:
. egen pre_fdi_avg = mean(fdi) if inlist(dif, -1) & affected_event==1
{txt}(2,720 missing values generated)

{com}. bysort id (pre_fdi_avg): replace pre_fdi_avg = pre_fdi_avg[1]
{txt}(2720 real changes made)

{com}. sum pre_fdi_avg

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 1}pre_fdi_avg {c |}{res}      2,736    125.7708           0   125.7708   125.7708
{txt}
{com}. 
. 
. * Convert relative changes to absolute changes 
. /* Remember direct2 is already in percentage terms */
. 
. forvalues i=8/10 {c -(}
{txt}  2{com}. local j=`i'-6
{txt}  3{com}. gen direct`i'= asinh(pre_fdi_avg) + direct`j'
{txt}  4{com}. replace direct`i'=sinh(direct`i') - pre_fdi_avg
{txt}  5{com}. {c )-}
{txt}(2,698 missing values generated)
(38 real changes made)
(2,700 missing values generated)
(36 real changes made)
(2,700 missing values generated)
(36 real changes made)

{com}. 
. * Let's graph the relative changes with CI and the absolute changes in FDI:
. *** The confidence interval reaches to far and messes up the scale of the graph.
. ** We restrict the cofidence interval to max 300 see note on figure
. 
. 
. * Direct FDI Effect:
. sort direct1
{txt}
{com}. sum direct2 direct3 direct4 

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct2 {c |}{res}         38   -1.211748    1.562193  -3.738138   .8056484
{txt}{space 5}direct3 {c |}{res}         36   -2.216274    1.515578  -6.279165          0
{txt}{space 5}direct4 {c |}{res}         36    .0037823     1.82605  -2.747927   3.256619
{txt}
{com}. sum direct5 direct8 pre_fdi_avg  if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct5 {c |}{res}         19   -92.12677    4.204428  -97.62016  -83.45404
{txt}{space 5}direct8 {c |}{res}         19   -115.9024    5.305159  -122.8612  -104.9725
{txt}{space 1}pre_fdi_avg {c |}{res}      2,717    125.7708           0   125.7708   125.7708
{txt}
{com}. 
. *replace direct1 = direct1-2
. *replace direct2 = direct2-2
. *replace direct3 = direct3-2
. *replace direct4 = direct4-2
. 
. 
. * Graph:
. * Note: If command excludes the end points where we only have one treated region: 
. graph twoway (rarea direct3 direct4 direct1 if inrange(direct1,-8,8), color(gs10%20) fintensity(100))  ///
>         (connected direct2 direct1 if inrange(direct1,-8,8), msize(medium) xline(0) yline(0) lc(ebblue) mc(ebblue%70) msymbol(circle)) ///
>         , ytitle("Change in IHS of FDI", ax(1)) xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0) yline(0, axis(2 1)) ///
>         name(event_direct, replace) xscale(r(-8,8)) xlabel(-8(4)8) ///
>         ylabel( , angle(horizontal)) yscale(titlegap(*+1)) ///
>         legend(off)
{res}{txt}
{com}.         
. graph export _3results/figures/figureB2a.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figureB2a.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
.         
.         
. *** 2.2) Event study regression on unaffected regions:
. 
. 
. 
. 
. ** Reload the data (since I had droped two regions for the dynamic analysis):
. 
. *use clean_data, clear
. drop pre* post* direct*
{txt}
{com}. 
. bro region date dif Count affected_event
{txt}
{com}. 
. * Identify the pre-treatment month for the unaffected regions.
. * These are the relavant pre-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=1/19 {c -(}
{txt}  2{com}. local j=20-`i'
{txt}  3{com}. gen pre_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. * Identify the post-treatment month for the affected regions.
. * These are the relavant post-treatment dummies = 1 for the specific month for the affected regions
. forvalues i=21/38{c -(}
{txt}  2{com}. local j=`i'-20
{txt}  3{com}. gen post_`j'=t_fe`i'
{txt}  4{com}. {c )-}
{txt}
{com}. 
. 
. 
. * Drop the t_fe* which are no longer needed:
. *drop t_fe*
. 
. 
. sort region date
{txt}
{com}. 
. reg fdi_ihs pre* post* $control i.region1 if (affected_event==0), robust

{txt}Linear regression                               Number of obs     = {res}     2,370
                                                {txt}F(54, 2315)       =  {res}   176.52
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.7116
                                                {txt}Root MSE          =    {res} 1.2815

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}     fdi_ihs{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 6}pre_19 {c |}{col 14}{res}{space 2}-.3152271{col 26}{space 2} .3035583{col 37}{space 1}   -1.04{col 46}{space 3}0.299{col 54}{space 4}-.9105016{col 67}{space 3} .2800475
{txt}{space 6}pre_18 {c |}{col 14}{res}{space 2}-.2202792{col 26}{space 2} .3723417{col 37}{space 1}   -0.59{col 46}{space 3}0.554{col 54}{space 4}-.9504373{col 67}{space 3} .5098788
{txt}{space 6}pre_17 {c |}{col 14}{res}{space 2}-.3260174{col 26}{space 2} .2177748{col 37}{space 1}   -1.50{col 46}{space 3}0.135{col 54}{space 4}-.7530714{col 67}{space 3} .1010366
{txt}{space 6}pre_16 {c |}{col 14}{res}{space 2}-.1795069{col 26}{space 2} .2843267{col 37}{space 1}   -0.63{col 46}{space 3}0.528{col 54}{space 4}-.7370685{col 67}{space 3} .3780546
{txt}{space 6}pre_15 {c |}{col 14}{res}{space 2}-.1511278{col 26}{space 2} .2339798{col 37}{space 1}   -0.65{col 46}{space 3}0.518{col 54}{space 4}-.6099597{col 67}{space 3} .3077041
{txt}{space 6}pre_14 {c |}{col 14}{res}{space 2}-.4168191{col 26}{space 2} .2562175{col 37}{space 1}   -1.63{col 46}{space 3}0.104{col 54}{space 4}-.9192588{col 67}{space 3} .0856207
{txt}{space 6}pre_13 {c |}{col 14}{res}{space 2}-.7659727{col 26}{space 2} .3097328{col 37}{space 1}   -2.47{col 46}{space 3}0.013{col 54}{space 4}-1.373355{col 67}{space 3}-.1585899
{txt}{space 6}pre_12 {c |}{col 14}{res}{space 2}-.5663501{col 26}{space 2} .2358761{col 37}{space 1}   -2.40{col 46}{space 3}0.016{col 54}{space 4}-1.028901{col 67}{space 3}-.1037996
{txt}{space 6}pre_11 {c |}{col 14}{res}{space 2}-.1780572{col 26}{space 2} .2480245{col 37}{space 1}   -0.72{col 46}{space 3}0.473{col 54}{space 4}-.6644306{col 67}{space 3} .3083161
{txt}{space 6}pre_10 {c |}{col 14}{res}{space 2}-.3469393{col 26}{space 2} .2709929{col 37}{space 1}   -1.28{col 46}{space 3}0.201{col 54}{space 4}-.8783535{col 67}{space 3} .1844749
{txt}{space 7}pre_9 {c |}{col 14}{res}{space 2}-.1713816{col 26}{space 2} .2225624{col 37}{space 1}   -0.77{col 46}{space 3}0.441{col 54}{space 4}-.6078242{col 67}{space 3} .2650609
{txt}{space 7}pre_8 {c |}{col 14}{res}{space 2}-.0809026{col 26}{space 2} .1697917{col 37}{space 1}   -0.48{col 46}{space 3}0.634{col 54}{space 4}-.4138623{col 67}{space 3} .2520572
{txt}{space 7}pre_7 {c |}{col 14}{res}{space 2}-.1562347{col 26}{space 2}  .201315{col 37}{space 1}   -0.78{col 46}{space 3}0.438{col 54}{space 4}-.5510112{col 67}{space 3} .2385419
{txt}{space 7}pre_6 {c |}{col 14}{res}{space 2}-.0743274{col 26}{space 2} .1758088{col 37}{space 1}   -0.42{col 46}{space 3}0.672{col 54}{space 4}-.4190865{col 67}{space 3} .2704317
{txt}{space 7}pre_5 {c |}{col 14}{res}{space 2}-.0231067{col 26}{space 2} .1791434{col 37}{space 1}   -0.13{col 46}{space 3}0.897{col 54}{space 4} -.374405{col 67}{space 3} .3281917
{txt}{space 7}pre_4 {c |}{col 14}{res}{space 2}-.1546603{col 26}{space 2} .1551311{col 37}{space 1}   -1.00{col 46}{space 3}0.319{col 54}{space 4}-.4588707{col 67}{space 3} .1495502
{txt}{space 7}pre_3 {c |}{col 14}{res}{space 2} .0780576{col 26}{space 2} .1613968{col 37}{space 1}    0.48{col 46}{space 3}0.629{col 54}{space 4}-.2384399{col 67}{space 3}  .394555
{txt}{space 7}pre_2 {c |}{col 14}{res}{space 2}-.0465035{col 26}{space 2} .1550859{col 37}{space 1}   -0.30{col 46}{space 3}0.764{col 54}{space 4}-.3506254{col 67}{space 3} .2576183
{txt}{space 7}pre_1 {c |}{col 14}{res}{space 2} .1961716{col 26}{space 2} .1620534{col 37}{space 1}    1.21{col 46}{space 3}0.226{col 54}{space 4}-.1216133{col 67}{space 3} .5139565
{txt}{space 6}post_1 {c |}{col 14}{res}{space 2} .0520445{col 26}{space 2} .1588676{col 37}{space 1}    0.33{col 46}{space 3}0.743{col 54}{space 4}-.2594932{col 67}{space 3} .3635822
{txt}{space 6}post_2 {c |}{col 14}{res}{space 2} .0489553{col 26}{space 2} .1727723{col 37}{space 1}    0.28{col 46}{space 3}0.777{col 54}{space 4}-.2898493{col 67}{space 3} .3877599
{txt}{space 6}post_3 {c |}{col 14}{res}{space 2} .0652694{col 26}{space 2} .1616848{col 37}{space 1}    0.40{col 46}{space 3}0.686{col 54}{space 4}-.2517929{col 67}{space 3} .3823316
{txt}{space 6}post_4 {c |}{col 14}{res}{space 2} .2446888{col 26}{space 2} .1604955{col 37}{space 1}    1.52{col 46}{space 3}0.127{col 54}{space 4}-.0700412{col 67}{space 3} .5594188
{txt}{space 6}post_5 {c |}{col 14}{res}{space 2} .2396551{col 26}{space 2} .1678126{col 37}{space 1}    1.43{col 46}{space 3}0.153{col 54}{space 4}-.0894236{col 67}{space 3} .5687337
{txt}{space 6}post_6 {c |}{col 14}{res}{space 2} .2242253{col 26}{space 2}  .190646{col 37}{space 1}    1.18{col 46}{space 3}0.240{col 54}{space 4}-.1496295{col 67}{space 3} .5980801
{txt}{space 6}post_7 {c |}{col 14}{res}{space 2} .2028512{col 26}{space 2}  .196581{col 37}{space 1}    1.03{col 46}{space 3}0.302{col 54}{space 4}-.1826421{col 67}{space 3} .5883445
{txt}{space 6}post_8 {c |}{col 14}{res}{space 2} .3507228{col 26}{space 2}  .192006{col 37}{space 1}    1.83{col 46}{space 3}0.068{col 54}{space 4}-.0257989{col 67}{space 3} .7272444
{txt}{space 6}post_9 {c |}{col 14}{res}{space 2} .4671613{col 26}{space 2} .2105018{col 37}{space 1}    2.22{col 46}{space 3}0.027{col 54}{space 4} .0543696{col 67}{space 3}  .879953
{txt}{space 5}post_10 {c |}{col 14}{res}{space 2}  .441133{col 26}{space 2} .2154694{col 37}{space 1}    2.05{col 46}{space 3}0.041{col 54}{space 4} .0185998{col 67}{space 3} .8636661
{txt}{space 5}post_11 {c |}{col 14}{res}{space 2} .2894078{col 26}{space 2} .2184252{col 37}{space 1}    1.32{col 46}{space 3}0.185{col 54}{space 4}-.1389218{col 67}{space 3} .7177373
{txt}{space 5}post_12 {c |}{col 14}{res}{space 2} .3482994{col 26}{space 2} .2197271{col 37}{space 1}    1.59{col 46}{space 3}0.113{col 54}{space 4}-.0825831{col 67}{space 3} .7791818
{txt}{space 5}post_13 {c |}{col 14}{res}{space 2} .1978601{col 26}{space 2} .2513204{col 37}{space 1}    0.79{col 46}{space 3}0.431{col 54}{space 4}-.2949764{col 67}{space 3} .6906966
{txt}{space 5}post_14 {c |}{col 14}{res}{space 2} .1488548{col 26}{space 2} .2945033{col 37}{space 1}    0.51{col 46}{space 3}0.613{col 54}{space 4}-.4286629{col 67}{space 3} .7263726
{txt}{space 5}post_15 {c |}{col 14}{res}{space 2} .1078737{col 26}{space 2} .1989712{col 37}{space 1}    0.54{col 46}{space 3}0.588{col 54}{space 4}-.2823067{col 67}{space 3} .4980541
{txt}{space 5}post_16 {c |}{col 14}{res}{space 2} .6653635{col 26}{space 2}   .31543{col 37}{space 1}    2.11{col 46}{space 3}0.035{col 54}{space 4} .0468086{col 67}{space 3} 1.283918
{txt}{space 5}post_17 {c |}{col 14}{res}{space 2} .4523579{col 26}{space 2} .3998252{col 37}{space 1}    1.13{col 46}{space 3}0.258{col 54}{space 4} -.331695{col 67}{space 3} 1.236411
{txt}{space 5}post_18 {c |}{col 14}{res}{space 2} .4225639{col 26}{space 2} .2583405{col 37}{space 1}    1.64{col 46}{space 3}0.102{col 54}{space 4} -.084039{col 67}{space 3} .9291668
{txt}{space 4}lag_lgdp {c |}{col 14}{res}{space 2} .5972171{col 26}{space 2} .0640258{col 37}{space 1}    9.33{col 46}{space 3}0.000{col 54}{space 4} .4716633{col 67}{space 3}  .722771
{txt}{space 4}lag_lpop {c |}{col 14}{res}{space 2}   .88129{col 26}{space 2} .0946314{col 37}{space 1}    9.31{col 46}{space 3}0.000{col 54}{space 4} .6957188{col 67}{space 3} 1.066861
{txt}{space 12} {c |}
{space 5}region1 {c |}
{space 2}bangalore  {c |}{col 14}{res}{space 2} 1.820827{col 26}{space 2} .0862906{col 37}{space 1}   21.10{col 46}{space 3}0.000{col 54}{space 4} 1.651612{col 67}{space 3} 1.990042
{txt}{space 5}bhopal  {c |}{col 14}{res}{space 2}-2.240981{col 26}{space 2} .1456048{col 37}{space 1}  -15.39{col 46}{space 3}0.000{col 54}{space 4} -2.52651{col 67}{space 3}-1.955451
{txt}bubaneshwar  {c |}{col 14}{res}{space 2}-3.267678{col 26}{space 2} .1456004{col 37}{space 1}  -22.44{col 46}{space 3}0.000{col 54}{space 4}-3.553199{col 67}{space 3}-2.982157
{txt}{space 1}chandigarh  {c |}{col 14}{res}{space 2}-2.073163{col 26}{space 2} .1656043{col 37}{space 1}  -12.52{col 46}{space 3}0.000{col 54}{space 4}-2.397911{col 67}{space 3}-1.748415
{txt}{space 4}chennai  {c |}{col 14}{res}{space 2} .7171427{col 26}{space 2} .0906748{col 37}{space 1}    7.91{col 46}{space 3}0.000{col 54}{space 4} .5393304{col 67}{space 3}  .894955
{txt}{space 3}guwahati  {c |}{col 14}{res}{space 2}-1.887049{col 26}{space 2}  .163893{col 37}{space 1}  -11.51{col 46}{space 3}0.000{col 54}{space 4}-2.208442{col 67}{space 3}-1.565657
{txt}{space 2}hyderabad  {c |}{col 14}{res}{space 2} .0254767{col 26}{space 2} .1223188{col 37}{space 1}    0.21{col 46}{space 3}0.835{col 54}{space 4}-.2143891{col 67}{space 3} .2653425
{txt}{space 5}jaipur  {c |}{col 14}{res}{space 2}-2.692302{col 26}{space 2} .1331195{col 37}{space 1}  -20.22{col 46}{space 3}0.000{col 54}{space 4}-2.953347{col 67}{space 3}-2.431256
{txt}{space 5}kanpur  {c |}{col 14}{res}{space 2}-4.714722{col 26}{space 2} .1775782{col 37}{space 1}  -26.55{col 46}{space 3}0.000{col 54}{space 4}-5.062951{col 67}{space 3}-4.366493
{txt}{space 6}kochi  {c |}{col 14}{res}{space 2}-1.715622{col 26}{space 2} .1591437{col 37}{space 1}  -10.78{col 46}{space 3}0.000{col 54}{space 4}-2.027701{col 67}{space 3}-1.403543
{txt}{space 4}kolkata  {c |}{col 14}{res}{space 2}-2.492635{col 26}{space 2} .1348628{col 37}{space 1}  -18.48{col 46}{space 3}0.000{col 54}{space 4}-2.757099{col 67}{space 3} -2.22817
{txt}{space 5}mumbai  {c |}{col 14}{res}{space 2} .7967019{col 26}{space 2} .0932262{col 37}{space 1}    8.55{col 46}{space 3}0.000{col 54}{space 4} .6138865{col 67}{space 3} .9795174
{txt}{space 2}new_delhi  {c |}{col 14}{res}{space 2} 2.154062{col 26}{space 2} .1525405{col 37}{space 1}   14.12{col 46}{space 3}0.000{col 54}{space 4} 1.854932{col 67}{space 3} 2.453193
{txt}{space 5}panaji  {c |}{col 14}{res}{space 2}  1.94991{col 26}{space 2} .2982707{col 37}{space 1}    6.54{col 46}{space 3}0.000{col 54}{space 4} 1.365004{col 67}{space 3} 2.534815
{txt}{space 6}patna  {c |}{col 14}{res}{space 2}-4.626423{col 26}{space 2} .1410351{col 37}{space 1}  -32.80{col 46}{space 3}0.000{col 54}{space 4}-4.902991{col 67}{space 3}-4.349854
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}-12.68037{col 26}{space 2} .7998834{col 37}{space 1}  -15.85{col 46}{space 3}0.000{col 54}{space 4}-14.24893{col 67}{space 3} -11.1118
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. 
. boottest {c -(}pre_19{c )-} {c -(}pre_18{c )-} {c -(}pre_17{c )-} {c -(}pre_16{c )-} {c -(}pre_15{c )-} {c -(}pre_14{c )-} {c -(}pre_13{c )-} {c -(}pre_12{c )-} ///
>                 {c -(}pre_11{c )-} {c -(}pre_10{c )-} {c -(}pre_9{c )-} {c -(}pre_8{c )-} {c -(}pre_7{c )-} {c -(}pre_6{c )-} {c -(}pre_5{c )-} {c -(}pre_4{c )-} ///
>                 {c -(}pre_3{c )-} {c -(}pre_2{c )-} {c -(}pre_1{c )-} {c -(}post_1{c )-} {c -(}post_2{c )-} {c -(}post_3{c )-} {c -(}post_4{c )-}  {c -(}post_5{c )-} ///
>                 {c -(}post_6{c )-} {c -(}post_7{c )-} {c -(}post_8{c )-} {c -(}post_9{c )-} {c -(}post_10{c )-} {c -(}post_11{c )-} {c -(}post_12{c )-} {c -(}post_13{c )-} ///
>                 {c -(}post_14{c )-} {c -(}post_15{c )-} {c -(}post_16{c )-} {c -(}post_17{c )-} {c -(}post_18{c )-} ///
>                 , reps(9999) gridpoints(10) bootcluster(region1 date) nograph seed(123)
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_19

{txt}{col 26}t(2315) = {res}   -1.0384
{col 25}{txt}Prob>|t| = {res}    0.3209

95%{txt} confidence set for null hypothesis expression: [{res}-1.013{txt}, {res}.4285{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_18

{txt}{col 26}t(2315) = {res}   -0.5916
{col 25}{txt}Prob>|t| = {res}    0.5744

95%{txt} confidence set for null hypothesis expression: [{res}-1.119{txt}, {res}.7293{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_17

{txt}{col 26}t(2315) = {res}   -1.4970
{col 25}{txt}Prob>|t| = {res}    0.1425

95%{txt} confidence set for null hypothesis expression: [{res}-.7689{txt}, {res}.1181{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_16

{txt}{col 26}t(2315) = {res}   -0.6313
{col 25}{txt}Prob>|t| = {res}    0.5760

95%{txt} confidence set for null hypothesis expression: [{res}-.7628{txt}, {res}.387{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_15

{txt}{col 26}t(2315) = {res}   -0.6459
{col 25}{txt}Prob>|t| = {res}    0.5250

95%{txt} confidence set for null hypothesis expression: [{res}-.644{txt}, {res}.3491{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_14

{txt}{col 26}t(2315) = {res}   -1.6268
{col 25}{txt}Prob>|t| = {res}    0.1230

95%{txt} confidence set for null hypothesis expression: [{res}-.9474{txt}, {res}.1238{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_13

{txt}{col 26}t(2315) = {res}   -2.4730
{col 25}{txt}Prob>|t| = {res}    0.0101

95%{txt} confidence set for null hypothesis expression: [{res}-1.364{txt}, {res}-.1776{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_12

{txt}{col 26}t(2315) = {res}   -2.4010
{col 25}{txt}Prob>|t| = {res}    0.0223

95%{txt} confidence set for null hypothesis expression: [{res}-1.028{txt}, {res}-.09922{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_11

{txt}{col 26}t(2315) = {res}   -0.7179
{col 25}{txt}Prob>|t| = {res}    0.4778

95%{txt} confidence set for null hypothesis expression: [{res}-.7018{txt}, {res}.346{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_10

{txt}{col 26}t(2315) = {res}   -1.2803
{col 25}{txt}Prob>|t| = {res}    0.2180

95%{txt} confidence set for null hypothesis expression: [{res}-.8885{txt}, {res}.1916{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_9

{txt}{col 26}t(2315) = {res}   -0.7700
{col 25}{txt}Prob>|t| = {res}    0.4425

95%{txt} confidence set for null hypothesis expression: [{res}-.6256{txt}, {res}.2765{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_8

{txt}{col 26}t(2315) = {res}   -0.4765
{col 25}{txt}Prob>|t| = {res}    0.6298

95%{txt} confidence set for null hypothesis expression: [{res}-.423{txt}, {res}.2621{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_7

{txt}{col 26}t(2315) = {res}   -0.7761
{col 25}{txt}Prob>|t| = {res}    0.4372

95%{txt} confidence set for null hypothesis expression: [{res}-.5567{txt}, {res}.2442{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_6

{txt}{col 26}t(2315) = {res}   -0.4228
{col 25}{txt}Prob>|t| = {res}    0.6751

95%{txt} confidence set for null hypothesis expression: [{res}-.4148{txt}, {res}.2717{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_5

{txt}{col 26}t(2315) = {res}   -0.1290
{col 25}{txt}Prob>|t| = {res}    0.8969

95%{txt} confidence set for null hypothesis expression: [{res}-.3788{txt}, {res}.333{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_4

{txt}{col 26}t(2315) = {res}   -0.9970
{col 25}{txt}Prob>|t| = {res}    0.3138

95%{txt} confidence set for null hypothesis expression: [{res}-.4592{txt}, {res}.1504{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_3

{txt}{col 26}t(2315) = {res}    0.4836
{col 25}{txt}Prob>|t| = {res}    0.6198

95%{txt} confidence set for null hypothesis expression: [{res}-.243{txt}, {res}.3965{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_2

{txt}{col 26}t(2315) = {res}   -0.2999
{col 25}{txt}Prob>|t| = {res}    0.7639

95%{txt} confidence set for null hypothesis expression: [{res}-.3494{txt}, {res}.2557{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}pre_1

{txt}{col 26}t(2315) = {res}    1.2105
{col 25}{txt}Prob>|t| = {res}    0.2261

95%{txt} confidence set for null hypothesis expression: [{res}-.1217{txt}, {res}.5159{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_1

{txt}{col 26}t(2315) = {res}    0.3276
{col 25}{txt}Prob>|t| = {res}    0.7484

95%{txt} confidence set for null hypothesis expression: [{res}-.258{txt}, {res}.3647{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_2

{txt}{col 26}t(2315) = {res}    0.2834
{col 25}{txt}Prob>|t| = {res}    0.7814

95%{txt} confidence set for null hypothesis expression: [{res}-.2893{txt}, {res}.3874{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_3

{txt}{col 26}t(2315) = {res}    0.4037
{col 25}{txt}Prob>|t| = {res}    0.6859

95%{txt} confidence set for null hypothesis expression: [{res}-.2561{txt}, {res}.3871{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_4

{txt}{col 26}t(2315) = {res}    1.5246
{col 25}{txt}Prob>|t| = {res}    0.1208

95%{txt} confidence set for null hypothesis expression: [{res}-.06862{txt}, {res}.5559{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_5

{txt}{col 26}t(2315) = {res}    1.4281
{col 25}{txt}Prob>|t| = {res}    0.1499

95%{txt} confidence set for null hypothesis expression: [{res}-.09009{txt}, {res}.5673{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_6

{txt}{col 26}t(2315) = {res}    1.1761
{col 25}{txt}Prob>|t| = {res}    0.2407

95%{txt} confidence set for null hypothesis expression: [{res}-.1515{txt}, {res}.6007{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_7

{txt}{col 26}t(2315) = {res}    1.0319
{col 25}{txt}Prob>|t| = {res}    0.3026

95%{txt} confidence set for null hypothesis expression: [{res}-.1919{txt}, {res}.5926{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_8

{txt}{col 26}t(2315) = {res}    1.8266
{col 25}{txt}Prob>|t| = {res}    0.0673

95%{txt} confidence set for null hypothesis expression: [{res}-.02621{txt}, {res}.7244{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_9

{txt}{col 26}t(2315) = {res}    2.2193
{col 25}{txt}Prob>|t| = {res}    0.0293

95%{txt} confidence set for null hypothesis expression: [{res}.04867{txt}, {res}.8854{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_10

{txt}{col 26}t(2315) = {res}    2.0473
{col 25}{txt}Prob>|t| = {res}    0.0498

95%{txt} confidence set for null hypothesis expression: [{res}.0002384{txt}, {res}.8752{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_11

{txt}{col 26}t(2315) = {res}    1.3250
{col 25}{txt}Prob>|t| = {res}    0.1902

95%{txt} confidence set for null hypothesis expression: [{res}-.1518{txt}, {res}.7174{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_12

{txt}{col 26}t(2315) = {res}    1.5851
{col 25}{txt}Prob>|t| = {res}    0.1206

95%{txt} confidence set for null hypothesis expression: [{res}-.097{txt}, {res}.792{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_13

{txt}{col 26}t(2315) = {res}    0.7873
{col 25}{txt}Prob>|t| = {res}    0.4398

95%{txt} confidence set for null hypothesis expression: [{res}-.3306{txt}, {res}.7134{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_14

{txt}{col 26}t(2315) = {res}    0.5054
{col 25}{txt}Prob>|t| = {res}    0.6239

95%{txt} confidence set for null hypothesis expression: [{res}-.4833{txt}, {res}.7779{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_15

{txt}{col 26}t(2315) = {res}    0.5422
{col 25}{txt}Prob>|t| = {res}    0.5834

95%{txt} confidence set for null hypothesis expression: [{res}-.3027{txt}, {res}.516{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_16

{txt}{col 26}t(2315) = {res}    2.1094
{col 25}{txt}Prob>|t| = {res}    0.0504

95%{txt} confidence set for null hypothesis expression: [{res}-.001628{txt}, {res}1.302{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_17

{txt}{col 26}t(2315) = {res}    1.1314
{col 25}{txt}Prob>|t| = {res}    0.2998

95%{txt} confidence set for null hypothesis expression: [{res}-.4809{txt}, {res}1.381{txt}]
{res}
{txt}Wild bootstrap-t, null imposed, 9999 replications, Wald test, bootstrap clustering by {res}region1 date{txt}, Rademacher weights:
  {res}post_18

{txt}{col 26}t(2315) = {res}    1.6357
{col 25}{txt}Prob>|t| = {res}    0.1275

95%{txt} confidence set for null hypothesis expression: [{res}-.1692{txt}, {res}.9753{txt}]
{res}{txt}
{com}.                 
. ** These are too many coefficients to report and I like to create my own coeffient plot
. ** Here is the code:
. 
. * Pull coefficients into matrix:
. mat beta=e(b)
{txt}
{com}. 
. ** Average Treatment Effects:
. mat A = beta[1,1..37]
{txt}
{com}. mat list A
{res}
{txt}A[1,37]
        pre_19      pre_18      pre_17      pre_16      pre_15      pre_14      pre_13      pre_12      pre_11      pre_10       pre_9       pre_8       pre_7
y1 {res} -.31522706  -.22027922   -.3260174  -.17950694  -.15112779  -.41681906   -.7659727  -.56635014  -.17805721  -.34693932  -.17138164  -.08090255  -.15623468

{txt}         pre_6       pre_5       pre_4       pre_3       pre_2       pre_1      post_1      post_2      post_3      post_4      post_5      post_6      post_7
y1 {res} -.07432742  -.02310669  -.15466029   .07805758  -.04650352   .19617159   .05204449   .04895532   .06526937   .24468879   .23965508   .22422528   .20285119

{txt}        post_8      post_9     post_10     post_11     post_12     post_13     post_14     post_15     post_16     post_17     post_18
y1 {res}  .35072278    .4671613   .44113297   .28940778   .34829937   .19786008   .14885482    .1078737   .66536348   .45235788   .42256393
{reset}
{com}. 
. mat pre= A[1,1..19]
{txt}
{com}. mat post= A[1,20..37]
{txt}
{com}. 
. * Need to set the reference month at 0:
. mat pre_post=(pre, 0, post)
{txt}
{com}. mat list pre_post
{res}
{txt}pre_post[1,38]
        pre_19      pre_18      pre_17      pre_16      pre_15      pre_14      pre_13      pre_12      pre_11      pre_10       pre_9       pre_8       pre_7
y1 {res} -.31522706  -.22027922   -.3260174  -.17950694  -.15112779  -.41681906   -.7659727  -.56635014  -.17805721  -.34693932  -.17138164  -.08090255  -.15623468

{txt}         pre_6       pre_5       pre_4       pre_3       pre_2       pre_1         c20      post_1      post_2      post_3      post_4      post_5      post_6
y1 {res} -.07432742  -.02310669  -.15466029   .07805758  -.04650352   .19617159           0   .05204449   .04895532   .06526937   .24468879   .23965508   .22422528

{txt}        post_7      post_8      post_9     post_10     post_11     post_12     post_13     post_14     post_15     post_16     post_17     post_18
y1 {res}  .20285119   .35072278    .4671613   .44113297   .28940778   .34829937   .19786008   .14885482    .1078737   .66536348   .45235788   .42256393
{reset}
{com}. 
. 
. ** Create a counter column:
. mat Z=J(1,38,0)
{txt}
{com}. local j=1
{txt}
{com}. forvalues i=-19/18{c -(}
{txt}  2{com}. mat Z[1,`j'] = `i'
{txt}  3{com}. local j=`j'+1
{txt}  4{com}. {c )-}
{txt}
{com}. 
. 
. ** Grab the confidence intervals and append them together:
. mat CI=r(CI_1)
{txt}
{com}. 
. forvalues i=2/19 {c -(}
{txt}  2{com}. mat CI=CI\r(CI_`i')
{txt}  3{com}. {c )-}
{txt}
{com}. 
. mat zero=J(1,2,0)
{txt}
{com}. mat CI = CI\zero
{txt}
{com}. 
. forvalues i=20/37 {c -(}
{txt}  2{com}. mat CI=CI\r(CI_`i')
{txt}  3{com}. {c )-}
{txt}
{com}. mat list CI
{res}
{txt}CI[38,2]
                 lo          hi
 pre_19 {res} -1.0127668   .42845923
{txt} pre_18 {res} -1.1191599   .72926918
{txt} pre_17 {res} -.76893591   .11806107
{txt} pre_16 {res}  -.7628479   .38695783
{txt} pre_15 {res} -.64401932   .34909198
{txt} pre_14 {res} -.94744318   .12384594
{txt} pre_13 {res} -1.3643907  -.17755032
{txt} pre_12 {res} -1.0279505  -.09921939
{txt} pre_11 {res} -.70180135   .34598207
{txt} pre_10 {res} -.88853885    .1915929
{txt}  pre_9 {res} -.62561918    .2764626
{txt}  pre_8 {res} -.42298411   .26207595
{txt}  pre_7 {res} -.55674093    .2442108
{txt}  pre_6 {res} -.41482423   .27171829
{txt}  pre_5 {res} -.37877561   .33300852
{txt}  pre_4 {res} -.45916988   .15043894
{txt}  pre_3 {res}    -.24304   .39650266
{txt}  pre_2 {res} -.34941512   .25570116
{txt}  pre_1 {res} -.12171708   .51590628
{txt}     r1 {res}          0           0
{txt} post_1 {res} -.25799835    .3646703
{txt} post_2 {res} -.28933335   .38735871
{txt} post_3 {res} -.25613205    .3871023
{txt} post_4 {res}  -.0686154   .55592835
{txt} post_5 {res}  -.0900854   .56733324
{txt} post_6 {res} -.15146042    .6007463
{txt} post_7 {res} -.19191939   .59261073
{txt} post_8 {res} -.02620619   .72437855
{txt} post_9 {res}  .04866775   .88542503
{txt}post_10 {res}  .00023842   .87518764
{txt}post_11 {res} -.15175562   .71735228
{txt}post_12 {res} -.09700068    .7920219
{txt}post_13 {res} -.33058182   .71344419
{txt}post_14 {res} -.48333035   .77788231
{txt}post_15 {res} -.30269396   .51601649
{txt}post_16 {res}  -.0016283   1.3015139
{txt}post_17 {res} -.48093515   1.3808679
{txt}post_18 {res} -.16920912   .97531885
{reset}
{com}. 
. 
. ** Build Coefficient and Confidence Interval Matrix:
. * Calculate 95% confidence interval +/- 1.96*std. error:
. mat AZ= (Z', pre_post')
{txt}
{com}. mat AZ= AZ,CI
{txt}
{com}. 
. * Create variables from matrix so that you can graph them:
. svmat AZ, names(direct)
{txt}
{com}. sort direct1
{txt}
{com}. 
. 
. ** Coefficient estimates and CI are in IHS terms.
. * We can transform coefficient estimates in relative terms (i.e. % change):
. forvalues i = 5/7 {c -(}
{txt}  2{com}. local j=`i'-3
{txt}  3{com}. gen direct`i' = (exp(direct`j')-1)*100
{txt}  4{com}. {c )-}
{txt}(2,698 missing values generated)
(2,698 missing values generated)
(2,698 missing values generated)

{com}. 
. 
. * We can also transform coefficient estimates in absolute terms ($ mil.):
. ** For this we need to know the average value of FDI in the pre-treatment month for each affected region
. ** Then we take the average of that because the coefficient estimate is evaluated against this average:
. 
. * Generate pre-treatment average FDI inflows for each affected region:
. egen pre_fdi_avg = mean(fdi) if inlist(dif, 0) & affected_event==0
{txt}(2,608 missing values generated)

{com}. bysort id (pre_fdi_avg): replace pre_fdi_avg = pre_fdi_avg[1]
{txt}(2608 real changes made)

{com}. sum pre_fdi_avg

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 1}pre_fdi_avg {c |}{res}      2,736    139.5755           0   139.5755   139.5755
{txt}
{com}. 
. 
. 
. * Convert relative changes to absolute changes 
. /* Remember direct2 is already in percentage terms */
. 
. forvalues i=8/10 {c -(}
{txt}  2{com}. local j=`i'-6
{txt}  3{com}. gen direct`i'= asinh(pre_fdi_avg) + direct`j'
{txt}  4{com}. replace direct`i'=sinh(direct`i') - pre_fdi_avg
{txt}  5{com}. {c )-}
{txt}(2,698 missing values generated)
(38 real changes made)
(2,698 missing values generated)
(38 real changes made)
(2,698 missing values generated)
(38 real changes made)

{com}. 
. * Let's graph the relative changes with CI and the absolute changes in FDI:
. *** The confidence interval reaches to far and messes up the scale of the graph.
. ** We restrict the confidence interval to max 300 see note on figure
. 
. 
. * Indirect FDI Effect:
. sort direct1
{txt}
{com}. sum direct2 direct3 direct4 

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct2 {c |}{res}         38    .0281606    .3078819  -.7659727   .6653635
{txt}{space 5}direct3 {c |}{res}         38   -.4239505    .3584976  -1.364391   .0486677
{txt}{space 5}direct4 {c |}{res}         38    .4794125    .3411407  -.1775503   1.380868
{txt}
{com}. sum direct5 direct8 pre_fdi_avg  if direct1>0

{txt}    Variable {c |}        Obs        Mean    Std. dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 5}direct5 {c |}{res}         18    33.63287    23.59263   5.017343   94.51974
{txt}{space 5}direct8 {c |}{res}         18    46.94427    32.93018   7.003181    131.929
{txt}{space 1}pre_fdi_avg {c |}{res}      2,716    139.5755           0   139.5755   139.5755
{txt}
{com}. 
. 
. graph twoway (rarea direct3 direct4 direct1 if inrange(direct1,-8,8), color(gs10%20) fintensity(100))  ///
>         (connected direct2 direct1 if inrange(direct1,-8,8), msize(medium) xline(0 ) yline(0 ) lc(ebblue) mc(ebblue%70) msymbol(smccircle)) ///
>         , ytitle("Change in IHS of FDI", ax(1)) xtitle("Month Relative to Disaster") ///
>         scheme(plotplain)  xline(0, axis(1) lcolor(black)) yline(0, axis(2 1) lcolor(black)) ///
>         name(event_indirect, replace) xscale(r(-8,8)) xlabel(-8(4)8) ///
>         ylabel(, angle(horizontal)) yscale(titlegap(*+1)) ///
>         legend(off)
{p 0 4 2}
{txt}(note:  named style
smccircle not found in class
symbol,  default attributes used)
{p_end}
{res}{txt}
{com}.         
.         
. graph export _3results/figures/figureB2b.pdf, replace
{txt}{p 0 4 2}
file {bf}
/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_3results/figures/figureB2b.pdf{rm}
saved as
PDF
format
{p_end}

{com}. 
. 
. 
. 
. 
. 
. 
. 
. 
. 
{txt}end of do-file

{com}. 
. 
. translate replication.smcl replication.pdf
{err}{p 0 4 2}
file {bf:{err}replication.pdf}
already exists
{p_end}
{txt}{search r(602), local:r(602);}

end of do-file

{search r(602), local:r(602);}

{com}. translate replication.smcl replication.pdf, replace

. do "/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/_2code/_2analysis/table2_spatial.do"
{txt}
{com}. 
. ********************************************************************************
. * Table 2: Spatial difference-in-differences
. 
. ********************************************************************************
. 
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
. ** Set the control variables:
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. 
. *reg fdi_ihs one two three four five $control i.date i.region1, cluster(region1)
. tab region

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
   ahmedabad {c |}{res}        171        6.25        6.25
{txt}   bangalore {c |}{res}        171        6.25       12.50
{txt}      bhopal {c |}{res}        171        6.25       18.75
{txt} bubaneshwar {c |}{res}        171        6.25       25.00
{txt}  chandigarh {c |}{res}        171        6.25       31.25
{txt}     chennai {c |}{res}        171        6.25       37.50
{txt}    guwahati {c |}{res}        171        6.25       43.75
{txt}   hyderabad {c |}{res}        171        6.25       50.00
{txt}      jaipur {c |}{res}        171        6.25       56.25
{txt}      kanpur {c |}{res}        171        6.25       62.50
{txt}       kochi {c |}{res}        171        6.25       68.75
{txt}     kolkata {c |}{res}        171        6.25       75.00
{txt}      mumbai {c |}{res}        171        6.25       81.25
{txt}   new_delhi {c |}{res}        171        6.25       87.50
{txt}      panaji {c |}{res}        171        6.25       93.75
{txt}       patna {c |}{res}        171        6.25      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}      2,736      100.00
{txt}
{com}. 
. 
. 
. 
. **********************************************************************************
. ***** Build Contiguity Matrix:
. **********************************************************************************
. 
. ** Sort Regions North to South and West to East:
. gen mat_region_id = .
{txt}(2,736 missing values generated)

{com}. replace mat_region_id=1 if region=="chandigarh"  /// himachal pradesh, punjab, haryana, chandigarh  
> /// neighbors with: jaipur, new delhi, kanpur
> 
{txt}(171 real changes made)

{com}. replace mat_region_id=2 if region=="jaipur" /// rajasthan 
> /// neighbors with: ahmedabad, chandigarh, kanpur, bhopal
> 
{txt}(171 real changes made)

{com}. replace mat_region_id=3 if region=="new_delhi" /// delhi 
> /// neighbors with: chandigarh, kanpur
> 
{txt}(171 real changes made)

{com}. replace mat_region_id=4 if region=="kanpur" /// Uttarakhand, uttar pradesh 
> /// neighbors with: chandigarh, new delhi, jaipur, bhopal, patna
> 
{txt}(171 real changes made)

{com}. replace mat_region_id=5 if region=="ahmedabad" /// Gujarat
> /// neighbors with: jaipur, bhopal, mumbai
> 
{txt}(171 real changes made)

{com}. replace mat_region_id=6 if region=="bhopal" /// Madhya pradesh, chhattisgarh
> /// neighbors with: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
> 
{txt}(171 real changes made)

{com}. replace mat_region_id=7 if region=="patna" // jharkhand, bihar
{txt}(171 real changes made)

{com}. /// neighbors with: kanpur, bhopal, bhubaneshwar, kolkata
> 
. replace mat_region_id=8 if region=="kolkata" // sikkim, west bengal
{txt}(171 real changes made)

{com}. /// neighbors with: patna, bhubaneshwar, guwahati
> 
. replace mat_region_id=9 if region=="guwahati"  // assam, arunachal pradesh, manipur, mehalaya, mizoram, nagaland, tripura
{txt}(171 real changes made)

{com}. /// neighbors with: kokata
> 
. replace mat_region_id=10 if region=="mumbai" // maharashtra, dadra, daman
{txt}(171 real changes made)

{com}. /// neighbors with: ahmedabad, bhopal, panaji, bangalore, hyderabad
> 
. replace mat_region_id=11 if region=="bubaneshwar" // odisha
{txt}(171 real changes made)

{com}. /// neighbors with: bhopal, patna, kolkata, hyderabad
> 
. replace mat_region_id=12 if region=="panaji" // goa
{txt}(171 real changes made)

{com}. /// neighbors with: mumbai, bangalore
> 
. replace mat_region_id=13 if region=="bangalore" // karnataka
{txt}(171 real changes made)

{com}. /// neighbors with: panaji, mumbai, hyderabad, kochi, chennai
> 
. replace mat_region_id=14 if region=="hyderabad" // andhra pradesh
{txt}(171 real changes made)

{com}. /// neighbors with: bangalore, mumbai, bhopal, bhubaneshwar, chennai
> 
. replace mat_region_id=15 if region=="kochi" // kerala
{txt}(171 real changes made)

{com}. /// neighbors with: bangalore, chennai
> 
. replace mat_region_id=16 if region=="chennai" // tamil nadu, puducherry
{txt}(171 real changes made)

{com}. /// neighbors with: kochi, bangalore, hyderabad
> 
. 
. *** Create Neighbor Matrix following Mat_Region_ID:
. mat Cont1=J(16,16,0)
{txt}
{com}. 
. mat Cont1[1,2]=1   // neighbors to chandigarh: jaipur, new delhi, kanpur
{txt}
{com}. mat Cont1[1,3]=1 
{txt}
{com}. mat Cont1[1,4]=1 
{txt}
{com}. 
. mat Cont1[2,1]=1   // neighbors to jaipur: ahmedabad, chandigarh, kanpur, bhopal
{txt}
{com}. mat Cont1[2,4]=1 
{txt}
{com}. mat Cont1[2,5]=1 
{txt}
{com}. mat Cont1[2,6]=1 
{txt}
{com}. 
. mat Cont1[3,1]=1   // neighbors to New Delhi: chandigarh, kanpur
{txt}
{com}. mat Cont1[3,4]=1 
{txt}
{com}. 
. mat Cont1[4,1]=1   // neighbors to Kanpur: chandigarh, new delhi, jaipur, bhopal, patna
{txt}
{com}. mat Cont1[4,2]=1 
{txt}
{com}. mat Cont1[4,3]=1 
{txt}
{com}. mat Cont1[4,6]=1 
{txt}
{com}. mat Cont1[4,7]=1 
{txt}
{com}. 
. mat Cont1[5,2]=1   // neighbors to Ahmedabad: jaipur, bhopal, mumbai
{txt}
{com}. mat Cont1[5,6]=1 
{txt}
{com}. mat Cont1[5,10]=1 
{txt}
{com}. 
. mat Cont1[6,2]=1   // neighbors to Bhopal: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
{txt}
{com}. mat Cont1[6,4]=1 
{txt}
{com}. mat Cont1[6,5]=1 
{txt}
{com}. mat Cont1[6,7]=1 
{txt}
{com}. mat Cont1[6,10]=1 
{txt}
{com}. mat Cont1[6,11]=1 
{txt}
{com}. mat Cont1[6,14]=1 
{txt}
{com}. 
. mat Cont1[7,4]=1   // neighbors to Patna: kanpur, bhopal, bhubaneshwar, kolkata
{txt}
{com}. mat Cont1[7,6]=1 
{txt}
{com}. mat Cont1[7,8]=1 
{txt}
{com}. mat Cont1[7,11]=1 
{txt}
{com}. 
. mat Cont1[8,7]=1   // neighbors to Kolkata: patna, bhubaneshwar, guwahati
{txt}
{com}. mat Cont1[8,9]=1 
{txt}
{com}. mat Cont1[8,11]=1 
{txt}
{com}. 
. mat Cont1[9,8]=1   // neighbors to Guwahati: kokata
{txt}
{com}. 
. mat Cont1[10,5]=1   // neighbors to mumbai: ahmedabad, bhopal, panaji, bangalore, hyderabad
{txt}
{com}. mat Cont1[10,6]=1 
{txt}
{com}. mat Cont1[10,12]=1 
{txt}
{com}. mat Cont1[10,13]=1 
{txt}
{com}. mat Cont1[10,14]=1 
{txt}
{com}. 
. mat Cont1[11,6]=1   // neighbors to bhubaneshwar: bhopal, patna, kolkata, hyderabad
{txt}
{com}. mat Cont1[11,7]=1 
{txt}
{com}. mat Cont1[11,8]=1 
{txt}
{com}. mat Cont1[11,14]=1 
{txt}
{com}. 
. mat Cont1[12,10]=1   // neighbors to panaji:  mumbai, bangalore
{txt}
{com}. mat Cont1[12,13]=1 
{txt}
{com}. 
. mat Cont1[13,10]=1   // neighbors to bangalore: panaji, mumbai, hyderabad, kochi, chennai
{txt}
{com}. mat Cont1[13,12]=1 
{txt}
{com}. mat Cont1[13,14]=1 
{txt}
{com}. mat Cont1[13,15]=1 
{txt}
{com}. mat Cont1[13,16]=1 
{txt}
{com}. 
. mat Cont1[14,6]=1   // neighbors to hyderabad: bangalore, mumbai, bhopal, bhubaneshwar, chennai
{txt}
{com}. mat Cont1[14,10]=1 
{txt}
{com}. mat Cont1[14,11]=1 
{txt}
{com}. mat Cont1[14,13]=1 
{txt}
{com}. mat Cont1[14,16]=1 
{txt}
{com}. 
. mat Cont1[15,13]=1   // neighbors to kochi: bangalore, chennai
{txt}
{com}. mat Cont1[15,16]=1 
{txt}
{com}. 
. mat Cont1[16,13]=1   // neighbors to chennai: kochi, bangalore, hyderabad
{txt}
{com}. mat Cont1[16,14]=1 
{txt}
{com}. mat Cont1[16,15]=1 
{txt}
{com}. 
. 
. mata : st_matrix("B", rowsum(st_matrix("Cont1")))
{res}{txt}
{com}. 
. mat list B // max is 7
{res}
{txt}B[16,1]
     c1
 r1 {res}  3
{txt} r2 {res}  4
{txt} r3 {res}  2
{txt} r4 {res}  5
{txt} r5 {res}  3
{txt} r6 {res}  7
{txt} r7 {res}  4
{txt} r8 {res}  3
{txt} r9 {res}  1
{txt}r10 {res}  5
{txt}r11 {res}  4
{txt}r12 {res}  2
{txt}r13 {res}  5
{txt}r14 {res}  5
{txt}r15 {res}  2
{txt}r16 {res}  3
{reset}
{com}. 
. *Take the rowsum max (which is also column sum max) and divide each element by it: 
. mata : C=st_matrix("Cont1")
{res}{txt}
{com}. mata : A=C:/7
{res}{txt}
{com}. mata : st_matrix("n_Cont1", A)
{res}{txt}
{com}. mat list n_Cont1
{res}
{txt}symmetric n_Cont1[16,16]
            c1         c2         c3         c4         c5         c6         c7         c8         c9        c10        c11        c12        c13        c14
 r1 {res}         0
{txt} r2 {res} .14285714          0
{txt} r3 {res} .14285714          0          0
{txt} r4 {res} .14285714  .14285714  .14285714          0
{txt} r5 {res}         0  .14285714          0          0          0
{txt} r6 {res}         0  .14285714          0  .14285714  .14285714          0
{txt} r7 {res}         0          0          0  .14285714          0  .14285714          0
{txt} r8 {res}         0          0          0          0          0          0  .14285714          0
{txt} r9 {res}         0          0          0          0          0          0          0  .14285714          0
{txt}r10 {res}         0          0          0          0  .14285714  .14285714          0          0          0          0
{txt}r11 {res}         0          0          0          0          0  .14285714  .14285714  .14285714          0          0          0
{txt}r12 {res}         0          0          0          0          0          0          0          0          0  .14285714          0          0
{txt}r13 {res}         0          0          0          0          0          0          0          0          0  .14285714          0  .14285714          0
{txt}r14 {res}         0          0          0          0          0  .14285714          0          0          0  .14285714  .14285714          0  .14285714          0
{txt}r15 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714          0
{txt}r16 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714  .14285714

{txt}           c15        c16
r15 {res}         0
{txt}r16 {res} .14285714          0
{reset}
{com}. 
. 
. xtset mat_region_id date
{res}
{col 1}{txt:Panel variable: }{res:mat_region_id}{txt: (strongly balanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2005m10}}{txt: to }{res:{bind:2019m12}}{p_end}
{txt}{col 10}Delta: {res}1 month
{txt}
{com}. 
. 
. 
. 
. ********************************************************************************
. ******************* Inverse Distance Matrix
. ********************************************************************************
. 
. /** Upload longitude and latitude data by region:
> insheet using Data/city_lat_long.csv, comma clear
> 
> keep city lat lng
> sort city
> 
> replace city="ahmedabad" if city=="Ahmedabad"
> replace city="bangalore" if city=="Bangalore"
> replace city="bhopal" if city=="Bhopāl"
> replace city="bubaneshwar" if city=="Bhubaneshwar"
> replace city="chandigarh" if city=="Chandīgarh"
> replace city="chennai" if city=="Chennai"
> replace city="guwahati" if city=="Guwāhāti"
> replace city="hyderabad" if city=="Hyderābād"
> replace city="jaipur" if city=="Jaipur"
> replace city="kanpur" if city=="Lucknow"
> replace city="kochi" if city=="Kochi"
> replace city="kolkata" if city=="Kolkāta"
> replace city="mumbai" if city=="Mumbai"
> replace city="new_delhi" if city=="Delhi"
> replace city="panaji" if city=="Panaji"
> replace city="patna" if city=="Patna"
> 
> rename city region
> bysort region: gen id=_N
> drop if id==2
> save Data/city_lat_long, replace
> 
> */
. 
. ** Merge in City latitude and longitude data:
. merge m:1 region using _1data/raw/spatial/city_lat_long
{res}{txt}{p 0 7 2}
(variable
{bf:region} was {bf:str12}, now {bf:str18} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:id} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             388
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}             388{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           2,736{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge==2
{txt}(388 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. 
. ** Create distance variables:
. forvalues i=1/16 {c -(}
{txt}  2{com}. sort mat_region_id
{txt}  3{com}. gen lat1=lat if mat_region_id==`i' & date==tm(2005m10)
{txt}  4{com}. sort lat1
{txt}  5{com}. replace lat1=lat1[1]
{txt}  6{com}. 
. gen lon1=lng if mat_region_id==`i' & date==tm(2005m10)
{txt}  7{com}. sort lon1
{txt}  8{com}. replace lon1=lon1[1]
{txt}  9{com}. 
. geodist lat lng lat1 lon1, gen(dist`i')
{txt} 10{com}. replace dist`i'=1 if dist`i'<1
{txt} 11{com}. 
. gen idist`i'=1/(dist`i')
{txt} 12{com}. replace idist`i'=0 if idist`i'==1
{txt} 13{com}. 
. drop lat1 lon1 dist`i'
{txt} 14{com}. 
. {c )-}
{txt}(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(2,735 missing values generated)
(2,735 real changes made)
(171 real changes made)
(171 real changes made)

{com}. sort date mat_region_id
{txt}
{com}. 
. * Create matrix from distance variables:
. mkmat idist1-idist16 if date==tm(2005m10), mat(idist)
{res}{txt}
{com}. mat list idist
{res}
{txt}symmetric idist[16,16]
        idist1     idist2     idist3     idist4     idist5     idist6     idist7     idist8     idist9    idist10    idist11    idist12    idist13    idist14
 r1 {res}         0
{txt} r2 {res} .00231091          0
{txt} r3 {res} .00427479  .00424974          0
{txt} r4 {res} .00168978    .001981  .00239312          0
{txt} r5 {res} .00105205  .00183983  .00128457  .00105866          0
{txt} r6 {res} .00120233  .00229769  .00166763  .00187121   .0020164          0
{txt} r7 {res} .00100302  .00106667  .00117131  .00226796  .00076569  .00121117          0
{txt} r8 {res} .00068338  .00074034  .00076655  .00112771  .00061797  .00089047  .00212645          0
{txt} r9 {res} .00064508  .00063066  .00068361  .00092519   .0005071  .00067266  .00149988  .00188225          0
{txt}r10 {res} .00073352  .00107107  .00085985   .0008297  .00221903  .00148824  .00068257  .00060188  .00047593          0
{txt}r11 {res} .00067933  .00079697  .00078513  .00113271  .00071197  .00107469   .0016774  .00276027  .00112068  .00072976          0
{txt}r12 {res} .00058265  .00077897  .00066631  .00068556  .00118202   .0010651  .00061505  .00058334  .00045325  .00249893  .00072633          0
{txt}r13 {res} .00050787  .00064327   .0005755   .0006347  .00081076  .00087873  .00062222  .00064347  .00048058  .00119503  .00083877  .00203079          0
{txt}r14 {res} .00067094  .00091669   .0007955  .00092556  .00113875  .00151403  .00087362  .00084682   .0005939  .00160837  .00119123  .00186079  .00201865          0
{txt}r15 {res} .00043477  .00053284  .00048268  .00051766  .00066734  .00067797  .00050815  .00052792   .0004125  .00094087  .00065268  .00150254  .00276358  .00117363
{txt}r16 {res}  .0005032  .00062536  .00057033  .00065554  .00073056  .00085824  .00067679  .00074037  .00053136  .00097243  .00100914  .00134369  .00344058  .00195199

{txt}       idist15    idist16
r15 {res}         0
{txt}r16 {res} .00180083          0
{reset}
{com}. 
. * Normalize:
. mata : st_matrix("r", rowsum(st_matrix("idist")))
{res}{txt}
{com}. mat list r // max is .02122661
{res}
{txt}r[16,1]
            c1
 r1 {res} .01697363
{txt} r2 {res} .02048202
{txt} r3 {res} .02122661
{txt} r4 {res} .01869605
{txt} r5 {res}  .0166027
{txt} r6 {res} .01938655
{txt} r7 {res} .01676794
{txt} r8 {res}  .0155392
{txt} r9 {res} .01151463
{txt}r10 {res} .01690718
{txt}r11 {res} .01588706
{txt}r12 {res} .01657532
{txt}r13 {res} .01808451
{txt}r14 {res} .01808048
{txt}r15 {res} .01359595
{txt}r16 {res}  .0164104
{reset}
{com}. 
. *Take the rowsum max (which is also column sum max) and divide each element by it: 
. mata : C=st_matrix("idist")
{res}{txt}
{com}. mata : A=C:/.02122661
{res}{txt}
{com}. mata : st_matrix("n_idist", A)
{res}{txt}
{com}. mat list n_idist
{res}
{txt}n_idist[16,16]
            c1         c2         c3         c4         c5         c6         c7         c8         c9        c10        c11        c12        c13        c14
 r1 {res}         0  .10886837   .2013884  .07960656  .04956277  .05664252  .04725298   .0321946  .03039037  .03455649  .03200387  .02744907  .02392628  .03160852
{txt} r2 {res} .10886837          0  .20020815  .09332625  .08667556  .10824583  .05025169  .03487814  .02971087  .05045886  .03754582  .03669767  .03030507  .04318601
{txt} r3 {res} .20138846  .20020829          0  .11274129  .06051701  .07856319  .05518095  .03611278  .03220523  .04050789  .03698796  .03139023  .02711213  .03747649
{txt} r4 {res} .07960654  .09332621  .11274133          0  .04987406  .08815383  .10684493  .05312697  .04358656  .03908763  .05336282  .03229742  .02990125  .04360365
{txt} r5 {res} .04956276  .08667553  .06051698  .04987406          0  .09499389  .03607238  .02911303  .02388963  .10453995  .03354124  .05568597  .03819568  .05364749
{txt} r6 {res} .05664252  .10824584  .07856319  .08815382  .09499397          0  .05705885  .04195084  .03168932   .0701119  .05062928   .0501774  .04139763  .07132687
{txt} r7 {res} .04725298   .0502517  .05518099  .10684496  .03607239  .05705889          0  .10017864  .07066042  .03215653  .07902325  .02897533  .02931302  .04115695
{txt} r8 {res}  .0321946  .03487813  .03611278  .05312696  .02911303  .04195084  .10017868          0  .08867394  .02835503  .13003818  .02748147  .03031445  .03989444
{txt} r9 {res} .03039037  .02971087  .03220524  .04358656  .02388964  .03168932  .07066047  .08867394          0  .02242157  .05279601  .02135274  .02264032  .02797898
{txt}r10 {res} .03455649  .05045887  .04050789  .03908764  .10453995   .0701119  .03215653  .02835504  .02242157          0  .03437936  .11772643  .05629884  .07577149
{txt}r11 {res} .03200387  .03754583  .03698797  .05336282  .03354125   .0506293  .07902324  .13003814    .052796  .03437936          0  .03421813  .03951517  .05611942
{txt}r12 {res} .02744907  .03669767  .03139023  .03229742  .05568598   .0501774  .02897532  .02748147  .02135274  .11772646  .03421812          0  .09567184  .08766324
{txt}r13 {res} .02392628  .03030507  .02711213  .02990125  .03819567  .04139763  .02931302  .03031445  .02264032  .05629882  .03951516  .09567187          0  .09510007
{txt}r14 {res} .03160852    .043186  .03747649  .04360366  .05364749  .07132688  .04115695  .03989445  .02797898  .07577143  .05611942  .08766322  .09510005          0
{txt}r15 {res} .02048239   .0251024  .02273927  .02438718  .03143868  .03193965  .02393917  .02487076  .01943321  .04432497   .0307484  .07078589  .13019404  .05529029
{txt}r16 {res} .02370617  .02946121  .02686883  .03088311  .03441706  .04043224    .031884  .03487914  .02503281  .04581171  .04754122  .06330204  .16208792  .09195965

{txt}           c15        c16
 r1 {res} .02048239  .02370617
{txt} r2 {res}  .0251024  .02946121
{txt} r3 {res} .02273927  .02686883
{txt} r4 {res} .02438718  .03088311
{txt} r5 {res} .03143868  .03441705
{txt} r6 {res} .03193964  .04043224
{txt} r7 {res} .02393917  .03188401
{txt} r8 {res} .02487076  .03487914
{txt} r9 {res} .01943322  .02503282
{txt}r10 {res} .04432496  .04581171
{txt}r11 {res} .03074841  .04754123
{txt}r12 {res} .07078586  .06330201
{txt}r13 {res} .13019407  .16208785
{txt}r14 {res} .05529028  .09195965
{txt}r15 {res}         0  .08483806
{txt}r16 {res} .08483811          0
{reset}
{com}. 
. 
. 
. ** Run regressions:
. 
. drop if lag_lgdp==.
{txt}(48 observations deleted)

{com}. 
. xsmle fdi_ihs one two three four five $control, ///
>         model(sac)  wmat(n_Cont1) emat(n_Cont1) fe type(both) effects cluster(mat_region_id) tech(bfgs 30 nr 30 )
{res}{txt}(setting technique to bfgs)
Iteration 0:{space 3}Log-pseudolikelihood = {res:-3946.3103}  
Iteration 1:{space 3}Log-pseudolikelihood = {res:-3915.8181}  (backed up)
Iteration 2:{space 3}Log-pseudolikelihood = {res:-3915.1921}  (backed up)
Iteration 3:{space 3}Log-pseudolikelihood = {res:-3914.1356}  (backed up)
Iteration 4:{space 3}Log-pseudolikelihood = {res:-3914.1356}  (backed up)
Iteration 5:{space 3}Log-pseudolikelihood = {res:-3913.2344}  
Iteration 6:{space 3}Log-pseudolikelihood = {res:-3912.4074}  
Iteration 7:{space 3}Log-pseudolikelihood = {res:-3911.6154}  
Iteration 8:{space 3}Log-pseudolikelihood = {res: -3910.964}  
Iteration 9:{space 3}Log-pseudolikelihood = {res:-3910.0399}  
Iteration 10:{space 2}Log-pseudolikelihood = {res:-3908.2302}  
Iteration 11:{space 2}Log-pseudolikelihood = {res:-3907.3209}  
Iteration 12:{space 2}Log-pseudolikelihood = {res:-3903.5364}  
Iteration 13:{space 2}Log-pseudolikelihood = {res:-3902.9665}  
Iteration 14:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 15:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 16:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 17:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 18:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 19:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 20:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 21:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 22:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 23:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 24:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 25:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 26:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 27:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 28:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 29:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
(switching technique to nr)
Iteration 30:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 31:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 32:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 33:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 34:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 35:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 36:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 37:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 38:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 39:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 40:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 41:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 42:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 43:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 44:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 45:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 46:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 47:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 48:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 49:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 50:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 51:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 52:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 53:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 54:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 55:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 56:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 57:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 58:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 59:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
(switching technique to bfgs)
Iteration 60:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 61:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 62:{space 2}Log-pseudolikelihood = {res:-3902.9592}  
Iteration 63:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
Iteration 64:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
Iteration 65:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
Iteration 66:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 67:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
Iteration 68:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 69:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 70:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 71:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 72:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 73:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 74:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 75:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
{err}{p}
cannot compute an improvement -- flat region encountered
{p_end}
{txt}{search r(430), local:r(430);}

end of do-file

{search r(430), local:r(430);}

{com}. which xsmle
{txt}/Users/aidan/Library/Application Support/Stata/ado/plus/x/xsmle.ado
{res}*! authors Federico Belotti, Gordon Hughes, Andrea Piano Mortari
*! see end of file for version comments

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
. keep if 
{err}invalid syntax
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
.  
. ** Set the control variables:
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. keep if date >= ym(2006,1)
{txt}(48 observations deleted)

{com}. 
{txt}end of do-file

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. 
. ********************************************************************************
. * Table 2: Spatial difference-in-differences
. 
. ********************************************************************************
. 
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
.  
. ** Set the control variables:
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. keep if date >= ym(2006,1)
{txt}(48 observations deleted)

{com}. *reg fdi_ihs one two three four five $control i.date i.region1, cluster(region1)
. tab region

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
   ahmedabad {c |}{res}        168        6.25        6.25
{txt}   bangalore {c |}{res}        168        6.25       12.50
{txt}      bhopal {c |}{res}        168        6.25       18.75
{txt} bubaneshwar {c |}{res}        168        6.25       25.00
{txt}  chandigarh {c |}{res}        168        6.25       31.25
{txt}     chennai {c |}{res}        168        6.25       37.50
{txt}    guwahati {c |}{res}        168        6.25       43.75
{txt}   hyderabad {c |}{res}        168        6.25       50.00
{txt}      jaipur {c |}{res}        168        6.25       56.25
{txt}      kanpur {c |}{res}        168        6.25       62.50
{txt}       kochi {c |}{res}        168        6.25       68.75
{txt}     kolkata {c |}{res}        168        6.25       75.00
{txt}      mumbai {c |}{res}        168        6.25       81.25
{txt}   new_delhi {c |}{res}        168        6.25       87.50
{txt}      panaji {c |}{res}        168        6.25       93.75
{txt}       patna {c |}{res}        168        6.25      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}      2,688      100.00
{txt}
{com}. 
. 
. 
. 
. **********************************************************************************
. ***** Build Contiguity Matrix:
. **********************************************************************************
. 
. ** Sort Regions North to South and West to East:
. gen mat_region_id = .
{txt}(2,688 missing values generated)

{com}. replace mat_region_id=1 if region=="chandigarh"  /// himachal pradesh, punjab, haryana, chandigarh  
> /// neighbors with: jaipur, new delhi, kanpur
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=2 if region=="jaipur" /// rajasthan 
> /// neighbors with: ahmedabad, chandigarh, kanpur, bhopal
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=3 if region=="new_delhi" /// delhi 
> /// neighbors with: chandigarh, kanpur
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=4 if region=="kanpur" /// Uttarakhand, uttar pradesh 
> /// neighbors with: chandigarh, new delhi, jaipur, bhopal, patna
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=5 if region=="ahmedabad" /// Gujarat
> /// neighbors with: jaipur, bhopal, mumbai
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=6 if region=="bhopal" /// Madhya pradesh, chhattisgarh
> /// neighbors with: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=7 if region=="patna" // jharkhand, bihar
{txt}(168 real changes made)

{com}. /// neighbors with: kanpur, bhopal, bhubaneshwar, kolkata
> 
. replace mat_region_id=8 if region=="kolkata" // sikkim, west bengal
{txt}(168 real changes made)

{com}. /// neighbors with: patna, bhubaneshwar, guwahati
> 
. replace mat_region_id=9 if region=="guwahati"  // assam, arunachal pradesh, manipur, mehalaya, mizoram, nagaland, tripura
{txt}(168 real changes made)

{com}. /// neighbors with: kokata
> 
. replace mat_region_id=10 if region=="mumbai" // maharashtra, dadra, daman
{txt}(168 real changes made)

{com}. /// neighbors with: ahmedabad, bhopal, panaji, bangalore, hyderabad
> 
. replace mat_region_id=11 if region=="bubaneshwar" // odisha
{txt}(168 real changes made)

{com}. /// neighbors with: bhopal, patna, kolkata, hyderabad
> 
. replace mat_region_id=12 if region=="panaji" // goa
{txt}(168 real changes made)

{com}. /// neighbors with: mumbai, bangalore
> 
. replace mat_region_id=13 if region=="bangalore" // karnataka
{txt}(168 real changes made)

{com}. /// neighbors with: panaji, mumbai, hyderabad, kochi, chennai
> 
. replace mat_region_id=14 if region=="hyderabad" // andhra pradesh
{txt}(168 real changes made)

{com}. /// neighbors with: bangalore, mumbai, bhopal, bhubaneshwar, chennai
> 
. replace mat_region_id=15 if region=="kochi" // kerala
{txt}(168 real changes made)

{com}. /// neighbors with: bangalore, chennai
> 
. replace mat_region_id=16 if region=="chennai" // tamil nadu, puducherry
{txt}(168 real changes made)

{com}. /// neighbors with: kochi, bangalore, hyderabad
> 
. 
. *** Create Neighbor Matrix following Mat_Region_ID:
. mat Cont1=J(16,16,0)
{txt}
{com}. 
. mat Cont1[1,2]=1   // neighbors to chandigarh: jaipur, new delhi, kanpur
{txt}
{com}. mat Cont1[1,3]=1 
{txt}
{com}. mat Cont1[1,4]=1 
{txt}
{com}. 
. mat Cont1[2,1]=1   // neighbors to jaipur: ahmedabad, chandigarh, kanpur, bhopal
{txt}
{com}. mat Cont1[2,4]=1 
{txt}
{com}. mat Cont1[2,5]=1 
{txt}
{com}. mat Cont1[2,6]=1 
{txt}
{com}. 
. mat Cont1[3,1]=1   // neighbors to New Delhi: chandigarh, kanpur
{txt}
{com}. mat Cont1[3,4]=1 
{txt}
{com}. 
. mat Cont1[4,1]=1   // neighbors to Kanpur: chandigarh, new delhi, jaipur, bhopal, patna
{txt}
{com}. mat Cont1[4,2]=1 
{txt}
{com}. mat Cont1[4,3]=1 
{txt}
{com}. mat Cont1[4,6]=1 
{txt}
{com}. mat Cont1[4,7]=1 
{txt}
{com}. 
. mat Cont1[5,2]=1   // neighbors to Ahmedabad: jaipur, bhopal, mumbai
{txt}
{com}. mat Cont1[5,6]=1 
{txt}
{com}. mat Cont1[5,10]=1 
{txt}
{com}. 
. mat Cont1[6,2]=1   // neighbors to Bhopal: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
{txt}
{com}. mat Cont1[6,4]=1 
{txt}
{com}. mat Cont1[6,5]=1 
{txt}
{com}. mat Cont1[6,7]=1 
{txt}
{com}. mat Cont1[6,10]=1 
{txt}
{com}. mat Cont1[6,11]=1 
{txt}
{com}. mat Cont1[6,14]=1 
{txt}
{com}. 
. mat Cont1[7,4]=1   // neighbors to Patna: kanpur, bhopal, bhubaneshwar, kolkata
{txt}
{com}. mat Cont1[7,6]=1 
{txt}
{com}. mat Cont1[7,8]=1 
{txt}
{com}. mat Cont1[7,11]=1 
{txt}
{com}. 
. mat Cont1[8,7]=1   // neighbors to Kolkata: patna, bhubaneshwar, guwahati
{txt}
{com}. mat Cont1[8,9]=1 
{txt}
{com}. mat Cont1[8,11]=1 
{txt}
{com}. 
. mat Cont1[9,8]=1   // neighbors to Guwahati: kokata
{txt}
{com}. 
. mat Cont1[10,5]=1   // neighbors to mumbai: ahmedabad, bhopal, panaji, bangalore, hyderabad
{txt}
{com}. mat Cont1[10,6]=1 
{txt}
{com}. mat Cont1[10,12]=1 
{txt}
{com}. mat Cont1[10,13]=1 
{txt}
{com}. mat Cont1[10,14]=1 
{txt}
{com}. 
. mat Cont1[11,6]=1   // neighbors to bhubaneshwar: bhopal, patna, kolkata, hyderabad
{txt}
{com}. mat Cont1[11,7]=1 
{txt}
{com}. mat Cont1[11,8]=1 
{txt}
{com}. mat Cont1[11,14]=1 
{txt}
{com}. 
. mat Cont1[12,10]=1   // neighbors to panaji:  mumbai, bangalore
{txt}
{com}. mat Cont1[12,13]=1 
{txt}
{com}. 
. mat Cont1[13,10]=1   // neighbors to bangalore: panaji, mumbai, hyderabad, kochi, chennai
{txt}
{com}. mat Cont1[13,12]=1 
{txt}
{com}. mat Cont1[13,14]=1 
{txt}
{com}. mat Cont1[13,15]=1 
{txt}
{com}. mat Cont1[13,16]=1 
{txt}
{com}. 
. mat Cont1[14,6]=1   // neighbors to hyderabad: bangalore, mumbai, bhopal, bhubaneshwar, chennai
{txt}
{com}. mat Cont1[14,10]=1 
{txt}
{com}. mat Cont1[14,11]=1 
{txt}
{com}. mat Cont1[14,13]=1 
{txt}
{com}. mat Cont1[14,16]=1 
{txt}
{com}. 
. mat Cont1[15,13]=1   // neighbors to kochi: bangalore, chennai
{txt}
{com}. mat Cont1[15,16]=1 
{txt}
{com}. 
. mat Cont1[16,13]=1   // neighbors to chennai: kochi, bangalore, hyderabad
{txt}
{com}. mat Cont1[16,14]=1 
{txt}
{com}. mat Cont1[16,15]=1 
{txt}
{com}. 
. 
. mata : st_matrix("B", rowsum(st_matrix("Cont1")))
{res}{txt}
{com}. 
. mat list B // max is 7
{res}
{txt}B[16,1]
     c1
 r1 {res}  3
{txt} r2 {res}  4
{txt} r3 {res}  2
{txt} r4 {res}  5
{txt} r5 {res}  3
{txt} r6 {res}  7
{txt} r7 {res}  4
{txt} r8 {res}  3
{txt} r9 {res}  1
{txt}r10 {res}  5
{txt}r11 {res}  4
{txt}r12 {res}  2
{txt}r13 {res}  5
{txt}r14 {res}  5
{txt}r15 {res}  2
{txt}r16 {res}  3
{reset}
{com}. 
. *Take the rowsum max (which is also column sum max) and divide each element by it: 
. mata : C=st_matrix("Cont1")
{res}{txt}
{com}. mata : A=C:/7
{res}{txt}
{com}. mata : st_matrix("n_Cont1", A)
{res}{txt}
{com}. mat list n_Cont1
{res}
{txt}symmetric n_Cont1[16,16]
            c1         c2         c3         c4         c5         c6         c7         c8         c9        c10        c11        c12        c13        c14
 r1 {res}         0
{txt} r2 {res} .14285714          0
{txt} r3 {res} .14285714          0          0
{txt} r4 {res} .14285714  .14285714  .14285714          0
{txt} r5 {res}         0  .14285714          0          0          0
{txt} r6 {res}         0  .14285714          0  .14285714  .14285714          0
{txt} r7 {res}         0          0          0  .14285714          0  .14285714          0
{txt} r8 {res}         0          0          0          0          0          0  .14285714          0
{txt} r9 {res}         0          0          0          0          0          0          0  .14285714          0
{txt}r10 {res}         0          0          0          0  .14285714  .14285714          0          0          0          0
{txt}r11 {res}         0          0          0          0          0  .14285714  .14285714  .14285714          0          0          0
{txt}r12 {res}         0          0          0          0          0          0          0          0          0  .14285714          0          0
{txt}r13 {res}         0          0          0          0          0          0          0          0          0  .14285714          0  .14285714          0
{txt}r14 {res}         0          0          0          0          0  .14285714          0          0          0  .14285714  .14285714          0  .14285714          0
{txt}r15 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714          0
{txt}r16 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714  .14285714

{txt}           c15        c16
r15 {res}         0
{txt}r16 {res} .14285714          0
{reset}
{com}. 
. 
. xtset mat_region_id date
{res}
{col 1}{txt:Panel variable: }{res:mat_region_id}{txt: (strongly balanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2006m1}}{txt: to }{res:{bind:2019m12}}{p_end}
{txt}{col 10}Delta: {res}1 month
{txt}
{com}. 
. 
. 
. 
. ********************************************************************************
. ******************* Inverse Distance Matrix
. ********************************************************************************
. 
. /** Upload longitude and latitude data by region:
> insheet using Data/city_lat_long.csv, comma clear
> 
> keep city lat lng
> sort city
> 
> replace city="ahmedabad" if city=="Ahmedabad"
> replace city="bangalore" if city=="Bangalore"
> replace city="bhopal" if city=="Bhopāl"
> replace city="bubaneshwar" if city=="Bhubaneshwar"
> replace city="chandigarh" if city=="Chandīgarh"
> replace city="chennai" if city=="Chennai"
> replace city="guwahati" if city=="Guwāhāti"
> replace city="hyderabad" if city=="Hyderābād"
> replace city="jaipur" if city=="Jaipur"
> replace city="kanpur" if city=="Lucknow"
> replace city="kochi" if city=="Kochi"
> replace city="kolkata" if city=="Kolkāta"
> replace city="mumbai" if city=="Mumbai"
> replace city="new_delhi" if city=="Delhi"
> replace city="panaji" if city=="Panaji"
> replace city="patna" if city=="Patna"
> 
> rename city region
> bysort region: gen id=_N
> drop if id==2
> save Data/city_lat_long, replace
> 
> */
. 
. ** Merge in City latitude and longitude data:
. merge m:1 region using _1data/raw/spatial/city_lat_long
{res}{txt}{p 0 7 2}
(variable
{bf:region} was {bf:str12}, now {bf:str18} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:id} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             388
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}             388{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           2,688{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge==2
{txt}(388 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. 
. ** Create distance variables:
. forvalues i=1/16 {c -(}
{txt}  2{com}. sort mat_region_id
{txt}  3{com}. gen lat1=lat if mat_region_id==`i' & date==tm(2005m10)
{txt}  4{com}. sort lat1
{txt}  5{com}. replace lat1=lat1[1]
{txt}  6{com}. 
. gen lon1=lng if mat_region_id==`i' & date==tm(2005m10)
{txt}  7{com}. sort lon1
{txt}  8{com}. replace lon1=lon1[1]
{txt}  9{com}. 
. geodist lat lng lat1 lon1, gen(dist`i')
{txt} 10{com}. replace dist`i'=1 if dist`i'<1
{txt} 11{com}. 
. gen idist`i'=1/(dist`i')
{txt} 12{com}. replace idist`i'=0 if idist`i'==1
{txt} 13{com}. 
. drop lat1 lon1 dist`i'
{txt} 14{com}. 
. {c )-}
{txt}(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)

{com}. sort date mat_region_id
{txt}
{com}. 
. * Create matrix from distance variables:
. mkmat idist1-idist16 if date==tm(2005m10), mat(idist)
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. 
. ********************************************************************************
. * Table 2: Spatial difference-in-differences
. 
. ********************************************************************************
. 
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
.  
. ** Set the control variables:
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. keep if date >= ym(2006,1)
{txt}(48 observations deleted)

{com}. *reg fdi_ihs one two three four five $control i.date i.region1, cluster(region1)
. tab region

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
   ahmedabad {c |}{res}        168        6.25        6.25
{txt}   bangalore {c |}{res}        168        6.25       12.50
{txt}      bhopal {c |}{res}        168        6.25       18.75
{txt} bubaneshwar {c |}{res}        168        6.25       25.00
{txt}  chandigarh {c |}{res}        168        6.25       31.25
{txt}     chennai {c |}{res}        168        6.25       37.50
{txt}    guwahati {c |}{res}        168        6.25       43.75
{txt}   hyderabad {c |}{res}        168        6.25       50.00
{txt}      jaipur {c |}{res}        168        6.25       56.25
{txt}      kanpur {c |}{res}        168        6.25       62.50
{txt}       kochi {c |}{res}        168        6.25       68.75
{txt}     kolkata {c |}{res}        168        6.25       75.00
{txt}      mumbai {c |}{res}        168        6.25       81.25
{txt}   new_delhi {c |}{res}        168        6.25       87.50
{txt}      panaji {c |}{res}        168        6.25       93.75
{txt}       patna {c |}{res}        168        6.25      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}      2,688      100.00
{txt}
{com}. 
. 
. 
. 
. **********************************************************************************
. ***** Build Contiguity Matrix:
. **********************************************************************************
. 
. ** Sort Regions North to South and West to East:
. gen mat_region_id = .
{txt}(2,688 missing values generated)

{com}. replace mat_region_id=1 if region=="chandigarh"  /// himachal pradesh, punjab, haryana, chandigarh  
> /// neighbors with: jaipur, new delhi, kanpur
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=2 if region=="jaipur" /// rajasthan 
> /// neighbors with: ahmedabad, chandigarh, kanpur, bhopal
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=3 if region=="new_delhi" /// delhi 
> /// neighbors with: chandigarh, kanpur
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=4 if region=="kanpur" /// Uttarakhand, uttar pradesh 
> /// neighbors with: chandigarh, new delhi, jaipur, bhopal, patna
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=5 if region=="ahmedabad" /// Gujarat
> /// neighbors with: jaipur, bhopal, mumbai
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=6 if region=="bhopal" /// Madhya pradesh, chhattisgarh
> /// neighbors with: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=7 if region=="patna" // jharkhand, bihar
{txt}(168 real changes made)

{com}. /// neighbors with: kanpur, bhopal, bhubaneshwar, kolkata
> 
. replace mat_region_id=8 if region=="kolkata" // sikkim, west bengal
{txt}(168 real changes made)

{com}. /// neighbors with: patna, bhubaneshwar, guwahati
> 
. replace mat_region_id=9 if region=="guwahati"  // assam, arunachal pradesh, manipur, mehalaya, mizoram, nagaland, tripura
{txt}(168 real changes made)

{com}. /// neighbors with: kokata
> 
. replace mat_region_id=10 if region=="mumbai" // maharashtra, dadra, daman
{txt}(168 real changes made)

{com}. /// neighbors with: ahmedabad, bhopal, panaji, bangalore, hyderabad
> 
. replace mat_region_id=11 if region=="bubaneshwar" // odisha
{txt}(168 real changes made)

{com}. /// neighbors with: bhopal, patna, kolkata, hyderabad
> 
. replace mat_region_id=12 if region=="panaji" // goa
{txt}(168 real changes made)

{com}. /// neighbors with: mumbai, bangalore
> 
. replace mat_region_id=13 if region=="bangalore" // karnataka
{txt}(168 real changes made)

{com}. /// neighbors with: panaji, mumbai, hyderabad, kochi, chennai
> 
. replace mat_region_id=14 if region=="hyderabad" // andhra pradesh
{txt}(168 real changes made)

{com}. /// neighbors with: bangalore, mumbai, bhopal, bhubaneshwar, chennai
> 
. replace mat_region_id=15 if region=="kochi" // kerala
{txt}(168 real changes made)

{com}. /// neighbors with: bangalore, chennai
> 
. replace mat_region_id=16 if region=="chennai" // tamil nadu, puducherry
{txt}(168 real changes made)

{com}. /// neighbors with: kochi, bangalore, hyderabad
> 
. 
. *** Create Neighbor Matrix following Mat_Region_ID:
. mat Cont1=J(16,16,0)
{txt}
{com}. 
. mat Cont1[1,2]=1   // neighbors to chandigarh: jaipur, new delhi, kanpur
{txt}
{com}. mat Cont1[1,3]=1 
{txt}
{com}. mat Cont1[1,4]=1 
{txt}
{com}. 
. mat Cont1[2,1]=1   // neighbors to jaipur: ahmedabad, chandigarh, kanpur, bhopal
{txt}
{com}. mat Cont1[2,4]=1 
{txt}
{com}. mat Cont1[2,5]=1 
{txt}
{com}. mat Cont1[2,6]=1 
{txt}
{com}. 
. mat Cont1[3,1]=1   // neighbors to New Delhi: chandigarh, kanpur
{txt}
{com}. mat Cont1[3,4]=1 
{txt}
{com}. 
. mat Cont1[4,1]=1   // neighbors to Kanpur: chandigarh, new delhi, jaipur, bhopal, patna
{txt}
{com}. mat Cont1[4,2]=1 
{txt}
{com}. mat Cont1[4,3]=1 
{txt}
{com}. mat Cont1[4,6]=1 
{txt}
{com}. mat Cont1[4,7]=1 
{txt}
{com}. 
. mat Cont1[5,2]=1   // neighbors to Ahmedabad: jaipur, bhopal, mumbai
{txt}
{com}. mat Cont1[5,6]=1 
{txt}
{com}. mat Cont1[5,10]=1 
{txt}
{com}. 
. mat Cont1[6,2]=1   // neighbors to Bhopal: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
{txt}
{com}. mat Cont1[6,4]=1 
{txt}
{com}. mat Cont1[6,5]=1 
{txt}
{com}. mat Cont1[6,7]=1 
{txt}
{com}. mat Cont1[6,10]=1 
{txt}
{com}. mat Cont1[6,11]=1 
{txt}
{com}. mat Cont1[6,14]=1 
{txt}
{com}. 
. mat Cont1[7,4]=1   // neighbors to Patna: kanpur, bhopal, bhubaneshwar, kolkata
{txt}
{com}. mat Cont1[7,6]=1 
{txt}
{com}. mat Cont1[7,8]=1 
{txt}
{com}. mat Cont1[7,11]=1 
{txt}
{com}. 
. mat Cont1[8,7]=1   // neighbors to Kolkata: patna, bhubaneshwar, guwahati
{txt}
{com}. mat Cont1[8,9]=1 
{txt}
{com}. mat Cont1[8,11]=1 
{txt}
{com}. 
. mat Cont1[9,8]=1   // neighbors to Guwahati: kokata
{txt}
{com}. 
. mat Cont1[10,5]=1   // neighbors to mumbai: ahmedabad, bhopal, panaji, bangalore, hyderabad
{txt}
{com}. mat Cont1[10,6]=1 
{txt}
{com}. mat Cont1[10,12]=1 
{txt}
{com}. mat Cont1[10,13]=1 
{txt}
{com}. mat Cont1[10,14]=1 
{txt}
{com}. 
. mat Cont1[11,6]=1   // neighbors to bhubaneshwar: bhopal, patna, kolkata, hyderabad
{txt}
{com}. mat Cont1[11,7]=1 
{txt}
{com}. mat Cont1[11,8]=1 
{txt}
{com}. mat Cont1[11,14]=1 
{txt}
{com}. 
. mat Cont1[12,10]=1   // neighbors to panaji:  mumbai, bangalore
{txt}
{com}. mat Cont1[12,13]=1 
{txt}
{com}. 
. mat Cont1[13,10]=1   // neighbors to bangalore: panaji, mumbai, hyderabad, kochi, chennai
{txt}
{com}. mat Cont1[13,12]=1 
{txt}
{com}. mat Cont1[13,14]=1 
{txt}
{com}. mat Cont1[13,15]=1 
{txt}
{com}. mat Cont1[13,16]=1 
{txt}
{com}. 
. mat Cont1[14,6]=1   // neighbors to hyderabad: bangalore, mumbai, bhopal, bhubaneshwar, chennai
{txt}
{com}. mat Cont1[14,10]=1 
{txt}
{com}. mat Cont1[14,11]=1 
{txt}
{com}. mat Cont1[14,13]=1 
{txt}
{com}. mat Cont1[14,16]=1 
{txt}
{com}. 
. mat Cont1[15,13]=1   // neighbors to kochi: bangalore, chennai
{txt}
{com}. mat Cont1[15,16]=1 
{txt}
{com}. 
. mat Cont1[16,13]=1   // neighbors to chennai: kochi, bangalore, hyderabad
{txt}
{com}. mat Cont1[16,14]=1 
{txt}
{com}. mat Cont1[16,15]=1 
{txt}
{com}. 
. 
. mata : st_matrix("B", rowsum(st_matrix("Cont1")))
{res}{txt}
{com}. 
. mat list B // max is 7
{res}
{txt}B[16,1]
     c1
 r1 {res}  3
{txt} r2 {res}  4
{txt} r3 {res}  2
{txt} r4 {res}  5
{txt} r5 {res}  3
{txt} r6 {res}  7
{txt} r7 {res}  4
{txt} r8 {res}  3
{txt} r9 {res}  1
{txt}r10 {res}  5
{txt}r11 {res}  4
{txt}r12 {res}  2
{txt}r13 {res}  5
{txt}r14 {res}  5
{txt}r15 {res}  2
{txt}r16 {res}  3
{reset}
{com}. 
. *Take the rowsum max (which is also column sum max) and divide each element by it: 
. mata : C=st_matrix("Cont1")
{res}{txt}
{com}. mata : A=C:/7
{res}{txt}
{com}. mata : st_matrix("n_Cont1", A)
{res}{txt}
{com}. mat list n_Cont1
{res}
{txt}symmetric n_Cont1[16,16]
            c1         c2         c3         c4         c5         c6         c7         c8         c9        c10        c11        c12        c13        c14
 r1 {res}         0
{txt} r2 {res} .14285714          0
{txt} r3 {res} .14285714          0          0
{txt} r4 {res} .14285714  .14285714  .14285714          0
{txt} r5 {res}         0  .14285714          0          0          0
{txt} r6 {res}         0  .14285714          0  .14285714  .14285714          0
{txt} r7 {res}         0          0          0  .14285714          0  .14285714          0
{txt} r8 {res}         0          0          0          0          0          0  .14285714          0
{txt} r9 {res}         0          0          0          0          0          0          0  .14285714          0
{txt}r10 {res}         0          0          0          0  .14285714  .14285714          0          0          0          0
{txt}r11 {res}         0          0          0          0          0  .14285714  .14285714  .14285714          0          0          0
{txt}r12 {res}         0          0          0          0          0          0          0          0          0  .14285714          0          0
{txt}r13 {res}         0          0          0          0          0          0          0          0          0  .14285714          0  .14285714          0
{txt}r14 {res}         0          0          0          0          0  .14285714          0          0          0  .14285714  .14285714          0  .14285714          0
{txt}r15 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714          0
{txt}r16 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714  .14285714

{txt}           c15        c16
r15 {res}         0
{txt}r16 {res} .14285714          0
{reset}
{com}. 
. 
. xtset mat_region_id date
{res}
{col 1}{txt:Panel variable: }{res:mat_region_id}{txt: (strongly balanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2006m1}}{txt: to }{res:{bind:2019m12}}{p_end}
{txt}{col 10}Delta: {res}1 month
{txt}
{com}. 
. 
. 
. 
. ********************************************************************************
. ******************* Inverse Distance Matrix
. ********************************************************************************
. 
. /** Upload longitude and latitude data by region:
> insheet using Data/city_lat_long.csv, comma clear
> 
> keep city lat lng
> sort city
> 
> replace city="ahmedabad" if city=="Ahmedabad"
> replace city="bangalore" if city=="Bangalore"
> replace city="bhopal" if city=="Bhopāl"
> replace city="bubaneshwar" if city=="Bhubaneshwar"
> replace city="chandigarh" if city=="Chandīgarh"
> replace city="chennai" if city=="Chennai"
> replace city="guwahati" if city=="Guwāhāti"
> replace city="hyderabad" if city=="Hyderābād"
> replace city="jaipur" if city=="Jaipur"
> replace city="kanpur" if city=="Lucknow"
> replace city="kochi" if city=="Kochi"
> replace city="kolkata" if city=="Kolkāta"
> replace city="mumbai" if city=="Mumbai"
> replace city="new_delhi" if city=="Delhi"
> replace city="panaji" if city=="Panaji"
> replace city="patna" if city=="Patna"
> 
> rename city region
> bysort region: gen id=_N
> drop if id==2
> save Data/city_lat_long, replace
> 
> */
. 
. ** Merge in City latitude and longitude data:
. merge m:1 region using _1data/raw/spatial/city_lat_long
{res}{txt}{p 0 7 2}
(variable
{bf:region} was {bf:str12}, now {bf:str18} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:id} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             388
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}             388{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           2,688{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge==2
{txt}(388 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. 
. ** Create distance variables:
. forvalues i=1/16 {c -(}
{txt}  2{com}. sort mat_region_id
{txt}  3{com}. gen lat1=lat if mat_region_id==`i' & date==tm(2005m10)
{txt}  4{com}. sort lat1
{txt}  5{com}. replace lat1=lat1[1]
{txt}  6{com}. 
. gen lon1=lng if mat_region_id==`i' & date==tm(2005m10)
{txt}  7{com}. sort lon1
{txt}  8{com}. replace lon1=lon1[1]
{txt}  9{com}. 
. geodist lat lng lat1 lon1, gen(dist`i')
{txt} 10{com}. replace dist`i'=1 if dist`i'<1
{txt} 11{com}. 
. gen idist`i'=1/(dist`i')
{txt} 12{com}. replace idist`i'=0 if idist`i'==1
{txt} 13{com}. 
. drop lat1 lon1 dist`i'
{txt} 14{com}. 
. {c )-}
{txt}(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)

{com}. sort date mat_region_id
{txt}
{com}. 
. * Create matrix from distance variables:
. mkmat idist1-idist16 if date==tm(2005m10), mat(idist)
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. merge m:1 region using _1data/raw/spatial/city_lat_long
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             388
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}             388{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           2,688{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge==2
{txt}(388 observations deleted)

{com}. drop _merge
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. forvalues i=1/16 {c -(}
{txt}  2{com}. sort mat_region_id
{txt}  3{com}. gen lat1=lat if mat_region_id==`i' & date==tm(2005m10)
{txt}  4{com}. sort lat1
{txt}  5{com}. replace lat1=lat1[1]
{txt}  6{com}. 
. gen lon1=lng if mat_region_id==`i' & date==tm(2005m10)
{txt}  7{com}. sort lon1
{txt}  8{com}. replace lon1=lon1[1]
{txt}  9{com}. 
. geodist lat lng lat1 lon1, gen(dist`i')
{txt} 10{com}. replace dist`i'=1 if dist`i'<1
{txt} 11{com}. 
. gen idist`i'=1/(dist`i')
{txt} 12{com}. replace idist`i'=0 if idist`i'==1
{txt} 13{com}. 
. drop lat1 lon1 dist`i'
{txt} 14{com}. 
. {c )-}
{txt}(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
{err}variable {bf}idist1{sf} already defined
{txt}{search r(110), local:r(110);}

end of do-file

{search r(110), local:r(110);}

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. 
. ********************************************************************************
. * Table 2: Spatial difference-in-differences
. 
. ********************************************************************************
. 
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
.  
. ** Set the control variables:
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. keep if date >= ym(2006,1)
{txt}(48 observations deleted)

{com}. *reg fdi_ihs one two three four five $control i.date i.region1, cluster(region1)
. tab region

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
   ahmedabad {c |}{res}        168        6.25        6.25
{txt}   bangalore {c |}{res}        168        6.25       12.50
{txt}      bhopal {c |}{res}        168        6.25       18.75
{txt} bubaneshwar {c |}{res}        168        6.25       25.00
{txt}  chandigarh {c |}{res}        168        6.25       31.25
{txt}     chennai {c |}{res}        168        6.25       37.50
{txt}    guwahati {c |}{res}        168        6.25       43.75
{txt}   hyderabad {c |}{res}        168        6.25       50.00
{txt}      jaipur {c |}{res}        168        6.25       56.25
{txt}      kanpur {c |}{res}        168        6.25       62.50
{txt}       kochi {c |}{res}        168        6.25       68.75
{txt}     kolkata {c |}{res}        168        6.25       75.00
{txt}      mumbai {c |}{res}        168        6.25       81.25
{txt}   new_delhi {c |}{res}        168        6.25       87.50
{txt}      panaji {c |}{res}        168        6.25       93.75
{txt}       patna {c |}{res}        168        6.25      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}      2,688      100.00
{txt}
{com}. 
. 
. 
. 
. **********************************************************************************
. ***** Build Contiguity Matrix:
. **********************************************************************************
. 
. ** Sort Regions North to South and West to East:
. gen mat_region_id = .
{txt}(2,688 missing values generated)

{com}. replace mat_region_id=1 if region=="chandigarh"  /// himachal pradesh, punjab, haryana, chandigarh  
> /// neighbors with: jaipur, new delhi, kanpur
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=2 if region=="jaipur" /// rajasthan 
> /// neighbors with: ahmedabad, chandigarh, kanpur, bhopal
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=3 if region=="new_delhi" /// delhi 
> /// neighbors with: chandigarh, kanpur
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=4 if region=="kanpur" /// Uttarakhand, uttar pradesh 
> /// neighbors with: chandigarh, new delhi, jaipur, bhopal, patna
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=5 if region=="ahmedabad" /// Gujarat
> /// neighbors with: jaipur, bhopal, mumbai
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=6 if region=="bhopal" /// Madhya pradesh, chhattisgarh
> /// neighbors with: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=7 if region=="patna" // jharkhand, bihar
{txt}(168 real changes made)

{com}. /// neighbors with: kanpur, bhopal, bhubaneshwar, kolkata
> 
. replace mat_region_id=8 if region=="kolkata" // sikkim, west bengal
{txt}(168 real changes made)

{com}. /// neighbors with: patna, bhubaneshwar, guwahati
> 
. replace mat_region_id=9 if region=="guwahati"  // assam, arunachal pradesh, manipur, mehalaya, mizoram, nagaland, tripura
{txt}(168 real changes made)

{com}. /// neighbors with: kokata
> 
. replace mat_region_id=10 if region=="mumbai" // maharashtra, dadra, daman
{txt}(168 real changes made)

{com}. /// neighbors with: ahmedabad, bhopal, panaji, bangalore, hyderabad
> 
. replace mat_region_id=11 if region=="bubaneshwar" // odisha
{txt}(168 real changes made)

{com}. /// neighbors with: bhopal, patna, kolkata, hyderabad
> 
. replace mat_region_id=12 if region=="panaji" // goa
{txt}(168 real changes made)

{com}. /// neighbors with: mumbai, bangalore
> 
. replace mat_region_id=13 if region=="bangalore" // karnataka
{txt}(168 real changes made)

{com}. /// neighbors with: panaji, mumbai, hyderabad, kochi, chennai
> 
. replace mat_region_id=14 if region=="hyderabad" // andhra pradesh
{txt}(168 real changes made)

{com}. /// neighbors with: bangalore, mumbai, bhopal, bhubaneshwar, chennai
> 
. replace mat_region_id=15 if region=="kochi" // kerala
{txt}(168 real changes made)

{com}. /// neighbors with: bangalore, chennai
> 
. replace mat_region_id=16 if region=="chennai" // tamil nadu, puducherry
{txt}(168 real changes made)

{com}. /// neighbors with: kochi, bangalore, hyderabad
> 
. 
. *** Create Neighbor Matrix following Mat_Region_ID:
. mat Cont1=J(16,16,0)
{txt}
{com}. 
. mat Cont1[1,2]=1   // neighbors to chandigarh: jaipur, new delhi, kanpur
{txt}
{com}. mat Cont1[1,3]=1 
{txt}
{com}. mat Cont1[1,4]=1 
{txt}
{com}. 
. mat Cont1[2,1]=1   // neighbors to jaipur: ahmedabad, chandigarh, kanpur, bhopal
{txt}
{com}. mat Cont1[2,4]=1 
{txt}
{com}. mat Cont1[2,5]=1 
{txt}
{com}. mat Cont1[2,6]=1 
{txt}
{com}. 
. mat Cont1[3,1]=1   // neighbors to New Delhi: chandigarh, kanpur
{txt}
{com}. mat Cont1[3,4]=1 
{txt}
{com}. 
. mat Cont1[4,1]=1   // neighbors to Kanpur: chandigarh, new delhi, jaipur, bhopal, patna
{txt}
{com}. mat Cont1[4,2]=1 
{txt}
{com}. mat Cont1[4,3]=1 
{txt}
{com}. mat Cont1[4,6]=1 
{txt}
{com}. mat Cont1[4,7]=1 
{txt}
{com}. 
. mat Cont1[5,2]=1   // neighbors to Ahmedabad: jaipur, bhopal, mumbai
{txt}
{com}. mat Cont1[5,6]=1 
{txt}
{com}. mat Cont1[5,10]=1 
{txt}
{com}. 
. mat Cont1[6,2]=1   // neighbors to Bhopal: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
{txt}
{com}. mat Cont1[6,4]=1 
{txt}
{com}. mat Cont1[6,5]=1 
{txt}
{com}. mat Cont1[6,7]=1 
{txt}
{com}. mat Cont1[6,10]=1 
{txt}
{com}. mat Cont1[6,11]=1 
{txt}
{com}. mat Cont1[6,14]=1 
{txt}
{com}. 
. mat Cont1[7,4]=1   // neighbors to Patna: kanpur, bhopal, bhubaneshwar, kolkata
{txt}
{com}. mat Cont1[7,6]=1 
{txt}
{com}. mat Cont1[7,8]=1 
{txt}
{com}. mat Cont1[7,11]=1 
{txt}
{com}. 
. mat Cont1[8,7]=1   // neighbors to Kolkata: patna, bhubaneshwar, guwahati
{txt}
{com}. mat Cont1[8,9]=1 
{txt}
{com}. mat Cont1[8,11]=1 
{txt}
{com}. 
. mat Cont1[9,8]=1   // neighbors to Guwahati: kokata
{txt}
{com}. 
. mat Cont1[10,5]=1   // neighbors to mumbai: ahmedabad, bhopal, panaji, bangalore, hyderabad
{txt}
{com}. mat Cont1[10,6]=1 
{txt}
{com}. mat Cont1[10,12]=1 
{txt}
{com}. mat Cont1[10,13]=1 
{txt}
{com}. mat Cont1[10,14]=1 
{txt}
{com}. 
. mat Cont1[11,6]=1   // neighbors to bhubaneshwar: bhopal, patna, kolkata, hyderabad
{txt}
{com}. mat Cont1[11,7]=1 
{txt}
{com}. mat Cont1[11,8]=1 
{txt}
{com}. mat Cont1[11,14]=1 
{txt}
{com}. 
. mat Cont1[12,10]=1   // neighbors to panaji:  mumbai, bangalore
{txt}
{com}. mat Cont1[12,13]=1 
{txt}
{com}. 
. mat Cont1[13,10]=1   // neighbors to bangalore: panaji, mumbai, hyderabad, kochi, chennai
{txt}
{com}. mat Cont1[13,12]=1 
{txt}
{com}. mat Cont1[13,14]=1 
{txt}
{com}. mat Cont1[13,15]=1 
{txt}
{com}. mat Cont1[13,16]=1 
{txt}
{com}. 
. mat Cont1[14,6]=1   // neighbors to hyderabad: bangalore, mumbai, bhopal, bhubaneshwar, chennai
{txt}
{com}. mat Cont1[14,10]=1 
{txt}
{com}. mat Cont1[14,11]=1 
{txt}
{com}. mat Cont1[14,13]=1 
{txt}
{com}. mat Cont1[14,16]=1 
{txt}
{com}. 
. mat Cont1[15,13]=1   // neighbors to kochi: bangalore, chennai
{txt}
{com}. mat Cont1[15,16]=1 
{txt}
{com}. 
. mat Cont1[16,13]=1   // neighbors to chennai: kochi, bangalore, hyderabad
{txt}
{com}. mat Cont1[16,14]=1 
{txt}
{com}. mat Cont1[16,15]=1 
{txt}
{com}. 
. 
. mata : st_matrix("B", rowsum(st_matrix("Cont1")))
{res}{txt}
{com}. 
. mat list B // max is 7
{res}
{txt}B[16,1]
     c1
 r1 {res}  3
{txt} r2 {res}  4
{txt} r3 {res}  2
{txt} r4 {res}  5
{txt} r5 {res}  3
{txt} r6 {res}  7
{txt} r7 {res}  4
{txt} r8 {res}  3
{txt} r9 {res}  1
{txt}r10 {res}  5
{txt}r11 {res}  4
{txt}r12 {res}  2
{txt}r13 {res}  5
{txt}r14 {res}  5
{txt}r15 {res}  2
{txt}r16 {res}  3
{reset}
{com}. 
. *Take the rowsum max (which is also column sum max) and divide each element by it: 
. mata : C=st_matrix("Cont1")
{res}{txt}
{com}. mata : A=C:/7
{res}{txt}
{com}. mata : st_matrix("n_Cont1", A)
{res}{txt}
{com}. mat list n_Cont1
{res}
{txt}symmetric n_Cont1[16,16]
            c1         c2         c3         c4         c5         c6         c7         c8         c9        c10        c11        c12        c13        c14
 r1 {res}         0
{txt} r2 {res} .14285714          0
{txt} r3 {res} .14285714          0          0
{txt} r4 {res} .14285714  .14285714  .14285714          0
{txt} r5 {res}         0  .14285714          0          0          0
{txt} r6 {res}         0  .14285714          0  .14285714  .14285714          0
{txt} r7 {res}         0          0          0  .14285714          0  .14285714          0
{txt} r8 {res}         0          0          0          0          0          0  .14285714          0
{txt} r9 {res}         0          0          0          0          0          0          0  .14285714          0
{txt}r10 {res}         0          0          0          0  .14285714  .14285714          0          0          0          0
{txt}r11 {res}         0          0          0          0          0  .14285714  .14285714  .14285714          0          0          0
{txt}r12 {res}         0          0          0          0          0          0          0          0          0  .14285714          0          0
{txt}r13 {res}         0          0          0          0          0          0          0          0          0  .14285714          0  .14285714          0
{txt}r14 {res}         0          0          0          0          0  .14285714          0          0          0  .14285714  .14285714          0  .14285714          0
{txt}r15 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714          0
{txt}r16 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714  .14285714

{txt}           c15        c16
r15 {res}         0
{txt}r16 {res} .14285714          0
{reset}
{com}. 
. 
. xtset mat_region_id date
{res}
{col 1}{txt:Panel variable: }{res:mat_region_id}{txt: (strongly balanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2006m1}}{txt: to }{res:{bind:2019m12}}{p_end}
{txt}{col 10}Delta: {res}1 month
{txt}
{com}. 
. 
. 
. 
. ********************************************************************************
. ******************* Inverse Distance Matrix
. ********************************************************************************
. 
. /** Upload longitude and latitude data by region:
> insheet using Data/city_lat_long.csv, comma clear
> 
> keep city lat lng
> sort city
> 
> replace city="ahmedabad" if city=="Ahmedabad"
> replace city="bangalore" if city=="Bangalore"
> replace city="bhopal" if city=="Bhopāl"
> replace city="bubaneshwar" if city=="Bhubaneshwar"
> replace city="chandigarh" if city=="Chandīgarh"
> replace city="chennai" if city=="Chennai"
> replace city="guwahati" if city=="Guwāhāti"
> replace city="hyderabad" if city=="Hyderābād"
> replace city="jaipur" if city=="Jaipur"
> replace city="kanpur" if city=="Lucknow"
> replace city="kochi" if city=="Kochi"
> replace city="kolkata" if city=="Kolkāta"
> replace city="mumbai" if city=="Mumbai"
> replace city="new_delhi" if city=="Delhi"
> replace city="panaji" if city=="Panaji"
> replace city="patna" if city=="Patna"
> 
> rename city region
> bysort region: gen id=_N
> drop if id==2
> save Data/city_lat_long, replace
> 
> */
. 
. ** Merge in City latitude and longitude data:
. merge m:1 region using _1data/raw/spatial/city_lat_long
{res}{txt}{p 0 7 2}
(variable
{bf:region} was {bf:str12}, now {bf:str18} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:id} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             388
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}             388{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           2,688{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge==2
{txt}(388 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. 
. ** Create distance variables:
. forvalues i=1/16 {c -(}
{txt}  2{com}. sort mat_region_id
{txt}  3{com}. gen lat1=lat if mat_region_id==`i' & date==tm(2005m10)
{txt}  4{com}. sort lat1
{txt}  5{com}. replace lat1=lat1[1]
{txt}  6{com}. 
. gen lon1=lng if mat_region_id==`i' & date==tm(2005m10)
{txt}  7{com}. sort lon1
{txt}  8{com}. replace lon1=lon1[1]
{txt}  9{com}. 
. geodist lat lng lat1 lon1, gen(dist`i')
{txt} 10{com}. replace dist`i'=1 if dist`i'<1
{txt} 11{com}. 
. gen idist`i'=1/(dist`i')
{txt} 12{com}. replace idist`i'=0 if idist`i'==1
{txt} 13{com}. 
. drop lat1 lon1 dist`i'
{txt} 14{com}. 
. {c )-}
{txt}(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)

{com}. sort date mat_region_id
{txt}
{com}. 
. * Create matrix from distance variables:
. mkmat idist1-idist16 if date==tm(2005m10), mat(idist)
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. 
. ********************************************************************************
. * Table 2: Spatial difference-in-differences
. 
. ********************************************************************************
. 
. 
. use _1data/clean/clean_data, clear
{txt}
{com}. 
. 
.  
. ** Set the control variables:
. global control lag_lgdp lag_lpop
{txt}
{com}. 
. keep if date >= ym(2006,1)
{txt}(48 observations deleted)

{com}. *reg fdi_ihs one two three four five $control i.date i.region1, cluster(region1)
. tab region

      {txt}region {c |}      Freq.     Percent        Cum.
{hline 13}{c +}{hline 35}
   ahmedabad {c |}{res}        168        6.25        6.25
{txt}   bangalore {c |}{res}        168        6.25       12.50
{txt}      bhopal {c |}{res}        168        6.25       18.75
{txt} bubaneshwar {c |}{res}        168        6.25       25.00
{txt}  chandigarh {c |}{res}        168        6.25       31.25
{txt}     chennai {c |}{res}        168        6.25       37.50
{txt}    guwahati {c |}{res}        168        6.25       43.75
{txt}   hyderabad {c |}{res}        168        6.25       50.00
{txt}      jaipur {c |}{res}        168        6.25       56.25
{txt}      kanpur {c |}{res}        168        6.25       62.50
{txt}       kochi {c |}{res}        168        6.25       68.75
{txt}     kolkata {c |}{res}        168        6.25       75.00
{txt}      mumbai {c |}{res}        168        6.25       81.25
{txt}   new_delhi {c |}{res}        168        6.25       87.50
{txt}      panaji {c |}{res}        168        6.25       93.75
{txt}       patna {c |}{res}        168        6.25      100.00
{txt}{hline 13}{c +}{hline 35}
       Total {c |}{res}      2,688      100.00
{txt}
{com}. 
. 
. 
. 
. **********************************************************************************
. ***** Build Contiguity Matrix:
. **********************************************************************************
. 
. ** Sort Regions North to South and West to East:
. gen mat_region_id = .
{txt}(2,688 missing values generated)

{com}. replace mat_region_id=1 if region=="chandigarh"  /// himachal pradesh, punjab, haryana, chandigarh  
> /// neighbors with: jaipur, new delhi, kanpur
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=2 if region=="jaipur" /// rajasthan 
> /// neighbors with: ahmedabad, chandigarh, kanpur, bhopal
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=3 if region=="new_delhi" /// delhi 
> /// neighbors with: chandigarh, kanpur
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=4 if region=="kanpur" /// Uttarakhand, uttar pradesh 
> /// neighbors with: chandigarh, new delhi, jaipur, bhopal, patna
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=5 if region=="ahmedabad" /// Gujarat
> /// neighbors with: jaipur, bhopal, mumbai
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=6 if region=="bhopal" /// Madhya pradesh, chhattisgarh
> /// neighbors with: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
> 
{txt}(168 real changes made)

{com}. replace mat_region_id=7 if region=="patna" // jharkhand, bihar
{txt}(168 real changes made)

{com}. /// neighbors with: kanpur, bhopal, bhubaneshwar, kolkata
> 
. replace mat_region_id=8 if region=="kolkata" // sikkim, west bengal
{txt}(168 real changes made)

{com}. /// neighbors with: patna, bhubaneshwar, guwahati
> 
. replace mat_region_id=9 if region=="guwahati"  // assam, arunachal pradesh, manipur, mehalaya, mizoram, nagaland, tripura
{txt}(168 real changes made)

{com}. /// neighbors with: kokata
> 
. replace mat_region_id=10 if region=="mumbai" // maharashtra, dadra, daman
{txt}(168 real changes made)

{com}. /// neighbors with: ahmedabad, bhopal, panaji, bangalore, hyderabad
> 
. replace mat_region_id=11 if region=="bubaneshwar" // odisha
{txt}(168 real changes made)

{com}. /// neighbors with: bhopal, patna, kolkata, hyderabad
> 
. replace mat_region_id=12 if region=="panaji" // goa
{txt}(168 real changes made)

{com}. /// neighbors with: mumbai, bangalore
> 
. replace mat_region_id=13 if region=="bangalore" // karnataka
{txt}(168 real changes made)

{com}. /// neighbors with: panaji, mumbai, hyderabad, kochi, chennai
> 
. replace mat_region_id=14 if region=="hyderabad" // andhra pradesh
{txt}(168 real changes made)

{com}. /// neighbors with: bangalore, mumbai, bhopal, bhubaneshwar, chennai
> 
. replace mat_region_id=15 if region=="kochi" // kerala
{txt}(168 real changes made)

{com}. /// neighbors with: bangalore, chennai
> 
. replace mat_region_id=16 if region=="chennai" // tamil nadu, puducherry
{txt}(168 real changes made)

{com}. /// neighbors with: kochi, bangalore, hyderabad
> 
. 
. *** Create Neighbor Matrix following Mat_Region_ID:
. mat Cont1=J(16,16,0)
{txt}
{com}. 
. mat Cont1[1,2]=1   // neighbors to chandigarh: jaipur, new delhi, kanpur
{txt}
{com}. mat Cont1[1,3]=1 
{txt}
{com}. mat Cont1[1,4]=1 
{txt}
{com}. 
. mat Cont1[2,1]=1   // neighbors to jaipur: ahmedabad, chandigarh, kanpur, bhopal
{txt}
{com}. mat Cont1[2,4]=1 
{txt}
{com}. mat Cont1[2,5]=1 
{txt}
{com}. mat Cont1[2,6]=1 
{txt}
{com}. 
. mat Cont1[3,1]=1   // neighbors to New Delhi: chandigarh, kanpur
{txt}
{com}. mat Cont1[3,4]=1 
{txt}
{com}. 
. mat Cont1[4,1]=1   // neighbors to Kanpur: chandigarh, new delhi, jaipur, bhopal, patna
{txt}
{com}. mat Cont1[4,2]=1 
{txt}
{com}. mat Cont1[4,3]=1 
{txt}
{com}. mat Cont1[4,6]=1 
{txt}
{com}. mat Cont1[4,7]=1 
{txt}
{com}. 
. mat Cont1[5,2]=1   // neighbors to Ahmedabad: jaipur, bhopal, mumbai
{txt}
{com}. mat Cont1[5,6]=1 
{txt}
{com}. mat Cont1[5,10]=1 
{txt}
{com}. 
. mat Cont1[6,2]=1   // neighbors to Bhopal: ahmedabad, jaipur, kanpur, panta, mumbai, bhubaneshwar, hyderabad
{txt}
{com}. mat Cont1[6,4]=1 
{txt}
{com}. mat Cont1[6,5]=1 
{txt}
{com}. mat Cont1[6,7]=1 
{txt}
{com}. mat Cont1[6,10]=1 
{txt}
{com}. mat Cont1[6,11]=1 
{txt}
{com}. mat Cont1[6,14]=1 
{txt}
{com}. 
. mat Cont1[7,4]=1   // neighbors to Patna: kanpur, bhopal, bhubaneshwar, kolkata
{txt}
{com}. mat Cont1[7,6]=1 
{txt}
{com}. mat Cont1[7,8]=1 
{txt}
{com}. mat Cont1[7,11]=1 
{txt}
{com}. 
. mat Cont1[8,7]=1   // neighbors to Kolkata: patna, bhubaneshwar, guwahati
{txt}
{com}. mat Cont1[8,9]=1 
{txt}
{com}. mat Cont1[8,11]=1 
{txt}
{com}. 
. mat Cont1[9,8]=1   // neighbors to Guwahati: kokata
{txt}
{com}. 
. mat Cont1[10,5]=1   // neighbors to mumbai: ahmedabad, bhopal, panaji, bangalore, hyderabad
{txt}
{com}. mat Cont1[10,6]=1 
{txt}
{com}. mat Cont1[10,12]=1 
{txt}
{com}. mat Cont1[10,13]=1 
{txt}
{com}. mat Cont1[10,14]=1 
{txt}
{com}. 
. mat Cont1[11,6]=1   // neighbors to bhubaneshwar: bhopal, patna, kolkata, hyderabad
{txt}
{com}. mat Cont1[11,7]=1 
{txt}
{com}. mat Cont1[11,8]=1 
{txt}
{com}. mat Cont1[11,14]=1 
{txt}
{com}. 
. mat Cont1[12,10]=1   // neighbors to panaji:  mumbai, bangalore
{txt}
{com}. mat Cont1[12,13]=1 
{txt}
{com}. 
. mat Cont1[13,10]=1   // neighbors to bangalore: panaji, mumbai, hyderabad, kochi, chennai
{txt}
{com}. mat Cont1[13,12]=1 
{txt}
{com}. mat Cont1[13,14]=1 
{txt}
{com}. mat Cont1[13,15]=1 
{txt}
{com}. mat Cont1[13,16]=1 
{txt}
{com}. 
. mat Cont1[14,6]=1   // neighbors to hyderabad: bangalore, mumbai, bhopal, bhubaneshwar, chennai
{txt}
{com}. mat Cont1[14,10]=1 
{txt}
{com}. mat Cont1[14,11]=1 
{txt}
{com}. mat Cont1[14,13]=1 
{txt}
{com}. mat Cont1[14,16]=1 
{txt}
{com}. 
. mat Cont1[15,13]=1   // neighbors to kochi: bangalore, chennai
{txt}
{com}. mat Cont1[15,16]=1 
{txt}
{com}. 
. mat Cont1[16,13]=1   // neighbors to chennai: kochi, bangalore, hyderabad
{txt}
{com}. mat Cont1[16,14]=1 
{txt}
{com}. mat Cont1[16,15]=1 
{txt}
{com}. 
. 
. mata : st_matrix("B", rowsum(st_matrix("Cont1")))
{res}{txt}
{com}. 
. mat list B // max is 7
{res}
{txt}B[16,1]
     c1
 r1 {res}  3
{txt} r2 {res}  4
{txt} r3 {res}  2
{txt} r4 {res}  5
{txt} r5 {res}  3
{txt} r6 {res}  7
{txt} r7 {res}  4
{txt} r8 {res}  3
{txt} r9 {res}  1
{txt}r10 {res}  5
{txt}r11 {res}  4
{txt}r12 {res}  2
{txt}r13 {res}  5
{txt}r14 {res}  5
{txt}r15 {res}  2
{txt}r16 {res}  3
{reset}
{com}. 
. *Take the rowsum max (which is also column sum max) and divide each element by it: 
. mata : C=st_matrix("Cont1")
{res}{txt}
{com}. mata : A=C:/7
{res}{txt}
{com}. mata : st_matrix("n_Cont1", A)
{res}{txt}
{com}. mat list n_Cont1
{res}
{txt}symmetric n_Cont1[16,16]
            c1         c2         c3         c4         c5         c6         c7         c8         c9        c10        c11        c12        c13        c14
 r1 {res}         0
{txt} r2 {res} .14285714          0
{txt} r3 {res} .14285714          0          0
{txt} r4 {res} .14285714  .14285714  .14285714          0
{txt} r5 {res}         0  .14285714          0          0          0
{txt} r6 {res}         0  .14285714          0  .14285714  .14285714          0
{txt} r7 {res}         0          0          0  .14285714          0  .14285714          0
{txt} r8 {res}         0          0          0          0          0          0  .14285714          0
{txt} r9 {res}         0          0          0          0          0          0          0  .14285714          0
{txt}r10 {res}         0          0          0          0  .14285714  .14285714          0          0          0          0
{txt}r11 {res}         0          0          0          0          0  .14285714  .14285714  .14285714          0          0          0
{txt}r12 {res}         0          0          0          0          0          0          0          0          0  .14285714          0          0
{txt}r13 {res}         0          0          0          0          0          0          0          0          0  .14285714          0  .14285714          0
{txt}r14 {res}         0          0          0          0          0  .14285714          0          0          0  .14285714  .14285714          0  .14285714          0
{txt}r15 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714          0
{txt}r16 {res}         0          0          0          0          0          0          0          0          0          0          0          0  .14285714  .14285714

{txt}           c15        c16
r15 {res}         0
{txt}r16 {res} .14285714          0
{reset}
{com}. 
. 
. xtset mat_region_id date
{res}
{col 1}{txt:Panel variable: }{res:mat_region_id}{txt: (strongly balanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2006m1}}{txt: to }{res:{bind:2019m12}}{p_end}
{txt}{col 10}Delta: {res}1 month
{txt}
{com}. 
. 
. 
. 
. ********************************************************************************
. ******************* Inverse Distance Matrix
. ********************************************************************************
. 
. /** Upload longitude and latitude data by region:
> insheet using Data/city_lat_long.csv, comma clear
> 
> keep city lat lng
> sort city
> 
> replace city="ahmedabad" if city=="Ahmedabad"
> replace city="bangalore" if city=="Bangalore"
> replace city="bhopal" if city=="Bhopāl"
> replace city="bubaneshwar" if city=="Bhubaneshwar"
> replace city="chandigarh" if city=="Chandīgarh"
> replace city="chennai" if city=="Chennai"
> replace city="guwahati" if city=="Guwāhāti"
> replace city="hyderabad" if city=="Hyderābād"
> replace city="jaipur" if city=="Jaipur"
> replace city="kanpur" if city=="Lucknow"
> replace city="kochi" if city=="Kochi"
> replace city="kolkata" if city=="Kolkāta"
> replace city="mumbai" if city=="Mumbai"
> replace city="new_delhi" if city=="Delhi"
> replace city="panaji" if city=="Panaji"
> replace city="patna" if city=="Patna"
> 
> rename city region
> bysort region: gen id=_N
> drop if id==2
> save Data/city_lat_long, replace
> 
> */
. 
. ** Merge in City latitude and longitude data:
. merge m:1 region using _1data/raw/spatial/city_lat_long
{res}{txt}{p 0 7 2}
(variable
{bf:region} was {bf:str12}, now {bf:str18} to accommodate using data's values)
{p_end}
{p 0 7 2}
(variable
{bf:id} was {bf:float}, now {bf:double} to accommodate using data's values)
{p_end}

{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}             388
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}             388{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           2,688{txt}  (_merge==3)
{col 5}{hline 41}

{com}. drop if _merge==2
{txt}(388 observations deleted)

{com}. drop _merge
{txt}
{com}. 
. 
. ** Create distance variables:
. forvalues i=1/16 {c -(}
{txt}  2{com}. sort mat_region_id
{txt}  3{com}. gen lat1=lat if mat_region_id==`i' & date==tm(2005m10)
{txt}  4{com}. sort lat1
{txt}  5{com}. replace lat1=lat1[1]
{txt}  6{com}. 
. gen lon1=lng if mat_region_id==`i' & date==tm(2005m10)
{txt}  7{com}. sort lon1
{txt}  8{com}. replace lon1=lon1[1]
{txt}  9{com}. 
. geodist lat lng lat1 lon1, gen(dist`i')
{txt} 10{com}. replace dist`i'=1 if dist`i'<1
{txt} 11{com}. 
. gen idist`i'=1/(dist`i')
{txt} 12{com}. replace idist`i'=0 if idist`i'==1
{txt} 13{com}. 
. drop lat1 lon1 dist`i'
{txt} 14{com}. 
. {c )-}
{txt}(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)
(0 real changes made)
(2,688 missing values generated)
(0 real changes made)

{com}. sort date mat_region_id
{txt}
{com}. 
. * Create matrix from distance variables:
. mkmat idist1-idist16 if date==tm(2006m1), mat(idist)
{res}{txt}
{com}. mat list idist
{res}
{txt}symmetric idist[16,16]
      idist1   idist2   idist3   idist4   idist5   idist6   idist7   idist8   idist9  idist10  idist11  idist12  idist13  idist14  idist15  idist16
 r1 {res}       .
{txt} r2 {res}       .        .
{txt} r3 {res}       .        .        .
{txt} r4 {res}       .        .        .        .
{txt} r5 {res}       .        .        .        .        .
{txt} r6 {res}       .        .        .        .        .        .
{txt} r7 {res}       .        .        .        .        .        .        .
{txt} r8 {res}       .        .        .        .        .        .        .        .
{txt} r9 {res}       .        .        .        .        .        .        .        .        .
{txt}r10 {res}       .        .        .        .        .        .        .        .        .        .
{txt}r11 {res}       .        .        .        .        .        .        .        .        .        .        .
{txt}r12 {res}       .        .        .        .        .        .        .        .        .        .        .        .
{txt}r13 {res}       .        .        .        .        .        .        .        .        .        .        .        .        .
{txt}r14 {res}       .        .        .        .        .        .        .        .        .        .        .        .        .        .
{txt}r15 {res}       .        .        .        .        .        .        .        .        .        .        .        .        .        .        .
{txt}r16 {res}       .        .        .        .        .        .        .        .        .        .        .        .        .        .        .        .
{reset}
{com}. 
. * Normalize:
. mata : st_matrix("r", rowsum(st_matrix("idist")))
{res}{txt}
{com}. mat list r // max is .02122661
{res}
{txt}r[16,1]
     c1
 r1 {res}  0
{txt} r2 {res}  0
{txt} r3 {res}  0
{txt} r4 {res}  0
{txt} r5 {res}  0
{txt} r6 {res}  0
{txt} r7 {res}  0
{txt} r8 {res}  0
{txt} r9 {res}  0
{txt}r10 {res}  0
{txt}r11 {res}  0
{txt}r12 {res}  0
{txt}r13 {res}  0
{txt}r14 {res}  0
{txt}r15 {res}  0
{txt}r16 {res}  0
{reset}
{com}. 
. *Take the rowsum max (which is also column sum max) and divide each element by it: 
. mata : C=st_matrix("idist")
{res}{txt}
{com}. mata : A=C:/.02122661
{res}{txt}
{com}. mata : st_matrix("n_idist", A)
{res}{txt}
{com}. mat list n_idist
{res}
{txt}symmetric n_idist[16,16]
      c1   c2   c3   c4   c5   c6   c7   c8   c9  c10  c11  c12  c13  c14  c15  c16
 r1 {res}   .
{txt} r2 {res}   .    .
{txt} r3 {res}   .    .    .
{txt} r4 {res}   .    .    .    .
{txt} r5 {res}   .    .    .    .    .
{txt} r6 {res}   .    .    .    .    .    .
{txt} r7 {res}   .    .    .    .    .    .    .
{txt} r8 {res}   .    .    .    .    .    .    .    .
{txt} r9 {res}   .    .    .    .    .    .    .    .    .
{txt}r10 {res}   .    .    .    .    .    .    .    .    .    .
{txt}r11 {res}   .    .    .    .    .    .    .    .    .    .    .
{txt}r12 {res}   .    .    .    .    .    .    .    .    .    .    .    .
{txt}r13 {res}   .    .    .    .    .    .    .    .    .    .    .    .    .
{txt}r14 {res}   .    .    .    .    .    .    .    .    .    .    .    .    .    .
{txt}r15 {res}   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .
{txt}r16 {res}   .    .    .    .    .    .    .    .    .    .    .    .    .    .    .    .
{reset}
{com}. 
. 
. 
. ** Run regressions:
. 
. drop if lag_lgdp==.
{txt}(0 observations deleted)

{com}. 
. xsmle fdi_ihs one two three four five $control, ///
>         model(sac)  wmat(n_Cont1) emat(n_Cont1) fe type(both) effects cluster(mat_region_id) tech(bfgs 30 nr 30 )
{res}{txt}(setting technique to bfgs)
Iteration 0:{space 3}Log-pseudolikelihood = {res:-3946.3103}  
Iteration 1:{space 3}Log-pseudolikelihood = {res:-3915.8181}  (backed up)
Iteration 2:{space 3}Log-pseudolikelihood = {res:-3915.1921}  (backed up)
Iteration 3:{space 3}Log-pseudolikelihood = {res:-3914.1356}  (backed up)
Iteration 4:{space 3}Log-pseudolikelihood = {res:-3914.1356}  (backed up)
Iteration 5:{space 3}Log-pseudolikelihood = {res:-3913.2344}  
Iteration 6:{space 3}Log-pseudolikelihood = {res:-3912.4074}  
Iteration 7:{space 3}Log-pseudolikelihood = {res:-3911.6154}  
Iteration 8:{space 3}Log-pseudolikelihood = {res: -3910.964}  
Iteration 9:{space 3}Log-pseudolikelihood = {res:-3910.0399}  
Iteration 10:{space 2}Log-pseudolikelihood = {res:-3908.2302}  
Iteration 11:{space 2}Log-pseudolikelihood = {res:-3907.3209}  
Iteration 12:{space 2}Log-pseudolikelihood = {res:-3903.5364}  
Iteration 13:{space 2}Log-pseudolikelihood = {res:-3902.9665}  
Iteration 14:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 15:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 16:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 17:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 18:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 19:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 20:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 21:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 22:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 23:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 24:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 25:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 26:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 27:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 28:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 29:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
(switching technique to nr)
Iteration 30:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 31:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 32:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 33:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 34:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 35:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 36:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 37:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 38:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 39:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 40:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 41:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 42:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 43:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 44:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 45:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 46:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 47:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 48:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 49:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 50:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 51:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 52:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 53:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 54:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 55:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 56:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 57:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 58:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 59:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
(switching technique to bfgs)
Iteration 60:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 61:{space 2}Log-pseudolikelihood = {res:-3902.9665}  (backed up)
Iteration 62:{space 2}Log-pseudolikelihood = {res:-3902.9592}  
Iteration 63:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
Iteration 64:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
Iteration 65:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
Iteration 66:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 67:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
Iteration 68:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 69:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 70:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 71:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 72:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 73:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 74:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
BFGS stepping has contracted, resetting BFGS Hessian
Iteration 75:{space 2}Log-pseudolikelihood = {res:-3902.9592}  (backed up)
{err}{p}
cannot compute an improvement -- flat region encountered
{p_end}
{txt}{search r(430), local:r(430);}

end of do-file

{search r(430), local:r(430);}

{com}. help xsmle

. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. clear all
{res}{txt}
{com}. 
. ********************************************************************************
. * Load data and relabel vars for tables
. ********************************************************************************
. use ../../data/reg_panel_hv_qtr, clear
{err}{p 0 4 2}
file {bf:{err}../../data/reg_panel_hv_qtr.dta}
not found
{p_end}
{txt}{search r(601), local:r(601);}

end of do-file

{search r(601), local:r(601);}

{com}. cd "/Users/aidan/Dropbox/Wage pressures/dofiles_stb/ppi_regs/"
{res}/Users/aidan/Dropbox/Wage pressures/dofiles_stb/ppi_regs

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}. clear all
{res}{txt}
{com}. 
. ********************************************************************************
. * Load data and relabel vars for tables
. ********************************************************************************
. use ../../data/reg_panel_hv_qtr, clear
{txt}
{com}. 
{txt}end of do-file

{com}. order bea_group

. help ivreghdfe

. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}.         
.                 
. clear all
{res}{txt}
{com}. 
. ********************************************************************************
. * Load data and relabel vars for tables
. ********************************************************************************
. use ../../data/reg_panel_hv_qtr, clear
{txt}
{com}. 
. 
.         * Use non-seasonally adjusted
.         gen D4_wages  = d4lntot_qtr_wages_nsa
{txt}(517 missing values generated)

{com}.         gen D4_prices = d4lnppi_nsa
{txt}(2,148 missing values generated)

{com}.         
.         * Generate panel
.         drop naics_id
{txt}
{com}.         egen naics_id=group(naics)
{txt}
{com}.         xtset naics_id date
{res}
{col 1}{txt:Panel variable: }{res:naics_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2013q1}}{txt: to }{res:{bind:2021q3}}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}.         
.         * Average weekly wage 
.         gen D4_avg_wwage_nsa = S4.lnavg_wwage_nsa
{txt}(2,590 missing values generated)

{com}.         
.         * Value added per worker
.         foreach type in nominal real {c -(}
{txt}  2{com}.                 gen lvapw_`type' = ln(vapw_`type')
{txt}  3{com}.                 gen D4_vapw_`type' = S4.lvapw_`type'
{txt}  4{com}.         {c )-}
{txt}(2,148 missing values generated)
(2,148 missing values generated)

{com}.         
.         * Hires/vacancies
.         replace hires = hires/1000
{txt}(18,439 real changes made)

{com}.         
.         * Create dummy on whether JOLTS dummy is > median 
.         bysort date: egen jolts_median= median(jolts_tightness)
{txt}
{com}.         gen jolts_dummy = (jolts_tightness > jolts_median) if !missing(jolts_tightness)
{txt}
{com}.         
.         * Create a dummy for whether 6-digit tightness is above median
.         xtset naics_id date
{res}
{col 1}{txt:Panel variable: }{res:naics_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2013q1}}{txt: to }{res:{bind:2021q3}}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}.         by naics_id: egen max_employment = max(employment_sa)
{txt}
{com}.         gen bgt_tightness = vacancies_naics6_imp_w / (max_employment - employment_sa)
{txt}(3,324 missing values generated)

{com}.         
.         bysort date: egen bgt_median=median(bgt_tightness)
{txt}
{com}.         gen bgt_dummy = (bgt_tightness >bgt_median) if !missing(bgt_tightness)
{txt}(3,324 missing values generated)

{com}.         
.                 
.         * Concentration
.         
.         egen conc4_median = median(sh_sales_top4)
{txt}
{com}.         gen conc4_dummy = (sh_sales_top4 > conc4_median) if !missing(sh_sales_top4)
{txt}(1,469 missing values generated)

{com}.         
.         egen conc20_median = median(sh_sales_top20)
{txt}
{com}.         gen conc20_dummy = (sh_sales_top20 > conc20_median) if !missing(sh_sales_top20)
{txt}(1,469 missing values generated)

{com}.         
.         egen emp4_median = median(sh_emp_top4)
{txt}
{com}.         gen emp4_dummy = (sh_emp_top4 > emp4_median) if !missing(sh_emp_top4)
{txt}(1,469 missing values generated)

{com}.         
.         egen emp20_median = median(sh_emp_top20)
{txt}
{com}.         gen emp20_dummy = (sh_emp_top20 > emp20_median) if !missing(sh_emp_top20)
{txt}(1,469 missing values generated)

{com}.         
.         
. 
.         * Generate trade-adjusted vars 
.         gen d4lnmpit_adj = import_share_2012 * d4lnmpit
{txt}(8,345 missing values generated)

{com}.         gen d1lnmpit_adj = import_share_2012 * d1lnmpit
{txt}(7,306 missing values generated)

{com}.         
.         gen d4IP_m_adj = input_im_int_2012_wb * d4IP_m4
{txt}(2,310 missing values generated)

{com}.         gen d1IP_m_adj = input_im_int_2012_wb * d1IP_m4
{txt}(730 missing values generated)

{com}.         
.         gen D4_wages_LS = labor_share_2012 * D4_wages
{txt}(678 missing values generated)

{com}.         
.         
.         
.         * Generate interactions between MPI and the wage
.         gen D4_wwage_mpi = d4lnmpit_adj * D4_avg_wwage_nsa
{txt}(8,401 missing values generated)

{com}.         
.         * Generate interactions between input MPI and wage
.         gen D4_wwage_IP = d4IP_t4 * D4_avg_wwage_nsa
{txt}(2,727 missing values generated)

{com}.         
.         
.         * Generate interactions with tightness
.         foreach var in d4lnmpit d4lnmpit_adj d4IP_t4 d4IP_m4 d1lnmpit d1lnmpit_adj d1IP_m4 d1IP_t4 /* d4lnhwage_prodw d4lnwwage_prodw d4lnhwage_all d4lnwwage_all d1lnhwage_prodw d1lnwwage_prodw */ D4_wages {c -(}
{txt}  2{com}.                 gen `var'_jolts_tight = `var' * jolts_tightness
{txt}  3{com}.                 gen `var'_jolts_dummy = `var' * jolts_dummy
{txt}  4{com}.                 gen `var'_bgt_dummy = `var' * bgt_dummy
{txt}  5{com}.                 gen `var'_conc4_dummy = `var' * conc4_dummy
{txt}  6{com}.                 gen `var'_conc20_dummy = `var' * conc20_dummy
{txt}  7{com}.                 gen `var'_emp4_dummy = `var' * emp4_dummy
{txt}  8{com}.                 gen `var'_emp20_dummy = `var' * emp20_dummy
{txt}  9{com}.                 gen `var'_conc4 = `var' * sh_sales_top4
{txt} 10{com}.                 gen `var'_conc20 = `var' * sh_sales_top20
{txt} 11{com}.                 gen `var'_emp4 = `var' * sh_emp_top4
{txt} 12{com}.                 gen `var'_emp20 = `var' * sh_emp_top20
{txt} 13{com}.         {c )-}
{txt}(8,314 missing values generated)
(8,314 missing values generated)
(9,943 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,345 missing values generated)
(8,345 missing values generated)
(9,973 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(5,168 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(2,248 missing values generated)
(2,248 missing values generated)
(5,108 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(7,272 missing values generated)
(7,272 missing values generated)
(9,064 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,306 missing values generated)
(7,306 missing values generated)
(9,097 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(662 missing values generated)
(662 missing values generated)
(3,779 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(730 missing values generated)
(730 missing values generated)
(3,845 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(517 missing values generated)
(517 missing values generated)
(3,442 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)

{com}.         
.         * Generate variables interacted with 1[year==2020]
.         *gen year = year(dofq(date))
.         gen is2020 = (year==2020)
{txt}
{com}.         gen is2021 = (year==2021)
{txt}
{com}.         gen iscovid= (date>=tq(2020q2))
{txt}
{com}.         gen istradewar = (date>=tq(2018q3) & date<=tq(2020q1))
{txt}
{com}.         foreach var in d4lnmpit d4lnmpit_adj d4IP_m_adj d4IP_t4 d4IP_m4 d1lnmpit d1lnmpit_adj d1IP_m_adj d1IP_m4 d1IP_t4 D4_wages D4_wages_LS D4_avg_wwage_nsa D4_wwage_IP {c -(}
{txt}  2{com}.                 gen `var'_20    = `var' * is2020
{txt}  3{com}.                 gen `var'_21    = `var' * is2021
{txt}  4{com}.                 gen `var'_covid = `var' * iscovid
{txt}  5{com}.                 gen `var'_tradewar = `var' * istradewar
{txt}  6{com}.         {c )-}
{txt}(8,314 missing values generated)
(8,314 missing values generated)
(8,314 missing values generated)
(8,314 missing values generated)
(8,345 missing values generated)
(8,345 missing values generated)
(8,345 missing values generated)
(8,345 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,248 missing values generated)
(2,248 missing values generated)
(2,248 missing values generated)
(2,248 missing values generated)
(7,272 missing values generated)
(7,272 missing values generated)
(7,272 missing values generated)
(7,272 missing values generated)
(7,306 missing values generated)
(7,306 missing values generated)
(7,306 missing values generated)
(7,306 missing values generated)
(730 missing values generated)
(730 missing values generated)
(730 missing values generated)
(730 missing values generated)
(662 missing values generated)
(662 missing values generated)
(662 missing values generated)
(662 missing values generated)
(730 missing values generated)
(730 missing values generated)
(730 missing values generated)
(730 missing values generated)
(517 missing values generated)
(517 missing values generated)
(517 missing values generated)
(517 missing values generated)
(678 missing values generated)
(678 missing values generated)
(678 missing values generated)
(678 missing values generated)
(2,590 missing values generated)
(2,590 missing values generated)
(2,590 missing values generated)
(2,590 missing values generated)
(2,727 missing values generated)
(2,727 missing values generated)
(2,727 missing values generated)
(2,727 missing values generated)

{com}.         
.         xtset naics_id date
{res}
{col 1}{txt:Panel variable: }{res:naics_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2013q1}}{txt: to }{res:{bind:2021q3}}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}.         
.                 
.         * Generate dummies for whether the absolute change in wage is above the median.
.         *egen median_wage = median(abs(avg_wwage_nsa - L4.avg_wwage_nsa))
.         *gen medwage_dummy = (abs(avg_wwage_nsa - L4.avg_wwage_nsa) > median_wage) if !missing(D4_avg_wwage_nsa)
.         egen median_wage = median(D4_avg_wwage_nsa) if D4_avg_wwage_nsa>0 & !missing(D4_avg_wwage_nsa)
{txt}(6,132 missing values generated)

{com}.         gen medwage_dummy = (D4_avg_wwage_nsa > median_wage) if !missing(D4_avg_wwage_nsa)      
{txt}(2,590 missing values generated)

{com}.         gen d4lnmpit_adj_medwage = d4lnmpit_adj * medwage_dummy
{txt}(8,401 missing values generated)

{com}.         
.         egen median_cost = median(d4IP_t4) if d4IP_t4>0 & !missing(d4IP_t4)
{txt}(9,491 missing values generated)

{com}.         gen medcost_dummy = (d4IP_t4 > median_cost) if !missing(d4IP_t4)
{txt}(2,310 missing values generated)

{com}.         gen d4wage_medcost = D4_avg_wwage_nsa * medcost_dummy
{txt}(2,727 missing values generated)

{com}. 
.         * Generate dummies for whether the change in wage is in the top quartile.
.         *egen top_wage = pctile(abs(avg_wwage_nsa - L4.avg_wwage_nsa)), p(75)
.         *gen topwage_dummy = (abs(avg_wwage_nsa - L4.avg_wwage_nsa) > top_wage) if !missing(D4_avg_wwage_nsa)
.         egen top_wage = pctile(D4_avg_wwage_nsa) if D4_avg_wwage_nsa>0 & !missing(D4_avg_wwage_nsa), p(75)
{txt}(6,132 missing values generated)

{com}.         gen topwage_dummy = (D4_avg_wwage_nsa > top_wage) if !missing(D4_avg_wwage_nsa)         
{txt}(2,590 missing values generated)

{com}.         gen d4lnmpit_adj_topwage = d4lnmpit_adj * topwage_dummy
{txt}(8,401 missing values generated)

{com}.         
.         egen top_cost = pctile(d4IP_t4) if d4IP_t4>0 & !missing(d4IP_t4), p(75)
{txt}(9,491 missing values generated)

{com}.         gen topcost_dummy = (d4IP_t4 > top_cost) if !missing(d4IP_t4)
{txt}(2,310 missing values generated)

{com}.         gen d4wage_topcost = D4_avg_wwage_nsa * topcost_dummy
{txt}(2,727 missing values generated)

{com}.         
.         
.         * Relabel variables for tables
.         lab var D4_prices "Dln(PPI)"
{txt}
{com}.         lab var d4lnmpit "Dln(MPI)"
{txt}
{com}.         lab var d4lnmpit_20 "Dln(MPI) X Yr=2020"
{txt}
{com}.         lab var d4lnmpit_21 "Dln(MPI) X Yr=2021"
{txt}
{com}.         lab var d4IP_m4 "Dln(InputPPI)"
{txt}
{com}.         lab var d4IP_m4_20 "Dln(InputPPI) X Yr=2020"
{txt}
{com}.         lab var d4IP_m4_21 "Dln(InputPPI) X Yr=2021"
{txt}
{com}.         lab var d4IP_t4_20 "Dln(InputPPI) X Yr=2020"
{txt}
{com}.         lab var d4IP_t4_21 "Dln(InputPPI) X Yr=2021"
{txt}
{com}.         lab var d4IP_t4 "Dln(InputPPITotal)"
{txt}
{com}.         lab var import_share_2012 "Import Share"
{txt}
{com}.         lab var input_im_int_2012 "Input Import Intensity"
{txt}
{com}.         lab var d4ln_out_tariff "Dln(1 + Output Tariff)"
{txt}
{com}.         lab var d4ln_in_tariff "Dln(1 + Input Tariff)"
{txt}
{com}.         lab var d4lnmpit_adj "Import Share X Dln(MPI)"
{txt}
{com}.         lab var d4lnmpit_adj_20 "Import Share X Dln(MPI) X Yr=2020"
{txt}
{com}.         lab var d4lnmpit_adj_21 "Import Share X Dln(MPI) X Yr=2021"
{txt}
{com}.         
.         lab var d1lnmpit_adj "Import Share X Dln(MPI)"
{txt}
{com}.         lab var d1lnmpit_adj_21 "Import Share X Dln(MPI) X Yr=2021"
{txt}
{com}.         lab var d1IP_m4_21 "Dln(InputPPI) X Yr=2021"
{txt}
{com}.         
.         *create wage import IPI interactions
. 
.         gen D4_wwage_im_IP = d4IP_m4 * D4_avg_wwage_nsa
{txt}(2,665 missing values generated)

{com}.         gen D4_wwage_im_IP_21 = d4IP_m4 * D4_avg_wwage_nsa_21
{txt}(2,665 missing values generated)

{com}. 
.         gl srt_date 2013q1
{txt}
{com}.         gl end_date 2021q3
{txt}
{com}. 
. ***** OLS TRADED
. 
. 
. * With input costs, all inputs
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2)
{res}{txt}Warning: time variable {res}date{txt} has {res}17{txt} gap(s) in relevant range
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on date
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  {res}date
{txt}  group variable (i): {res}naics_id

{txt}Number of clusters (date) = {col 33}{res}    31{txt}{col 55}Number of obs = {res}   10038
{txt}{col 55}F( 10,    30) = {res}   47.15
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 30.72273545{txt}{col 55}Centered R2   = {res}  0.1339
{txt}Total (uncentered) SS   = {res} 30.72273545{txt}{col 55}Uncentered R2 = {res}  0.1339
{txt}Residual SS             = {res} 26.60978821{txt}{col 55}Root MSE      = {res}   .0524

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 18}{c |}{col 30}    Robust
{col 1}       D4_prices{col 18}{c |} Coefficient{col 30}  std. err.{col 42}      t{col 50}   P>|t|{col 58}     [95% con{col 71}f. interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}D4_vapw_real {c |}{col 18}{res}{space 2}-.1539917{col 30}{space 2} .0256183{col 41}{space 1}   -6.01{col 50}{space 3}0.000{col 58}{space 4}-.2063112{col 71}{space 3}-.1016721
{txt}{space 4}d4lnmpit_adj {c |}{col 18}{res}{space 2} .2229216{col 30}{space 2} .0436246{col 41}{space 1}    5.11{col 50}{space 3}0.000{col 58}{space 4} .1338283{col 71}{space 3} .3120148
{txt}{space 9}d4IP_t4 {c |}{col 18}{res}{space 2} .3086654{col 30}{space 2}  .027734{col 41}{space 1}   11.13{col 50}{space 3}0.000{col 58}{space 4} .2520249{col 71}{space 3} .3653058
{txt}D4_avg_wwage_nsa {c |}{col 18}{res}{space 2} .0290684{col 30}{space 2} .0159615{col 41}{space 1}    1.82{col 50}{space 3}0.079{col 58}{space 4}-.0035293{col 71}{space 3} .0616662
{txt}{space 2}ln_emp_share_o {c |}{col 18}{res}{space 2} .0657027{col 30}{space 2}  .058353{col 41}{space 1}    1.13{col 50}{space 3}0.269{col 58}{space 4}  -.05347{col 71}{space 3} .1848754
{txt}{space 2}ln_emp_share_m {c |}{col 18}{res}{space 2} .3797018{col 30}{space 2} .2227726{col 41}{space 1}    1.70{col 50}{space 3}0.099{col 58}{space 4}-.0752606{col 71}{space 3} .8346643
{txt}{space 1}ln_emp_share_hs {c |}{col 18}{res}{space 2}-.0200591{col 30}{space 2} .1172894{col 41}{space 1}   -0.17{col 50}{space 3}0.865{col 58}{space 4}-.2595961{col 71}{space 3} .2194779
{txt}ln_emp_share_asc {c |}{col 18}{res}{space 2} .0906854{col 30}{space 2} .1662298{col 41}{space 1}    0.55{col 50}{space 3}0.589{col 58}{space 4}-.2488011{col 71}{space 3} .4301719
{txt}ln_emp_share_bsc {c |}{col 18}{res}{space 2} .0028743{col 30}{space 2} .0929116{col 41}{space 1}    0.03{col 50}{space 3}0.976{col 58}{space 4}-.1868765{col 71}{space 3} .1926251
{txt}ln_emp_share_fem {c |}{col 18}{res}{space 2} .0510528{col 30}{space 2} .0565406{col 41}{space 1}    0.90{col 50}{space 3}0.374{col 58}{space 4}-.0644184{col 71}{space 3} .1665241
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa
{col 23}ln_emp_share_o ln_emp_share_m ln_emp_share_hs
{col 23}ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      337{col 27}{space 1}        0{col 39}{result}{space 1}      337{col 53}{text} {col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}       31{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col1
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. * With input costs, all inputs clustered
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) rubust cluster(bea_group)
{err}option {bf:rubust} not allowed
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "/var/folders/5v/6_9jwpzn1fl8t1z2bygfqm8m0000gn/T//SD74053.000000"
{txt}
{com}.         
.                 
. clear all
{res}{txt}
{com}. 
. ********************************************************************************
. * Load data and relabel vars for tables
. ********************************************************************************
. use ../../data/reg_panel_hv_qtr, clear
{txt}
{com}. 
. 
.         * Use non-seasonally adjusted
.         gen D4_wages  = d4lntot_qtr_wages_nsa
{txt}(517 missing values generated)

{com}.         gen D4_prices = d4lnppi_nsa
{txt}(2,148 missing values generated)

{com}.         
.         * Generate panel
.         drop naics_id
{txt}
{com}.         egen naics_id=group(naics)
{txt}
{com}.         xtset naics_id date
{res}
{col 1}{txt:Panel variable: }{res:naics_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2013q1}}{txt: to }{res:{bind:2021q3}}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}.         
.         * Average weekly wage 
.         gen D4_avg_wwage_nsa = S4.lnavg_wwage_nsa
{txt}(2,590 missing values generated)

{com}.         
.         * Value added per worker
.         foreach type in nominal real {c -(}
{txt}  2{com}.                 gen lvapw_`type' = ln(vapw_`type')
{txt}  3{com}.                 gen D4_vapw_`type' = S4.lvapw_`type'
{txt}  4{com}.         {c )-}
{txt}(2,148 missing values generated)
(2,148 missing values generated)

{com}.         
.         * Hires/vacancies
.         replace hires = hires/1000
{txt}(18,439 real changes made)

{com}.         
.         * Create dummy on whether JOLTS dummy is > median 
.         bysort date: egen jolts_median= median(jolts_tightness)
{txt}
{com}.         gen jolts_dummy = (jolts_tightness > jolts_median) if !missing(jolts_tightness)
{txt}
{com}.         
.         * Create a dummy for whether 6-digit tightness is above median
.         xtset naics_id date
{res}
{col 1}{txt:Panel variable: }{res:naics_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2013q1}}{txt: to }{res:{bind:2021q3}}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}.         by naics_id: egen max_employment = max(employment_sa)
{txt}
{com}.         gen bgt_tightness = vacancies_naics6_imp_w / (max_employment - employment_sa)
{txt}(3,324 missing values generated)

{com}.         
.         bysort date: egen bgt_median=median(bgt_tightness)
{txt}
{com}.         gen bgt_dummy = (bgt_tightness >bgt_median) if !missing(bgt_tightness)
{txt}(3,324 missing values generated)

{com}.         
.                 
.         * Concentration
.         
.         egen conc4_median = median(sh_sales_top4)
{txt}
{com}.         gen conc4_dummy = (sh_sales_top4 > conc4_median) if !missing(sh_sales_top4)
{txt}(1,469 missing values generated)

{com}.         
.         egen conc20_median = median(sh_sales_top20)
{txt}
{com}.         gen conc20_dummy = (sh_sales_top20 > conc20_median) if !missing(sh_sales_top20)
{txt}(1,469 missing values generated)

{com}.         
.         egen emp4_median = median(sh_emp_top4)
{txt}
{com}.         gen emp4_dummy = (sh_emp_top4 > emp4_median) if !missing(sh_emp_top4)
{txt}(1,469 missing values generated)

{com}.         
.         egen emp20_median = median(sh_emp_top20)
{txt}
{com}.         gen emp20_dummy = (sh_emp_top20 > emp20_median) if !missing(sh_emp_top20)
{txt}(1,469 missing values generated)

{com}.         
.         
. 
.         * Generate trade-adjusted vars 
.         gen d4lnmpit_adj = import_share_2012 * d4lnmpit
{txt}(8,345 missing values generated)

{com}.         gen d1lnmpit_adj = import_share_2012 * d1lnmpit
{txt}(7,306 missing values generated)

{com}.         
.         gen d4IP_m_adj = input_im_int_2012_wb * d4IP_m4
{txt}(2,310 missing values generated)

{com}.         gen d1IP_m_adj = input_im_int_2012_wb * d1IP_m4
{txt}(730 missing values generated)

{com}.         
.         gen D4_wages_LS = labor_share_2012 * D4_wages
{txt}(678 missing values generated)

{com}.         
.         
.         
.         * Generate interactions between MPI and the wage
.         gen D4_wwage_mpi = d4lnmpit_adj * D4_avg_wwage_nsa
{txt}(8,401 missing values generated)

{com}.         
.         * Generate interactions between input MPI and wage
.         gen D4_wwage_IP = d4IP_t4 * D4_avg_wwage_nsa
{txt}(2,727 missing values generated)

{com}.         
.         
.         * Generate interactions with tightness
.         foreach var in d4lnmpit d4lnmpit_adj d4IP_t4 d4IP_m4 d1lnmpit d1lnmpit_adj d1IP_m4 d1IP_t4 /* d4lnhwage_prodw d4lnwwage_prodw d4lnhwage_all d4lnwwage_all d1lnhwage_prodw d1lnwwage_prodw */ D4_wages {c -(}
{txt}  2{com}.                 gen `var'_jolts_tight = `var' * jolts_tightness
{txt}  3{com}.                 gen `var'_jolts_dummy = `var' * jolts_dummy
{txt}  4{com}.                 gen `var'_bgt_dummy = `var' * bgt_dummy
{txt}  5{com}.                 gen `var'_conc4_dummy = `var' * conc4_dummy
{txt}  6{com}.                 gen `var'_conc20_dummy = `var' * conc20_dummy
{txt}  7{com}.                 gen `var'_emp4_dummy = `var' * emp4_dummy
{txt}  8{com}.                 gen `var'_emp20_dummy = `var' * emp20_dummy
{txt}  9{com}.                 gen `var'_conc4 = `var' * sh_sales_top4
{txt} 10{com}.                 gen `var'_conc20 = `var' * sh_sales_top20
{txt} 11{com}.                 gen `var'_emp4 = `var' * sh_emp_top4
{txt} 12{com}.                 gen `var'_emp20 = `var' * sh_emp_top20
{txt} 13{com}.         {c )-}
{txt}(8,314 missing values generated)
(8,314 missing values generated)
(9,943 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,345 missing values generated)
(8,345 missing values generated)
(9,973 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(8,470 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(5,168 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(3,535 missing values generated)
(2,248 missing values generated)
(2,248 missing values generated)
(5,108 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(3,473 missing values generated)
(7,272 missing values generated)
(7,272 missing values generated)
(9,064 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,306 missing values generated)
(7,306 missing values generated)
(9,097 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(7,448 missing values generated)
(662 missing values generated)
(662 missing values generated)
(3,779 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(2,000 missing values generated)
(730 missing values generated)
(730 missing values generated)
(3,845 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(2,068 missing values generated)
(517 missing values generated)
(517 missing values generated)
(3,442 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)
(1,499 missing values generated)

{com}.         
.         * Generate variables interacted with 1[year==2020]
.         *gen year = year(dofq(date))
.         gen is2020 = (year==2020)
{txt}
{com}.         gen is2021 = (year==2021)
{txt}
{com}.         gen iscovid= (date>=tq(2020q2))
{txt}
{com}.         gen istradewar = (date>=tq(2018q3) & date<=tq(2020q1))
{txt}
{com}.         foreach var in d4lnmpit d4lnmpit_adj d4IP_m_adj d4IP_t4 d4IP_m4 d1lnmpit d1lnmpit_adj d1IP_m_adj d1IP_m4 d1IP_t4 D4_wages D4_wages_LS D4_avg_wwage_nsa D4_wwage_IP {c -(}
{txt}  2{com}.                 gen `var'_20    = `var' * is2020
{txt}  3{com}.                 gen `var'_21    = `var' * is2021
{txt}  4{com}.                 gen `var'_covid = `var' * iscovid
{txt}  5{com}.                 gen `var'_tradewar = `var' * istradewar
{txt}  6{com}.         {c )-}
{txt}(8,314 missing values generated)
(8,314 missing values generated)
(8,314 missing values generated)
(8,314 missing values generated)
(8,345 missing values generated)
(8,345 missing values generated)
(8,345 missing values generated)
(8,345 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,310 missing values generated)
(2,248 missing values generated)
(2,248 missing values generated)
(2,248 missing values generated)
(2,248 missing values generated)
(7,272 missing values generated)
(7,272 missing values generated)
(7,272 missing values generated)
(7,272 missing values generated)
(7,306 missing values generated)
(7,306 missing values generated)
(7,306 missing values generated)
(7,306 missing values generated)
(730 missing values generated)
(730 missing values generated)
(730 missing values generated)
(730 missing values generated)
(662 missing values generated)
(662 missing values generated)
(662 missing values generated)
(662 missing values generated)
(730 missing values generated)
(730 missing values generated)
(730 missing values generated)
(730 missing values generated)
(517 missing values generated)
(517 missing values generated)
(517 missing values generated)
(517 missing values generated)
(678 missing values generated)
(678 missing values generated)
(678 missing values generated)
(678 missing values generated)
(2,590 missing values generated)
(2,590 missing values generated)
(2,590 missing values generated)
(2,590 missing values generated)
(2,727 missing values generated)
(2,727 missing values generated)
(2,727 missing values generated)
(2,727 missing values generated)

{com}.         
.         xtset naics_id date
{res}
{col 1}{txt:Panel variable: }{res:naics_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:date}{txt:, }{res:{bind:2013q1}}{txt: to }{res:{bind:2021q3}}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}.         
.                 
.         * Generate dummies for whether the absolute change in wage is above the median.
.         *egen median_wage = median(abs(avg_wwage_nsa - L4.avg_wwage_nsa))
.         *gen medwage_dummy = (abs(avg_wwage_nsa - L4.avg_wwage_nsa) > median_wage) if !missing(D4_avg_wwage_nsa)
.         egen median_wage = median(D4_avg_wwage_nsa) if D4_avg_wwage_nsa>0 & !missing(D4_avg_wwage_nsa)
{txt}(6,132 missing values generated)

{com}.         gen medwage_dummy = (D4_avg_wwage_nsa > median_wage) if !missing(D4_avg_wwage_nsa)      
{txt}(2,590 missing values generated)

{com}.         gen d4lnmpit_adj_medwage = d4lnmpit_adj * medwage_dummy
{txt}(8,401 missing values generated)

{com}.         
.         egen median_cost = median(d4IP_t4) if d4IP_t4>0 & !missing(d4IP_t4)
{txt}(9,491 missing values generated)

{com}.         gen medcost_dummy = (d4IP_t4 > median_cost) if !missing(d4IP_t4)
{txt}(2,310 missing values generated)

{com}.         gen d4wage_medcost = D4_avg_wwage_nsa * medcost_dummy
{txt}(2,727 missing values generated)

{com}. 
.         * Generate dummies for whether the change in wage is in the top quartile.
.         *egen top_wage = pctile(abs(avg_wwage_nsa - L4.avg_wwage_nsa)), p(75)
.         *gen topwage_dummy = (abs(avg_wwage_nsa - L4.avg_wwage_nsa) > top_wage) if !missing(D4_avg_wwage_nsa)
.         egen top_wage = pctile(D4_avg_wwage_nsa) if D4_avg_wwage_nsa>0 & !missing(D4_avg_wwage_nsa), p(75)
{txt}(6,132 missing values generated)

{com}.         gen topwage_dummy = (D4_avg_wwage_nsa > top_wage) if !missing(D4_avg_wwage_nsa)         
{txt}(2,590 missing values generated)

{com}.         gen d4lnmpit_adj_topwage = d4lnmpit_adj * topwage_dummy
{txt}(8,401 missing values generated)

{com}.         
.         egen top_cost = pctile(d4IP_t4) if d4IP_t4>0 & !missing(d4IP_t4), p(75)
{txt}(9,491 missing values generated)

{com}.         gen topcost_dummy = (d4IP_t4 > top_cost) if !missing(d4IP_t4)
{txt}(2,310 missing values generated)

{com}.         gen d4wage_topcost = D4_avg_wwage_nsa * topcost_dummy
{txt}(2,727 missing values generated)

{com}.         
.         
.         * Relabel variables for tables
.         lab var D4_prices "Dln(PPI)"
{txt}
{com}.         lab var d4lnmpit "Dln(MPI)"
{txt}
{com}.         lab var d4lnmpit_20 "Dln(MPI) X Yr=2020"
{txt}
{com}.         lab var d4lnmpit_21 "Dln(MPI) X Yr=2021"
{txt}
{com}.         lab var d4IP_m4 "Dln(InputPPI)"
{txt}
{com}.         lab var d4IP_m4_20 "Dln(InputPPI) X Yr=2020"
{txt}
{com}.         lab var d4IP_m4_21 "Dln(InputPPI) X Yr=2021"
{txt}
{com}.         lab var d4IP_t4_20 "Dln(InputPPI) X Yr=2020"
{txt}
{com}.         lab var d4IP_t4_21 "Dln(InputPPI) X Yr=2021"
{txt}
{com}.         lab var d4IP_t4 "Dln(InputPPITotal)"
{txt}
{com}.         lab var import_share_2012 "Import Share"
{txt}
{com}.         lab var input_im_int_2012 "Input Import Intensity"
{txt}
{com}.         lab var d4ln_out_tariff "Dln(1 + Output Tariff)"
{txt}
{com}.         lab var d4ln_in_tariff "Dln(1 + Input Tariff)"
{txt}
{com}.         lab var d4lnmpit_adj "Import Share X Dln(MPI)"
{txt}
{com}.         lab var d4lnmpit_adj_20 "Import Share X Dln(MPI) X Yr=2020"
{txt}
{com}.         lab var d4lnmpit_adj_21 "Import Share X Dln(MPI) X Yr=2021"
{txt}
{com}.         
.         lab var d1lnmpit_adj "Import Share X Dln(MPI)"
{txt}
{com}.         lab var d1lnmpit_adj_21 "Import Share X Dln(MPI) X Yr=2021"
{txt}
{com}.         lab var d1IP_m4_21 "Dln(InputPPI) X Yr=2021"
{txt}
{com}.         
.         *create wage import IPI interactions
. 
.         gen D4_wwage_im_IP = d4IP_m4 * D4_avg_wwage_nsa
{txt}(2,665 missing values generated)

{com}.         gen D4_wwage_im_IP_21 = d4IP_m4 * D4_avg_wwage_nsa_21
{txt}(2,665 missing values generated)

{com}. 
.         gl srt_date 2013q1
{txt}
{com}.         gl end_date 2021q3
{txt}
{com}. 
. ***** OLS TRADED
. 
. 
. * With input costs, all inputs
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2)
{res}{txt}Warning: time variable {res}date{txt} has {res}17{txt} gap(s) in relevant range
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on date
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  {res}date
{txt}  group variable (i): {res}naics_id

{txt}Number of clusters (date) = {col 33}{res}    31{txt}{col 55}Number of obs = {res}   10038
{txt}{col 55}F( 10,    30) = {res}   47.15
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 30.72273545{txt}{col 55}Centered R2   = {res}  0.1339
{txt}Total (uncentered) SS   = {res} 30.72273545{txt}{col 55}Uncentered R2 = {res}  0.1339
{txt}Residual SS             = {res} 26.60978821{txt}{col 55}Root MSE      = {res}   .0524

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 18}{c |}{col 30}    Robust
{col 1}       D4_prices{col 18}{c |} Coefficient{col 30}  std. err.{col 42}      t{col 50}   P>|t|{col 58}     [95% con{col 71}f. interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}D4_vapw_real {c |}{col 18}{res}{space 2}-.1539917{col 30}{space 2} .0256183{col 41}{space 1}   -6.01{col 50}{space 3}0.000{col 58}{space 4}-.2063112{col 71}{space 3}-.1016721
{txt}{space 4}d4lnmpit_adj {c |}{col 18}{res}{space 2} .2229216{col 30}{space 2} .0436246{col 41}{space 1}    5.11{col 50}{space 3}0.000{col 58}{space 4} .1338283{col 71}{space 3} .3120148
{txt}{space 9}d4IP_t4 {c |}{col 18}{res}{space 2} .3086654{col 30}{space 2}  .027734{col 41}{space 1}   11.13{col 50}{space 3}0.000{col 58}{space 4} .2520249{col 71}{space 3} .3653058
{txt}D4_avg_wwage_nsa {c |}{col 18}{res}{space 2} .0290684{col 30}{space 2} .0159615{col 41}{space 1}    1.82{col 50}{space 3}0.079{col 58}{space 4}-.0035293{col 71}{space 3} .0616662
{txt}{space 2}ln_emp_share_o {c |}{col 18}{res}{space 2} .0657027{col 30}{space 2}  .058353{col 41}{space 1}    1.13{col 50}{space 3}0.269{col 58}{space 4}  -.05347{col 71}{space 3} .1848754
{txt}{space 2}ln_emp_share_m {c |}{col 18}{res}{space 2} .3797018{col 30}{space 2} .2227726{col 41}{space 1}    1.70{col 50}{space 3}0.099{col 58}{space 4}-.0752606{col 71}{space 3} .8346643
{txt}{space 1}ln_emp_share_hs {c |}{col 18}{res}{space 2}-.0200591{col 30}{space 2} .1172894{col 41}{space 1}   -0.17{col 50}{space 3}0.865{col 58}{space 4}-.2595961{col 71}{space 3} .2194779
{txt}ln_emp_share_asc {c |}{col 18}{res}{space 2} .0906854{col 30}{space 2} .1662298{col 41}{space 1}    0.55{col 50}{space 3}0.589{col 58}{space 4}-.2488011{col 71}{space 3} .4301719
{txt}ln_emp_share_bsc {c |}{col 18}{res}{space 2} .0028743{col 30}{space 2} .0929116{col 41}{space 1}    0.03{col 50}{space 3}0.976{col 58}{space 4}-.1868765{col 71}{space 3} .1926251
{txt}ln_emp_share_fem {c |}{col 18}{res}{space 2} .0510528{col 30}{space 2} .0565406{col 41}{space 1}    0.90{col 50}{space 3}0.374{col 58}{space 4}-.0644184{col 71}{space 3} .1665241
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa
{col 23}ln_emp_share_o ln_emp_share_m ln_emp_share_hs
{col 23}ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      337{col 27}{space 1}        0{col 39}{result}{space 1}      337{col 53}{text} {col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}       31{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col1
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. * With input costs, all inputs clustered
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) robust cluster(bea_group)
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on bea_group

Number of clusters (bea_group) = {col 33}{res}   216{txt}{col 55}Number of obs = {res}   10038
{txt}{col 55}F( 10,   215) = {res}    5.58
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 30.72273545{txt}{col 55}Centered R2   = {res}  0.1339
{txt}Total (uncentered) SS   = {res} 30.72273545{txt}{col 55}Uncentered R2 = {res}  0.1339
{txt}Residual SS             = {res} 26.60978821{txt}{col 55}Root MSE      = {res}  .05159

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 18}{c |}{col 30}    Robust
{col 1}       D4_prices{col 18}{c |} Coefficient{col 30}  std. err.{col 42}      t{col 50}   P>|t|{col 58}     [95% con{col 71}f. interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}D4_vapw_real {c |}{col 18}{res}{space 2}-.1539917{col 30}{space 2} .0324572{col 41}{space 1}   -4.74{col 50}{space 3}0.000{col 58}{space 4}-.2179668{col 71}{space 3}-.0900165
{txt}{space 4}d4lnmpit_adj {c |}{col 18}{res}{space 2} .2229216{col 30}{space 2} .0822616{col 41}{space 1}    2.71{col 50}{space 3}0.007{col 58}{space 4} .0607792{col 71}{space 3}  .385064
{txt}{space 9}d4IP_t4 {c |}{col 18}{res}{space 2} .3086654{col 30}{space 2} .0707868{col 41}{space 1}    4.36{col 50}{space 3}0.000{col 58}{space 4} .1691404{col 71}{space 3} .4481903
{txt}D4_avg_wwage_nsa {c |}{col 18}{res}{space 2} .0290684{col 30}{space 2} .0189534{col 41}{space 1}    1.53{col 50}{space 3}0.127{col 58}{space 4}-.0082899{col 71}{space 3} .0664268
{txt}{space 2}ln_emp_share_o {c |}{col 18}{res}{space 2} .0657027{col 30}{space 2} .0928134{col 41}{space 1}    0.71{col 50}{space 3}0.480{col 58}{space 4} -.117238{col 71}{space 3} .2486434
{txt}{space 2}ln_emp_share_m {c |}{col 18}{res}{space 2} .3797018{col 30}{space 2} .2108644{col 41}{space 1}    1.80{col 50}{space 3}0.073{col 58}{space 4}-.0359244{col 71}{space 3}  .795328
{txt}{space 1}ln_emp_share_hs {c |}{col 18}{res}{space 2}-.0200591{col 30}{space 2} .1581708{col 41}{space 1}   -0.13{col 50}{space 3}0.899{col 58}{space 4} -.331823{col 71}{space 3} .2917049
{txt}ln_emp_share_asc {c |}{col 18}{res}{space 2} .0906854{col 30}{space 2} .2392204{col 41}{space 1}    0.38{col 50}{space 3}0.705{col 58}{space 4}-.3808321{col 71}{space 3}  .562203
{txt}ln_emp_share_bsc {c |}{col 18}{res}{space 2} .0028743{col 30}{space 2} .1397706{col 41}{space 1}    0.02{col 50}{space 3}0.984{col 58}{space 4}-.2726219{col 71}{space 3} .2783705
{txt}ln_emp_share_fem {c |}{col 18}{res}{space 2} .0510528{col 30}{space 2} .0610853{col 41}{space 1}    0.84{col 50}{space 3}0.404{col 58}{space 4}-.0693498{col 71}{space 3} .1714555
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa
{col 23}ln_emp_share_o ln_emp_share_m ln_emp_share_hs
{col 23}ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      337{col 27}{space 1}      337{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}        0{col 39}{result}{space 1}       31{col 53}{text} {col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col1_cluster
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. * Time interactions
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa d4lnmpit_adj_21 d4IP_t4_21 D4_avg_wwage_nsa_21 ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2)
{res}{txt}Warning: time variable {res}date{txt} has {res}17{txt} gap(s) in relevant range
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on date
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  {res}date
{txt}  group variable (i): {res}naics_id

{txt}Number of clusters (date) = {col 33}{res}    31{txt}{col 55}Number of obs = {res}   10038
{txt}{col 55}F( 13,    30) = {res} 3347.58
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 30.72273545{txt}{col 55}Centered R2   = {res}  0.1513
{txt}Total (uncentered) SS   = {res} 30.72273545{txt}{col 55}Uncentered R2 = {res}  0.1513
{txt}Residual SS             = {res} 26.07585709{txt}{col 55}Root MSE      = {res}  .05188

{txt}{hline 20}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 21}{c |}{col 33}    Robust
{col 1}          D4_prices{col 21}{c |} Coefficient{col 33}  std. err.{col 45}      t{col 53}   P>|t|{col 61}     [95% con{col 74}f. interval]
{hline 20}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}D4_vapw_real {c |}{col 21}{res}{space 2}-.1503535{col 33}{space 2} .0246968{col 44}{space 1}   -6.09{col 53}{space 3}0.000{col 61}{space 4} -.200791{col 74}{space 3} -.099916
{txt}{space 7}d4lnmpit_adj {c |}{col 21}{res}{space 2} .1744122{col 33}{space 2} .0238309{col 44}{space 1}    7.32{col 53}{space 3}0.000{col 61}{space 4}  .125743{col 74}{space 3} .2230814
{txt}{space 12}d4IP_t4 {c |}{col 21}{res}{space 2} .2364813{col 33}{space 2} .0246306{col 44}{space 1}    9.60{col 53}{space 3}0.000{col 61}{space 4}  .186179{col 74}{space 3} .2867836
{txt}{space 3}D4_avg_wwage_nsa {c |}{col 21}{res}{space 2} .0105742{col 33}{space 2} .0127273{col 44}{space 1}    0.83{col 53}{space 3}0.413{col 61}{space 4}-.0154185{col 74}{space 3} .0365669
{txt}{space 4}d4lnmpit_adj_21 {c |}{col 21}{res}{space 2} .4771081{col 33}{space 2} .1567648{col 44}{space 1}    3.04{col 53}{space 3}0.005{col 61}{space 4} .1569516{col 74}{space 3} .7972647
{txt}{space 9}d4IP_t4_21 {c |}{col 21}{res}{space 2} .1582989{col 33}{space 2} .0263905{col 44}{space 1}    6.00{col 53}{space 3}0.000{col 61}{space 4} .1044024{col 74}{space 3} .2121954
{txt}D4_avg_wwage_nsa_21 {c |}{col 21}{res}{space 2} .1265115{col 33}{space 2} .0232534{col 44}{space 1}    5.44{col 53}{space 3}0.000{col 61}{space 4} .0790218{col 74}{space 3} .1740012
{txt}{space 5}ln_emp_share_o {c |}{col 21}{res}{space 2} .0777615{col 33}{space 2} .0579648{col 44}{space 1}    1.34{col 53}{space 3}0.190{col 61}{space 4}-.0406185{col 74}{space 3} .1961415
{txt}{space 5}ln_emp_share_m {c |}{col 21}{res}{space 2} .3872851{col 33}{space 2} .2209093{col 44}{space 1}    1.75{col 53}{space 3}0.090{col 61}{space 4} -.063872{col 74}{space 3} .8384421
{txt}{space 4}ln_emp_share_hs {c |}{col 21}{res}{space 2}-.0257619{col 33}{space 2} .1205534{col 44}{space 1}   -0.21{col 53}{space 3}0.832{col 61}{space 4}-.2719648{col 74}{space 3} .2204411
{txt}{space 3}ln_emp_share_asc {c |}{col 21}{res}{space 2} .1413592{col 33}{space 2} .1769314{col 44}{space 1}    0.80{col 53}{space 3}0.431{col 61}{space 4}-.2199828{col 74}{space 3} .5027013
{txt}{space 3}ln_emp_share_bsc {c |}{col 21}{res}{space 2}-.0275596{col 33}{space 2} .1003836{col 44}{space 1}   -0.27{col 53}{space 3}0.786{col 61}{space 4}-.2325704{col 74}{space 3} .1774511
{txt}{space 3}ln_emp_share_fem {c |}{col 21}{res}{space 2} .0450062{col 33}{space 2} .0568186{col 44}{space 1}    0.79{col 53}{space 3}0.435{col 61}{space 4}-.0710329{col 74}{space 3} .1610454
{txt}{hline 20}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa
{col 23}d4lnmpit_adj_21 d4IP_t4_21 D4_avg_wwage_nsa_21
{col 23}ln_emp_share_o ln_emp_share_m ln_emp_share_hs
{col 23}ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      337{col 27}{space 1}        0{col 39}{result}{space 1}      337{col 53}{text} {col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}       31{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col2
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. * Time interactions clustered
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa d4lnmpit_adj_21 d4IP_t4_21 D4_avg_wwage_nsa_21 ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) robust cluster(bea_group)
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on bea_group

Number of clusters (bea_group) = {col 33}{res}   216{txt}{col 55}Number of obs = {res}   10038
{txt}{col 55}F( 13,   215) = {res}    4.82
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 30.72273545{txt}{col 55}Centered R2   = {res}  0.1513
{txt}Total (uncentered) SS   = {res} 30.72273545{txt}{col 55}Uncentered R2 = {res}  0.1513
{txt}Residual SS             = {res} 26.07585709{txt}{col 55}Root MSE      = {res}  .05108

{txt}{hline 20}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 21}{c |}{col 33}    Robust
{col 1}          D4_prices{col 21}{c |} Coefficient{col 33}  std. err.{col 45}      t{col 53}   P>|t|{col 61}     [95% con{col 74}f. interval]
{hline 20}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}D4_vapw_real {c |}{col 21}{res}{space 2}-.1503535{col 33}{space 2} .0322953{col 44}{space 1}   -4.66{col 53}{space 3}0.000{col 61}{space 4}-.2140094{col 74}{space 3}-.0866976
{txt}{space 7}d4lnmpit_adj {c |}{col 21}{res}{space 2} .1744122{col 33}{space 2} .0695039{col 44}{space 1}    2.51{col 53}{space 3}0.013{col 61}{space 4}  .037416{col 74}{space 3} .3114084
{txt}{space 12}d4IP_t4 {c |}{col 21}{res}{space 2} .2364813{col 33}{space 2} .0612262{col 44}{space 1}    3.86{col 53}{space 3}0.000{col 61}{space 4} .1158008{col 74}{space 3} .3571618
{txt}{space 3}D4_avg_wwage_nsa {c |}{col 21}{res}{space 2} .0105742{col 33}{space 2} .0153437{col 44}{space 1}    0.69{col 53}{space 3}0.491{col 61}{space 4}-.0196691{col 74}{space 3} .0408175
{txt}{space 4}d4lnmpit_adj_21 {c |}{col 21}{res}{space 2} .4771081{col 33}{space 2} .1589173{col 44}{space 1}    3.00{col 53}{space 3}0.003{col 61}{space 4} .1638727{col 74}{space 3} .7903436
{txt}{space 9}d4IP_t4_21 {c |}{col 21}{res}{space 2} .1582989{col 33}{space 2} .0527049{col 44}{space 1}    3.00{col 53}{space 3}0.003{col 61}{space 4} .0544145{col 74}{space 3} .2621833
{txt}D4_avg_wwage_nsa_21 {c |}{col 21}{res}{space 2} .1265115{col 33}{space 2} .0775557{col 44}{space 1}    1.63{col 53}{space 3}0.104{col 61}{space 4}-.0263554{col 74}{space 3} .2793783
{txt}{space 5}ln_emp_share_o {c |}{col 21}{res}{space 2} .0777615{col 33}{space 2} .0935412{col 44}{space 1}    0.83{col 53}{space 3}0.407{col 61}{space 4}-.1066137{col 74}{space 3} .2621367
{txt}{space 5}ln_emp_share_m {c |}{col 21}{res}{space 2} .3872851{col 33}{space 2} .2128636{col 44}{space 1}    1.82{col 53}{space 3}0.070{col 61}{space 4}-.0322818{col 74}{space 3} .8068519
{txt}{space 4}ln_emp_share_hs {c |}{col 21}{res}{space 2}-.0257619{col 33}{space 2} .1566007{col 44}{space 1}   -0.16{col 53}{space 3}0.869{col 61}{space 4}-.3344312{col 74}{space 3} .2829074
{txt}{space 3}ln_emp_share_asc {c |}{col 21}{res}{space 2} .1413592{col 33}{space 2} .2277935{col 44}{space 1}    0.62{col 53}{space 3}0.536{col 61}{space 4}-.3076353{col 74}{space 3} .5903538
{txt}{space 3}ln_emp_share_bsc {c |}{col 21}{res}{space 2}-.0275596{col 33}{space 2} .1349089{col 44}{space 1}   -0.20{col 53}{space 3}0.838{col 61}{space 4} -.293473{col 74}{space 3} .2383537
{txt}{space 3}ln_emp_share_fem {c |}{col 21}{res}{space 2} .0450062{col 33}{space 2} .0597099{col 44}{space 1}    0.75{col 53}{space 3}0.452{col 61}{space 4}-.0726856{col 74}{space 3}  .162698
{txt}{hline 20}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa
{col 23}d4lnmpit_adj_21 d4IP_t4_21 D4_avg_wwage_nsa_21
{col 23}ln_emp_share_o ln_emp_share_m ln_emp_share_hs
{col 23}ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      337{col 27}{space 1}      337{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}        0{col 39}{result}{space 1}       31{col 53}{text} {col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col2_cluster
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. * Additional interactions
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa d4lnmpit_adj_21 d4IP_t4_21 D4_avg_wwage_nsa_21 D4_wwage_IP D4_wwage_IP_21 ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2)
{res}{txt}Warning: time variable {res}date{txt} has {res}17{txt} gap(s) in relevant range
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on date
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  {res}date
{txt}  group variable (i): {res}naics_id

{txt}Number of clusters (date) = {col 33}{res}    31{txt}{col 55}Number of obs = {res}   10038
{txt}{col 55}F( 15,    30) = {res} 3613.88
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 30.72273545{txt}{col 55}Centered R2   = {res}  0.1541
{txt}Total (uncentered) SS   = {res} 30.72273545{txt}{col 55}Uncentered R2 = {res}  0.1541
{txt}Residual SS             = {res} 25.98793544{txt}{col 55}Root MSE      = {res}   .0518

{txt}{hline 20}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 21}{c |}{col 33}    Robust
{col 1}          D4_prices{col 21}{c |} Coefficient{col 33}  std. err.{col 45}      t{col 53}   P>|t|{col 61}     [95% con{col 74}f. interval]
{hline 20}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}D4_vapw_real {c |}{col 21}{res}{space 2}-.1492406{col 33}{space 2} .0238823{col 44}{space 1}   -6.25{col 53}{space 3}0.000{col 61}{space 4}-.1980147{col 74}{space 3}-.1004665
{txt}{space 7}d4lnmpit_adj {c |}{col 21}{res}{space 2} .1743857{col 33}{space 2} .0238005{col 44}{space 1}    7.33{col 53}{space 3}0.000{col 61}{space 4} .1257786{col 74}{space 3} .2229927
{txt}{space 12}d4IP_t4 {c |}{col 21}{res}{space 2}  .244975{col 33}{space 2} .0262331{col 44}{space 1}    9.34{col 53}{space 3}0.000{col 61}{space 4} .1913998{col 74}{space 3} .2985502
{txt}{space 3}D4_avg_wwage_nsa {c |}{col 21}{res}{space 2} .0081476{col 33}{space 2} .0109619{col 44}{space 1}    0.74{col 53}{space 3}0.463{col 61}{space 4}-.0142397{col 74}{space 3} .0305348
{txt}{space 4}d4lnmpit_adj_21 {c |}{col 21}{res}{space 2} .4985584{col 33}{space 2} .1634443{col 44}{space 1}    3.05{col 53}{space 3}0.005{col 61}{space 4} .1647606{col 74}{space 3} .8323561
{txt}{space 9}d4IP_t4_21 {c |}{col 21}{res}{space 2} .0462715{col 33}{space 2} .0344861{col 44}{space 1}    1.34{col 53}{space 3}0.190{col 61}{space 4}-.0241586{col 74}{space 3} .1167015
{txt}D4_avg_wwage_nsa_21 {c |}{col 21}{res}{space 2}-.0756304{col 33}{space 2} .0461596{col 44}{space 1}   -1.64{col 53}{space 3}0.112{col 61}{space 4}-.1699009{col 74}{space 3} .0186401
{txt}{space 8}D4_wwage_IP {c |}{col 21}{res}{space 2}-.2867871{col 33}{space 2} .2365065{col 44}{space 1}   -1.21{col 53}{space 3}0.235{col 61}{space 4}-.7697979{col 74}{space 3} .1962237
{txt}{space 5}D4_wwage_IP_21 {c |}{col 21}{res}{space 2} 1.862866{col 33}{space 2} .2869236{col 44}{space 1}    6.49{col 53}{space 3}0.000{col 61}{space 4}  1.27689{col 74}{space 3} 2.448842
{txt}{space 5}ln_emp_share_o {c |}{col 21}{res}{space 2} .0796956{col 33}{space 2} .0604453{col 44}{space 1}    1.32{col 53}{space 3}0.197{col 61}{space 4}-.0437501{col 74}{space 3} .2031412
{txt}{space 5}ln_emp_share_m {c |}{col 21}{res}{space 2} .3926858{col 33}{space 2} .2257683{col 44}{space 1}    1.74{col 53}{space 3}0.092{col 61}{space 4}-.0683946{col 74}{space 3} .8537662
{txt}{space 4}ln_emp_share_hs {c |}{col 21}{res}{space 2}-.0282957{col 33}{space 2} .1216143{col 44}{space 1}   -0.23{col 53}{space 3}0.818{col 61}{space 4}-.2766652{col 74}{space 3} .2200737
{txt}{space 3}ln_emp_share_asc {c |}{col 21}{res}{space 2} .1411683{col 33}{space 2} .1784969{col 44}{space 1}    0.79{col 53}{space 3}0.435{col 61}{space 4}-.2233709{col 74}{space 3} .5057075
{txt}{space 3}ln_emp_share_bsc {c |}{col 21}{res}{space 2}-.0315505{col 33}{space 2} .1023165{col 44}{space 1}   -0.31{col 53}{space 3}0.760{col 61}{space 4}-.2405085{col 74}{space 3} .1774076
{txt}{space 3}ln_emp_share_fem {c |}{col 21}{res}{space 2} .0424945{col 33}{space 2} .0558724{col 44}{space 1}    0.76{col 53}{space 3}0.453{col 61}{space 4}-.0716122{col 74}{space 3} .1566011
{txt}{hline 20}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa
{col 23}d4lnmpit_adj_21 d4IP_t4_21 D4_avg_wwage_nsa_21 D4_wwage_IP
{col 23}D4_wwage_IP_21 ln_emp_share_o ln_emp_share_m
{col 23}ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc
{col 23}ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      337{col 27}{space 1}        0{col 39}{result}{space 1}      337{col 53}{text} {col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}       31{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col3
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. * Additional interactions clustered
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa d4lnmpit_adj_21 d4IP_t4_21 D4_avg_wwage_nsa_21 D4_wwage_IP D4_wwage_IP_21 ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) robust cluster(bea_group)
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on bea_group

Number of clusters (bea_group) = {col 33}{res}   216{txt}{col 55}Number of obs = {res}   10038
{txt}{col 55}F( 15,   215) = {res}    5.58
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 30.72273545{txt}{col 55}Centered R2   = {res}  0.1541
{txt}Total (uncentered) SS   = {res} 30.72273545{txt}{col 55}Uncentered R2 = {res}  0.1541
{txt}Residual SS             = {res} 25.98793544{txt}{col 55}Root MSE      = {res}    .051

{txt}{hline 20}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 21}{c |}{col 33}    Robust
{col 1}          D4_prices{col 21}{c |} Coefficient{col 33}  std. err.{col 45}      t{col 53}   P>|t|{col 61}     [95% con{col 74}f. interval]
{hline 20}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}D4_vapw_real {c |}{col 21}{res}{space 2}-.1492406{col 33}{space 2}  .031918{col 44}{space 1}   -4.68{col 53}{space 3}0.000{col 61}{space 4}-.2121529{col 74}{space 3}-.0863283
{txt}{space 7}d4lnmpit_adj {c |}{col 21}{res}{space 2} .1743857{col 33}{space 2} .0696135{col 44}{space 1}    2.51{col 53}{space 3}0.013{col 61}{space 4} .0371734{col 74}{space 3} .3115979
{txt}{space 12}d4IP_t4 {c |}{col 21}{res}{space 2}  .244975{col 33}{space 2} .0629876{col 44}{space 1}    3.89{col 53}{space 3}0.000{col 61}{space 4} .1208228{col 74}{space 3} .3691273
{txt}{space 3}D4_avg_wwage_nsa {c |}{col 21}{res}{space 2} .0081476{col 33}{space 2} .0148587{col 44}{space 1}    0.55{col 53}{space 3}0.584{col 61}{space 4}-.0211398{col 74}{space 3} .0374349
{txt}{space 4}d4lnmpit_adj_21 {c |}{col 21}{res}{space 2} .4985584{col 33}{space 2}  .158076{col 44}{space 1}    3.15{col 53}{space 3}0.002{col 61}{space 4} .1869811{col 74}{space 3} .8101356
{txt}{space 9}d4IP_t4_21 {c |}{col 21}{res}{space 2} .0462715{col 33}{space 2} .0642787{col 44}{space 1}    0.72{col 53}{space 3}0.472{col 61}{space 4}-.0804256{col 74}{space 3} .1729685
{txt}D4_avg_wwage_nsa_21 {c |}{col 21}{res}{space 2}-.0756304{col 33}{space 2} .1147656{col 44}{space 1}   -0.66{col 53}{space 3}0.511{col 61}{space 4}-.3018401{col 74}{space 3} .1505793
{txt}{space 8}D4_wwage_IP {c |}{col 21}{res}{space 2}-.2867871{col 33}{space 2} .2749753{col 44}{space 1}   -1.04{col 53}{space 3}0.298{col 61}{space 4}-.8287796{col 74}{space 3} .2552054
{txt}{space 5}D4_wwage_IP_21 {c |}{col 21}{res}{space 2} 1.862866{col 33}{space 2} 1.026015{col 44}{space 1}    1.82{col 53}{space 3}0.071{col 61}{space 4}-.1594695{col 74}{space 3} 3.885201
{txt}{space 5}ln_emp_share_o {c |}{col 21}{res}{space 2} .0796956{col 33}{space 2} .0933251{col 44}{space 1}    0.85{col 53}{space 3}0.394{col 61}{space 4}-.1042537{col 74}{space 3} .2636448
{txt}{space 5}ln_emp_share_m {c |}{col 21}{res}{space 2} .3926858{col 33}{space 2} .2123698{col 44}{space 1}    1.85{col 53}{space 3}0.066{col 61}{space 4}-.0259077{col 74}{space 3} .8112792
{txt}{space 4}ln_emp_share_hs {c |}{col 21}{res}{space 2}-.0282957{col 33}{space 2} .1563742{col 44}{space 1}   -0.18{col 53}{space 3}0.857{col 61}{space 4}-.3365185{col 74}{space 3} .2799271
{txt}{space 3}ln_emp_share_asc {c |}{col 21}{res}{space 2} .1411683{col 33}{space 2} .2301246{col 44}{space 1}    0.61{col 53}{space 3}0.540{col 61}{space 4}-.3124209{col 74}{space 3} .5947575
{txt}{space 3}ln_emp_share_bsc {c |}{col 21}{res}{space 2}-.0315505{col 33}{space 2} .1351137{col 44}{space 1}   -0.23{col 53}{space 3}0.816{col 61}{space 4}-.2978675{col 74}{space 3} .2347666
{txt}{space 3}ln_emp_share_fem {c |}{col 21}{res}{space 2} .0424945{col 33}{space 2}  .059159{col 44}{space 1}    0.72{col 53}{space 3}0.473{col 61}{space 4}-.0741113{col 74}{space 3} .1591002
{txt}{hline 20}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4lnmpit_adj d4IP_t4 D4_avg_wwage_nsa
{col 23}d4lnmpit_adj_21 d4IP_t4_21 D4_avg_wwage_nsa_21 D4_wwage_IP
{col 23}D4_wwage_IP_21 ln_emp_share_o ln_emp_share_m
{col 23}ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc
{col 23}ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      337{col 27}{space 1}      337{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}        0{col 39}{result}{space 1}       31{col 53}{text} {col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col3_cluster
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. ***** IV traded
. 
. /*
> * With input costs, all inputs
> ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj (d4IP_t4 = d4IP_m4) D4_avg_wwage_nsa ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2) savefirst
> 
> eststo tab1col4
> estadd local time_fe "Yes" , replace
> estadd local ind_fe  "Yes" , replace
> estadd local composition  "Yes" , replace
> 
> estimates restore _ivreg2_d4IP_t4
> eststo firststagecol1
> */
. 
. * Time interactions
. ivreghdfe D4_prices D4_vapw_real d4lnmpit_adj (d4IP_t4 d4IP_t4_21= d4IP_m4 d4IP_m4_21) D4_avg_wwage_nsa d4lnmpit_adj_21  D4_avg_wwage_nsa_21 ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2) savefirst
{res}{txt}Warning: time variable {res}date{txt} has {res}17{txt} gap(s) in relevant range
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}Stored estimation results
{hline 25}
{hline 13}{c TT}{hline 67}
             {c |}           Dependent  Number of        
        Name {c |} Command    variable     param.  Title 
{hline 13}{c +}{hline 67}
{ralign 12:{stata estimates replay _ivreg2_d4IP_t4:_ivreg2_d4~4}}{col 14}{txt:{c |}}{res}{col 16}{lalign 10:ivreg2}{col 26}{ralign 9:d4IP_t4}{col 42}  13{col 48}{it:First-stage regression: d4IP_t4}
{txt}{ralign 12:{stata estimates replay _ivreg2_d4IP_t4_21:_ivreg2_d~21}}{col 14}{txt:{c |}}{res}{col 16}{lalign 10:ivreg2}{col 26}{ralign 9:d4IP_t4_21}{col 42}  13{col 48}{it:First-stage regression: d4IP_t4_21}
{txt}{hline 13}{c BT}{hline 67}

IV (2SLS) estimation
{hline 20}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on date
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  {res}date
{txt}  group variable (i): {res}naics_id

{txt}Number of clusters (date) = {col 33}{res}    31{txt}{col 55}Number of obs = {res}   10038
{txt}{col 55}F( 13,    30) = {res}  434.12
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 30.72273545{txt}{col 55}Centered R2   = {res}  0.1484
{txt}Total (uncentered) SS   = {res} 30.72273545{txt}{col 55}Uncentered R2 = {res}  0.1484
{txt}Residual SS             = {res} 26.16239768{txt}{col 55}Root MSE      = {res}  .05197

{txt}{hline 20}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 21}{c |}{col 33}    Robust
{col 1}          D4_prices{col 21}{c |} Coefficient{col 33}  std. err.{col 45}      t{col 53}   P>|t|{col 61}     [95% con{col 74}f. interval]
{hline 20}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 12}d4IP_t4 {c |}{col 21}{res}{space 2} .2561496{col 33}{space 2} .0370348{col 44}{space 1}    6.92{col 53}{space 3}0.000{col 61}{space 4} .1805144{col 74}{space 3} .3317848
{txt}{space 9}d4IP_t4_21 {c |}{col 21}{res}{space 2} .2433612{col 33}{space 2} .0576222{col 44}{space 1}    4.22{col 53}{space 3}0.000{col 61}{space 4}  .125681{col 74}{space 3} .3610414
{txt}{space 7}D4_vapw_real {c |}{col 21}{res}{space 2}-.1440772{col 33}{space 2} .0226934{col 44}{space 1}   -6.35{col 53}{space 3}0.000{col 61}{space 4}-.1904233{col 74}{space 3}-.0977312
{txt}{space 7}d4lnmpit_adj {c |}{col 21}{res}{space 2} .1722403{col 33}{space 2} .0242738{col 44}{space 1}    7.10{col 53}{space 3}0.000{col 61}{space 4} .1226666{col 74}{space 3} .2218141
{txt}{space 3}D4_avg_wwage_nsa {c |}{col 21}{res}{space 2} .0096899{col 33}{space 2} .0128249{col 44}{space 1}    0.76{col 53}{space 3}0.456{col 61}{space 4} -.016502{col 74}{space 3} .0358817
{txt}{space 4}d4lnmpit_adj_21 {c |}{col 21}{res}{space 2} .4493721{col 33}{space 2} .1510547{col 44}{space 1}    2.97{col 53}{space 3}0.006{col 61}{space 4} .1408773{col 74}{space 3} .7578669
{txt}D4_avg_wwage_nsa_21 {c |}{col 21}{res}{space 2} .1255457{col 33}{space 2} .0221673{col 44}{space 1}    5.66{col 53}{space 3}0.000{col 61}{space 4} .0802742{col 74}{space 3} .1708173
{txt}{space 5}ln_emp_share_o {c |}{col 21}{res}{space 2} .0820781{col 33}{space 2} .0617864{col 44}{space 1}    1.33{col 53}{space 3}0.194{col 61}{space 4}-.0441066{col 74}{space 3} .2082628
{txt}{space 5}ln_emp_share_m {c |}{col 21}{res}{space 2} .3833117{col 33}{space 2} .2205422{col 44}{space 1}    1.74{col 53}{space 3}0.092{col 61}{space 4}-.0670955{col 74}{space 3}  .833719
{txt}{space 4}ln_emp_share_hs {c |}{col 21}{res}{space 2} .0006818{col 33}{space 2} .1164488{col 44}{space 1}    0.01{col 53}{space 3}0.995{col 61}{space 4}-.2371384{col 74}{space 3} .2385021
{txt}{space 3}ln_emp_share_asc {c |}{col 21}{res}{space 2} .1107827{col 33}{space 2} .1729821{col 44}{space 1}    0.64{col 53}{space 3}0.527{col 61}{space 4}-.2424939{col 74}{space 3} .4640593
{txt}{space 3}ln_emp_share_bsc {c |}{col 21}{res}{space 2}-.0190977{col 33}{space 2} .0988832{col 44}{space 1}   -0.19{col 53}{space 3}0.848{col 61}{space 4}-.2210441{col 74}{space 3} .1828486
{txt}{space 3}ln_emp_share_fem {c |}{col 21}{res}{space 2} .0310811{col 33}{space 2} .0502247{col 44}{space 1}    0.62{col 53}{space 3}0.541{col 61}{space 4}-.0714914{col 74}{space 3} .1336535
{txt}{hline 20}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{help ivreg2##idtest:Underidentification test} (Kleibergen-Paap rk LM statistic):{res}{col 71}  11.539
{txt}{col 52}Chi-sq({res}1{txt}) P-val =  {res}{col 73}0.0007
{txt}{hline 78}
{help ivreg2##widtest:Weak identification test} (Cragg-Donald Wald F statistic):{res}{col 71}6703.686
{txt}                         (Kleibergen-Paap rk Wald F statistic):{res}{col 71} 110.321
{txt}Stock-Yogo weak ID test critical values:{res}{txt}{col 42}10% maximal IV size{res}{col 73}  7.03
{txt}{col 42}15% maximal IV size{res}{col 73}  4.58
{txt}{col 42}20% maximal IV size{res}{col 73}  3.95
{txt}{col 42}25% maximal IV size{res}{col 73}  3.63
{txt}Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for Cragg-Donald F statistic and i.i.d. errors.
{hline 78}
{help ivreg2##overidtests:Hansen J statistic} (overidentification test of all instruments):{res}{col 71}   0.000
{txt}{col 50}(equation exactly identified)
{hline 78}
Instrumented:{col 23}d4IP_t4 d4IP_t4_21
Included instruments:{col 23}D4_vapw_real d4lnmpit_adj D4_avg_wwage_nsa
{col 23}d4lnmpit_adj_21 D4_avg_wwage_nsa_21 ln_emp_share_o
{col 23}ln_emp_share_m ln_emp_share_hs ln_emp_share_asc
{col 23}ln_emp_share_bsc ln_emp_share_fem
Excluded instruments:{col 23}d4IP_m4 d4IP_m4_21
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      337{col 27}{space 1}        0{col 39}{result}{space 1}      337{col 53}{text} {col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}       31{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col5
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. estimates restore _ivreg2_d4IP_t4
{txt}(results {stata estimates replay _ivreg2_d4IP_t4:_ivreg2_d4IP_t4} are active now)

{com}. eststo tradedcol1
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. estimates restore _ivreg2_d4IP_t4_21
{txt}(results {stata estimates replay _ivreg2_d4IP_t4_21:_ivreg2_d4IP_t4_21} are active now)

{com}. eststo tradedcol2
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. ***** OLS nontraded
. 
. * With input costs, all inputs
. ivreghdfe D4_prices D4_vapw_real d4IP_t4 D4_avg_wwage_nsa ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group==0 & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2)
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on date
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  {res}date
{txt}  group variable (i): {res}naics_id

{txt}Number of clusters (date) = {col 33}{res}    31{txt}{col 55}Number of obs = {res}    5242
{txt}{col 55}F(  9,    30) = {res}   18.68
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 10.86907302{txt}{col 55}Centered R2   = {res}  0.0461
{txt}Total (uncentered) SS   = {res} 10.86907302{txt}{col 55}Uncentered R2 = {res}  0.0461
{txt}Residual SS             = {res} 10.36820627{txt}{col 55}Root MSE      = {res}   .0453

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 18}{c |}{col 30}    Robust
{col 1}       D4_prices{col 18}{c |} Coefficient{col 30}  std. err.{col 42}      t{col 50}   P>|t|{col 58}     [95% con{col 71}f. interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}D4_vapw_real {c |}{col 18}{res}{space 2}-.0302434{col 30}{space 2} .0188567{col 41}{space 1}   -1.60{col 50}{space 3}0.119{col 58}{space 4}-.0687539{col 71}{space 3} .0082671
{txt}{space 9}d4IP_t4 {c |}{col 18}{res}{space 2} .0951156{col 30}{space 2} .0108914{col 41}{space 1}    8.73{col 50}{space 3}0.000{col 58}{space 4} .0728724{col 71}{space 3} .1173589
{txt}D4_avg_wwage_nsa {c |}{col 18}{res}{space 2} .1078051{col 30}{space 2} .0338112{col 41}{space 1}    3.19{col 50}{space 3}0.003{col 58}{space 4} .0387535{col 71}{space 3} .1768567
{txt}{space 2}ln_emp_share_o {c |}{col 18}{res}{space 2}-.0121614{col 30}{space 2} .0237847{col 41}{space 1}   -0.51{col 50}{space 3}0.613{col 58}{space 4}-.0607363{col 71}{space 3} .0364135
{txt}{space 2}ln_emp_share_m {c |}{col 18}{res}{space 2}-.0983017{col 30}{space 2} .0449636{col 41}{space 1}   -2.19{col 50}{space 3}0.037{col 58}{space 4}-.1901296{col 71}{space 3}-.0064738
{txt}{space 1}ln_emp_share_hs {c |}{col 18}{res}{space 2}-.3360118{col 30}{space 2} .1561047{col 41}{space 1}   -2.15{col 50}{space 3}0.040{col 58}{space 4}-.6548202{col 71}{space 3}-.0172035
{txt}ln_emp_share_asc {c |}{col 18}{res}{space 2}-.0125735{col 30}{space 2} .2228776{col 41}{space 1}   -0.06{col 50}{space 3}0.955{col 58}{space 4}-.4677502{col 71}{space 3} .4426032
{txt}ln_emp_share_bsc {c |}{col 18}{res}{space 2}-.2295256{col 30}{space 2} .1193245{col 41}{space 1}   -1.92{col 50}{space 3}0.064{col 58}{space 4}-.4732187{col 71}{space 3} .0141675
{txt}ln_emp_share_fem {c |}{col 18}{res}{space 2}-.0029994{col 30}{space 2} .0332672{col 41}{space 1}   -0.09{col 50}{space 3}0.929{col 58}{space 4}-.0709401{col 71}{space 3} .0649413
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4IP_t4 D4_avg_wwage_nsa ln_emp_share_o
{col 23}ln_emp_share_m ln_emp_share_hs ln_emp_share_asc
{col 23}ln_emp_share_bsc ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      180{col 27}{space 1}        0{col 39}{result}{space 1}      180{col 53}{text} {col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}       31{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col1_serv
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. * With input costs, all inputs clustered
. ivreghdfe D4_prices D4_vapw_real d4IP_t4 D4_avg_wwage_nsa ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group==0 & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) robust cluster(bea_group)
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on bea_group

Number of clusters (bea_group) = {col 33}{res}    88{txt}{col 55}Number of obs = {res}    5242
{txt}{col 55}F(  9,    87) = {res}    4.25
{txt}{col 55}Prob > F      = {res}  0.0001
{txt}Total (centered) SS     = {res} 10.86907302{txt}{col 55}Centered R2   = {res}  0.0461
{txt}Total (uncentered) SS   = {res} 10.86907302{txt}{col 55}Uncentered R2 = {res}  0.0461
{txt}Residual SS             = {res} 10.36820627{txt}{col 55}Root MSE      = {res}  .04464

{txt}{hline 17}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 18}{c |}{col 30}    Robust
{col 1}       D4_prices{col 18}{c |} Coefficient{col 30}  std. err.{col 42}      t{col 50}   P>|t|{col 58}     [95% con{col 71}f. interval]
{hline 17}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}D4_vapw_real {c |}{col 18}{res}{space 2}-.0302434{col 30}{space 2}  .019785{col 41}{space 1}   -1.53{col 50}{space 3}0.130{col 58}{space 4}-.0695682{col 71}{space 3} .0090813
{txt}{space 9}d4IP_t4 {c |}{col 18}{res}{space 2} .0951156{col 30}{space 2} .0232342{col 41}{space 1}    4.09{col 50}{space 3}0.000{col 58}{space 4} .0489352{col 71}{space 3}  .141296
{txt}D4_avg_wwage_nsa {c |}{col 18}{res}{space 2} .1078051{col 30}{space 2} .0484607{col 41}{space 1}    2.22{col 50}{space 3}0.029{col 58}{space 4} .0114842{col 71}{space 3}  .204126
{txt}{space 2}ln_emp_share_o {c |}{col 18}{res}{space 2}-.0121614{col 30}{space 2}  .041679{col 41}{space 1}   -0.29{col 50}{space 3}0.771{col 58}{space 4}-.0950028{col 71}{space 3}   .07068
{txt}{space 2}ln_emp_share_m {c |}{col 18}{res}{space 2}-.0983017{col 30}{space 2} .0930041{col 41}{space 1}   -1.06{col 50}{space 3}0.293{col 58}{space 4}-.2831574{col 71}{space 3} .0865541
{txt}{space 1}ln_emp_share_hs {c |}{col 18}{res}{space 2}-.3360118{col 30}{space 2} .1339982{col 41}{space 1}   -2.51{col 50}{space 3}0.014{col 58}{space 4}-.6023478{col 71}{space 3}-.0696759
{txt}ln_emp_share_asc {c |}{col 18}{res}{space 2}-.0125735{col 30}{space 2} .1837132{col 41}{space 1}   -0.07{col 50}{space 3}0.946{col 58}{space 4}-.3777233{col 71}{space 3} .3525763
{txt}ln_emp_share_bsc {c |}{col 18}{res}{space 2}-.2295256{col 30}{space 2} .1181773{col 41}{space 1}   -1.94{col 50}{space 3}0.055{col 58}{space 4}-.4644158{col 71}{space 3} .0053646
{txt}ln_emp_share_fem {c |}{col 18}{res}{space 2}-.0029994{col 30}{space 2} .0543324{col 41}{space 1}   -0.06{col 50}{space 3}0.956{col 58}{space 4} -.110991{col 71}{space 3} .1049922
{txt}{hline 17}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4IP_t4 D4_avg_wwage_nsa ln_emp_share_o
{col 23}ln_emp_share_m ln_emp_share_hs ln_emp_share_asc
{col 23}ln_emp_share_bsc ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      180{col 27}{space 1}      180{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}        0{col 39}{result}{space 1}       31{col 53}{text} {col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col1_serv_cluster
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. 
. 
. * Time interactions
. ivreghdfe D4_prices D4_vapw_real d4IP_t4 D4_avg_wwage_nsa d4IP_t4_21 D4_avg_wwage_nsa_21 ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group==0 & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2)
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on date
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  {res}date
{txt}  group variable (i): {res}naics_id

{txt}Number of clusters (date) = {col 33}{res}    31{txt}{col 55}Number of obs = {res}    5242
{txt}{col 55}F( 11,    30) = {res}  114.34
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 10.86907302{txt}{col 55}Centered R2   = {res}  0.0504
{txt}Total (uncentered) SS   = {res} 10.86907302{txt}{col 55}Uncentered R2 = {res}  0.0504
{txt}Residual SS             = {res} 10.32073657{txt}{col 55}Root MSE      = {res}   .0452

{txt}{hline 20}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 21}{c |}{col 33}    Robust
{col 1}          D4_prices{col 21}{c |} Coefficient{col 33}  std. err.{col 45}      t{col 53}   P>|t|{col 61}     [95% con{col 74}f. interval]
{hline 20}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}D4_vapw_real {c |}{col 21}{res}{space 2}-.0295482{col 33}{space 2} .0183351{col 44}{space 1}   -1.61{col 53}{space 3}0.118{col 61}{space 4}-.0669934{col 74}{space 3} .0078971
{txt}{space 12}d4IP_t4 {c |}{col 21}{res}{space 2} .0940554{col 33}{space 2} .0157525{col 44}{space 1}    5.97{col 53}{space 3}0.000{col 61}{space 4} .0618846{col 74}{space 3} .1262262
{txt}{space 3}D4_avg_wwage_nsa {c |}{col 21}{res}{space 2}  .068743{col 33}{space 2} .0293501{col 44}{space 1}    2.34{col 53}{space 3}0.026{col 61}{space 4} .0088022{col 74}{space 3} .1286839
{txt}{space 9}d4IP_t4_21 {c |}{col 21}{res}{space 2} .0038854{col 33}{space 2} .0255312{col 44}{space 1}    0.15{col 53}{space 3}0.880{col 61}{space 4}-.0482562{col 74}{space 3} .0560271
{txt}D4_avg_wwage_nsa_21 {c |}{col 21}{res}{space 2} .1740943{col 33}{space 2} .0442278{col 44}{space 1}    3.94{col 53}{space 3}0.000{col 61}{space 4} .0837691{col 74}{space 3} .2644195
{txt}{space 5}ln_emp_share_o {c |}{col 21}{res}{space 2} .0011588{col 33}{space 2} .0286118{col 44}{space 1}    0.04{col 53}{space 3}0.968{col 61}{space 4}-.0572743{col 74}{space 3} .0595918
{txt}{space 5}ln_emp_share_m {c |}{col 21}{res}{space 2}-.0862257{col 33}{space 2} .0504877{col 44}{space 1}   -1.71{col 53}{space 3}0.098{col 61}{space 4}-.1893353{col 74}{space 3} .0168839
{txt}{space 4}ln_emp_share_hs {c |}{col 21}{res}{space 2}-.3488582{col 33}{space 2} .1579725{col 44}{space 1}   -2.21{col 53}{space 3}0.035{col 61}{space 4}-.6714811{col 74}{space 3}-.0262353
{txt}{space 3}ln_emp_share_asc {c |}{col 21}{res}{space 2}-.0186971{col 33}{space 2} .2204854{col 44}{space 1}   -0.08{col 53}{space 3}0.933{col 61}{space 4}-.4689883{col 74}{space 3} .4315941
{txt}{space 3}ln_emp_share_bsc {c |}{col 21}{res}{space 2}-.2404065{col 33}{space 2}  .122256{col 44}{space 1}   -1.97{col 53}{space 3}0.059{col 61}{space 4}-.4900865{col 74}{space 3} .0092736
{txt}{space 3}ln_emp_share_fem {c |}{col 21}{res}{space 2}-.0050063{col 33}{space 2} .0345651{col 44}{space 1}   -0.14{col 53}{space 3}0.886{col 61}{space 4}-.0755976{col 74}{space 3}  .065585
{txt}{hline 20}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4IP_t4 D4_avg_wwage_nsa d4IP_t4_21
{col 23}D4_avg_wwage_nsa_21 ln_emp_share_o ln_emp_share_m
{col 23}ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc
{col 23}ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      180{col 27}{space 1}        0{col 39}{result}{space 1}      180{col 53}{text} {col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}       31{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col2_serv
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. * Time interactions clustered
. ivreghdfe D4_prices D4_vapw_real d4IP_t4 D4_avg_wwage_nsa d4IP_t4_21 D4_avg_wwage_nsa_21 ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group==0 & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) robust cluster(bea_group)
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}OLS estimation
{hline 14}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on bea_group

Number of clusters (bea_group) = {col 33}{res}    88{txt}{col 55}Number of obs = {res}    5242
{txt}{col 55}F( 11,    87) = {res}    6.47
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 10.86907302{txt}{col 55}Centered R2   = {res}  0.0504
{txt}Total (uncentered) SS   = {res} 10.86907302{txt}{col 55}Uncentered R2 = {res}  0.0504
{txt}Residual SS             = {res} 10.32073657{txt}{col 55}Root MSE      = {res}  .04455

{txt}{hline 20}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 21}{c |}{col 33}    Robust
{col 1}          D4_prices{col 21}{c |} Coefficient{col 33}  std. err.{col 45}      t{col 53}   P>|t|{col 61}     [95% con{col 74}f. interval]
{hline 20}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 7}D4_vapw_real {c |}{col 21}{res}{space 2}-.0295482{col 33}{space 2} .0195379{col 44}{space 1}   -1.51{col 53}{space 3}0.134{col 61}{space 4} -.068382{col 74}{space 3} .0092856
{txt}{space 12}d4IP_t4 {c |}{col 21}{res}{space 2} .0940554{col 33}{space 2}  .017376{col 44}{space 1}    5.41{col 53}{space 3}0.000{col 61}{space 4} .0595188{col 74}{space 3} .1285921
{txt}{space 3}D4_avg_wwage_nsa {c |}{col 21}{res}{space 2}  .068743{col 33}{space 2} .0337446{col 44}{space 1}    2.04{col 53}{space 3}0.045{col 61}{space 4}  .001672{col 74}{space 3} .1358141
{txt}{space 9}d4IP_t4_21 {c |}{col 21}{res}{space 2} .0038854{col 33}{space 2} .0361096{col 44}{space 1}    0.11{col 53}{space 3}0.915{col 61}{space 4}-.0678863{col 74}{space 3} .0756571
{txt}D4_avg_wwage_nsa_21 {c |}{col 21}{res}{space 2} .1740943{col 33}{space 2} .1442774{col 44}{space 1}    1.21{col 53}{space 3}0.231{col 61}{space 4}-.1126727{col 74}{space 3} .4608613
{txt}{space 5}ln_emp_share_o {c |}{col 21}{res}{space 2} .0011588{col 33}{space 2} .0414839{col 44}{space 1}    0.03{col 53}{space 3}0.978{col 61}{space 4} -.081295{col 74}{space 3} .0836125
{txt}{space 5}ln_emp_share_m {c |}{col 21}{res}{space 2}-.0862257{col 33}{space 2}  .094114{col 44}{space 1}   -0.92{col 53}{space 3}0.362{col 61}{space 4}-.2732874{col 74}{space 3}  .100836
{txt}{space 4}ln_emp_share_hs {c |}{col 21}{res}{space 2}-.3488582{col 33}{space 2} .1328286{col 44}{space 1}   -2.63{col 53}{space 3}0.010{col 61}{space 4}-.6128694{col 74}{space 3} -.084847
{txt}{space 3}ln_emp_share_asc {c |}{col 21}{res}{space 2}-.0186971{col 33}{space 2} .1874771{col 44}{space 1}   -0.10{col 53}{space 3}0.921{col 61}{space 4}-.3913282{col 74}{space 3}  .353934
{txt}{space 3}ln_emp_share_bsc {c |}{col 21}{res}{space 2}-.2404065{col 33}{space 2} .1170921{col 44}{space 1}   -2.05{col 53}{space 3}0.043{col 61}{space 4}-.4731397{col 74}{space 3}-.0076733
{txt}{space 3}ln_emp_share_fem {c |}{col 21}{res}{space 2}-.0050063{col 33}{space 2} .0547318{col 44}{space 1}   -0.09{col 53}{space 3}0.927{col 61}{space 4}-.1137917{col 74}{space 3} .1037791
{txt}{hline 20}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
Included instruments:{col 23}D4_vapw_real d4IP_t4 D4_avg_wwage_nsa d4IP_t4_21
{col 23}D4_avg_wwage_nsa_21 ln_emp_share_o ln_emp_share_m
{col 23}ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc
{col 23}ln_emp_share_fem
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      180{col 27}{space 1}      180{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}        0{col 39}{result}{space 1}       31{col 53}{text} {col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col2_serv_cluster
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. 
. ***** IV nontraded
. /*
> * With input costs, all inputs
> ivreghdfe D4_prices (d4IP_t4 = d4IP_m4) D4_vapw_real D4_avg_wwage_nsa ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group==0 & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2) savefirst
> 
> eststo tab1col6_serv
> estadd local time_fe "Yes" , replace
> estadd local ind_fe  "Yes" , replace
> estadd local composition  "Yes" , replace
> */
. 
. * Time interactions
. ivreghdfe D4_prices (d4IP_t4 d4IP_t4_21= d4IP_m4 d4IP_m4_21) D4_vapw_real  D4_avg_wwage_nsa D4_avg_wwage_nsa_21 ln_emp_share_o ln_emp_share_m ln_emp_share_hs ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem if trade_naics_group==0 & inrange(date,tq(${c -(}srt_date{c )-}),tq(${c -(}end_date{c )-})), absorb(naics date) dkraay(2) savefirst
{res}{txt}({browse "http://scorreia.com/research/hdfe.pdf":MWFE estimator} converged in 5 iterations)
{res}
{txt}Stored estimation results
{hline 25}
{hline 13}{c TT}{hline 67}
             {c |}           Dependent  Number of        
        Name {c |} Command    variable     param.  Title 
{hline 13}{c +}{hline 67}
{ralign 12:{stata estimates replay _ivreg2_d4IP_t4:_ivreg2_d4~4}}{col 14}{txt:{c |}}{res}{col 16}{lalign 10:ivreg2}{col 26}{ralign 9:d4IP_t4}{col 42}  11{col 48}{it:First-stage regression: d4IP_t4}
{txt}{ralign 12:{stata estimates replay _ivreg2_d4IP_t4_21:_ivreg2_d~21}}{col 14}{txt:{c |}}{res}{col 16}{lalign 10:ivreg2}{col 26}{ralign 9:d4IP_t4_21}{col 42}  11{col 48}{it:First-stage regression: d4IP_t4_21}
{txt}{hline 13}{c BT}{hline 67}

IV (2SLS) estimation
{hline 20}

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on date
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  {res}date
{txt}  group variable (i): {res}naics_id

{txt}Number of clusters (date) = {col 33}{res}    31{txt}{col 55}Number of obs = {res}    5242
{txt}{col 55}F( 11,    30) = {res}  124.54
{txt}{col 55}Prob > F      = {res}  0.0000
{txt}Total (centered) SS     = {res} 10.86907302{txt}{col 55}Centered R2   = {res}  0.0491
{txt}Total (uncentered) SS   = {res} 10.86907302{txt}{col 55}Uncentered R2 = {res}  0.0491
{txt}Residual SS             = {res}  10.3358478{txt}{col 55}Root MSE      = {res}  .04524

{txt}{hline 20}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 21}{c |}{col 33}    Robust
{col 1}          D4_prices{col 21}{c |} Coefficient{col 33}  std. err.{col 45}      t{col 53}   P>|t|{col 61}     [95% con{col 74}f. interval]
{hline 20}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 12}d4IP_t4 {c |}{col 21}{res}{space 2} .1154414{col 33}{space 2} .0147816{col 44}{space 1}    7.81{col 53}{space 3}0.000{col 61}{space 4} .0852533{col 74}{space 3} .1456295
{txt}{space 9}d4IP_t4_21 {c |}{col 21}{res}{space 2} .0039397{col 33}{space 2} .0317091{col 44}{space 1}    0.12{col 53}{space 3}0.902{col 61}{space 4}-.0608189{col 74}{space 3} .0686984
{txt}{space 7}D4_vapw_real {c |}{col 21}{res}{space 2}-.0335036{col 33}{space 2} .0191595{col 44}{space 1}   -1.75{col 53}{space 3}0.091{col 61}{space 4}-.0726325{col 74}{space 3} .0056253
{txt}{space 3}D4_avg_wwage_nsa {c |}{col 21}{res}{space 2} .0665263{col 33}{space 2} .0289154{col 44}{space 1}    2.30{col 53}{space 3}0.029{col 61}{space 4} .0074733{col 74}{space 3} .1255794
{txt}D4_avg_wwage_nsa_21 {c |}{col 21}{res}{space 2}  .174633{col 33}{space 2}  .043477{col 44}{space 1}    4.02{col 53}{space 3}0.000{col 61}{space 4} .0858411{col 74}{space 3} .2634249
{txt}{space 5}ln_emp_share_o {c |}{col 21}{res}{space 2}-.0011341{col 33}{space 2} .0288479{col 44}{space 1}   -0.04{col 53}{space 3}0.969{col 61}{space 4}-.0600493{col 74}{space 3} .0577811
{txt}{space 5}ln_emp_share_m {c |}{col 21}{res}{space 2}-.0790072{col 33}{space 2} .0541215{col 44}{space 1}   -1.46{col 53}{space 3}0.155{col 61}{space 4}-.1895381{col 74}{space 3} .0315237
{txt}{space 4}ln_emp_share_hs {c |}{col 21}{res}{space 2}-.3427772{col 33}{space 2} .1591166{col 44}{space 1}   -2.15{col 53}{space 3}0.039{col 61}{space 4}-.6677366{col 74}{space 3}-.0178177
{txt}{space 3}ln_emp_share_asc {c |}{col 21}{res}{space 2}-.0235428{col 33}{space 2} .2167714{col 44}{space 1}   -0.11{col 53}{space 3}0.914{col 61}{space 4} -.466249{col 74}{space 3} .4191635
{txt}{space 3}ln_emp_share_bsc {c |}{col 21}{res}{space 2} -.230902{col 33}{space 2}  .121466{col 44}{space 1}   -1.90{col 53}{space 3}0.067{col 61}{space 4}-.4789687{col 74}{space 3} .0171646
{txt}{space 3}ln_emp_share_fem {c |}{col 21}{res}{space 2}-.0131151{col 33}{space 2} .0356637{col 44}{space 1}   -0.37{col 53}{space 3}0.716{col 61}{space 4}-.0859501{col 74}{space 3} .0597199
{txt}{hline 20}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{help ivreg2##idtest:Underidentification test} (Kleibergen-Paap rk LM statistic):{res}{col 71}   9.640
{txt}{col 52}Chi-sq({res}1{txt}) P-val =  {res}{col 73}0.0019
{txt}{hline 78}
{help ivreg2##widtest:Weak identification test} (Cragg-Donald Wald F statistic):{res}{col 71} 1.0e+04
{txt}                         (Kleibergen-Paap rk Wald F statistic):{res}{col 71} 287.584
{txt}Stock-Yogo weak ID test critical values:{res}{txt}{col 42}10% maximal IV size{res}{col 73}  7.03
{txt}{col 42}15% maximal IV size{res}{col 73}  4.58
{txt}{col 42}20% maximal IV size{res}{col 73}  3.95
{txt}{col 42}25% maximal IV size{res}{col 73}  3.63
{txt}Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for Cragg-Donald F statistic and i.i.d. errors.
{hline 78}
{help ivreg2##overidtests:Hansen J statistic} (overidentification test of all instruments):{res}{col 71}   0.000
{txt}{col 50}(equation exactly identified)
{hline 78}
Instrumented:{col 23}d4IP_t4 d4IP_t4_21
Included instruments:{col 23}D4_vapw_real D4_avg_wwage_nsa D4_avg_wwage_nsa_21
{col 23}ln_emp_share_o ln_emp_share_m ln_emp_share_hs
{col 23}ln_emp_share_asc ln_emp_share_bsc ln_emp_share_fem
Excluded instruments:{col 23}d4IP_m4 d4IP_m4_21
{help ivreg2##partial:Partialled-out}:{col 23}_cons
{col 23}nb: total SS, model F and R2s are after partialling-out;
{col 23}    any {help ivreg2##s_small:small-sample adjustments} include partialled-out
{col 23}    variables in regressor count K
{hline 78}
{res}
{txt}Absorbed degrees of freedom:
{res}{col 1}{text}{hline 13}{c TT}{hline 12}{hline 12}{hline 14}{hline 1}{c TRC}
{col 1}{text} Absorbed FE{col 14}{c |} Categories{col 27} - Redundant{col 39}  = Num. Coefs{col 54}{c |}
{res}{col 1}{text}{hline 13}{c +}{hline 12}{hline 12}{hline 14}{hline 1}{c RT}
{col 1}{text}       naics{col 14}{c |}{space 1}      180{col 27}{space 1}        0{col 39}{result}{space 1}      180{col 53}{text} {col 54}{c |}
{res}{col 1}{text}        date{col 14}{c |}{space 1}       31{col 27}{space 1}       31{col 39}{result}{space 1}        0{col 53}{text}*{col 54}{c |}
{res}{col 1}{text}{hline 13}{c BT}{hline 12}{hline 12}{hline 14}{hline 1}{c BRC}
* = FE nested within cluster; treated as redundant for DoF computation
{res}{txt}
{com}. 
. eststo tab1col7_serv
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. estimates restore _ivreg2_d4IP_t4
{txt}(results {stata estimates replay _ivreg2_d4IP_t4:_ivreg2_d4IP_t4} are active now)

{com}. eststo nontradedcol3
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. estimates restore _ivreg2_d4IP_t4_21
{txt}(results {stata estimates replay _ivreg2_d4IP_t4_21:_ivreg2_d4IP_t4_21} are active now)

{com}. eststo nontradedcol4
{txt}
{com}. estadd local time_fe "Yes" , replace

{txt}added macro:
            e(time_fe) : "{res:Yes}"

{com}. estadd local ind_fe  "Yes" , replace

{txt}added macro:
             e(ind_fe) : "{res:Yes}"

{com}. estadd local composition  "Yes" , replace

{txt}added macro:
        e(composition) : "{res:Yes}"

{com}. 
. ********************************************************************************
. * COMBINED TABLE 1: combined table with traded, IV traded (interaction only), IV non traded
. ********************************************************************************
. * This is wide; put landscape in overleaf and screenshot
. * MANUALLY DELETE THE R2 FROM IV. FIX THE OBSERVATIONS FORMATTING.
. 
. /*
> esttab tab1col1 tab1col2 tab1col3 tab1col5 tab1col1_serv tab1col2_serv tab1col7_serv using "output/tab1_ols_iv_combined.tex", noconstant drop(ln_emp_*) b(%5.3f) se(%5.3f) ///
> s(time_fe ind_fe composition r2 N, fmt(3) label("Time Fixed Effects" "Industry Fixed Effects" "Worker Composition" "R2" "Observations")) ///
> mgroups("Traded" "Non-traded", pattern(0 0 0 0 1 0 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) ///
> replace booktabs ///
> varlabels(D4_avg_wwage_nsa "$\Delta \ln(Wage_{c -(}it{c )-})$" D4_avg_wwage_nsa_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" D4_wages "$\Delta \ln(Wage_{c -(}it{c )-})$" D4_wages_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" d4lnmpit_adj "$\text{c -(}s{c )-}_{c -(}i{c )-} \times \Delta \ln(MPI_{c -(}it{c )-})$" d4lnmpit_adj_21 "$\text{c -(}s{c )-}_{c -(}i{c )-} \times \Delta \ln(MPI_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" d4IP_t4 "$\Delta \ln(IPI)$" d4IP_t4_21 "$\Delta \ln(IPI) \times \text{c -(}Year=21{c )-}$" d4IP_m_adj "$\text{c -(}IS{c )-} \times \Delta \ln(ImpInputMPI)$" D4_vapw_real "$\Delta \ln(VAPW_{c -(}it{c )-})$" D4_wwage_IP "$\Delta \ln(Wage_{c -(}it{c )-}) \times \Delta \ln(IPI)$"D4_wwage_IP_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \Delta \ln(IPI) \times \text{c -(}Year=21{c )-}$") order(d4lnmpit_adj d4lnmpit_adj_21 d4IP_t4 d4IP_t4_21  D4_avg_wwage_nsa   D4_avg_wwage_nsa_21 D4_wwage_IP D4_wwage_IP_21 D4_vapw_real) ///
> mlabels("$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$") ///
> substitute("Standard errors in parentheses" "")  ///
> star(* 0.10 ** 0.05 *** 0.01) gaps  refcat(d4lnmpit_adj "" d4lnmpit_adj_21 "" d4IP_t4 "" d4IP_t4_21 ""  D4_avg_wwage_nsa ""  D4_avg_wwage_nsa_21 "" D4_wwage_IP "" D4_wwage_IP_21 "" D4_vapw_real "", nolabel)
> 
> ********************************************************************************
> * FINAL TABLE 1: 5 columns without the IV
> ********************************************************************************
> * This is wide; put landscape in overleaf and screenshot
> * MANUALLY DELETE THE R2 FROM IV. FIX THE OBSERVATIONS FORMATTING.
> 
> esttab tab1col1 tab1col2 tab1col3 tab1col1_serv tab1col2_serv using "output/tab1_ols_tradenontrade.tex", noconstant drop(ln_emp_*) b(%5.3f) se(%5.3f) ///
> s(time_fe ind_fe composition r2 N, fmt(3) label("Time Fixed Effects" "Industry Fixed Effects" "Worker Composition" "R2" "Observations")) ///
> mgroups("Traded" "Non-traded", pattern(0 0 0 1 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) ///
> replace booktabs ///
> varlabels(D4_avg_wwage_nsa "$\Delta \ln(Wage_{c -(}it{c )-})$" D4_avg_wwage_nsa_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" D4_wages "$\Delta \ln(Wage_{c -(}it{c )-})$" D4_wages_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" d4lnmpit_adj "$\text{c -(}s{c )-}_{c -(}i{c )-} \times \Delta \ln(MPI_{c -(}it{c )-})$" d4lnmpit_adj_21 "$\text{c -(}s{c )-}_{c -(}i{c )-} \times \Delta \ln(MPI_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" d4IP_t4 "$\Delta \ln(IPI)$" d4IP_t4_21 "$\Delta \ln(IPI) \times \text{c -(}Year=21{c )-}$" d4IP_m_adj "$\text{c -(}IS{c )-} \times \Delta \ln(ImpInputMPI)$" D4_vapw_real "$\Delta \ln(VAPW_{c -(}it{c )-})$" D4_wwage_IP "$\Delta \ln(Wage_{c -(}it{c )-}) \times \Delta \ln(IPI)$"D4_wwage_IP_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \Delta \ln(IPI) \times \text{c -(}Year=21{c )-}$") order(d4lnmpit_adj d4lnmpit_adj_21 d4IP_t4 d4IP_t4_21  D4_avg_wwage_nsa   D4_avg_wwage_nsa_21 D4_wwage_IP D4_wwage_IP_21 D4_vapw_real) ///
> mlabels("$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$") ///
> substitute("Standard errors in parentheses" "")  ///
> star(* 0.10 ** 0.05 *** 0.01) gaps  refcat(d4lnmpit_adj "" d4lnmpit_adj_21 "" d4IP_t4 "" d4IP_t4_21 ""  D4_avg_wwage_nsa ""  D4_avg_wwage_nsa_21 "" D4_wwage_IP "" D4_wwage_IP_21 "" D4_vapw_real "", nolabel)
> */
. 
. 
. ********************************************************************************
. * TABLE 1: 5 columns without the IV with CLUSTERED SEs
. ********************************************************************************
. * This is wide; put landscape in overleaf and screenshot
. * MANUALLY DELETE THE R2 FROM IV. FIX THE OBSERVATIONS FORMATTING.
. 
. esttab tab1col1_cluster tab1col2_cluster tab1col3_cluster tab1col1_serv_cluster tab1col2_serv_cluster using "output/tab1_ols_tradenontrade.tex", noconstant drop(ln_emp_*) b(%5.3f) se(%5.3f) ///
> s(time_fe ind_fe composition r2 N, fmt(3) label("Time Fixed Effects" "Industry Fixed Effects" "Worker Composition" "R2" "Observations")) ///
> mgroups("Traded" "Non-traded", pattern(0 0 0 1 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) ///
> replace booktabs ///
> varlabels(D4_avg_wwage_nsa "$\Delta \ln(Wage_{c -(}it{c )-})$" D4_avg_wwage_nsa_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" D4_wages "$\Delta \ln(Wage_{c -(}it{c )-})$" D4_wages_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" d4lnmpit_adj "$\text{c -(}s{c )-}_{c -(}i{c )-} \times \Delta \ln(MPI_{c -(}it{c )-})$" d4lnmpit_adj_21 "$\text{c -(}s{c )-}_{c -(}i{c )-} \times \Delta \ln(MPI_{c -(}it{c )-}) \times \text{c -(}Year=21{c )-}$" d4IP_t4 "$\Delta \ln(IPI)$" d4IP_t4_21 "$\Delta \ln(IPI) \times \text{c -(}Year=21{c )-}$" d4IP_m_adj "$\text{c -(}IS{c )-} \times \Delta \ln(ImpInputMPI)$" D4_vapw_real "$\Delta \ln(VAPW_{c -(}it{c )-})$" D4_wwage_IP "$\Delta \ln(Wage_{c -(}it{c )-}) \times \Delta \ln(IPI)$"D4_wwage_IP_21 "$\Delta \ln(Wage_{c -(}it{c )-}) \times \Delta \ln(IPI) \times \text{c -(}Year=21{c )-}$") order(d4lnmpit_adj d4lnmpit_adj_21 d4IP_t4 d4IP_t4_21  D4_avg_wwage_nsa   D4_avg_wwage_nsa_21 D4_wwage_IP D4_wwage_IP_21 D4_vapw_real) ///
> mlabels("$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$" "$\Delta\log{c -(}PPI{c )-}_{c -(}it{c )-}$") ///
> substitute("Standard errors in parentheses" "")  ///
> star(* 0.10 ** 0.05 *** 0.01) gaps  refcat(d4lnmpit_adj "" d4lnmpit_adj_21 "" d4IP_t4 "" d4IP_t4_21 ""  D4_avg_wwage_nsa ""  D4_avg_wwage_nsa_21 "" D4_wwage_IP "" D4_wwage_IP_21 "" D4_vapw_real "", nolabel)
{res}{txt}(output written to {browse  `"output/tab1_ols_tradenontrade.tex"'})

{com}. 
{txt}end of do-file

{com}. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/aidan/Dropbox/India_FDI/friedt_toner-rodgers_replication/replication.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}26 Apr 2022, 15:04:13
{txt}{.-}
{smcl}
{txt}{sf}{ul off}